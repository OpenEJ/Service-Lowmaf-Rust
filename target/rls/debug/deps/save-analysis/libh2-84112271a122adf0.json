{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15","program":"/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","h2","--edition=2018","/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=84112271a122adf0","-C","extra-filename=-84112271a122adf0","--out-dir","/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","-L","dependency=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","--extern","bytes=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libbytes-e737b883a82268c6.rmeta","--extern","fnv=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfnv-b4201440161ee972.rmeta","--extern","futures_core=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_core-bf2e7f64aaea6921.rmeta","--extern","futures_sink=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_sink-4016e03cbf9d29a0.rmeta","--extern","futures_util=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_util-327dba2781775d68.rmeta","--extern","http=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libhttp-aa33c892b9f23344.rmeta","--extern","indexmap=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libindexmap-3d42b65988364706.rmeta","--extern","slab=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libslab-f59aee8543f24be2.rmeta","--extern","tokio=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtokio-8196ba47352960b6.rmeta","--extern","tokio_util=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtokio_util-e470673fbc8394ba.rmeta","--extern","tracing=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtracing-b11b62c27e91ca87.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libh2-84112271a122adf0.rmeta"},"prelude":{"crate_id":{"name":"h2","disambiguator":[11476218361364499857,0]},"crate_root":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src","external_crates":[{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":20,"id":{"name":"futures_core","disambiguator":[2889476389752248248,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":21,"id":{"name":"bytes","disambiguator":[10438007896072012438,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":22,"id":{"name":"tokio","disambiguator":[4006362457328451787,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":23,"id":{"name":"parking_lot","disambiguator":[1645823837944776078,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":24,"id":{"name":"lock_api","disambiguator":[8777307412983186541,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":25,"id":{"name":"scopeguard","disambiguator":[15237943330495450837,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[10238583472048639811,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":27,"id":{"name":"smallvec","disambiguator":[12545130721221692768,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":28,"id":{"name":"cfg_if","disambiguator":[12105970879533839803,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":29,"id":{"name":"libc","disambiguator":[15637978272933725136,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":30,"id":{"name":"mio","disambiguator":[14896478052810656221,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":31,"id":{"name":"log","disambiguator":[17988533960493539055,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":32,"id":{"name":"pin_project_lite","disambiguator":[13349260882500549000,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":33,"id":{"name":"memchr","disambiguator":[6978731604939472485,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":34,"id":{"name":"socket2","disambiguator":[491492713441182150,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":35,"id":{"name":"signal_hook_registry","disambiguator":[9295126702021841154,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":36,"id":{"name":"tokio_util","disambiguator":[5218935504171966760,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","num":37,"id":{"name":"futures_sink","disambiguator":[17069752836241684674,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","num":38,"id":{"name":"tracing","disambiguator":[1052523234040929968,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":39,"id":{"name":"tracing_core","disambiguator":[15038953675681300187,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","num":40,"id":{"name":"once_cell","disambiguator":[15736546551684500465,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","num":41,"id":{"name":"http","disambiguator":[11333795193288566686,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/table.rs","num":42,"id":{"name":"fnv","disambiguator":[3388228504314371916,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","num":43,"id":{"name":"itoa","disambiguator":[13318191299545705178,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","num":44,"id":{"name":"futures_util","disambiguator":[8392577202879089122,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","num":45,"id":{"name":"pin_utils","disambiguator":[14779779622709215863,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","num":46,"id":{"name":"futures_task","disambiguator":[10040432833625291285,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/buffer.rs","num":47,"id":{"name":"slab","disambiguator":[8845407529126862251,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","num":48,"id":{"name":"indexmap","disambiguator":[9717016091760677484,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","num":49,"id":{"name":"hashbrown","disambiguator":[17525588513902506349,0]}}],"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":0,"byte_end":4678,"line_start":1,"line_end":135,"column_start":1,"column_end":46}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":11599},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":39652,"byte_end":39658,"line_start":8,"line_end":8,"column_start":23,"column_end":29},"alias_span":null,"name":"Reason","value":"","parent":{"krate":0,"index":322}},{"kind":"Use","ref_id":{"krate":0,"index":11599},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/mod.rs","byte_start":494222,"byte_end":494228,"line_start":59,"line_end":59,"column_start":23,"column_end":29},"alias_span":null,"name":"Reason","value":"","parent":{"krate":0,"index":2226}},{"kind":"Use","ref_id":{"krate":0,"index":4973},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4494,"byte_end":4499,"line_start":131,"line_end":131,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":11599},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4501,"byte_end":4507,"line_start":131,"line_end":131,"column_start":31,"column_end":37},"alias_span":null,"name":"Reason","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12782},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4533,"byte_end":4544,"line_start":132,"line_end":132,"column_start":24,"column_end":35},"alias_span":null,"name":"FlowControl","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3477},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4546,"byte_end":4550,"line_start":132,"line_end":132,"column_start":37,"column_end":41},"alias_span":null,"name":"Ping","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3475},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4552,"byte_end":4560,"line_start":132,"line_end":132,"column_start":43,"column_end":51},"alias_span":null,"name":"PingPong","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3479},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4562,"byte_end":4566,"line_start":132,"line_end":132,"column_start":53,"column_end":57},"alias_span":null,"name":"Pong","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3473},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4568,"byte_end":4578,"line_start":132,"line_end":132,"column_start":59,"column_end":69},"alias_span":null,"name":"RecvStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12758},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4580,"byte_end":4590,"line_start":132,"line_end":132,"column_start":71,"column_end":81},"alias_span":null,"name":"SendStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":12764},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4592,"byte_end":4600,"line_start":132,"line_end":132,"column_start":83,"column_end":91},"alias_span":null,"name":"StreamId","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":0,"byte_end":4678,"line_start":1,"line_end":135,"column_start":1,"column_end":46},"name":"","qualname":"::","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":322},{"krate":0,"index":379},{"krate":0,"index":745},{"krate":0,"index":2226},{"krate":0,"index":2935},{"krate":0,"index":3149},{"krate":0,"index":3170},{"krate":0,"index":3437},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":3542},{"krate":0,"index":3545},{"krate":0,"index":3546},{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3555},{"krate":0,"index":3558},{"krate":0,"index":3561},{"krate":0,"index":3564}],"decl_id":null,"docs":" An asynchronous, HTTP/2 server and client implementation.","sig":null,"attributes":[{"value":"/ An asynchronous, HTTP/2 server and client implementation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":0,"byte_end":61,"line_start":1,"line_end":1,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":62,"byte_end":65,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This library implements the [HTTP/2] specification. The implementation is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":66,"byte_end":143,"line_start":3,"line_end":3,"column_start":1,"column_end":78}},{"value":"/ asynchronous, using [futures] as the basis for the API. The implementation","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":144,"byte_end":222,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"/ is also decoupled from TCP or TLS details. The user must handle ALPN and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":223,"byte_end":299,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ HTTP/1.1 upgrades themselves.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":300,"byte_end":333,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":334,"byte_end":337,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":338,"byte_end":359,"line_start":8,"line_end":8,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":360,"byte_end":363,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Add the following to your `Cargo.toml` file:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":364,"byte_end":412,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":413,"byte_end":416,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```toml","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":417,"byte_end":428,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ [dependencies]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":429,"byte_end":447,"line_start":13,"line_end":13,"column_start":1,"column_end":19}},{"value":"/ h2 = \"0.3\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":448,"byte_end":462,"line_start":14,"line_end":14,"column_start":1,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":463,"byte_end":470,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":471,"byte_end":474,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ # Layout","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":475,"byte_end":487,"line_start":17,"line_end":17,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":488,"byte_end":491,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ The crate is split into [`client`] and [`server`] modules. Types that are","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":492,"byte_end":569,"line_start":19,"line_end":19,"column_start":1,"column_end":78}},{"value":"/ common to both clients and servers are located at the root of the crate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":570,"byte_end":646,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":647,"byte_end":650,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ See module level documentation for more details on how to use `h2`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":651,"byte_end":722,"line_start":22,"line_end":22,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":723,"byte_end":726,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Handshake","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":727,"byte_end":742,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":743,"byte_end":746,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Both the client and the server require a connection to already be in a state","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":747,"byte_end":827,"line_start":26,"line_end":26,"column_start":1,"column_end":81}},{"value":"/ ready to start the HTTP/2 handshake. This library does not provide","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":828,"byte_end":898,"line_start":27,"line_end":27,"column_start":1,"column_end":71}},{"value":"/ facilities to do this.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":899,"byte_end":925,"line_start":28,"line_end":28,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":926,"byte_end":929,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ There are three ways to reach an appropriate state to start the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":930,"byte_end":1004,"line_start":30,"line_end":30,"column_start":1,"column_end":75}},{"value":"/ handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1005,"byte_end":1019,"line_start":31,"line_end":31,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1020,"byte_end":1023,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ * Opening an HTTP/1.1 connection and performing an [upgrade].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1024,"byte_end":1089,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/ * Opening a connection with TLS and use ALPN to negotiate the protocol.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1090,"byte_end":1165,"line_start":34,"line_end":34,"column_start":1,"column_end":76}},{"value":"/ * Open a connection with prior knowledge, i.e. both the client and the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1166,"byte_end":1240,"line_start":35,"line_end":35,"column_start":1,"column_end":75}},{"value":"/   server assume that the connection is immediately ready to start the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1241,"byte_end":1314,"line_start":36,"line_end":36,"column_start":1,"column_end":74}},{"value":"/   HTTP/2 handshake once opened.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1315,"byte_end":1350,"line_start":37,"line_end":37,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1351,"byte_end":1354,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Once the connection is ready to start the HTTP/2 handshake, it can be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1355,"byte_end":1428,"line_start":39,"line_end":39,"column_start":1,"column_end":74}},{"value":"/ passed to [`server::handshake`] or [`client::handshake`]. At this point, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1429,"byte_end":1509,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/ library will start the handshake process, which consists of:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1510,"byte_end":1574,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1575,"byte_end":1578,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ * The client sends the connection preface (a predefined sequence of 24","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1579,"byte_end":1653,"line_start":43,"line_end":43,"column_start":1,"column_end":75}},{"value":"/ octets).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1654,"byte_end":1666,"line_start":44,"line_end":44,"column_start":1,"column_end":13}},{"value":"/ * Both the client and the server sending a SETTINGS frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1667,"byte_end":1729,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1730,"byte_end":1733,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ See the [Starting HTTP/2] in the specification for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1734,"byte_end":1802,"line_start":47,"line_end":47,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1803,"byte_end":1806,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Flow control","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1807,"byte_end":1825,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1826,"byte_end":1829,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [Flow control] is a fundamental feature of HTTP/2. The `h2` library","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1830,"byte_end":1901,"line_start":51,"line_end":51,"column_start":1,"column_end":72}},{"value":"/ exposes flow control to the user.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1902,"byte_end":1939,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1940,"byte_end":1943,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ An HTTP/2 client or server may not send unlimited data to the peer. When a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":1944,"byte_end":2022,"line_start":54,"line_end":54,"column_start":1,"column_end":79}},{"value":"/ stream is initiated, both the client and the server are provided with an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2023,"byte_end":2099,"line_start":55,"line_end":55,"column_start":1,"column_end":77}},{"value":"/ initial window size for that stream.  A window size is the number of bytes","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2100,"byte_end":2178,"line_start":56,"line_end":56,"column_start":1,"column_end":79}},{"value":"/ the endpoint can send to the peer. At any point in time, the peer may","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2179,"byte_end":2252,"line_start":57,"line_end":57,"column_start":1,"column_end":74}},{"value":"/ increase this window size by sending a `WINDOW_UPDATE` frame. Once a client","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2253,"byte_end":2332,"line_start":58,"line_end":58,"column_start":1,"column_end":80}},{"value":"/ or server has sent data filling the window for a stream, no further data may","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2333,"byte_end":2413,"line_start":59,"line_end":59,"column_start":1,"column_end":81}},{"value":"/ be sent on that stream until the peer increases the window.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2414,"byte_end":2477,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2478,"byte_end":2481,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ There is also a **connection level** window governing data sent across all","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2482,"byte_end":2560,"line_start":62,"line_end":62,"column_start":1,"column_end":79}},{"value":"/ streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2561,"byte_end":2573,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2574,"byte_end":2577,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Managing flow control for inbound data is done through [`FlowControl`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2578,"byte_end":2653,"line_start":65,"line_end":65,"column_start":1,"column_end":76}},{"value":"/ Managing flow control for outbound data is done through [`SendStream`]. See","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2654,"byte_end":2733,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ the struct level documentation for those two types for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2734,"byte_end":2806,"line_start":67,"line_end":67,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2807,"byte_end":2810,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ [HTTP/2]: https://http2.github.io/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2811,"byte_end":2849,"line_start":69,"line_end":69,"column_start":1,"column_end":39}},{"value":"/ [futures]: https://docs.rs/futures/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2850,"byte_end":2889,"line_start":70,"line_end":70,"column_start":1,"column_end":40}},{"value":"/ [`client`]: client/index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2890,"byte_end":2923,"line_start":71,"line_end":71,"column_start":1,"column_end":34}},{"value":"/ [`server`]: server/index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2924,"byte_end":2957,"line_start":72,"line_end":72,"column_start":1,"column_end":34}},{"value":"/ [Flow control]: http://httpwg.org/specs/rfc7540.html#FlowControl","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":2958,"byte_end":3026,"line_start":73,"line_end":73,"column_start":1,"column_end":69}},{"value":"/ [`FlowControl`]: struct.FlowControl.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":3027,"byte_end":3071,"line_start":74,"line_end":74,"column_start":1,"column_end":45}},{"value":"/ [`SendStream`]: struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":3072,"byte_end":3114,"line_start":75,"line_end":75,"column_start":1,"column_end":43}},{"value":"/ [Starting HTTP/2]: http://httpwg.org/specs/rfc7540.html#starting","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":3115,"byte_end":3183,"line_start":76,"line_end":76,"column_start":1,"column_end":69}},{"value":"/ [upgrade]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":3184,"byte_end":3275,"line_start":77,"line_end":77,"column_start":1,"column_end":92}},{"value":"/ [`server::handshake`]: server/fn.handshake.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":3276,"byte_end":3327,"line_start":78,"line_end":78,"column_start":1,"column_end":52}},{"value":"/ [`client::handshake`]: client/fn.handshake.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":3328,"byte_end":3379,"line_start":79,"line_end":79,"column_start":1,"column_end":52}},{"value":"deny(missing_debug_implementations, missing_docs)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":3434,"byte_end":3487,"line_start":82,"line_end":82,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3568},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10633,"byte_end":10643,"line_start":8,"line_end":8,"column_start":5,"column_end":15},"name":"Connection","qualname":"::codec::error::SendError::Connection","value":"SendError::Connection(Error)","parent":{"krate":0,"index":3567},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3570},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10644,"byte_end":10649,"line_start":8,"line_end":8,"column_start":16,"column_end":21},"name":"0","qualname":"::codec::error::SendError::Connection::0","value":"proto::error::Error","parent":{"krate":0,"index":3568},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3571},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10656,"byte_end":10660,"line_start":9,"line_end":9,"column_start":5,"column_end":9},"name":"User","qualname":"::codec::error::SendError::User","value":"SendError::User(UserError)","parent":{"krate":0,"index":3567},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3573},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10661,"byte_end":10670,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"0","qualname":"::codec::error::SendError::User::0","value":"codec::error::UserError","parent":{"krate":0,"index":3571},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3567},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10617,"byte_end":10626,"line_start":7,"line_end":7,"column_start":10,"column_end":19},"name":"SendError","qualname":"::codec::error::SendError","value":"enum SendError { Connection(Error), User(UserError), }","parent":null,"children":[{"krate":0,"index":3568},{"krate":0,"index":3571}],"decl_id":null,"docs":" Errors caused by sending a message\n","sig":null,"attributes":[{"value":"/ Errors caused by sending a message","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10552,"byte_end":10590,"line_start":5,"line_end":5,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3577},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10813,"byte_end":10829,"line_start":16,"line_end":16,"column_start":5,"column_end":21},"name":"InactiveStreamId","qualname":"::codec::error::UserError::InactiveStreamId","value":"UserError::InactiveStreamId","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" The stream ID is no longer accepting frames.\n","sig":null,"attributes":[{"value":"/ The stream ID is no longer accepting frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10760,"byte_end":10808,"line_start":15,"line_end":15,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3579},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10904,"byte_end":10923,"line_start":19,"line_end":19,"column_start":5,"column_end":24},"name":"UnexpectedFrameType","qualname":"::codec::error::UserError::UnexpectedFrameType","value":"UserError::UnexpectedFrameType","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" The stream is not currently expecting a frame of this type.\n","sig":null,"attributes":[{"value":"/ The stream is not currently expecting a frame of this type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10836,"byte_end":10899,"line_start":18,"line_end":18,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3581},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10966,"byte_end":10979,"line_start":22,"line_end":22,"column_start":5,"column_end":18},"name":"PayloadTooBig","qualname":"::codec::error::UserError::PayloadTooBig","value":"UserError::PayloadTooBig","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" The payload size is too big\n","sig":null,"attributes":[{"value":"/ The payload size is too big","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10930,"byte_end":10961,"line_start":21,"line_end":21,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3583},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11060,"byte_end":11068,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Rejected","qualname":"::codec::error::UserError::Rejected","value":"UserError::Rejected","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" The application attempted to initiate too many streams to remote.\n","sig":null,"attributes":[{"value":"/ The application attempted to initiate too many streams to remote.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10986,"byte_end":11055,"line_start":24,"line_end":24,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3585},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11138,"byte_end":11159,"line_start":28,"line_end":28,"column_start":5,"column_end":26},"name":"ReleaseCapacityTooBig","qualname":"::codec::error::UserError::ReleaseCapacityTooBig","value":"UserError::ReleaseCapacityTooBig","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" The released capacity is larger than claimed capacity.\n","sig":null,"attributes":[{"value":"/ The released capacity is larger than claimed capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11075,"byte_end":11133,"line_start":27,"line_end":27,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3587},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11253,"byte_end":11271,"line_start":33,"line_end":33,"column_start":5,"column_end":23},"name":"OverflowedStreamId","qualname":"::codec::error::UserError::OverflowedStreamId","value":"UserError::OverflowedStreamId","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" The stream ID space is overflowed.","sig":null,"attributes":[{"value":"/ The stream ID space is overflowed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11166,"byte_end":11204,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11209,"byte_end":11212,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ A new connection is needed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11217,"byte_end":11248,"line_start":32,"line_end":32,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3589},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11340,"byte_end":11356,"line_start":36,"line_end":36,"column_start":5,"column_end":21},"name":"MalformedHeaders","qualname":"::codec::error::UserError::MalformedHeaders","value":"UserError::MalformedHeaders","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" Illegal headers, such as connection-specific headers.\n","sig":null,"attributes":[{"value":"/ Illegal headers, such as connection-specific headers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11278,"byte_end":11335,"line_start":35,"line_end":35,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3591},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11408,"byte_end":11436,"line_start":39,"line_end":39,"column_start":5,"column_end":33},"name":"MissingUriSchemeAndAuthority","qualname":"::codec::error::UserError::MissingUriSchemeAndAuthority","value":"UserError::MissingUriSchemeAndAuthority","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" Request submitted with relative URI.\n","sig":null,"attributes":[{"value":"/ Request submitted with relative URI.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11363,"byte_end":11403,"line_start":38,"line_end":38,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3593},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11521,"byte_end":11547,"line_start":42,"line_end":42,"column_start":5,"column_end":31},"name":"PollResetAfterSendResponse","qualname":"::codec::error::UserError::PollResetAfterSendResponse","value":"UserError::PollResetAfterSendResponse","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" Calls `SendResponse::poll_reset` after having called `send_response`.\n","sig":null,"attributes":[{"value":"/ Calls `SendResponse::poll_reset` after having called `send_response`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11443,"byte_end":11516,"line_start":41,"line_end":41,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3595},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11615,"byte_end":11635,"line_start":45,"line_end":45,"column_start":5,"column_end":25},"name":"SendPingWhilePending","qualname":"::codec::error::UserError::SendPingWhilePending","value":"UserError::SendPingWhilePending","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" Calls `PingPong::send_ping` before receiving a pong.\n","sig":null,"attributes":[{"value":"/ Calls `PingPong::send_ping` before receiving a pong.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11554,"byte_end":11610,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3597},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11714,"byte_end":11738,"line_start":48,"line_end":48,"column_start":5,"column_end":29},"name":"SendSettingsWhilePending","qualname":"::codec::error::UserError::SendSettingsWhilePending","value":"UserError::SendSettingsWhilePending","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" Tries to update local SETTINGS while ACK has not been received.\n","sig":null,"attributes":[{"value":"/ Tries to update local SETTINGS while ACK has not been received.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11642,"byte_end":11709,"line_start":47,"line_end":47,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3599},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11817,"byte_end":11839,"line_start":51,"line_end":51,"column_start":5,"column_end":27},"name":"PeerDisabledServerPush","qualname":"::codec::error::UserError::PeerDisabledServerPush","value":"UserError::PeerDisabledServerPush","parent":{"krate":0,"index":3576},"children":[],"decl_id":null,"docs":" Tries to send push promise to peer who has disabled server push\n","sig":null,"attributes":[{"value":"/ Tries to send push promise to peer who has disabled server push","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11745,"byte_end":11812,"line_start":50,"line_end":50,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":3576},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10744,"byte_end":10753,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"UserError","qualname":"::codec::error::UserError","value":"enum UserError {\n    InactiveStreamId,\n    UnexpectedFrameType,\n    PayloadTooBig,\n    Rejected,\n    ReleaseCapacityTooBig,\n    OverflowedStreamId,\n    MalformedHeaders,\n    MissingUriSchemeAndAuthority,\n    PollResetAfterSendResponse,\n    SendPingWhilePending,\n    SendSettingsWhilePending,\n    PeerDisabledServerPush,\n}","parent":null,"children":[{"krate":0,"index":3577},{"krate":0,"index":3579},{"krate":0,"index":3581},{"krate":0,"index":3583},{"krate":0,"index":3585},{"krate":0,"index":3587},{"krate":0,"index":3589},{"krate":0,"index":3591},{"krate":0,"index":3593},{"krate":0,"index":3595},{"krate":0,"index":3597},{"krate":0,"index":3599}],"decl_id":null,"docs":" Errors caused by users of the library\n","sig":null,"attributes":[{"value":"/ Errors caused by users of the library","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":10676,"byte_end":10717,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":22},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11952,"byte_end":11955,"line_start":59,"line_end":59,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12187,"byte_end":12191,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"from","qualname":"<SendError as std::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12308,"byte_end":12312,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"from","qualname":"<SendError as std::convert::From>::from","value":"fn from(UserError) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12485,"byte_end":12488,"line_start":84,"line_end":84,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UserError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4973},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40096,"byte_end":40101,"line_start":21,"line_end":21,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":4974}],"decl_id":null,"docs":" Represents HTTP/2 operation errors.","sig":null,"attributes":[{"value":"/ Represents HTTP/2 operation errors.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":39661,"byte_end":39700,"line_start":10,"line_end":10,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":39701,"byte_end":39704,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ `Error` covers error cases raised by protocol errors caused by the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":39705,"byte_end":39775,"line_start":12,"line_end":12,"column_start":1,"column_end":71}},{"value":"/ peer, I/O (transport) errors, and errors caused by the user of the library.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":39776,"byte_end":39855,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":39856,"byte_end":39859,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ If the error was caused by the remote peer, then it will contain a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":39860,"byte_end":39930,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ [`Reason`] which can be obtained with the [`reason`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":39931,"byte_end":39997,"line_start":16,"line_end":16,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":39998,"byte_end":40001,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ [`Reason`]: struct.Reason.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40002,"byte_end":40036,"line_start":18,"line_end":18,"column_start":1,"column_end":35}},{"value":"/ [`reason`]: #method.reason","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40037,"byte_end":40067,"line_start":19,"line_end":19,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40866,"byte_end":40872,"line_start":51,"line_end":51,"column_start":12,"column_end":18},"name":"reason","qualname":"<Error>::reason","value":"fn reason(&Self) -> Option<Reason>","parent":null,"children":[],"decl_id":null,"docs":" If the error was caused by the remote peer, the error reason.","sig":null,"attributes":[{"value":"/ If the error was caused by the remote peer, the error reason.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40646,"byte_end":40711,"line_start":47,"line_end":47,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40716,"byte_end":40719,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ This is either an error received by the peer or caused by an invalid","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40724,"byte_end":40796,"line_start":49,"line_end":49,"column_start":5,"column_end":77}},{"value":"/ action taken by the peer (i.e. a protocol error).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40801,"byte_end":40854,"line_start":50,"line_end":50,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41165,"byte_end":41170,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"name":"is_io","qualname":"<Error>::is_io","value":"fn is_io(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is an io::Error\n","sig":null,"attributes":[{"value":"/ Returns true if the error is an io::Error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41108,"byte_end":41153,"line_start":60,"line_end":60,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41303,"byte_end":41309,"line_start":66,"line_end":66,"column_start":12,"column_end":18},"name":"get_io","qualname":"<Error>::get_io","value":"fn get_io(&Self) -> Option<&io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the error if the error is an io::Error\n","sig":null,"attributes":[{"value":"/ Returns the error if the error is an io::Error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41241,"byte_end":41291,"line_start":65,"line_end":65,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41513,"byte_end":41520,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"into_io","qualname":"<Error>::into_io","value":"fn into_io(Self) -> Option<io::Error>","parent":null,"children":[],"decl_id":null,"docs":" Returns the error if the error is an io::Error\n","sig":null,"attributes":[{"value":"/ Returns the error if the error is an io::Error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41451,"byte_end":41501,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41835,"byte_end":41845,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"is_go_away","qualname":"<Error>::is_go_away","value":"fn is_go_away(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from a `GOAWAY`.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from a `GOAWAY`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41774,"byte_end":41823,"line_start":87,"line_end":87,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":363},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41985,"byte_end":41993,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"is_reset","qualname":"<Error>::is_reset","value":"fn is_reset(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error is from a `RST_STREAM`.\n","sig":null,"attributes":[{"value":"/ Returns true if the error is from a `RST_STREAM`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":41920,"byte_end":41973,"line_start":92,"line_end":92,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":42221,"byte_end":42230,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"is_remote","qualname":"<Error>::is_remote","value":"fn is_remote(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the error was received in a frame from the remote.","sig":null,"attributes":[{"value":"/ Returns true if the error was received in a frame from the remote.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":42067,"byte_end":42137,"line_start":97,"line_end":97,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":42142,"byte_end":42145,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ Such as from a received `RST_STREAM` or `GOAWAY` frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":42150,"byte_end":42209,"line_start":99,"line_end":99,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":42440,"byte_end":42444,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(proto::Error) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":371},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43024,"byte_end":43028,"line_start":127,"line_end":127,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(Reason) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43165,"byte_end":43169,"line_start":135,"line_end":135,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(SendError) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43370,"byte_end":43374,"line_start":144,"line_end":144,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(UserError) -> Error","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":377},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43509,"byte_end":43512,"line_start":152,"line_end":152,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6114},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267524,"byte_end":267529,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Reset","qualname":"::proto::error::Error::Reset","value":"Error::Reset(StreamId, Reason, Initiator)","parent":{"krate":0,"index":6113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6116},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267530,"byte_end":267538,"line_start":11,"line_end":11,"column_start":11,"column_end":19},"name":"0","qualname":"::proto::error::Error::Reset::0","value":"frame::stream_id::StreamId","parent":{"krate":0,"index":6114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6117},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267540,"byte_end":267546,"line_start":11,"line_end":11,"column_start":21,"column_end":27},"name":"1","qualname":"::proto::error::Error::Reset::1","value":"frame::reason::Reason","parent":{"krate":0,"index":6114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6118},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267548,"byte_end":267557,"line_start":11,"line_end":11,"column_start":29,"column_end":38},"name":"2","qualname":"::proto::error::Error::Reset::2","value":"proto::error::Initiator","parent":{"krate":0,"index":6114},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6119},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267564,"byte_end":267570,"line_start":12,"line_end":12,"column_start":5,"column_end":11},"name":"GoAway","qualname":"::proto::error::Error::GoAway","value":"Error::GoAway(Bytes, Reason, Initiator)","parent":{"krate":0,"index":6113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6121},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267571,"byte_end":267576,"line_start":12,"line_end":12,"column_start":12,"column_end":17},"name":"0","qualname":"::proto::error::Error::GoAway::0","value":"bytes::Bytes","parent":{"krate":0,"index":6119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6122},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267578,"byte_end":267584,"line_start":12,"line_end":12,"column_start":19,"column_end":25},"name":"1","qualname":"::proto::error::Error::GoAway::1","value":"frame::reason::Reason","parent":{"krate":0,"index":6119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6123},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267586,"byte_end":267595,"line_start":12,"line_end":12,"column_start":27,"column_end":36},"name":"2","qualname":"::proto::error::Error::GoAway::2","value":"proto::error::Initiator","parent":{"krate":0,"index":6119},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6124},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267602,"byte_end":267604,"line_start":13,"line_end":13,"column_start":5,"column_end":7},"name":"Io","qualname":"::proto::error::Error::Io","value":"Error::Io(io::ErrorKind, Option<String>)","parent":{"krate":0,"index":6113},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6126},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267605,"byte_end":267618,"line_start":13,"line_end":13,"column_start":8,"column_end":21},"name":"0","qualname":"::proto::error::Error::Io::0","value":"std::io::ErrorKind","parent":{"krate":0,"index":6124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6127},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267620,"byte_end":267634,"line_start":13,"line_end":13,"column_start":23,"column_end":37},"name":"1","qualname":"::proto::error::Error::Io::1","value":"std::option::Option<std::string::String>","parent":{"krate":0,"index":6124},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6113},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267512,"byte_end":267517,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"name":"Error","qualname":"::proto::error::Error","value":"enum Error {\n    Reset(StreamId, Reason, Initiator),\n    GoAway(Bytes, Reason, Initiator),\n    Io(io::ErrorKind, Option<String>),\n}","parent":null,"children":[{"krate":0,"index":6114},{"krate":0,"index":6119},{"krate":0,"index":6124}],"decl_id":null,"docs":" Either an H2 reason  or an I/O error\n","sig":null,"attributes":[{"value":"/ Either an H2 reason  or an I/O error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267438,"byte_end":267478,"line_start":8,"line_end":8,"column_start":1,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":6133},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267706,"byte_end":267710,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"User","qualname":"::proto::error::Initiator::User","value":"Initiator::User","parent":{"krate":0,"index":6132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6135},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267716,"byte_end":267723,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Library","qualname":"::proto::error::Initiator::Library","value":"Initiator::Library","parent":{"krate":0,"index":6132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6137},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267729,"byte_end":267735,"line_start":20,"line_end":20,"column_start":5,"column_end":11},"name":"Remote","qualname":"::proto::error::Initiator::Remote","value":"Initiator::Remote","parent":{"krate":0,"index":6132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6132},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267690,"byte_end":267699,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"name":"Initiator","qualname":"::proto::error::Initiator","value":"enum Initiator { User, Library, Remote, }","parent":null,"children":[{"krate":0,"index":6133},{"krate":0,"index":6135},{"krate":0,"index":6137}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":268868,"byte_end":268871,"line_start":62,"line_end":62,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":269222,"byte_end":269226,"line_start":72,"line_end":72,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(io::ErrorKind) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":906},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":269342,"byte_end":269346,"line_start":78,"line_end":78,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":269498,"byte_end":269502,"line_start":84,"line_end":84,"column_start":8,"column_end":12},"name":"from","qualname":"<SendError as std::convert::From>::from","value":"fn from(Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":989},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/peer.rs","byte_start":274733,"byte_end":274737,"line_start":12,"line_end":12,"column_start":10,"column_end":14},"name":"Poll","qualname":"::proto::peer::Peer::Poll","value":"type Poll: fmt::Debug;","parent":{"krate":0,"index":988},"children":[],"decl_id":null,"docs":" Message type polled from the transport\n","sig":null,"attributes":[{"value":"/ Message type polled from the transport","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/peer.rs","byte_start":274681,"byte_end":274723,"line_start":11,"line_end":11,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":6793},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306977,"byte_end":306983,"line_start":192,"line_end":192,"column_start":12,"column_end":18},"name":"Window","qualname":"::proto::streams::flow_control::Window","value":"","parent":null,"children":[],"decl_id":null,"docs":" The current capacity of a flow-controlled Window.","sig":null,"attributes":[{"value":"/ The current capacity of a flow-controlled Window.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306555,"byte_end":306608,"line_start":184,"line_end":184,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306609,"byte_end":306612,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This number can go negative when either side has used a certain amount","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306613,"byte_end":306687,"line_start":186,"line_end":186,"column_start":1,"column_end":75}},{"value":"/ of capacity when the other side advertises a reduction in size.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306688,"byte_end":306755,"line_start":187,"line_end":187,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306756,"byte_end":306759,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ This type tries to centralize the knowledge of addition and subtraction","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306760,"byte_end":306835,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"/ to this capacity, instead of having integer casts throughout the source.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306836,"byte_end":306912,"line_start":190,"line_end":190,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1178},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307016,"byte_end":307023,"line_start":195,"line_end":195,"column_start":12,"column_end":19},"name":"as_size","qualname":"<Window>::as_size","value":"fn as_size(&Self) -> WindowSize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1179},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307163,"byte_end":307175,"line_start":203,"line_end":203,"column_start":12,"column_end":24},"name":"checked_size","qualname":"<Window>::checked_size","value":"fn checked_size(&Self) -> WindowSize","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1181},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307328,"byte_end":307330,"line_start":210,"line_end":210,"column_start":8,"column_end":10},"name":"eq","qualname":"<Window as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &usize) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1183},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307524,"byte_end":307535,"line_start":220,"line_end":220,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Window as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &usize) -> Option<::std::cmp::Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1185},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307805,"byte_end":307815,"line_start":230,"line_end":230,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<Window as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, WindowSize)","parent":{"krate":2,"index":3253},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1188},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307966,"byte_end":307969,"line_start":237,"line_end":237,"column_start":8,"column_end":11},"name":"add","qualname":"<Window as std::ops::Add>::add","value":"fn add(Self, WindowSize) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":308119,"byte_end":308129,"line_start":243,"line_end":243,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<Window as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, WindowSize)","parent":{"krate":2,"index":3249},"children":[],"decl_id":{"krate":2,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1192},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":308241,"byte_end":308244,"line_start":249,"line_end":249,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Window as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":308377,"byte_end":308381,"line_start":255,"line_end":255,"column_start":8,"column_end":12},"name":"from","qualname":"<isize as std::convert::From>::from","value":"fn from(Window) -> isize","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":502983,"byte_end":502987,"line_start":221,"line_end":221,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as std::convert::From>::from","value":"fn from(DataFlags) -> u8","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10665},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":508122,"byte_end":508133,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"HeadersFlag","qualname":"::frame::headers::HeadersFlag","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10690},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":508550,"byte_end":508565,"line_start":52,"line_end":52,"column_start":12,"column_end":27},"name":"PushPromiseFlag","qualname":"::frame::headers::PushPromiseFlag","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526306,"byte_end":526311,"line_start":721,"line_end":721,"column_start":12,"column_end":17},"name":"empty","qualname":"<HeadersFlag>::empty","value":"fn empty() -> HeadersFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526372,"byte_end":526376,"line_start":725,"line_end":725,"column_start":12,"column_end":16},"name":"load","qualname":"<HeadersFlag>::load","value":"fn load(u8) -> HeadersFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2528},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526454,"byte_end":526467,"line_start":729,"line_end":729,"column_start":12,"column_end":25},"name":"is_end_stream","qualname":"<HeadersFlag>::is_end_stream","value":"fn is_end_stream(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526545,"byte_end":526559,"line_start":733,"line_end":733,"column_start":12,"column_end":26},"name":"set_end_stream","qualname":"<HeadersFlag>::set_end_stream","value":"fn set_end_stream(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526621,"byte_end":526635,"line_start":737,"line_end":737,"column_start":12,"column_end":26},"name":"is_end_headers","qualname":"<HeadersFlag>::is_end_headers","value":"fn is_end_headers(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2531},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526715,"byte_end":526730,"line_start":741,"line_end":741,"column_start":12,"column_end":27},"name":"set_end_headers","qualname":"<HeadersFlag>::set_end_headers","value":"fn set_end_headers(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2532},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526793,"byte_end":526802,"line_start":745,"line_end":745,"column_start":12,"column_end":21},"name":"is_padded","qualname":"<HeadersFlag>::is_padded","value":"fn is_padded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526872,"byte_end":526883,"line_start":749,"line_end":749,"column_start":12,"column_end":23},"name":"is_priority","qualname":"<HeadersFlag>::is_priority","value":"fn is_priority(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527048,"byte_end":527055,"line_start":756,"line_end":756,"column_start":8,"column_end":15},"name":"default","qualname":"<HeadersFlag as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":" Returns a `HeadersFlag` value with `END_HEADERS` set.\n","sig":null,"attributes":[{"value":"/ Returns a `HeadersFlag` value with `END_HEADERS` set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526983,"byte_end":527040,"line_start":755,"line_end":755,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":2537},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527149,"byte_end":527153,"line_start":762,"line_end":762,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as std::convert::From>::from","value":"fn from(HeadersFlag) -> u8","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527244,"byte_end":527247,"line_start":768,"line_end":768,"column_start":8,"column_end":11},"name":"fmt","qualname":"<HeadersFlag as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2541},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527657,"byte_end":527662,"line_start":781,"line_end":781,"column_start":12,"column_end":17},"name":"empty","qualname":"<PushPromiseFlag>::empty","value":"fn empty() -> PushPromiseFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527731,"byte_end":527735,"line_start":785,"line_end":785,"column_start":12,"column_end":16},"name":"load","qualname":"<PushPromiseFlag>::load","value":"fn load(u8) -> PushPromiseFlag","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527821,"byte_end":527835,"line_start":789,"line_end":789,"column_start":12,"column_end":26},"name":"is_end_headers","qualname":"<PushPromiseFlag>::is_end_headers","value":"fn is_end_headers(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2544},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527915,"byte_end":527930,"line_start":793,"line_end":793,"column_start":12,"column_end":27},"name":"set_end_headers","qualname":"<PushPromiseFlag>::set_end_headers","value":"fn set_end_headers(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2545},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527993,"byte_end":528002,"line_start":797,"line_end":797,"column_start":12,"column_end":21},"name":"is_padded","qualname":"<PushPromiseFlag>::is_padded","value":"fn is_padded(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2547},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528171,"byte_end":528178,"line_start":804,"line_end":804,"column_start":8,"column_end":15},"name":"default","qualname":"<PushPromiseFlag as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":" Returns a `PushPromiseFlag` value with `END_HEADERS` set.\n","sig":null,"attributes":[{"value":"/ Returns a `PushPromiseFlag` value with `END_HEADERS` set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528102,"byte_end":528163,"line_start":803,"line_end":803,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528280,"byte_end":528284,"line_start":810,"line_end":810,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as std::convert::From>::from","value":"fn from(PushPromiseFlag) -> u8","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528383,"byte_end":528386,"line_start":816,"line_end":816,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PushPromiseFlag as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11599},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541678,"byte_end":541684,"line_start":19,"line_end":19,"column_start":12,"column_end":18},"name":"Reason","qualname":"::frame::reason::Reason","value":"","parent":null,"children":[],"decl_id":null,"docs":" HTTP/2 error codes.","sig":null,"attributes":[{"value":"/ HTTP/2 error codes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":540976,"byte_end":540999,"line_start":3,"line_end":3,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541000,"byte_end":541003,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Error codes are used in `RST_STREAM` and `GOAWAY` frames to convey the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541004,"byte_end":541078,"line_start":5,"line_end":5,"column_start":1,"column_end":75}},{"value":"/ reasons for the stream or connection error. For example,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541079,"byte_end":541139,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ [`SendStream::send_reset`] takes a `Reason` argument. Also, the `Error` type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541140,"byte_end":541220,"line_start":7,"line_end":7,"column_start":1,"column_end":81}},{"value":"/ may contain a `Reason`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541221,"byte_end":541248,"line_start":8,"line_end":8,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541249,"byte_end":541252,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Error codes share a common code space. Some error codes apply only to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541253,"byte_end":541326,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/ streams, others apply only to connections, and others may apply to either.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541327,"byte_end":541405,"line_start":11,"line_end":11,"column_start":1,"column_end":79}},{"value":"/ See [RFC 7540] for more information.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541406,"byte_end":541446,"line_start":12,"line_end":12,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541447,"byte_end":541450,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See [Error Codes in the spec][spec].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541451,"byte_end":541491,"line_start":14,"line_end":14,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541492,"byte_end":541495,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [spec]: http://httpwg.org/specs/rfc7540.html#ErrorCodes","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541496,"byte_end":541555,"line_start":16,"line_end":16,"column_start":1,"column_end":60}},{"value":"/ [`SendStream::send_reset`]: struct.SendStream.html#method.send_reset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541556,"byte_end":541628,"line_start":17,"line_end":17,"column_start":1,"column_end":73}}]},{"kind":"Const","id":{"krate":0,"index":2618},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541899,"byte_end":541907,"line_start":26,"line_end":26,"column_start":15,"column_end":23},"name":"NO_ERROR","qualname":"::frame::reason::Reason::NO_ERROR","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The associated condition is not a result of an error.","sig":null,"attributes":[{"value":"/ The associated condition is not a result of an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541710,"byte_end":541767,"line_start":22,"line_end":22,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541772,"byte_end":541775,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ For example, a GOAWAY might include this code to indicate graceful","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541780,"byte_end":541850,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ shutdown of a connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541855,"byte_end":541884,"line_start":25,"line_end":25,"column_start":5,"column_end":34}}]},{"kind":"Const","id":{"krate":0,"index":2619},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542091,"byte_end":542105,"line_start":30,"line_end":30,"column_start":15,"column_end":29},"name":"PROTOCOL_ERROR","qualname":"::frame::reason::Reason::PROTOCOL_ERROR","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint detected an unspecific protocol error.","sig":null,"attributes":[{"value":"/ The endpoint detected an unspecific protocol error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541933,"byte_end":541988,"line_start":27,"line_end":27,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541993,"byte_end":541996,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This error is for use when a more specific error code is not available.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542001,"byte_end":542076,"line_start":29,"line_end":29,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":2620},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542204,"byte_end":542218,"line_start":32,"line_end":32,"column_start":15,"column_end":29},"name":"INTERNAL_ERROR","qualname":"::frame::reason::Reason::INTERNAL_ERROR","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint encountered an unexpected internal error.\n","sig":null,"attributes":[{"value":"/ The endpoint encountered an unexpected internal error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542131,"byte_end":542189,"line_start":31,"line_end":31,"column_start":5,"column_end":63}}]},{"kind":"Const","id":{"krate":0,"index":2621},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542334,"byte_end":542352,"line_start":34,"line_end":34,"column_start":15,"column_end":33},"name":"FLOW_CONTROL_ERROR","qualname":"::frame::reason::Reason::FLOW_CONTROL_ERROR","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint detected that its peer violated the flow-control protocol.\n","sig":null,"attributes":[{"value":"/ The endpoint detected that its peer violated the flow-control protocol.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542244,"byte_end":542319,"line_start":33,"line_end":33,"column_start":5,"column_end":80}}]},{"kind":"Const","id":{"krate":0,"index":2622},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542490,"byte_end":542506,"line_start":37,"line_end":37,"column_start":15,"column_end":31},"name":"SETTINGS_TIMEOUT","qualname":"::frame::reason::Reason::SETTINGS_TIMEOUT","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint sent a SETTINGS frame but did not receive a response in\n a timely manner.\n","sig":null,"attributes":[{"value":"/ The endpoint sent a SETTINGS frame but did not receive a response in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542378,"byte_end":542450,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ a timely manner.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542455,"byte_end":542475,"line_start":36,"line_end":36,"column_start":5,"column_end":25}}]},{"kind":"Const","id":{"krate":0,"index":2623},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542612,"byte_end":542625,"line_start":39,"line_end":39,"column_start":15,"column_end":28},"name":"STREAM_CLOSED","qualname":"::frame::reason::Reason::STREAM_CLOSED","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint received a frame after a stream was half-closed.\n","sig":null,"attributes":[{"value":"/ The endpoint received a frame after a stream was half-closed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542532,"byte_end":542597,"line_start":38,"line_end":38,"column_start":5,"column_end":70}}]},{"kind":"Const","id":{"krate":0,"index":2624},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542721,"byte_end":542737,"line_start":41,"line_end":41,"column_start":15,"column_end":31},"name":"FRAME_SIZE_ERROR","qualname":"::frame::reason::Reason::FRAME_SIZE_ERROR","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint received a frame with an invalid size.\n","sig":null,"attributes":[{"value":"/ The endpoint received a frame with an invalid size.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542651,"byte_end":542706,"line_start":40,"line_end":40,"column_start":5,"column_end":60}}]},{"kind":"Const","id":{"krate":0,"index":2625},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542869,"byte_end":542883,"line_start":44,"line_end":44,"column_start":15,"column_end":29},"name":"REFUSED_STREAM","qualname":"::frame::reason::Reason::REFUSED_STREAM","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint refused the stream prior to performing any application\n processing.\n","sig":null,"attributes":[{"value":"/ The endpoint refused the stream prior to performing any application","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542763,"byte_end":542834,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/ processing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542839,"byte_end":542854,"line_start":43,"line_end":43,"column_start":5,"column_end":20}}]},{"kind":"Const","id":{"krate":0,"index":2626},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542997,"byte_end":543003,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"name":"CANCEL","qualname":"::frame::reason::Reason::CANCEL","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" Used by the endpoint to indicate that the stream is no longer needed.\n","sig":null,"attributes":[{"value":"/ Used by the endpoint to indicate that the stream is no longer needed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":542909,"byte_end":542982,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Const","id":{"krate":0,"index":2627},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543141,"byte_end":543158,"line_start":49,"line_end":49,"column_start":15,"column_end":32},"name":"COMPRESSION_ERROR","qualname":"::frame::reason::Reason::COMPRESSION_ERROR","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint is unable to maintain the header compression context for\n the connection.\n","sig":null,"attributes":[{"value":"/ The endpoint is unable to maintain the header compression context for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543029,"byte_end":543102,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ the connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543107,"byte_end":543126,"line_start":48,"line_end":48,"column_start":5,"column_end":24}}]},{"kind":"Const","id":{"krate":0,"index":2628},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543302,"byte_end":543315,"line_start":52,"line_end":52,"column_start":15,"column_end":28},"name":"CONNECT_ERROR","qualname":"::frame::reason::Reason::CONNECT_ERROR","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The connection established in response to a CONNECT request was reset\n or abnormally closed.\n","sig":null,"attributes":[{"value":"/ The connection established in response to a CONNECT request was reset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543184,"byte_end":543257,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ or abnormally closed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543262,"byte_end":543287,"line_start":51,"line_end":51,"column_start":5,"column_end":30}}]},{"kind":"Const","id":{"krate":0,"index":2629},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543470,"byte_end":543487,"line_start":55,"line_end":55,"column_start":15,"column_end":32},"name":"ENHANCE_YOUR_CALM","qualname":"::frame::reason::Reason::ENHANCE_YOUR_CALM","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint detected that its peer is exhibiting a behavior that might\n be generating excessive load.\n","sig":null,"attributes":[{"value":"/ The endpoint detected that its peer is exhibiting a behavior that might","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543342,"byte_end":543417,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ be generating excessive load.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543422,"byte_end":543455,"line_start":54,"line_end":54,"column_start":5,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2630},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543628,"byte_end":543647,"line_start":58,"line_end":58,"column_start":15,"column_end":34},"name":"INADEQUATE_SECURITY","qualname":"::frame::reason::Reason::INADEQUATE_SECURITY","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The underlying transport has properties that do not meet minimum\n security requirements.\n","sig":null,"attributes":[{"value":"/ The underlying transport has properties that do not meet minimum","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543514,"byte_end":543582,"line_start":56,"line_end":56,"column_start":5,"column_end":73}},{"value":"/ security requirements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543587,"byte_end":543613,"line_start":57,"line_end":57,"column_start":5,"column_end":31}}]},{"kind":"Const","id":{"krate":0,"index":2631},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543755,"byte_end":543772,"line_start":60,"line_end":60,"column_start":15,"column_end":32},"name":"HTTP_1_1_REQUIRED","qualname":"::frame::reason::Reason::HTTP_1_1_REQUIRED","value":"Reason","parent":{"krate":0,"index":2617},"children":[],"decl_id":null,"docs":" The endpoint requires that HTTP/1.1 be used instead of HTTP/2.\n","sig":null,"attributes":[{"value":"/ The endpoint requires that HTTP/1.1 be used instead of HTTP/2.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543674,"byte_end":543740,"line_start":59,"line_end":59,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543859,"byte_end":543870,"line_start":63,"line_end":63,"column_start":12,"column_end":23},"name":"description","qualname":"<Reason>::description","value":"fn description(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Get a string description of the error code.\n","sig":null,"attributes":[{"value":"/ Get a string description of the error code.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":543800,"byte_end":543847,"line_start":62,"line_end":62,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":544909,"byte_end":544913,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"from","qualname":"<Reason as std::convert::From>::from","value":"fn from(u32) -> Reason","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":545000,"byte_end":545004,"line_start":94,"line_end":94,"column_start":8,"column_end":12},"name":"from","qualname":"<u32 as std::convert::From>::from","value":"fn from(Reason) -> u32","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":545086,"byte_end":545089,"line_start":100,"line_end":100,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Reason as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":545988,"byte_end":545991,"line_start":131,"line_end":131,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Reason as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11703},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":548334,"byte_end":548347,"line_start":35,"line_end":35,"column_start":12,"column_end":25},"name":"SettingsFlags","qualname":"::frame::settings::SettingsFlags","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558132,"byte_end":558137,"line_start":362,"line_end":362,"column_start":12,"column_end":17},"name":"empty","qualname":"<SettingsFlags>::empty","value":"fn empty() -> SettingsFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558202,"byte_end":558206,"line_start":366,"line_end":366,"column_start":12,"column_end":16},"name":"load","qualname":"<SettingsFlags>::load","value":"fn load(u8) -> SettingsFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558288,"byte_end":558291,"line_start":370,"line_end":370,"column_start":12,"column_end":15},"name":"ack","qualname":"<SettingsFlags>::ack","value":"fn ack() -> SettingsFlags","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558358,"byte_end":558364,"line_start":374,"line_end":374,"column_start":12,"column_end":18},"name":"is_ack","qualname":"<SettingsFlags>::is_ack","value":"fn is_ack(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558460,"byte_end":558464,"line_start":380,"line_end":380,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as std::convert::From>::from","value":"fn from(SettingsFlags) -> u8","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558559,"byte_end":558562,"line_start":386,"line_end":386,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SettingsFlags as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11814},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559338,"byte_end":559346,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::frame::stream_id::StreamId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream identifier, as described in [Section 5.1.1] of RFC 7540.","sig":null,"attributes":[{"value":"/ A stream identifier, as described in [Section 5.1.1] of RFC 7540.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":558737,"byte_end":558806,"line_start":3,"line_end":3,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":558807,"byte_end":558810,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Streams are identified with an unsigned 31-bit integer. Streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":558811,"byte_end":558878,"line_start":5,"line_end":5,"column_start":1,"column_end":68}},{"value":"/ initiated by a client MUST use odd-numbered stream identifiers; those","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":558879,"byte_end":558952,"line_start":6,"line_end":6,"column_start":1,"column_end":74}},{"value":"/ initiated by the server MUST use even-numbered stream identifiers.  A","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":558953,"byte_end":559026,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"/ stream identifier of zero (0x0) is used for connection control","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559027,"byte_end":559093,"line_start":8,"line_end":8,"column_start":1,"column_end":67}},{"value":"/ messages; the stream identifier of zero cannot be used to establish a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559094,"byte_end":559167,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/ new stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559168,"byte_end":559183,"line_start":10,"line_end":10,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559184,"byte_end":559187,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [Section 5.1.1]: https://tools.ietf.org/html/rfc7540#section-5.1.1","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559188,"byte_end":559258,"line_start":12,"line_end":12,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":11836},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559395,"byte_end":559411,"line_start":17,"line_end":17,"column_start":12,"column_end":28},"name":"StreamIdOverflow","qualname":"::frame::stream_id::StreamIdOverflow","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2773},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559503,"byte_end":559507,"line_start":23,"line_end":23,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::frame::stream_id::StreamId::ZERO","value":"StreamId","parent":{"krate":0,"index":2772},"children":[],"decl_id":null,"docs":" Stream ID 0.\n","sig":null,"attributes":[{"value":"/ Stream ID 0.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559472,"byte_end":559488,"line_start":22,"line_end":22,"column_start":5,"column_end":21}}]},{"kind":"Const","id":{"krate":0,"index":2774},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559587,"byte_end":559590,"line_start":26,"line_end":26,"column_start":15,"column_end":18},"name":"MAX","qualname":"::frame::stream_id::StreamId::MAX","value":"StreamId","parent":{"krate":0,"index":2772},"children":[],"decl_id":null,"docs":" The maximum allowed stream ID.\n","sig":null,"attributes":[{"value":"/ The maximum allowed stream ID.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559538,"byte_end":559572,"line_start":25,"line_end":25,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559682,"byte_end":559687,"line_start":30,"line_end":30,"column_start":12,"column_end":17},"name":"parse","qualname":"<StreamId>::parse","value":"fn parse(&[u8]) -> (StreamId, bool)","parent":null,"children":[],"decl_id":null,"docs":" Parse the stream ID\n","sig":null,"attributes":[{"value":"/ Parse the stream ID","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559633,"byte_end":559656,"line_start":28,"line_end":28,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559661,"byte_end":559670,"line_start":29,"line_end":29,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2777},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560198,"byte_end":560217,"line_start":43,"line_end":43,"column_start":12,"column_end":31},"name":"is_client_initiated","qualname":"<StreamId>::is_client_initiated","value":"fn is_client_initiated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this stream ID corresponds to a stream that\n was initiated by the client.\n","sig":null,"attributes":[{"value":"/ Returns true if this stream ID corresponds to a stream that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560086,"byte_end":560149,"line_start":41,"line_end":41,"column_start":5,"column_end":68}},{"value":"/ was initiated by the client.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560154,"byte_end":560186,"line_start":42,"line_end":42,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2778},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560414,"byte_end":560433,"line_start":50,"line_end":50,"column_start":12,"column_end":31},"name":"is_server_initiated","qualname":"<StreamId>::is_server_initiated","value":"fn is_server_initiated(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this stream ID corresponds to a stream that\n was initiated by the server.\n","sig":null,"attributes":[{"value":"/ Returns true if this stream ID corresponds to a stream that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560302,"byte_end":560365,"line_start":48,"line_end":48,"column_start":5,"column_end":68}},{"value":"/ was initiated by the server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560370,"byte_end":560402,"line_start":49,"line_end":49,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560585,"byte_end":560589,"line_start":57,"line_end":57,"column_start":12,"column_end":16},"name":"zero","qualname":"<StreamId>::zero","value":"fn zero() -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Return a new `StreamId` for stream 0.\n","sig":null,"attributes":[{"value":"/ Return a new `StreamId` for stream 0.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560518,"byte_end":560559,"line_start":55,"line_end":55,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560564,"byte_end":560573,"line_start":56,"line_end":56,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560695,"byte_end":560702,"line_start":62,"line_end":62,"column_start":12,"column_end":19},"name":"is_zero","qualname":"<StreamId>::is_zero","value":"fn is_zero(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this stream ID is zero.\n","sig":null,"attributes":[{"value":"/ Returns true if this stream ID is zero.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560640,"byte_end":560683,"line_start":61,"line_end":61,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560926,"byte_end":560933,"line_start":69,"line_end":69,"column_start":12,"column_end":19},"name":"next_id","qualname":"<StreamId>::next_id","value":"fn next_id(&Self) -> Result<StreamId, StreamIdOverflow>","parent":null,"children":[],"decl_id":null,"docs":" Returns the next stream ID initiated by the same peer as this stream\n ID, or an error if incrementing this stream ID would overflow the\n maximum.\n","sig":null,"attributes":[{"value":"/ Returns the next stream ID initiated by the same peer as this stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560751,"byte_end":560823,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ ID, or an error if incrementing this stream ID would overflow the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560828,"byte_end":560897,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ maximum.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":560902,"byte_end":560914,"line_start":68,"line_end":68,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":561186,"byte_end":561190,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"from","qualname":"<StreamId as std::convert::From>::from","value":"fn from(u32) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2785},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":561359,"byte_end":561363,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"from","qualname":"<u32 as std::convert::From>::from","value":"fn from(StreamId) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2787},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":561454,"byte_end":561456,"line_start":93,"line_end":93,"column_start":8,"column_end":10},"name":"eq","qualname":"<StreamId as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &u32) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2935},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"client","qualname":"::client","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","parent":null,"children":[{"krate":0,"index":2936},{"krate":0,"index":2937},{"krate":0,"index":2940},{"krate":0,"index":2943},{"krate":0,"index":2946},{"krate":0,"index":2949},{"krate":0,"index":2950},{"krate":0,"index":2953},{"krate":0,"index":2956},{"krate":0,"index":2959},{"krate":0,"index":2962},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2969},{"krate":0,"index":2972},{"krate":0,"index":2973},{"krate":0,"index":2976},{"krate":0,"index":2979},{"krate":0,"index":2982},{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2989},{"krate":0,"index":2992},{"krate":0,"index":2993},{"krate":0,"index":2996},{"krate":0,"index":2999},{"krate":0,"index":3002},{"krate":0,"index":3005},{"krate":0,"index":3008},{"krate":0,"index":3011},{"krate":0,"index":3014},{"krate":0,"index":3017},{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3030},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3037},{"krate":0,"index":3040},{"krate":0,"index":3043},{"krate":0,"index":3046},{"krate":0,"index":11963},{"krate":0,"index":11966},{"krate":0,"index":3050},{"krate":0,"index":11969},{"krate":0,"index":11972},{"krate":0,"index":11974},{"krate":0,"index":11976},{"krate":0,"index":11978},{"krate":0,"index":11981},{"krate":0,"index":11983},{"krate":0,"index":11985},{"krate":0,"index":11987},{"krate":0,"index":11995},{"krate":0,"index":11997},{"krate":0,"index":11999},{"krate":0,"index":12001},{"krate":0,"index":3054},{"krate":0,"index":3061},{"krate":0,"index":3064},{"krate":0,"index":3067},{"krate":0,"index":3071},{"krate":0,"index":3087},{"krate":0,"index":3089},{"krate":0,"index":3093},{"krate":0,"index":3097},{"krate":0,"index":3108},{"krate":0,"index":3113},{"krate":0,"index":3117},{"krate":0,"index":3120},{"krate":0,"index":3123},{"krate":0,"index":3129},{"krate":0,"index":3133},{"krate":0,"index":3136},{"krate":0,"index":3138},{"krate":0,"index":3143}],"decl_id":null,"docs":" Client implementation of the HTTP/2 protocol.","sig":null,"attributes":[{"value":"/ Client implementation of the HTTP/2 protocol.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565371,"byte_end":565420,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565421,"byte_end":565424,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565425,"byte_end":565446,"line_start":3,"line_end":3,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565447,"byte_end":565450,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Running an HTTP/2 client requires the caller to establish the underlying","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565451,"byte_end":565527,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/ connection as well as get the connection to a state that is ready to begin","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565528,"byte_end":565606,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ the HTTP/2 handshake. See [here](../index.html#handshake) for more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565607,"byte_end":565677,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"/ details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565678,"byte_end":565690,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565691,"byte_end":565694,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This could be as basic as using Tokio's [`TcpStream`] to connect to a remote","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565695,"byte_end":565775,"line_start":10,"line_end":10,"column_start":1,"column_end":81}},{"value":"/ host, but usually it means using either ALPN or HTTP/1.1 protocol upgrades.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565776,"byte_end":565855,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565856,"byte_end":565859,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Once a connection is obtained, it is passed to [`handshake`], which will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565860,"byte_end":565936,"line_start":13,"line_end":13,"column_start":1,"column_end":77}},{"value":"/ begin the [HTTP/2 handshake]. This returns a future that completes once","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":565937,"byte_end":566012,"line_start":14,"line_end":14,"column_start":1,"column_end":76}},{"value":"/ the handshake process is performed and HTTP/2 streams may be initialized.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566013,"byte_end":566090,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566091,"byte_end":566094,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`handshake`] uses default configuration values. There are a number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566095,"byte_end":566169,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ settings that can be changed by using [`Builder`] instead.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566170,"byte_end":566232,"line_start":18,"line_end":18,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566233,"byte_end":566236,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Once the handshake future completes, the caller is provided with a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566237,"byte_end":566307,"line_start":20,"line_end":20,"column_start":1,"column_end":71}},{"value":"/ [`Connection`] instance and a [`SendRequest`] instance. The [`Connection`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566308,"byte_end":566386,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ instance is used to drive the connection (see [Managing the connection]).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566387,"byte_end":566464,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ The [`SendRequest`] instance is used to initialize new streams (see [Making","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566465,"byte_end":566544,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ requests]).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566545,"byte_end":566560,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566561,"byte_end":566564,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Making requests","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566565,"byte_end":566586,"line_start":26,"line_end":26,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566587,"byte_end":566590,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Requests are made using the [`SendRequest`] handle provided by the handshake","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566591,"byte_end":566671,"line_start":28,"line_end":28,"column_start":1,"column_end":81}},{"value":"/ future. Once a request is submitted, an HTTP/2 stream is initialized and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566672,"byte_end":566748,"line_start":29,"line_end":29,"column_start":1,"column_end":77}},{"value":"/ the request is sent to the server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566749,"byte_end":566787,"line_start":30,"line_end":30,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566788,"byte_end":566791,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ A request body and request trailers are sent using [`SendRequest`] and the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566792,"byte_end":566870,"line_start":32,"line_end":32,"column_start":1,"column_end":79}},{"value":"/ server's response is returned once the [`ResponseFuture`] future completes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566871,"byte_end":566950,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ Both the [`SendStream`] and [`ResponseFuture`] instances are returned by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":566951,"byte_end":567027,"line_start":34,"line_end":34,"column_start":1,"column_end":77}},{"value":"/ [`SendRequest::send_request`] and are tied to the HTTP/2 stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567028,"byte_end":567095,"line_start":35,"line_end":35,"column_start":1,"column_end":68}},{"value":"/ initialized by the sent request.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567096,"byte_end":567132,"line_start":36,"line_end":36,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567133,"byte_end":567136,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The [`SendRequest::poll_ready`] function returns `Ready` when a new HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567137,"byte_end":567215,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ stream can be created, i.e. as long as the current number of active streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567216,"byte_end":567295,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ is below [`MAX_CONCURRENT_STREAMS`]. If a new stream cannot be created, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567296,"byte_end":567375,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ caller will be notified once an existing stream closes, freeing capacity for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567376,"byte_end":567456,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ the caller.  The caller should use [`SendRequest::poll_ready`] to check for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567457,"byte_end":567536,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ capacity before sending a request to the server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567537,"byte_end":567589,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567590,"byte_end":567593,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`] enforces the [`MAX_CONCURRENT_STREAMS`] setting. The user","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567594,"byte_end":567671,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ must not send a request if `poll_ready` does not return `Ready`. Attempting","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567672,"byte_end":567751,"line_start":46,"line_end":46,"column_start":1,"column_end":80}},{"value":"/ to do so will result in an [`Error`] being returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567752,"byte_end":567808,"line_start":47,"line_end":47,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567809,"byte_end":567812,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Managing the connection","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567813,"byte_end":567842,"line_start":49,"line_end":49,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567843,"byte_end":567846,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance is used to manage connection state. The caller","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567847,"byte_end":567925,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ is required to call [`Connection::poll`] in order to advance state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567926,"byte_end":567997,"line_start":52,"line_end":52,"column_start":1,"column_end":72}},{"value":"/ [`SendRequest::send_request`] and other functions have no effect unless","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":567998,"byte_end":568073,"line_start":53,"line_end":53,"column_start":1,"column_end":76}},{"value":"/ [`Connection::poll`] is called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568074,"byte_end":568109,"line_start":54,"line_end":54,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568110,"byte_end":568113,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance should only be dropped once [`Connection::poll`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568114,"byte_end":568194,"line_start":56,"line_end":56,"column_start":1,"column_end":81}},{"value":"/ returns `Ready`. At this point, the underlying socket has been closed and no","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568195,"byte_end":568275,"line_start":57,"line_end":57,"column_start":1,"column_end":81}},{"value":"/ further work needs to be done.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568276,"byte_end":568310,"line_start":58,"line_end":58,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568311,"byte_end":568314,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The easiest way to ensure that the [`Connection`] instance gets polled is to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568315,"byte_end":568395,"line_start":60,"line_end":60,"column_start":1,"column_end":81}},{"value":"/ submit the [`Connection`] instance to an [executor]. The executor will then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568396,"byte_end":568475,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ manage polling the connection until the connection is complete.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568476,"byte_end":568543,"line_start":62,"line_end":62,"column_start":1,"column_end":68}},{"value":"/ Alternatively, the caller can call `poll` manually.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568544,"byte_end":568599,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568600,"byte_end":568603,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568604,"byte_end":568617,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568618,"byte_end":568621,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```rust, no_run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568622,"byte_end":568641,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568642,"byte_end":568645,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ use h2::client;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568646,"byte_end":568665,"line_start":69,"line_end":69,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568666,"byte_end":568669,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ use http::{Request, Method};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568670,"byte_end":568702,"line_start":71,"line_end":71,"column_start":1,"column_end":33}},{"value":"/ use std::error::Error;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568703,"byte_end":568729,"line_start":72,"line_end":72,"column_start":1,"column_end":27}},{"value":"/ use tokio::net::TcpStream;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568730,"byte_end":568760,"line_start":73,"line_end":73,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568761,"byte_end":568764,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568765,"byte_end":568783,"line_start":75,"line_end":75,"column_start":1,"column_end":19}},{"value":"/ pub async fn main() -> Result<(), Box<dyn Error>> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568784,"byte_end":568839,"line_start":76,"line_end":76,"column_start":1,"column_end":56}},{"value":"/     // Establish TCP connection to the server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568840,"byte_end":568890,"line_start":77,"line_end":77,"column_start":1,"column_end":51}},{"value":"/     let tcp = TcpStream::connect(\"127.0.0.1:5928\").await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568891,"byte_end":568953,"line_start":78,"line_end":78,"column_start":1,"column_end":63}},{"value":"/     let (h2, connection) = client::handshake(tcp).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":568954,"byte_end":569015,"line_start":79,"line_end":79,"column_start":1,"column_end":62}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569016,"byte_end":569049,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/         connection.await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569050,"byte_end":569088,"line_start":81,"line_end":81,"column_start":1,"column_end":39}},{"value":"/     });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569089,"byte_end":569100,"line_start":82,"line_end":82,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569101,"byte_end":569104,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/     let mut h2 = h2.ready().await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569105,"byte_end":569144,"line_start":84,"line_end":84,"column_start":1,"column_end":40}},{"value":"/     // Prepare the HTTP request to send to the server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569145,"byte_end":569203,"line_start":85,"line_end":85,"column_start":1,"column_end":59}},{"value":"/     let request = Request::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569204,"byte_end":569244,"line_start":86,"line_end":86,"column_start":1,"column_end":41}},{"value":"/                     .method(Method::GET)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569245,"byte_end":569289,"line_start":87,"line_end":87,"column_start":1,"column_end":45}},{"value":"/                     .uri(\"https://www.example.com/\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569290,"byte_end":569346,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/                     .body(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569347,"byte_end":569380,"line_start":89,"line_end":89,"column_start":1,"column_end":34}},{"value":"/                     .unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569381,"byte_end":569415,"line_start":90,"line_end":90,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569416,"byte_end":569419,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/     // Send the request. The second tuple item allows the caller","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569420,"byte_end":569488,"line_start":92,"line_end":92,"column_start":1,"column_end":69}},{"value":"/     // to stream a request body.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569489,"byte_end":569525,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"/     let (response, _) = h2.send_request(request, true).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569526,"byte_end":569594,"line_start":94,"line_end":94,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569595,"byte_end":569598,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/     let (head, mut body) = response.await?.into_parts();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569599,"byte_end":569659,"line_start":96,"line_end":96,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569660,"byte_end":569663,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/     println!(\"Received response: {:?}\", head);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569664,"byte_end":569714,"line_start":98,"line_end":98,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569715,"byte_end":569718,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/     // The `flow_control` handle allows the caller to manage","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569719,"byte_end":569783,"line_start":100,"line_end":100,"column_start":1,"column_end":65}},{"value":"/     // flow control.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569784,"byte_end":569808,"line_start":101,"line_end":101,"column_start":1,"column_end":25}},{"value":"/     //","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569809,"byte_end":569819,"line_start":102,"line_end":102,"column_start":1,"column_end":11}},{"value":"/     // Whenever data is received, the caller is responsible for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569820,"byte_end":569887,"line_start":103,"line_end":103,"column_start":1,"column_end":68}},{"value":"/     // releasing capacity back to the server once it has freed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569888,"byte_end":569954,"line_start":104,"line_end":104,"column_start":1,"column_end":67}},{"value":"/     // the data from memory.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569955,"byte_end":569987,"line_start":105,"line_end":105,"column_start":1,"column_end":33}},{"value":"/     let mut flow_control = body.flow_control().clone();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":569988,"byte_end":570047,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570048,"byte_end":570051,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/     while let Some(chunk) = body.data().await {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570052,"byte_end":570103,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/         let chunk = chunk?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570104,"byte_end":570135,"line_start":109,"line_end":109,"column_start":1,"column_end":32}},{"value":"/         println!(\"RX: {:?}\", chunk);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570136,"byte_end":570176,"line_start":110,"line_end":110,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570177,"byte_end":570180,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/         // Let the server send more data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570181,"byte_end":570226,"line_start":112,"line_end":112,"column_start":1,"column_end":46}},{"value":"/         let _ = flow_control.release_capacity(chunk.len());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570227,"byte_end":570290,"line_start":113,"line_end":113,"column_start":1,"column_end":64}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570291,"byte_end":570300,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570301,"byte_end":570304,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/     Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570305,"byte_end":570319,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570320,"byte_end":570325,"line_start":117,"line_end":117,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570326,"byte_end":570333,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570334,"byte_end":570337,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ [`TcpStream`]: https://docs.rs/tokio-core/0.1/tokio_core/net/struct.TcpStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570338,"byte_end":570424,"line_start":120,"line_end":120,"column_start":1,"column_end":87}},{"value":"/ [`handshake`]: fn.handshake.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570425,"byte_end":570461,"line_start":121,"line_end":121,"column_start":1,"column_end":37}},{"value":"/ [executor]: https://docs.rs/futures/0.1/futures/future/trait.Executor.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570462,"byte_end":570540,"line_start":122,"line_end":122,"column_start":1,"column_end":79}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570541,"byte_end":570585,"line_start":123,"line_end":123,"column_start":1,"column_end":45}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570586,"byte_end":570631,"line_start":124,"line_end":124,"column_start":1,"column_end":46}},{"value":"/ [Making requests]: #making-requests","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570632,"byte_end":570671,"line_start":125,"line_end":125,"column_start":1,"column_end":40}},{"value":"/ [Managing the connection]: #managing-the-connection","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570672,"byte_end":570727,"line_start":126,"line_end":126,"column_start":1,"column_end":56}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570728,"byte_end":570770,"line_start":127,"line_end":127,"column_start":1,"column_end":43}},{"value":"/ [`Connection::poll`]: struct.Connection.html#method.poll","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570771,"byte_end":570831,"line_start":128,"line_end":128,"column_start":1,"column_end":61}},{"value":"/ [`SendRequest::send_request`]: struct.SendRequest.html#method.send_request","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570832,"byte_end":570910,"line_start":129,"line_end":129,"column_start":1,"column_end":79}},{"value":"/ [`MAX_CONCURRENT_STREAMS`]: http://httpwg.org/specs/rfc7540.html#SettingValues","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570911,"byte_end":570993,"line_start":130,"line_end":130,"column_start":1,"column_end":83}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":570994,"byte_end":571038,"line_start":131,"line_end":131,"column_start":1,"column_end":45}},{"value":"/ [`ResponseFuture`]: struct.ResponseFuture.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":571039,"byte_end":571089,"line_start":132,"line_end":132,"column_start":1,"column_end":51}},{"value":"/ [`SendRequest::poll_ready`]: struct.SendRequest.html#method.poll_ready","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":571090,"byte_end":571164,"line_start":133,"line_end":133,"column_start":1,"column_end":75}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":571165,"byte_end":571242,"line_start":134,"line_end":134,"column_start":1,"column_end":78}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":571243,"byte_end":571279,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/ [`Error`]: ../struct.Error.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":571280,"byte_end":571315,"line_start":136,"line_end":136,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3046},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572908,"byte_end":572919,"line_start":176,"line_end":176,"column_start":12,"column_end":23},"name":"SendRequest","qualname":"::client::SendRequest","value":"SendRequest {  }","parent":null,"children":[{"krate":0,"index":3048},{"krate":0,"index":3049}],"decl_id":null,"docs":" Initializes new HTTP/2 streams on a connection by sending a request.","sig":null,"attributes":[{"value":"/ Initializes new HTTP/2 streams on a connection by sending a request.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":571852,"byte_end":571924,"line_start":155,"line_end":155,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":571925,"byte_end":571928,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ This type does no work itself. Instead, it is a handle to the inner","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":571929,"byte_end":572000,"line_start":157,"line_end":157,"column_start":1,"column_end":72}},{"value":"/ connection state held by [`Connection`]. If the associated connection","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572001,"byte_end":572074,"line_start":158,"line_end":158,"column_start":1,"column_end":74}},{"value":"/ instance is dropped, all `SendRequest` functions will return [`Error`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572075,"byte_end":572150,"line_start":159,"line_end":159,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572151,"byte_end":572154,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`] instances are able to move to and operate on separate tasks","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572155,"byte_end":572234,"line_start":161,"line_end":161,"column_start":1,"column_end":80}},{"value":"/ / threads than their associated [`Connection`] instance. Internally, there","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572235,"byte_end":572313,"line_start":162,"line_end":162,"column_start":1,"column_end":79}},{"value":"/ is a buffer used to stage requests before they get written to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572314,"byte_end":572383,"line_start":163,"line_end":163,"column_start":1,"column_end":70}},{"value":"/ connection. There is no guarantee that requests get written to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572384,"byte_end":572454,"line_start":164,"line_end":164,"column_start":1,"column_end":71}},{"value":"/ connection in FIFO order as HTTP/2 prioritization logic can play a role.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572455,"byte_end":572531,"line_start":165,"line_end":165,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572532,"byte_end":572535,"line_start":166,"line_end":166,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`] implements [`Clone`], enabling the creation of many","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572536,"byte_end":572607,"line_start":167,"line_end":167,"column_start":1,"column_end":72}},{"value":"/ instances that are backed by a single connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572608,"byte_end":572661,"line_start":168,"line_end":168,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572662,"byte_end":572665,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ See [module] level documentation for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572666,"byte_end":572720,"line_start":170,"line_end":170,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572721,"byte_end":572724,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572725,"byte_end":572749,"line_start":172,"line_end":172,"column_start":1,"column_end":25}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572750,"byte_end":572792,"line_start":173,"line_end":173,"column_start":1,"column_end":43}},{"value":"/ [`Clone`]: https://doc.rust-lang.org/std/clone/trait.Clone.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572793,"byte_end":572860,"line_start":174,"line_end":174,"column_start":1,"column_end":68}},{"value":"/ [`Error`]: ../struct.Error.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":572861,"byte_end":572896,"line_start":175,"line_end":175,"column_start":1,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":11963},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573130,"byte_end":573146,"line_start":184,"line_end":184,"column_start":12,"column_end":28},"name":"ReadySendRequest","qualname":"::client::ReadySendRequest","value":"ReadySendRequest {  }","parent":null,"children":[{"krate":0,"index":11965}],"decl_id":null,"docs":" Returns a `SendRequest` instance once it is ready to send at least one\n request.\n","sig":null,"attributes":[{"value":"/ Returns a `SendRequest` instance once it is ready to send at least one","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573014,"byte_end":573088,"line_start":181,"line_end":181,"column_start":1,"column_end":75}},{"value":"/ request.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573089,"byte_end":573101,"line_start":182,"line_end":182,"column_start":1,"column_end":13}}]},{"kind":"Struct","id":{"krate":0,"index":3050},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574897,"byte_end":574907,"line_start":232,"line_end":232,"column_start":12,"column_end":22},"name":"Connection","qualname":"::client::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":3053}],"decl_id":null,"docs":" Manages all state associated with an HTTP/2 client connection.","sig":null,"attributes":[{"value":"/ Manages all state associated with an HTTP/2 client connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573195,"byte_end":573261,"line_start":188,"line_end":188,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573262,"byte_end":573265,"line_start":189,"line_end":189,"column_start":1,"column_end":4}},{"value":"/ A `Connection` is backed by an I/O resource (usually a TCP socket) and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573266,"byte_end":573340,"line_start":190,"line_end":190,"column_start":1,"column_end":75}},{"value":"/ implements the HTTP/2 client logic for that connection. It is responsible","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573341,"byte_end":573418,"line_start":191,"line_end":191,"column_start":1,"column_end":78}},{"value":"/ for driving the internal state forward, performing the work requested of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573419,"byte_end":573499,"line_start":192,"line_end":192,"column_start":1,"column_end":81}},{"value":"/ associated handles ([`SendRequest`], [`ResponseFuture`], [`SendStream`],","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573500,"byte_end":573576,"line_start":193,"line_end":193,"column_start":1,"column_end":77}},{"value":"/ [`RecvStream`]).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573577,"byte_end":573597,"line_start":194,"line_end":194,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573598,"byte_end":573601,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ `Connection` values are created by calling [`handshake`]. Once a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573602,"byte_end":573670,"line_start":196,"line_end":196,"column_start":1,"column_end":69}},{"value":"/ `Connection` value is obtained, the caller must repeatedly call [`poll`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573671,"byte_end":573747,"line_start":197,"line_end":197,"column_start":1,"column_end":77}},{"value":"/ until `Ready` is returned. The easiest way to do this is to submit the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573748,"byte_end":573822,"line_start":198,"line_end":198,"column_start":1,"column_end":75}},{"value":"/ `Connection` instance to an [executor].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573823,"byte_end":573866,"line_start":199,"line_end":199,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573867,"byte_end":573870,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573871,"byte_end":573895,"line_start":201,"line_end":201,"column_start":1,"column_end":25}},{"value":"/ [`handshake`]: fn.handshake.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573896,"byte_end":573932,"line_start":202,"line_end":202,"column_start":1,"column_end":37}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573933,"byte_end":573977,"line_start":203,"line_end":203,"column_start":1,"column_end":45}},{"value":"/ [`ResponseFuture`]: struct.ResponseFuture.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":573978,"byte_end":574028,"line_start":204,"line_end":204,"column_start":1,"column_end":51}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574029,"byte_end":574074,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ [`RecvStream`]: ../struct.RecvStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574075,"byte_end":574120,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ [`poll`]: #method.poll","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574121,"byte_end":574147,"line_start":207,"line_end":207,"column_start":1,"column_end":27}},{"value":"/ [executor]: https://docs.rs/futures/0.1/futures/future/trait.Executor.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574148,"byte_end":574226,"line_start":208,"line_end":208,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574227,"byte_end":574230,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574231,"byte_end":574245,"line_start":210,"line_end":210,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574246,"byte_end":574249,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574250,"byte_end":574257,"line_start":212,"line_end":212,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574258,"byte_end":574303,"line_start":213,"line_end":213,"column_start":1,"column_end":46}},{"value":"/ # use h2::client;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574304,"byte_end":574325,"line_start":214,"line_end":214,"column_start":1,"column_end":22}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574326,"byte_end":574350,"line_start":215,"line_end":215,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574351,"byte_end":574356,"line_start":216,"line_end":216,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T>(my_io: T) -> Result<(), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574357,"byte_end":574413,"line_start":217,"line_end":217,"column_start":1,"column_end":57}},{"value":"/ # where T: AsyncRead + AsyncWrite + Send + Unpin + 'static,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574414,"byte_end":574477,"line_start":218,"line_end":218,"column_start":1,"column_end":64}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574478,"byte_end":574485,"line_start":219,"line_end":219,"column_start":1,"column_end":8}},{"value":"/     let (send_request, connection) = client::handshake(my_io).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574486,"byte_end":574559,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/     // Submit the connection handle to an executor.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574560,"byte_end":574615,"line_start":221,"line_end":221,"column_start":1,"column_end":56}},{"value":"/     tokio::spawn(async { connection.await.expect(\"connection failed\"); });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574616,"byte_end":574694,"line_start":222,"line_end":222,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574695,"byte_end":574698,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/     // Now, use `send_request` to initialize HTTP/2 streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574699,"byte_end":574763,"line_start":224,"line_end":224,"column_start":1,"column_end":65}},{"value":"/     // ...","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574764,"byte_end":574778,"line_start":225,"line_end":225,"column_start":1,"column_end":15}},{"value":"/ # Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574779,"byte_end":574791,"line_start":226,"line_end":226,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574792,"byte_end":574799,"line_start":227,"line_end":227,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574800,"byte_end":574805,"line_start":228,"line_end":228,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574806,"byte_end":574828,"line_start":229,"line_end":229,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574829,"byte_end":574836,"line_start":230,"line_end":230,"column_start":1,"column_end":8}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574837,"byte_end":574885,"line_start":231,"line_end":231,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":11969},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575085,"byte_end":575099,"line_start":239,"line_end":239,"column_start":12,"column_end":26},"name":"ResponseFuture","qualname":"::client::ResponseFuture","value":"ResponseFuture {  }","parent":null,"children":[{"krate":0,"index":11970},{"krate":0,"index":11971}],"decl_id":null,"docs":" A future of an HTTP response.\n","sig":null,"attributes":[{"value":"/ A future of an HTTP response.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":574974,"byte_end":575007,"line_start":236,"line_end":236,"column_start":1,"column_end":34}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575025,"byte_end":575073,"line_start":238,"line_end":238,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":11974},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575569,"byte_end":575589,"line_start":252,"line_end":252,"column_start":12,"column_end":32},"name":"PushedResponseFuture","qualname":"::client::PushedResponseFuture","value":"PushedResponseFuture {  }","parent":null,"children":[{"krate":0,"index":11975}],"decl_id":null,"docs":" A future of a pushed HTTP response.","sig":null,"attributes":[{"value":"/ A future of a pushed HTTP response.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575173,"byte_end":575212,"line_start":244,"line_end":244,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575213,"byte_end":575216,"line_start":245,"line_end":245,"column_start":1,"column_end":4}},{"value":"/ We have to differentiate between pushed and non pushed because of the spec","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575217,"byte_end":575295,"line_start":246,"line_end":246,"column_start":1,"column_end":79}},{"value":"/ <https://httpwg.org/specs/rfc7540.html#PUSH_PROMISE>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575296,"byte_end":575352,"line_start":247,"line_end":247,"column_start":1,"column_end":57}},{"value":"/ > PUSH_PROMISE frames MUST only be sent on a peer-initiated stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575353,"byte_end":575423,"line_start":248,"line_end":248,"column_start":1,"column_end":71}},{"value":"/ > that is in either the \"open\" or \"half-closed (remote)\" state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575424,"byte_end":575491,"line_start":249,"line_end":249,"column_start":1,"column_end":68}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575509,"byte_end":575557,"line_start":251,"line_end":251,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":11978},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575706,"byte_end":575717,"line_start":258,"line_end":258,"column_start":12,"column_end":23},"name":"PushPromise","qualname":"::client::PushPromise","value":"PushPromise {  }","parent":null,"children":[{"krate":0,"index":11979},{"krate":0,"index":11980}],"decl_id":null,"docs":" A pushed response and corresponding request headers\n","sig":null,"attributes":[{"value":"/ A pushed response and corresponding request headers","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575622,"byte_end":575677,"line_start":256,"line_end":256,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":11983},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575988,"byte_end":576000,"line_start":269,"line_end":269,"column_start":12,"column_end":24},"name":"PushPromises","qualname":"::client::PushPromises","value":"PushPromises {  }","parent":null,"children":[{"krate":0,"index":11984}],"decl_id":null,"docs":" A stream of pushed responses and corresponding promised requests\n","sig":null,"attributes":[{"value":"/ A stream of pushed responses and corresponding promised requests","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575842,"byte_end":575910,"line_start":266,"line_end":266,"column_start":1,"column_end":69}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":575928,"byte_end":575976,"line_start":268,"line_end":268,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":11987},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":577203,"byte_end":577210,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"Builder","qualname":"::client::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":11988},{"krate":0,"index":11989},{"krate":0,"index":11990},{"krate":0,"index":11991},{"krate":0,"index":11992},{"krate":0,"index":11993},{"krate":0,"index":11994}],"decl_id":null,"docs":" Builds client connections with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds client connections with custom configuration values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576041,"byte_end":576104,"line_start":273,"line_end":273,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576105,"byte_end":576108,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576109,"byte_end":576177,"line_start":275,"line_end":275,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576178,"byte_end":576181,"line_start":276,"line_end":276,"column_start":1,"column_end":4}},{"value":"/ The client is constructed by calling [`handshake`] and passing the I/O","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576182,"byte_end":576256,"line_start":277,"line_end":277,"column_start":1,"column_end":75}},{"value":"/ handle that will back the HTTP/2 server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576257,"byte_end":576301,"line_start":278,"line_end":278,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576302,"byte_end":576305,"line_start":279,"line_end":279,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576306,"byte_end":576371,"line_start":280,"line_end":280,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576372,"byte_end":576375,"line_start":281,"line_end":281,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various client","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576376,"byte_end":576446,"line_start":282,"line_end":282,"column_start":1,"column_end":71}},{"value":"/ configuration settings.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576447,"byte_end":576474,"line_start":283,"line_end":283,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576475,"byte_end":576478,"line_start":284,"line_end":284,"column_start":1,"column_end":4}},{"value":"/ [`Builder::new`]: struct.Builder.html#method.new","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576479,"byte_end":576531,"line_start":285,"line_end":285,"column_start":1,"column_end":53}},{"value":"/ [`handshake`]: struct.Builder.html#method.handshake","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576532,"byte_end":576587,"line_start":286,"line_end":286,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576588,"byte_end":576591,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576592,"byte_end":576606,"line_start":288,"line_end":288,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576607,"byte_end":576610,"line_start":289,"line_end":289,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576611,"byte_end":576618,"line_start":290,"line_end":290,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576619,"byte_end":576664,"line_start":291,"line_end":291,"column_start":1,"column_end":46}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576665,"byte_end":576689,"line_start":292,"line_end":292,"column_start":1,"column_end":25}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576690,"byte_end":576713,"line_start":293,"line_end":293,"column_start":1,"column_end":24}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576714,"byte_end":576719,"line_start":294,"line_end":294,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576720,"byte_end":576783,"line_start":295,"line_end":295,"column_start":1,"column_end":64}},{"value":"/     -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576784,"byte_end":576858,"line_start":296,"line_end":296,"column_start":1,"column_end":75}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576859,"byte_end":576866,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576867,"byte_end":576940,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576941,"byte_end":576958,"line_start":299,"line_end":299,"column_start":1,"column_end":18}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576959,"byte_end":576994,"line_start":300,"line_end":300,"column_start":1,"column_end":36}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":576995,"byte_end":577034,"line_start":301,"line_end":301,"column_start":1,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":577035,"byte_end":577072,"line_start":302,"line_end":302,"column_start":1,"column_end":38}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":577073,"byte_end":577099,"line_start":303,"line_end":303,"column_start":1,"column_end":27}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":577100,"byte_end":577122,"line_start":304,"line_end":304,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":577123,"byte_end":577130,"line_start":305,"line_end":305,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":577131,"byte_end":577136,"line_start":306,"line_end":306,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":577137,"byte_end":577159,"line_start":307,"line_end":307,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":577160,"byte_end":577167,"line_start":308,"line_end":308,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578671,"byte_end":578681,"line_start":356,"line_end":356,"column_start":12,"column_end":22},"name":"poll_ready","qualname":"<SendRequest<B>>::poll_ready","value":"fn poll_ready(&mut Self, &mut Context) -> Poll<Result<(), crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ready` when the connection can initialize a new HTTP/2\n stream.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the connection can initialize a new HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578288,"byte_end":578355,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578360,"byte_end":578371,"line_start":347,"line_end":347,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578376,"byte_end":578379,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ This function must return `Ready` before `send_request` is called. When","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578384,"byte_end":578459,"line_start":349,"line_end":349,"column_start":5,"column_end":80}},{"value":"/ `Poll::Pending` is returned, the task will be notified once the readiness","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578464,"byte_end":578541,"line_start":350,"line_end":350,"column_start":5,"column_end":82}},{"value":"/ state changes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578546,"byte_end":578564,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578569,"byte_end":578572,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578577,"byte_end":578622,"line_start":353,"line_end":353,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578627,"byte_end":578630,"line_start":354,"line_end":354,"column_start":5,"column_end":8}},{"value":"/ [module]: index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578635,"byte_end":578659,"line_start":355,"line_end":355,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579846,"byte_end":579851,"line_start":390,"line_end":390,"column_start":12,"column_end":17},"name":"ready","qualname":"<SendRequest<B>>::ready","value":"fn ready(Self) -> ReadySendRequest<B>","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning a future that returns `self` back once it is\n ready to send a request.","sig":null,"attributes":[{"value":"/ Consumes `self`, returning a future that returns `self` back once it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578889,"byte_end":578964,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ ready to send a request.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578969,"byte_end":578997,"line_start":363,"line_end":363,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579002,"byte_end":579005,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This function should be called before calling `send_request`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579010,"byte_end":579075,"line_start":365,"line_end":365,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579080,"byte_end":579083,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ This is a functional combinator for [`poll_ready`]. The returned future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579088,"byte_end":579163,"line_start":367,"line_end":367,"column_start":5,"column_end":80}},{"value":"/ will call `SendStream::poll_ready` until `Ready`, then returns `self` to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579168,"byte_end":579244,"line_start":368,"line_end":368,"column_start":5,"column_end":81}},{"value":"/ the caller.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579249,"byte_end":579264,"line_start":369,"line_end":369,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579269,"byte_end":579272,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579277,"byte_end":579291,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579296,"byte_end":579299,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579304,"byte_end":579315,"line_start":373,"line_end":373,"column_start":5,"column_end":16}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579320,"byte_end":579344,"line_start":374,"line_end":374,"column_start":5,"column_end":29}},{"value":"/ # use http::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579349,"byte_end":579367,"line_start":375,"line_end":375,"column_start":5,"column_end":23}},{"value":"/ # async fn doc(send_request: SendRequest<&'static [u8]>)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579372,"byte_end":579432,"line_start":376,"line_end":376,"column_start":5,"column_end":65}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579437,"byte_end":579444,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ // First, wait until the `send_request` handle is ready to send a new","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579449,"byte_end":579522,"line_start":378,"line_end":378,"column_start":5,"column_end":78}},{"value":"/ // request","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579527,"byte_end":579541,"line_start":379,"line_end":379,"column_start":5,"column_end":19}},{"value":"/ let mut send_request = send_request.ready().await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579546,"byte_end":579609,"line_start":380,"line_end":380,"column_start":5,"column_end":68}},{"value":"/ // Use `send_request` here.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579614,"byte_end":579645,"line_start":381,"line_end":381,"column_start":5,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579650,"byte_end":579657,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579662,"byte_end":579684,"line_start":383,"line_end":383,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579689,"byte_end":579696,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579701,"byte_end":579704,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579709,"byte_end":579754,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579759,"byte_end":579762,"line_start":387,"line_end":387,"column_start":5,"column_end":8}},{"value":"/ [`poll_ready`]: #method.poll_ready","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579767,"byte_end":579805,"line_start":388,"line_end":388,"column_start":5,"column_end":43}},{"value":"/ [module]: index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579810,"byte_end":579834,"line_start":389,"line_end":389,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3058},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584550,"byte_end":584562,"line_start":501,"line_end":501,"column_start":12,"column_end":24},"name":"send_request","qualname":"<SendRequest<B>>::send_request","value":"fn send_request(&mut Self, Request<()>, bool)\n-> Result<(ResponseFuture, SendStream<B>), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a HTTP/2 request to the server.","sig":null,"attributes":[{"value":"/ Sends a HTTP/2 request to the server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579941,"byte_end":579982,"line_start":394,"line_end":394,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579987,"byte_end":579990,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ `send_request` initializes a new HTTP/2 stream on the associated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":579995,"byte_end":580063,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/ connection, then sends the given request using this new stream. Only the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580068,"byte_end":580144,"line_start":397,"line_end":397,"column_start":5,"column_end":81}},{"value":"/ request head is sent.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580149,"byte_end":580174,"line_start":398,"line_end":398,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580179,"byte_end":580182,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ On success, a [`ResponseFuture`] instance and [`SendStream`] instance","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580187,"byte_end":580260,"line_start":400,"line_end":400,"column_start":5,"column_end":78}},{"value":"/ are returned. The [`ResponseFuture`] instance is used to get the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580265,"byte_end":580333,"line_start":401,"line_end":401,"column_start":5,"column_end":73}},{"value":"/ server's response and the [`SendStream`] instance is used to send a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580338,"byte_end":580409,"line_start":402,"line_end":402,"column_start":5,"column_end":76}},{"value":"/ request body or trailers to the server over the same HTTP/2 stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580414,"byte_end":580485,"line_start":403,"line_end":403,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580490,"byte_end":580493,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ To send a request body or trailers, set `end_of_stream` to `false`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580498,"byte_end":580569,"line_start":405,"line_end":405,"column_start":5,"column_end":76}},{"value":"/ Then, use the returned [`SendStream`] instance to stream request body","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580574,"byte_end":580647,"line_start":406,"line_end":406,"column_start":5,"column_end":78}},{"value":"/ chunks or send trailers. If `end_of_stream` is **not** set to `false`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580652,"byte_end":580725,"line_start":407,"line_end":407,"column_start":5,"column_end":78}},{"value":"/ then attempting to call [`SendStream::send_data`] or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580730,"byte_end":580786,"line_start":408,"line_end":408,"column_start":5,"column_end":61}},{"value":"/ [`SendStream::send_trailers`] will result in an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580791,"byte_end":580849,"line_start":409,"line_end":409,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580854,"byte_end":580857,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ If no request body or trailers are to be sent, set `end_of_stream` to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580862,"byte_end":580935,"line_start":411,"line_end":411,"column_start":5,"column_end":78}},{"value":"/ `true` and drop the returned [`SendStream`] instance.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":580940,"byte_end":580997,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581002,"byte_end":581005,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ # A note on HTTP versions","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581010,"byte_end":581039,"line_start":414,"line_end":414,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581044,"byte_end":581047,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The provided `Request` will be encoded differently depending on the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581052,"byte_end":581123,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ value of its version field. If the version is set to 2.0, then the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581128,"byte_end":581198,"line_start":417,"line_end":417,"column_start":5,"column_end":75}},{"value":"/ request is encoded as per the specification recommends.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581203,"byte_end":581262,"line_start":418,"line_end":418,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581267,"byte_end":581270,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ If the version is set to a lower value, then the request is encoded to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581275,"byte_end":581349,"line_start":420,"line_end":420,"column_start":5,"column_end":79}},{"value":"/ preserve the characteristics of HTTP 1.1 and lower. Specifically, host","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581354,"byte_end":581428,"line_start":421,"line_end":421,"column_start":5,"column_end":79}},{"value":"/ headers are permitted and the `:authority` pseudo header is not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581433,"byte_end":581500,"line_start":422,"line_end":422,"column_start":5,"column_end":72}},{"value":"/ included.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581505,"byte_end":581518,"line_start":423,"line_end":423,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581523,"byte_end":581526,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ The caller should always set the request's version field to 2.0 unless","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581531,"byte_end":581605,"line_start":425,"line_end":425,"column_start":5,"column_end":79}},{"value":"/ specifically transmitting an HTTP 1.1 request over 2.0.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581610,"byte_end":581669,"line_start":426,"line_end":426,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581674,"byte_end":581677,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581682,"byte_end":581696,"line_start":428,"line_end":428,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581701,"byte_end":581704,"line_start":429,"line_end":429,"column_start":5,"column_end":8}},{"value":"/ Sending a request with no body","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581709,"byte_end":581743,"line_start":430,"line_end":430,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581748,"byte_end":581751,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581756,"byte_end":581767,"line_start":432,"line_end":432,"column_start":5,"column_end":16}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581772,"byte_end":581796,"line_start":433,"line_end":433,"column_start":5,"column_end":29}},{"value":"/ # use http::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581801,"byte_end":581819,"line_start":434,"line_end":434,"column_start":5,"column_end":23}},{"value":"/ # async fn doc(send_request: SendRequest<&'static [u8]>)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581824,"byte_end":581884,"line_start":435,"line_end":435,"column_start":5,"column_end":65}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581889,"byte_end":581896,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ // First, wait until the `send_request` handle is ready to send a new","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581901,"byte_end":581974,"line_start":437,"line_end":437,"column_start":5,"column_end":78}},{"value":"/ // request","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581979,"byte_end":581993,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ let mut send_request = send_request.ready().await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":581998,"byte_end":582061,"line_start":439,"line_end":439,"column_start":5,"column_end":68}},{"value":"/ // Prepare the HTTP request to send to the server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582066,"byte_end":582120,"line_start":440,"line_end":440,"column_start":5,"column_end":59}},{"value":"/ let request = Request::get(\"https://www.example.com/\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582125,"byte_end":582183,"line_start":441,"line_end":441,"column_start":5,"column_end":63}},{"value":"/     .body(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582188,"byte_end":582205,"line_start":442,"line_end":442,"column_start":5,"column_end":22}},{"value":"/     .unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582210,"byte_end":582228,"line_start":443,"line_end":443,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582233,"byte_end":582236,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ // Send the request to the server. Since we are not sending a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582241,"byte_end":582306,"line_start":445,"line_end":445,"column_start":5,"column_end":70}},{"value":"/ // body or trailers, we can drop the `SendStream` instance.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582311,"byte_end":582374,"line_start":446,"line_end":446,"column_start":5,"column_end":68}},{"value":"/ let (response, _) = send_request.send_request(request, true).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582379,"byte_end":582453,"line_start":447,"line_end":447,"column_start":5,"column_end":79}},{"value":"/ let response = response.await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582458,"byte_end":582501,"line_start":448,"line_end":448,"column_start":5,"column_end":48}},{"value":"/ // Process the response","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582506,"byte_end":582533,"line_start":449,"line_end":449,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582538,"byte_end":582545,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582550,"byte_end":582572,"line_start":451,"line_end":451,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582577,"byte_end":582584,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582589,"byte_end":582592,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ Sending a request with a body and trailers","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582597,"byte_end":582643,"line_start":454,"line_end":454,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582648,"byte_end":582651,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582656,"byte_end":582667,"line_start":456,"line_end":456,"column_start":5,"column_end":16}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582672,"byte_end":582696,"line_start":457,"line_end":457,"column_start":5,"column_end":29}},{"value":"/ # use http::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582701,"byte_end":582719,"line_start":458,"line_end":458,"column_start":5,"column_end":23}},{"value":"/ # async fn doc(send_request: SendRequest<&'static [u8]>)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582724,"byte_end":582784,"line_start":459,"line_end":459,"column_start":5,"column_end":65}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582789,"byte_end":582796,"line_start":460,"line_end":460,"column_start":5,"column_end":12}},{"value":"/ // First, wait until the `send_request` handle is ready to send a new","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582801,"byte_end":582874,"line_start":461,"line_end":461,"column_start":5,"column_end":78}},{"value":"/ // request","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582879,"byte_end":582893,"line_start":462,"line_end":462,"column_start":5,"column_end":19}},{"value":"/ let mut send_request = send_request.ready().await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582898,"byte_end":582961,"line_start":463,"line_end":463,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582966,"byte_end":582969,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ // Prepare the HTTP request to send to the server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":582974,"byte_end":583028,"line_start":465,"line_end":465,"column_start":5,"column_end":59}},{"value":"/ let request = Request::get(\"https://www.example.com/\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583033,"byte_end":583091,"line_start":466,"line_end":466,"column_start":5,"column_end":63}},{"value":"/     .body(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583096,"byte_end":583113,"line_start":467,"line_end":467,"column_start":5,"column_end":22}},{"value":"/     .unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583118,"byte_end":583136,"line_start":468,"line_end":468,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583141,"byte_end":583144,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ // Send the request to the server. If we are not sending a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583149,"byte_end":583211,"line_start":470,"line_end":470,"column_start":5,"column_end":67}},{"value":"/ // body or trailers, we can drop the `SendStream` instance.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583216,"byte_end":583279,"line_start":471,"line_end":471,"column_start":5,"column_end":68}},{"value":"/ let (response, mut send_stream) = send_request","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583284,"byte_end":583334,"line_start":472,"line_end":472,"column_start":5,"column_end":55}},{"value":"/     .send_request(request, false).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583339,"byte_end":583386,"line_start":473,"line_end":473,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583391,"byte_end":583394,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ // At this point, one option would be to wait for send capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583399,"byte_end":583467,"line_start":475,"line_end":475,"column_start":5,"column_end":73}},{"value":"/ // Doing so would allow us to not hold data in memory that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583472,"byte_end":583534,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/ // cannot be sent. However, this is not a requirement, so this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583539,"byte_end":583605,"line_start":477,"line_end":477,"column_start":5,"column_end":71}},{"value":"/ // example will skip that step. See `SendStream` documentation","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583610,"byte_end":583676,"line_start":478,"line_end":478,"column_start":5,"column_end":71}},{"value":"/ // for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583681,"byte_end":583705,"line_start":479,"line_end":479,"column_start":5,"column_end":29}},{"value":"/ send_stream.send_data(b\"hello\", false).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583710,"byte_end":583762,"line_start":480,"line_end":480,"column_start":5,"column_end":57}},{"value":"/ send_stream.send_data(b\"world\", false).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583767,"byte_end":583819,"line_start":481,"line_end":481,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583824,"byte_end":583827,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ // Send the trailers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583832,"byte_end":583857,"line_start":483,"line_end":483,"column_start":5,"column_end":30}},{"value":"/ let mut trailers = HeaderMap::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583862,"byte_end":583902,"line_start":484,"line_end":484,"column_start":5,"column_end":45}},{"value":"/ trailers.insert(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583907,"byte_end":583927,"line_start":485,"line_end":485,"column_start":5,"column_end":25}},{"value":"/     header::HeaderName::from_bytes(b\"my-trailer\").unwrap(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":583932,"byte_end":583995,"line_start":486,"line_end":486,"column_start":5,"column_end":68}},{"value":"/     header::HeaderValue::from_bytes(b\"hello\").unwrap());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584000,"byte_end":584060,"line_start":487,"line_end":487,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584065,"byte_end":584068,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ send_stream.send_trailers(trailers).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584073,"byte_end":584122,"line_start":489,"line_end":489,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584127,"byte_end":584130,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ let response = response.await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584135,"byte_end":584178,"line_start":491,"line_end":491,"column_start":5,"column_end":48}},{"value":"/ // Process the response","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584183,"byte_end":584210,"line_start":492,"line_end":492,"column_start":5,"column_end":32}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584215,"byte_end":584222,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584227,"byte_end":584249,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584254,"byte_end":584261,"line_start":495,"line_end":495,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584266,"byte_end":584269,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ [`ResponseFuture`]: struct.ResponseFuture.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584274,"byte_end":584324,"line_start":497,"line_end":497,"column_start":5,"column_end":55}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584329,"byte_end":584374,"line_start":498,"line_end":498,"column_start":5,"column_end":50}},{"value":"/ [`SendStream::send_data`]: ../struct.SendStream.html#method.send_data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584379,"byte_end":584452,"line_start":499,"line_end":499,"column_start":5,"column_end":78}},{"value":"/ [`SendStream::send_trailers`]: ../struct.SendStream.html#method.send_trailers","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":584457,"byte_end":584538,"line_start":500,"line_end":500,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":3060},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585763,"byte_end":585799,"line_start":534,"line_end":534,"column_start":12,"column_end":48},"name":"is_extended_connect_protocol_enabled","qualname":"<SendRequest<B>>::is_extended_connect_protocol_enabled","value":"fn is_extended_connect_protocol_enabled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the [extended CONNECT protocol][1] is enabled or not.","sig":null,"attributes":[{"value":"/ Returns whether the [extended CONNECT protocol][1] is enabled or not.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585279,"byte_end":585352,"line_start":525,"line_end":525,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585357,"byte_end":585360,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ This setting is configured by the server peer by sending the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585365,"byte_end":585429,"line_start":527,"line_end":527,"column_start":5,"column_end":69}},{"value":"/ [`SETTINGS_ENABLE_CONNECT_PROTOCOL` parameter][2] in a `SETTINGS` frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585434,"byte_end":585510,"line_start":528,"line_end":528,"column_start":5,"column_end":81}},{"value":"/ This method returns the currently acknowledged value received from the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585515,"byte_end":585589,"line_start":529,"line_end":529,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585594,"byte_end":585605,"line_start":530,"line_end":530,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585610,"byte_end":585613,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ [1]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585618,"byte_end":585682,"line_start":532,"line_end":532,"column_start":5,"column_end":69}},{"value":"/ [2]: https://datatracker.ietf.org/doc/html/rfc8441#section-3","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585687,"byte_end":585751,"line_start":533,"line_end":533,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585949,"byte_end":585952,"line_start":543,"line_end":543,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendRequest<B> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":586121,"byte_end":586126,"line_start":552,"line_end":552,"column_start":8,"column_end":13},"name":"clone","qualname":"<SendRequest<B> as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587111,"byte_end":587115,"line_start":591,"line_end":591,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReadySendRequest<B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588360,"byte_end":588363,"line_start":632,"line_end":632,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new client builder instance initialized with default\n configuration values.","sig":null,"attributes":[{"value":"/ Returns a new client builder instance initialized with default","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587512,"byte_end":587578,"line_start":606,"line_end":606,"column_start":5,"column_end":71}},{"value":"/ configuration values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587583,"byte_end":587608,"line_start":607,"line_end":607,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587613,"byte_end":587616,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587621,"byte_end":587682,"line_start":609,"line_end":609,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587687,"byte_end":587690,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587695,"byte_end":587709,"line_start":611,"line_end":611,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587714,"byte_end":587717,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587722,"byte_end":587729,"line_start":613,"line_end":613,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587734,"byte_end":587779,"line_start":614,"line_end":614,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587784,"byte_end":587808,"line_start":615,"line_end":615,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587813,"byte_end":587836,"line_start":616,"line_end":616,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587841,"byte_end":587846,"line_start":617,"line_end":617,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587851,"byte_end":587914,"line_start":618,"line_end":618,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587919,"byte_end":587991,"line_start":619,"line_end":619,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587996,"byte_end":588003,"line_start":620,"line_end":620,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588008,"byte_end":588081,"line_start":621,"line_end":621,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588086,"byte_end":588103,"line_start":622,"line_end":622,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588108,"byte_end":588143,"line_start":623,"line_end":623,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588148,"byte_end":588187,"line_start":624,"line_end":624,"column_start":5,"column_end":44}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588192,"byte_end":588229,"line_start":625,"line_end":625,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588234,"byte_end":588260,"line_start":626,"line_end":626,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588265,"byte_end":588287,"line_start":627,"line_end":627,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588292,"byte_end":588299,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588304,"byte_end":588309,"line_start":629,"line_end":629,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588314,"byte_end":588336,"line_start":630,"line_end":630,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588341,"byte_end":588348,"line_start":631,"line_end":631,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589798,"byte_end":589817,"line_start":674,"line_end":674,"column_start":12,"column_end":31},"name":"initial_window_size","qualname":"<Builder>::initial_window_size","value":"fn initial_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for stream-level","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588824,"byte_end":588890,"line_start":644,"line_end":644,"column_start":5,"column_end":71}},{"value":"/ flow control for received data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588895,"byte_end":588930,"line_start":645,"line_end":645,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588935,"byte_end":588938,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The initial window of a stream is used as part of flow control. For more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":588943,"byte_end":589019,"line_start":647,"line_end":647,"column_start":5,"column_end":81}},{"value":"/ details, see [`FlowControl`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589024,"byte_end":589057,"line_start":648,"line_end":648,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589062,"byte_end":589065,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589070,"byte_end":589102,"line_start":650,"line_end":650,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589107,"byte_end":589110,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589115,"byte_end":589162,"line_start":652,"line_end":652,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589167,"byte_end":589170,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589175,"byte_end":589189,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589194,"byte_end":589197,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589202,"byte_end":589209,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589214,"byte_end":589259,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589264,"byte_end":589288,"line_start":658,"line_end":658,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589293,"byte_end":589316,"line_start":659,"line_end":659,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589321,"byte_end":589326,"line_start":660,"line_end":660,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589331,"byte_end":589394,"line_start":661,"line_end":661,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589399,"byte_end":589471,"line_start":662,"line_end":662,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589476,"byte_end":589483,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589488,"byte_end":589561,"line_start":664,"line_end":664,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589566,"byte_end":589583,"line_start":665,"line_end":665,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589588,"byte_end":589623,"line_start":666,"line_end":666,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589628,"byte_end":589667,"line_start":667,"line_end":667,"column_start":5,"column_end":44}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589672,"byte_end":589698,"line_start":668,"line_end":668,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589703,"byte_end":589725,"line_start":669,"line_end":669,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589730,"byte_end":589737,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589742,"byte_end":589747,"line_start":671,"line_end":671,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589752,"byte_end":589774,"line_start":672,"line_end":672,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589779,"byte_end":589786,"line_start":673,"line_end":673,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590931,"byte_end":590961,"line_start":709,"line_end":709,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Builder>::initial_connection_window_size","value":"fn initial_connection_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for connection-level flow control\n for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for connection-level flow control","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":589938,"byte_end":590021,"line_start":679,"line_end":679,"column_start":5,"column_end":88}},{"value":"/ for received data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590026,"byte_end":590048,"line_start":680,"line_end":680,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590053,"byte_end":590056,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ The initial window of a connection is used as part of flow control. For more details,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590061,"byte_end":590150,"line_start":682,"line_end":682,"column_start":5,"column_end":94}},{"value":"/ see [`FlowControl`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590155,"byte_end":590179,"line_start":683,"line_end":683,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590184,"byte_end":590187,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590192,"byte_end":590224,"line_start":685,"line_end":685,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590229,"byte_end":590232,"line_start":686,"line_end":686,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590237,"byte_end":590284,"line_start":687,"line_end":687,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590289,"byte_end":590292,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590297,"byte_end":590311,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590316,"byte_end":590319,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590324,"byte_end":590331,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590336,"byte_end":590381,"line_start":692,"line_end":692,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590386,"byte_end":590410,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590415,"byte_end":590438,"line_start":694,"line_end":694,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590443,"byte_end":590448,"line_start":695,"line_end":695,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590453,"byte_end":590516,"line_start":696,"line_end":696,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590521,"byte_end":590593,"line_start":697,"line_end":697,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590598,"byte_end":590605,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590610,"byte_end":590683,"line_start":699,"line_end":699,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590688,"byte_end":590705,"line_start":700,"line_end":700,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590710,"byte_end":590745,"line_start":701,"line_end":701,"column_start":5,"column_end":40}},{"value":"/     .initial_connection_window_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590750,"byte_end":590800,"line_start":702,"line_end":702,"column_start":5,"column_end":55}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590805,"byte_end":590831,"line_start":703,"line_end":703,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590836,"byte_end":590858,"line_start":704,"line_end":704,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590863,"byte_end":590870,"line_start":705,"line_end":705,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590875,"byte_end":590880,"line_start":706,"line_end":706,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590885,"byte_end":590907,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":590912,"byte_end":590919,"line_start":708,"line_end":708,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592247,"byte_end":592261,"line_start":748,"line_end":748,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Builder>::max_frame_size","value":"fn max_frame_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the size (in octets) of the largest HTTP/2 frame payload that the\n configured client is able to accept.","sig":null,"attributes":[{"value":"/ Indicates the size (in octets) of the largest HTTP/2 frame payload that the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591088,"byte_end":591167,"line_start":714,"line_end":714,"column_start":5,"column_end":84}},{"value":"/ configured client is able to accept.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591172,"byte_end":591212,"line_start":715,"line_end":715,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591217,"byte_end":591220,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ The sender may send data frames that are **smaller** than this value,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591225,"byte_end":591298,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ but any data larger than `max` will be broken up into multiple `DATA`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591303,"byte_end":591376,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591381,"byte_end":591392,"line_start":719,"line_end":719,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591397,"byte_end":591400,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ The value **must** be between 16,384 and 16,777,215. The default value is 16,384.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591405,"byte_end":591490,"line_start":721,"line_end":721,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591495,"byte_end":591498,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591503,"byte_end":591517,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591522,"byte_end":591525,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591530,"byte_end":591537,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591542,"byte_end":591587,"line_start":726,"line_end":726,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591592,"byte_end":591616,"line_start":727,"line_end":727,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591621,"byte_end":591644,"line_start":728,"line_end":728,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591649,"byte_end":591654,"line_start":729,"line_end":729,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591659,"byte_end":591722,"line_start":730,"line_end":730,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591727,"byte_end":591799,"line_start":731,"line_end":731,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591804,"byte_end":591811,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591816,"byte_end":591889,"line_start":733,"line_end":733,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591894,"byte_end":591911,"line_start":734,"line_end":734,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591916,"byte_end":591951,"line_start":735,"line_end":735,"column_start":5,"column_end":40}},{"value":"/     .max_frame_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591956,"byte_end":591990,"line_start":736,"line_end":736,"column_start":5,"column_end":39}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":591995,"byte_end":592021,"line_start":737,"line_end":737,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592026,"byte_end":592048,"line_start":738,"line_end":738,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592053,"byte_end":592060,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592065,"byte_end":592070,"line_start":740,"line_end":740,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592075,"byte_end":592097,"line_start":741,"line_end":741,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592102,"byte_end":592109,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592114,"byte_end":592117,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592122,"byte_end":592134,"line_start":744,"line_end":744,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592139,"byte_end":592142,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is not within the legal range specified","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592147,"byte_end":592220,"line_start":746,"line_end":746,"column_start":5,"column_end":78}},{"value":"/ above.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592225,"byte_end":592235,"line_start":747,"line_end":747,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593519,"byte_end":593539,"line_start":783,"line_end":783,"column_start":12,"column_end":32},"name":"max_header_list_size","qualname":"<Builder>::max_header_list_size","value":"fn max_header_list_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max size of received header frames.","sig":null,"attributes":[{"value":"/ Sets the max size of received header frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592375,"byte_end":592423,"line_start":753,"line_end":753,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592428,"byte_end":592431,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ This advisory setting informs a peer of the maximum size of header list","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592436,"byte_end":592511,"line_start":755,"line_end":755,"column_start":5,"column_end":80}},{"value":"/ that the sender is prepared to accept, in octets. The value is based on","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592516,"byte_end":592591,"line_start":756,"line_end":756,"column_start":5,"column_end":80}},{"value":"/ the uncompressed size of header fields, including the length of the name","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592596,"byte_end":592672,"line_start":757,"line_end":757,"column_start":5,"column_end":81}},{"value":"/ and value in octets plus an overhead of 32 octets for each header field.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592677,"byte_end":592753,"line_start":758,"line_end":758,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592758,"byte_end":592761,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ This setting is also used to limit the maximum amount of data that is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592766,"byte_end":592839,"line_start":760,"line_end":760,"column_start":5,"column_end":78}},{"value":"/ buffered to decode HEADERS frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592844,"byte_end":592882,"line_start":761,"line_end":761,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592887,"byte_end":592890,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592895,"byte_end":592909,"line_start":763,"line_end":763,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592914,"byte_end":592917,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592922,"byte_end":592929,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592934,"byte_end":592979,"line_start":766,"line_end":766,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":592984,"byte_end":593008,"line_start":767,"line_end":767,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593013,"byte_end":593036,"line_start":768,"line_end":768,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593041,"byte_end":593046,"line_start":769,"line_end":769,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593051,"byte_end":593114,"line_start":770,"line_end":770,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593119,"byte_end":593191,"line_start":771,"line_end":771,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593196,"byte_end":593203,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593208,"byte_end":593281,"line_start":773,"line_end":773,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593286,"byte_end":593303,"line_start":774,"line_end":774,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593308,"byte_end":593343,"line_start":775,"line_end":775,"column_start":5,"column_end":40}},{"value":"/     .max_header_list_size(16 * 1024)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593348,"byte_end":593388,"line_start":776,"line_end":776,"column_start":5,"column_end":45}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593393,"byte_end":593419,"line_start":777,"line_end":777,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593424,"byte_end":593446,"line_start":778,"line_end":778,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593451,"byte_end":593458,"line_start":779,"line_end":779,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593463,"byte_end":593468,"line_start":780,"line_end":780,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593473,"byte_end":593495,"line_start":781,"line_end":781,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593500,"byte_end":593507,"line_start":782,"line_end":782,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3077},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595446,"byte_end":595468,"line_start":832,"line_end":832,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Builder>::max_concurrent_streams","value":"fn max_concurrent_streams(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593659,"byte_end":593709,"line_start":788,"line_end":788,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593714,"byte_end":593717,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ The maximum concurrent streams setting only controls the maximum number","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593722,"byte_end":593797,"line_start":790,"line_end":790,"column_start":5,"column_end":80}},{"value":"/ of streams that can be initiated by the remote peer. In other words,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593802,"byte_end":593874,"line_start":791,"line_end":791,"column_start":5,"column_end":77}},{"value":"/ when this setting is set to 100, this does not limit the number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593879,"byte_end":593949,"line_start":792,"line_end":792,"column_start":5,"column_end":75}},{"value":"/ concurrent streams that can be created by the caller.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":593954,"byte_end":594011,"line_start":793,"line_end":793,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594016,"byte_end":594019,"line_start":794,"line_end":794,"column_start":5,"column_end":8}},{"value":"/ It is recommended that this value be no smaller than 100, so as to not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594024,"byte_end":594098,"line_start":795,"line_end":795,"column_start":5,"column_end":79}},{"value":"/ unnecessarily limit parallelism. However, any value is legal, including","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594103,"byte_end":594178,"line_start":796,"line_end":796,"column_start":5,"column_end":80}},{"value":"/ 0. If `max` is set to 0, then the remote will not be permitted to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594183,"byte_end":594252,"line_start":797,"line_end":797,"column_start":5,"column_end":74}},{"value":"/ initiate streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594257,"byte_end":594278,"line_start":798,"line_end":798,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594283,"byte_end":594286,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Note that streams in the reserved state, i.e., push promises that have","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594291,"byte_end":594365,"line_start":800,"line_end":800,"column_start":5,"column_end":79}},{"value":"/ been reserved but the stream has not started, do not count against this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594370,"byte_end":594445,"line_start":801,"line_end":801,"column_start":5,"column_end":80}},{"value":"/ setting.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594450,"byte_end":594462,"line_start":802,"line_end":802,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594467,"byte_end":594470,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ Also note that if the remote *does* exceed the value set here, it is not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594475,"byte_end":594551,"line_start":804,"line_end":804,"column_start":5,"column_end":81}},{"value":"/ a protocol level error. Instead, the `h2` library will immediately reset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594556,"byte_end":594632,"line_start":805,"line_end":805,"column_start":5,"column_end":81}},{"value":"/ the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594637,"byte_end":594652,"line_start":806,"line_end":806,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594657,"byte_end":594660,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ See [Section 5.1.2] in the HTTP/2 spec for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594665,"byte_end":594725,"line_start":808,"line_end":808,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594730,"byte_end":594733,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ [Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594738,"byte_end":594812,"line_start":810,"line_end":810,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594817,"byte_end":594820,"line_start":811,"line_end":811,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594825,"byte_end":594839,"line_start":812,"line_end":812,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594844,"byte_end":594847,"line_start":813,"line_end":813,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594852,"byte_end":594859,"line_start":814,"line_end":814,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594864,"byte_end":594909,"line_start":815,"line_end":815,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594914,"byte_end":594938,"line_start":816,"line_end":816,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594943,"byte_end":594966,"line_start":817,"line_end":817,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594971,"byte_end":594976,"line_start":818,"line_end":818,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":594981,"byte_end":595044,"line_start":819,"line_end":819,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595049,"byte_end":595121,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595126,"byte_end":595133,"line_start":821,"line_end":821,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595138,"byte_end":595211,"line_start":822,"line_end":822,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595216,"byte_end":595233,"line_start":823,"line_end":823,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595238,"byte_end":595273,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595278,"byte_end":595315,"line_start":825,"line_end":825,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595320,"byte_end":595346,"line_start":826,"line_end":826,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595351,"byte_end":595373,"line_start":827,"line_end":827,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595378,"byte_end":595385,"line_start":828,"line_end":828,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595390,"byte_end":595395,"line_start":829,"line_end":829,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595400,"byte_end":595422,"line_start":830,"line_end":830,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595427,"byte_end":595434,"line_start":831,"line_end":831,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596951,"byte_end":596975,"line_start":873,"line_end":873,"column_start":12,"column_end":36},"name":"initial_max_send_streams","qualname":"<Builder>::initial_max_send_streams","value":"fn initial_max_send_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the initial maximum of locally initiated (send) streams.","sig":null,"attributes":[{"value":"/ Sets the initial maximum of locally initiated (send) streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595590,"byte_end":595655,"line_start":837,"line_end":837,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595660,"byte_end":595663,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ The initial settings will be overwritten by the remote peer when","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595668,"byte_end":595736,"line_start":839,"line_end":839,"column_start":5,"column_end":73}},{"value":"/ the Settings frame is received. The new value will be set to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595741,"byte_end":595809,"line_start":840,"line_end":840,"column_start":5,"column_end":73}},{"value":"/ `max_concurrent_streams()` from the frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595814,"byte_end":595860,"line_start":841,"line_end":841,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595865,"byte_end":595868,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ This setting prevents the caller from exceeding this number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595873,"byte_end":595939,"line_start":843,"line_end":843,"column_start":5,"column_end":71}},{"value":"/ streams that are counted towards the concurrency limit.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":595944,"byte_end":596003,"line_start":844,"line_end":844,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596008,"byte_end":596011,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Sending streams past the limit returned by the peer will be treated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596016,"byte_end":596087,"line_start":846,"line_end":846,"column_start":5,"column_end":76}},{"value":"/ as a stream error of type PROTOCOL_ERROR or REFUSED_STREAM.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596092,"byte_end":596155,"line_start":847,"line_end":847,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596160,"byte_end":596163,"line_start":848,"line_end":848,"column_start":5,"column_end":8}},{"value":"/ See [Section 5.1.2] in the HTTP/2 spec for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596168,"byte_end":596228,"line_start":849,"line_end":849,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596233,"byte_end":596236,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ [Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596241,"byte_end":596315,"line_start":851,"line_end":851,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596320,"byte_end":596323,"line_start":852,"line_end":852,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596328,"byte_end":596342,"line_start":853,"line_end":853,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596347,"byte_end":596350,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596355,"byte_end":596362,"line_start":855,"line_end":855,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596367,"byte_end":596412,"line_start":856,"line_end":856,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596417,"byte_end":596441,"line_start":857,"line_end":857,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596446,"byte_end":596469,"line_start":858,"line_end":858,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596474,"byte_end":596479,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596484,"byte_end":596547,"line_start":860,"line_end":860,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596552,"byte_end":596624,"line_start":861,"line_end":861,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596629,"byte_end":596636,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596641,"byte_end":596714,"line_start":863,"line_end":863,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596719,"byte_end":596736,"line_start":864,"line_end":864,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596741,"byte_end":596776,"line_start":865,"line_end":865,"column_start":5,"column_end":40}},{"value":"/     .initial_max_send_streams(1000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596781,"byte_end":596820,"line_start":866,"line_end":866,"column_start":5,"column_end":44}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596825,"byte_end":596851,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596856,"byte_end":596878,"line_start":868,"line_end":868,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596883,"byte_end":596890,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596895,"byte_end":596900,"line_start":870,"line_end":870,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596905,"byte_end":596927,"line_start":871,"line_end":871,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":596932,"byte_end":596939,"line_start":872,"line_end":872,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598673,"byte_end":598701,"line_start":918,"line_end":918,"column_start":12,"column_end":40},"name":"max_concurrent_reset_streams","qualname":"<Builder>::max_concurrent_reset_streams","value":"fn max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent locally reset streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597091,"byte_end":597155,"line_start":878,"line_end":878,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597160,"byte_end":597163,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset, the HTTP/2 specification requires","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597168,"byte_end":597240,"line_start":880,"line_end":880,"column_start":5,"column_end":77}},{"value":"/ that any further frames received for that stream must be ignored for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597245,"byte_end":597317,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/ \"some time\".","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597322,"byte_end":597338,"line_start":882,"line_end":882,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597343,"byte_end":597346,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597351,"byte_end":597427,"line_start":884,"line_end":884,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597432,"byte_end":597507,"line_start":885,"line_end":885,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597512,"byte_end":597547,"line_start":886,"line_end":886,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597552,"byte_end":597555,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ The `max_concurrent_reset_streams` setting configures sets an upper","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597560,"byte_end":597631,"line_start":888,"line_end":888,"column_start":5,"column_end":76}},{"value":"/ bound on the amount of state that is maintained. When this max value is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597636,"byte_end":597711,"line_start":889,"line_end":889,"column_start":5,"column_end":80}},{"value":"/ reached, the oldest reset stream is purged from memory.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597716,"byte_end":597775,"line_start":890,"line_end":890,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597780,"byte_end":597783,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597788,"byte_end":597864,"line_start":892,"line_end":892,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597869,"byte_end":597940,"line_start":893,"line_end":893,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597945,"byte_end":597992,"line_start":894,"line_end":894,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":597997,"byte_end":598000,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ The default value is 10.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598005,"byte_end":598033,"line_start":896,"line_end":896,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598038,"byte_end":598041,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598046,"byte_end":598060,"line_start":898,"line_end":898,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598065,"byte_end":598068,"line_start":899,"line_end":899,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598073,"byte_end":598080,"line_start":900,"line_end":900,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598085,"byte_end":598130,"line_start":901,"line_end":901,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598135,"byte_end":598159,"line_start":902,"line_end":902,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598164,"byte_end":598187,"line_start":903,"line_end":903,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598192,"byte_end":598197,"line_start":904,"line_end":904,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598202,"byte_end":598265,"line_start":905,"line_end":905,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598270,"byte_end":598342,"line_start":906,"line_end":906,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598347,"byte_end":598354,"line_start":907,"line_end":907,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598359,"byte_end":598432,"line_start":908,"line_end":908,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598437,"byte_end":598454,"line_start":909,"line_end":909,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598459,"byte_end":598494,"line_start":910,"line_end":910,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_reset_streams(1000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598499,"byte_end":598542,"line_start":911,"line_end":911,"column_start":5,"column_end":48}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598547,"byte_end":598573,"line_start":912,"line_end":912,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598578,"byte_end":598600,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598605,"byte_end":598612,"line_start":914,"line_end":914,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598617,"byte_end":598622,"line_start":915,"line_end":915,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598627,"byte_end":598649,"line_start":916,"line_end":916,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598654,"byte_end":598661,"line_start":917,"line_end":917,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600412,"byte_end":600433,"line_start":964,"line_end":964,"column_start":12,"column_end":33},"name":"reset_stream_duration","qualname":"<Builder>::reset_stream_duration","value":"fn reset_stream_duration(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the duration to remember locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the duration to remember locally reset streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598801,"byte_end":598857,"line_start":923,"line_end":923,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598862,"byte_end":598865,"line_start":924,"line_end":924,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset, the HTTP/2 specification requires","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598870,"byte_end":598942,"line_start":925,"line_end":925,"column_start":5,"column_end":77}},{"value":"/ that any further frames received for that stream must be ignored for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":598947,"byte_end":599019,"line_start":926,"line_end":926,"column_start":5,"column_end":77}},{"value":"/ \"some time\".","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599024,"byte_end":599040,"line_start":927,"line_end":927,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599045,"byte_end":599048,"line_start":928,"line_end":928,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599053,"byte_end":599129,"line_start":929,"line_end":929,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599134,"byte_end":599209,"line_start":930,"line_end":930,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599214,"byte_end":599249,"line_start":931,"line_end":931,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599254,"byte_end":599257,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ The `reset_stream_duration` setting configures the max amount of time","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599262,"byte_end":599335,"line_start":933,"line_end":933,"column_start":5,"column_end":78}},{"value":"/ this state will be maintained in memory. Once the duration elapses, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599340,"byte_end":599415,"line_start":934,"line_end":934,"column_start":5,"column_end":80}},{"value":"/ stream state is purged from memory.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599420,"byte_end":599459,"line_start":935,"line_end":935,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599464,"byte_end":599467,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599472,"byte_end":599548,"line_start":937,"line_end":937,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599553,"byte_end":599624,"line_start":938,"line_end":938,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599629,"byte_end":599676,"line_start":939,"line_end":939,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599681,"byte_end":599684,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ The default value is 30 seconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599689,"byte_end":599725,"line_start":941,"line_end":941,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599730,"byte_end":599733,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599738,"byte_end":599752,"line_start":943,"line_end":943,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599757,"byte_end":599760,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599765,"byte_end":599772,"line_start":945,"line_end":945,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599777,"byte_end":599822,"line_start":946,"line_end":946,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599827,"byte_end":599851,"line_start":947,"line_end":947,"column_start":5,"column_end":29}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599856,"byte_end":599886,"line_start":948,"line_end":948,"column_start":5,"column_end":35}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599891,"byte_end":599914,"line_start":949,"line_end":949,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599919,"byte_end":599924,"line_start":950,"line_end":950,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599929,"byte_end":599992,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":599997,"byte_end":600069,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600074,"byte_end":600081,"line_start":953,"line_end":953,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600086,"byte_end":600159,"line_start":954,"line_end":954,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600164,"byte_end":600181,"line_start":955,"line_end":955,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600186,"byte_end":600221,"line_start":956,"line_end":956,"column_start":5,"column_end":40}},{"value":"/     .reset_stream_duration(Duration::from_secs(10))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600226,"byte_end":600281,"line_start":957,"line_end":957,"column_start":5,"column_end":60}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600286,"byte_end":600312,"line_start":958,"line_end":958,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600317,"byte_end":600339,"line_start":959,"line_end":959,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600344,"byte_end":600351,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600356,"byte_end":600361,"line_start":961,"line_end":961,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600366,"byte_end":600388,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600393,"byte_end":600400,"line_start":963,"line_end":963,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601036,"byte_end":601056,"line_start":981,"line_end":981,"column_start":12,"column_end":32},"name":"max_send_buffer_size","qualname":"<Builder>::max_send_buffer_size","value":"fn max_send_buffer_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum send buffer size per stream.","sig":null,"attributes":[{"value":"/ Sets the maximum send buffer size per stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600541,"byte_end":600590,"line_start":969,"line_end":969,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600595,"byte_end":600598,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ Once a stream has buffered up to (or over) the maximum, the stream's","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600603,"byte_end":600675,"line_start":971,"line_end":971,"column_start":5,"column_end":77}},{"value":"/ flow control will not \"poll\" additional capacity. Once bytes for the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600680,"byte_end":600752,"line_start":972,"line_end":972,"column_start":5,"column_end":77}},{"value":"/ stream have been written to the connection, the send buffer capacity","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600757,"byte_end":600829,"line_start":973,"line_end":973,"column_start":5,"column_end":77}},{"value":"/ will be freed up again.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600834,"byte_end":600861,"line_start":974,"line_end":974,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600866,"byte_end":600869,"line_start":975,"line_end":975,"column_start":5,"column_end":8}},{"value":"/ The default is currently ~400MB, but may change.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600874,"byte_end":600926,"line_start":976,"line_end":976,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600931,"byte_end":600934,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600939,"byte_end":600951,"line_start":978,"line_end":978,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600956,"byte_end":600959,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is larger than `u32::MAX`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":600964,"byte_end":601024,"line_start":980,"line_end":980,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602389,"byte_end":602400,"line_start":1020,"line_end":1020,"column_start":12,"column_end":23},"name":"enable_push","qualname":"<Builder>::enable_push","value":"fn enable_push(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables or disables server push promises.","sig":null,"attributes":[{"value":"/ Enables or disables server push promises.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601208,"byte_end":601253,"line_start":987,"line_end":987,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601258,"byte_end":601261,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ This value is included in the initial SETTINGS handshake. When set, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601266,"byte_end":601341,"line_start":989,"line_end":989,"column_start":5,"column_end":80}},{"value":"/ server MUST NOT send a push promise. Setting this value to value to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601346,"byte_end":601417,"line_start":990,"line_end":990,"column_start":5,"column_end":76}},{"value":"/ false in the initial SETTINGS handshake guarantees that the remote server","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601422,"byte_end":601499,"line_start":991,"line_end":991,"column_start":5,"column_end":82}},{"value":"/ will never send a push promise.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601504,"byte_end":601539,"line_start":992,"line_end":992,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601544,"byte_end":601547,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ This setting can be changed during the life of a single HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601552,"byte_end":601618,"line_start":994,"line_end":994,"column_start":5,"column_end":71}},{"value":"/ connection by sending another settings frame updating the value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601623,"byte_end":601691,"line_start":995,"line_end":995,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601696,"byte_end":601699,"line_start":996,"line_end":996,"column_start":5,"column_end":8}},{"value":"/ Default value: `true`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601704,"byte_end":601730,"line_start":997,"line_end":997,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601735,"byte_end":601738,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601743,"byte_end":601757,"line_start":999,"line_end":999,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601762,"byte_end":601765,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601770,"byte_end":601777,"line_start":1001,"line_end":1001,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601782,"byte_end":601827,"line_start":1002,"line_end":1002,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601832,"byte_end":601856,"line_start":1003,"line_end":1003,"column_start":5,"column_end":29}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601861,"byte_end":601891,"line_start":1004,"line_end":1004,"column_start":5,"column_end":35}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601896,"byte_end":601919,"line_start":1005,"line_end":1005,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601924,"byte_end":601929,"line_start":1006,"line_end":1006,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":601934,"byte_end":601997,"line_start":1007,"line_end":1007,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602002,"byte_end":602074,"line_start":1008,"line_end":1008,"column_start":5,"column_end":77}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602079,"byte_end":602086,"line_start":1009,"line_end":1009,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602091,"byte_end":602164,"line_start":1010,"line_end":1010,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602169,"byte_end":602186,"line_start":1011,"line_end":1011,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602191,"byte_end":602226,"line_start":1012,"line_end":1012,"column_start":5,"column_end":40}},{"value":"/     .enable_push(false)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602231,"byte_end":602258,"line_start":1013,"line_end":1013,"column_start":5,"column_end":32}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602263,"byte_end":602289,"line_start":1014,"line_end":1014,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602294,"byte_end":602316,"line_start":1015,"line_end":1015,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602321,"byte_end":602328,"line_start":1016,"line_end":1016,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602333,"byte_end":602338,"line_start":1017,"line_end":1017,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602343,"byte_end":602365,"line_start":1018,"line_end":1018,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602370,"byte_end":602377,"line_start":1019,"line_end":1019,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605114,"byte_end":605123,"line_start":1097,"line_end":1097,"column_start":12,"column_end":21},"name":"handshake","qualname":"<Builder>::handshake","value":"fn handshake<T, B>(&Self, T) -> /*impl Trait*/ where T: AsyncRead +\nAsyncWrite + Unpin, B: Buf + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2 client backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2 client backed by `io`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602855,"byte_end":602913,"line_start":1036,"line_end":1036,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602918,"byte_end":602921,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":602926,"byte_end":603001,"line_start":1038,"line_end":1038,"column_start":5,"column_end":80}},{"value":"/ the [HTTP/2 handshake]. The handshake is completed once both the connection","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603006,"byte_end":603085,"line_start":1039,"line_end":1039,"column_start":5,"column_end":84}},{"value":"/ preface and the initial settings frame is sent by the client.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603090,"byte_end":603155,"line_start":1040,"line_end":1040,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603160,"byte_end":603163,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ The handshake future does not wait for the initial settings frame from the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603168,"byte_end":603246,"line_start":1042,"line_end":1042,"column_start":5,"column_end":83}},{"value":"/ server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603251,"byte_end":603262,"line_start":1043,"line_end":1043,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603267,"byte_end":603270,"line_start":1044,"line_end":1044,"column_start":5,"column_end":8}},{"value":"/ Returns a future which resolves to the [`Connection`] / [`SendRequest`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603275,"byte_end":603350,"line_start":1045,"line_end":1045,"column_start":5,"column_end":80}},{"value":"/ tuple once the HTTP/2 handshake has been completed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603355,"byte_end":603410,"line_start":1046,"line_end":1046,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603415,"byte_end":603418,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ This function also allows the caller to configure the send payload data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603423,"byte_end":603498,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ type. See [Outbound data type] for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603503,"byte_end":603555,"line_start":1049,"line_end":1049,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603560,"byte_end":603563,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603568,"byte_end":603645,"line_start":1051,"line_end":1051,"column_start":5,"column_end":82}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603650,"byte_end":603692,"line_start":1052,"line_end":1052,"column_start":5,"column_end":47}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603697,"byte_end":603741,"line_start":1053,"line_end":1053,"column_start":5,"column_end":49}},{"value":"/ [Outbound data type]: ../index.html#outbound-data-type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603746,"byte_end":603805,"line_start":1054,"line_end":1054,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603810,"byte_end":603813,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603818,"byte_end":603832,"line_start":1056,"line_end":1056,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603837,"byte_end":603840,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603845,"byte_end":603861,"line_start":1058,"line_end":1058,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603866,"byte_end":603869,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603874,"byte_end":603881,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603886,"byte_end":603931,"line_start":1061,"line_end":1061,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603936,"byte_end":603960,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ # use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603965,"byte_end":603988,"line_start":1063,"line_end":1063,"column_start":5,"column_end":28}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":603993,"byte_end":603998,"line_start":1064,"line_end":1064,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604003,"byte_end":604066,"line_start":1065,"line_end":1065,"column_start":5,"column_end":68}},{"value":"/     -> Result<((SendRequest<Bytes>, Connection<T, Bytes>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604071,"byte_end":604145,"line_start":1066,"line_end":1066,"column_start":5,"column_end":79}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604150,"byte_end":604157,"line_start":1067,"line_end":1067,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604162,"byte_end":604235,"line_start":1068,"line_end":1068,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604240,"byte_end":604257,"line_start":1069,"line_end":1069,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604262,"byte_end":604297,"line_start":1070,"line_end":1070,"column_start":5,"column_end":40}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604302,"byte_end":604328,"line_start":1071,"line_end":1071,"column_start":5,"column_end":31}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604333,"byte_end":604355,"line_start":1072,"line_end":1072,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604360,"byte_end":604367,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604372,"byte_end":604377,"line_start":1074,"line_end":1074,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604382,"byte_end":604404,"line_start":1075,"line_end":1075,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604409,"byte_end":604416,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604421,"byte_end":604424,"line_start":1077,"line_end":1077,"column_start":5,"column_end":8}},{"value":"/ Configures the send-payload data type. In this case, the outbound data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604429,"byte_end":604503,"line_start":1078,"line_end":1078,"column_start":5,"column_end":79}},{"value":"/ type will be `&'static [u8]`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604508,"byte_end":604541,"line_start":1079,"line_end":1079,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604546,"byte_end":604549,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604554,"byte_end":604561,"line_start":1081,"line_end":1081,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604566,"byte_end":604611,"line_start":1082,"line_end":1082,"column_start":5,"column_end":50}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604616,"byte_end":604640,"line_start":1083,"line_end":1083,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604645,"byte_end":604650,"line_start":1084,"line_end":1084,"column_start":5,"column_end":10}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604655,"byte_end":604718,"line_start":1085,"line_end":1085,"column_start":5,"column_end":68}},{"value":"/ # -> Result<((SendRequest<&'static [u8]>, Connection<T, &'static [u8]>)), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604723,"byte_end":604811,"line_start":1086,"line_end":1086,"column_start":5,"column_end":93}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604816,"byte_end":604823,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ // `client_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604828,"byte_end":604901,"line_start":1088,"line_end":1088,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604906,"byte_end":604923,"line_start":1089,"line_end":1089,"column_start":5,"column_end":22}},{"value":"/ let client_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604928,"byte_end":604963,"line_start":1090,"line_end":1090,"column_start":5,"column_end":40}},{"value":"/     .handshake::<_, &'static [u8]>(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":604968,"byte_end":605014,"line_start":1091,"line_end":1091,"column_start":5,"column_end":51}},{"value":"/ # client_fut.await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605019,"byte_end":605041,"line_start":1092,"line_end":1092,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605046,"byte_end":605053,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605058,"byte_end":605063,"line_start":1094,"line_end":1094,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605068,"byte_end":605090,"line_start":1095,"line_end":1095,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605095,"byte_end":605102,"line_start":1096,"line_end":1096,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605426,"byte_end":605433,"line_start":1110,"line_end":1110,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Builder","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3089},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606760,"byte_end":606769,"line_start":1150,"line_end":1150,"column_start":14,"column_end":23},"name":"handshake","qualname":"::client::handshake","value":"async fn handshake<T>(T) -> /*impl Trait*/ where T: AsyncRead + AsyncWrite +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2 client with default configuration\n values backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2 client with default configuration","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605481,"byte_end":605550,"line_start":1115,"line_end":1115,"column_start":1,"column_end":70}},{"value":"/ values backed by `io`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605551,"byte_end":605577,"line_start":1116,"line_end":1116,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605578,"byte_end":605581,"line_start":1117,"line_end":1117,"column_start":1,"column_end":4}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605582,"byte_end":605657,"line_start":1118,"line_end":1118,"column_start":1,"column_end":76}},{"value":"/ the [HTTP/2 handshake]. See [Handshake] for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605658,"byte_end":605719,"line_start":1119,"line_end":1119,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605720,"byte_end":605723,"line_start":1120,"line_end":1120,"column_start":1,"column_end":4}},{"value":"/ Returns a future which resolves to the [`Connection`] / [`SendRequest`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605724,"byte_end":605799,"line_start":1121,"line_end":1121,"column_start":1,"column_end":76}},{"value":"/ tuple once the HTTP/2 handshake has been completed. The returned","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605800,"byte_end":605868,"line_start":1122,"line_end":1122,"column_start":1,"column_end":69}},{"value":"/ [`Connection`] instance will be using default configuration values. Use","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605869,"byte_end":605944,"line_start":1123,"line_end":1123,"column_start":1,"column_end":76}},{"value":"/ [`Builder`] to customize the configuration values used by a [`Connection`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605945,"byte_end":606023,"line_start":1124,"line_end":1124,"column_start":1,"column_end":79}},{"value":"/ instance.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606024,"byte_end":606037,"line_start":1125,"line_end":1125,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606038,"byte_end":606041,"line_start":1126,"line_end":1126,"column_start":1,"column_end":4}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606042,"byte_end":606119,"line_start":1127,"line_end":1127,"column_start":1,"column_end":78}},{"value":"/ [Handshake]: ../index.html#handshake","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606120,"byte_end":606160,"line_start":1128,"line_end":1128,"column_start":1,"column_end":41}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606161,"byte_end":606203,"line_start":1129,"line_end":1129,"column_start":1,"column_end":43}},{"value":"/ [`SendRequest`]: struct.SendRequest.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606204,"byte_end":606248,"line_start":1130,"line_end":1130,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606249,"byte_end":606252,"line_start":1131,"line_end":1131,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606253,"byte_end":606267,"line_start":1132,"line_end":1132,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606268,"byte_end":606271,"line_start":1133,"line_end":1133,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606272,"byte_end":606279,"line_start":1134,"line_end":1134,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606280,"byte_end":606325,"line_start":1135,"line_end":1135,"column_start":1,"column_end":46}},{"value":"/ # use h2::client;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606326,"byte_end":606347,"line_start":1136,"line_end":1136,"column_start":1,"column_end":22}},{"value":"/ # use h2::client::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606348,"byte_end":606372,"line_start":1137,"line_end":1137,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606373,"byte_end":606378,"line_start":1138,"line_end":1138,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T) -> Result<(), h2::Error>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606379,"byte_end":606467,"line_start":1139,"line_end":1139,"column_start":1,"column_end":89}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606468,"byte_end":606475,"line_start":1140,"line_end":1140,"column_start":1,"column_end":8}},{"value":"/ let (send_request, connection) = client::handshake(my_io).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606476,"byte_end":606545,"line_start":1141,"line_end":1141,"column_start":1,"column_end":70}},{"value":"/ // The HTTP/2 handshake has completed, now start polling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606546,"byte_end":606606,"line_start":1142,"line_end":1142,"column_start":1,"column_end":61}},{"value":"/ // `connection` and use `send_request` to send requests to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606607,"byte_end":606673,"line_start":1143,"line_end":1143,"column_start":1,"column_end":67}},{"value":"/ // server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606674,"byte_end":606688,"line_start":1144,"line_end":1144,"column_start":1,"column_end":15}},{"value":"/ # Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606689,"byte_end":606701,"line_start":1145,"line_end":1145,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606702,"byte_end":606709,"line_start":1146,"line_end":1146,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606710,"byte_end":606715,"line_start":1147,"line_end":1147,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606716,"byte_end":606738,"line_start":1148,"line_end":1148,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":606739,"byte_end":606746,"line_start":1149,"line_end":1149,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609854,"byte_end":609876,"line_start":1245,"line_end":1245,"column_start":12,"column_end":34},"name":"set_target_window_size","qualname":"<Connection<T, B>>::set_target_window_size","value":"fn set_target_window_size(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the target window size for the whole connection.","sig":null,"attributes":[{"value":"/ Sets the target window size for the whole connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609062,"byte_end":609119,"line_start":1228,"line_end":1228,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609124,"byte_end":609127,"line_start":1229,"line_end":1229,"column_start":5,"column_end":8}},{"value":"/ If `size` is greater than the current value, then a `WINDOW_UPDATE`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609132,"byte_end":609203,"line_start":1230,"line_end":1230,"column_start":5,"column_end":76}},{"value":"/ frame will be immediately sent to the remote, increasing the connection","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609208,"byte_end":609283,"line_start":1231,"line_end":1231,"column_start":5,"column_end":80}},{"value":"/ level window by `size - current_value`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609288,"byte_end":609331,"line_start":1232,"line_end":1232,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609336,"byte_end":609339,"line_start":1233,"line_end":1233,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current value, nothing will happen","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609344,"byte_end":609409,"line_start":1234,"line_end":1234,"column_start":5,"column_end":70}},{"value":"/ immediately. However, as window capacity is released by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609414,"byte_end":609473,"line_start":1235,"line_end":1235,"column_start":5,"column_end":64}},{"value":"/ [`FlowControl`] instances, no `WINDOW_UPDATE` frames will be sent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609478,"byte_end":609547,"line_start":1236,"line_end":1236,"column_start":5,"column_end":74}},{"value":"/ out until the number of \"in flight\" bytes drops below `size`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609552,"byte_end":609617,"line_start":1237,"line_end":1237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609622,"byte_end":609625,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609630,"byte_end":609662,"line_start":1239,"line_end":1239,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609667,"byte_end":609670,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ See [`FlowControl`] documentation for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609675,"byte_end":609730,"line_start":1241,"line_end":1241,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609735,"byte_end":609738,"line_start":1242,"line_end":1242,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609743,"byte_end":609790,"line_start":1243,"line_end":1243,"column_start":5,"column_end":52}},{"value":"/ [library level]: ../index.html#flow-control","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":609795,"byte_end":609842,"line_start":1244,"line_end":1244,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610506,"byte_end":610529,"line_start":1263,"line_end":1263,"column_start":12,"column_end":35},"name":"set_initial_window_size","qualname":"<Connection<T, B>>::set_initial_window_size","value":"fn set_initial_window_size(&mut Self, u32) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610010,"byte_end":610082,"line_start":1250,"line_end":1250,"column_start":5,"column_end":77}},{"value":"/ flow control for received data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610087,"byte_end":610122,"line_start":1251,"line_end":1251,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610127,"byte_end":610130,"line_start":1252,"line_end":1252,"column_start":5,"column_end":8}},{"value":"/ The `SETTINGS` will be sent to the remote, and only applied once the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610135,"byte_end":610207,"line_start":1253,"line_end":1253,"column_start":5,"column_end":77}},{"value":"/ remote acknowledges the change.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610212,"byte_end":610247,"line_start":1254,"line_end":1254,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610252,"byte_end":610255,"line_start":1255,"line_end":1255,"column_start":5,"column_end":8}},{"value":"/ This can be used to increase or decrease the window size for existing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610260,"byte_end":610333,"line_start":1256,"line_end":1256,"column_start":5,"column_end":78}},{"value":"/ streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610338,"byte_end":610350,"line_start":1257,"line_end":1257,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610355,"byte_end":610358,"line_start":1258,"line_end":1258,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610363,"byte_end":610375,"line_start":1259,"line_end":1259,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610380,"byte_end":610383,"line_start":1260,"line_end":1260,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a previous call is still pending acknowledgement","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610388,"byte_end":610460,"line_start":1261,"line_end":1261,"column_start":5,"column_end":77}},{"value":"/ from the remote endpoint.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610465,"byte_end":610494,"line_start":1262,"line_end":1262,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610884,"byte_end":610893,"line_start":1274,"line_end":1274,"column_start":12,"column_end":21},"name":"ping_pong","qualname":"<Connection<T, B>>::ping_pong","value":"fn ping_pong(&mut Self) -> Option<PingPong>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `PingPong` instance from the connection.","sig":null,"attributes":[{"value":"/ Takes a `PingPong` instance from the connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610708,"byte_end":610760,"line_start":1269,"line_end":1269,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610765,"byte_end":610768,"line_start":1270,"line_end":1270,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610773,"byte_end":610783,"line_start":1271,"line_end":1271,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610788,"byte_end":610791,"line_start":1272,"line_end":1272,"column_start":5,"column_end":8}},{"value":"/ This may only be called once. Calling multiple times will return `None`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610796,"byte_end":610872,"line_start":1273,"line_end":1273,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611425,"byte_end":611452,"line_start":1287,"line_end":1287,"column_start":12,"column_end":39},"name":"max_concurrent_send_streams","qualname":"<Connection<T, B>>::max_concurrent_send_streams","value":"fn max_concurrent_send_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by this client.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":610994,"byte_end":611068,"line_start":1278,"line_end":1278,"column_start":5,"column_end":79}},{"value":"/ by this client.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611073,"byte_end":611092,"line_start":1279,"line_end":1279,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611097,"byte_end":611100,"line_start":1280,"line_end":1280,"column_start":5,"column_end":8}},{"value":"/ This limit is configured by the server peer by sending the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611105,"byte_end":611167,"line_start":1281,"line_end":1281,"column_start":5,"column_end":67}},{"value":"/ [`SETTINGS_MAX_CONCURRENT_STREAMS` parameter][1] in a `SETTINGS` frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611172,"byte_end":611247,"line_start":1282,"line_end":1282,"column_start":5,"column_end":80}},{"value":"/ This method returns the currently acknowledged value received from the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611252,"byte_end":611326,"line_start":1283,"line_end":1283,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611331,"byte_end":611342,"line_start":1284,"line_end":1284,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611347,"byte_end":611350,"line_start":1285,"line_end":1285,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611355,"byte_end":611413,"line_start":1286,"line_end":1286,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612114,"byte_end":612141,"line_start":1301,"line_end":1301,"column_start":12,"column_end":39},"name":"max_concurrent_recv_streams","qualname":"<Connection<T, B>>::max_concurrent_recv_streams","value":"fn max_concurrent_recv_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by the server on this connection.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611519,"byte_end":611593,"line_start":1290,"line_end":1290,"column_start":5,"column_end":79}},{"value":"/ by the server on this connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611598,"byte_end":611635,"line_start":1291,"line_end":1291,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611640,"byte_end":611643,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ This returns the value of the [`SETTINGS_MAX_CONCURRENT_STREAMS`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611648,"byte_end":611716,"line_start":1293,"line_end":1293,"column_start":5,"column_end":73}},{"value":"/ parameter][1] sent in a `SETTINGS` frame that has been","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611721,"byte_end":611779,"line_start":1294,"line_end":1294,"column_start":5,"column_end":63}},{"value":"/ acknowledged by the remote peer. The value to be sent is configured by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611784,"byte_end":611858,"line_start":1295,"line_end":1295,"column_start":5,"column_end":79}},{"value":"/ the [`Builder::max_concurrent_streams`][2] method before handshaking","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611863,"byte_end":611935,"line_start":1296,"line_end":1296,"column_start":5,"column_end":77}},{"value":"/ with the remote peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611940,"byte_end":611965,"line_start":1297,"line_end":1297,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611970,"byte_end":611973,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":611978,"byte_end":612036,"line_start":1299,"line_end":1299,"column_start":5,"column_end":63}},{"value":"/ [2]: ../struct.Builder.html#method.max_concurrent_streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612041,"byte_end":612102,"line_start":1300,"line_end":1300,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612367,"byte_end":612371,"line_start":1313,"line_end":1313,"column_start":8,"column_end":12},"name":"poll","qualname":"<Connection<T, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612693,"byte_end":612696,"line_start":1325,"line_end":1325,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Connection<T, B> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612937,"byte_end":612941,"line_start":1335,"line_end":1335,"column_start":8,"column_end":12},"name":"poll","qualname":"<ResponseFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613413,"byte_end":613422,"line_start":1349,"line_end":1349,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<ResponseFuture>::stream_id","value":"fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613260,"byte_end":613309,"line_start":1344,"line_end":1344,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613314,"byte_end":613317,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613322,"byte_end":613334,"line_start":1346,"line_end":1346,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613339,"byte_end":613342,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613347,"byte_end":613401,"line_start":1348,"line_end":1348,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613695,"byte_end":613708,"line_start":1358,"line_end":1358,"column_start":12,"column_end":25},"name":"push_promises","qualname":"<ResponseFuture>::push_promises","value":"fn push_promises(&mut Self) -> PushPromises","parent":null,"children":[],"decl_id":null,"docs":" Returns a stream of PushPromises","sig":null,"attributes":[{"value":"/ Returns a stream of PushPromises","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613524,"byte_end":613560,"line_start":1352,"line_end":1352,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613565,"byte_end":613568,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613573,"byte_end":613585,"line_start":1354,"line_end":1354,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613590,"byte_end":613593,"line_start":1355,"line_end":1355,"column_start":5,"column_end":8}},{"value":"/ If this method has been called before","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613598,"byte_end":613639,"line_start":1356,"line_end":1356,"column_start":5,"column_end":46}},{"value":"/ or the stream was itself was pushed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613644,"byte_end":613683,"line_start":1357,"line_end":1357,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":614083,"byte_end":614095,"line_start":1373,"line_end":1373,"column_start":18,"column_end":30},"name":"push_promise","qualname":"<PushPromises>::push_promise","value":"async fn push_promise<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the next `PushPromise`.\n","sig":null,"attributes":[{"value":"/ Get the next `PushPromise`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":614034,"byte_end":614065,"line_start":1372,"line_end":1372,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":614273,"byte_end":614290,"line_start":1378,"line_end":1378,"column_start":12,"column_end":29},"name":"poll_push_promise","qualname":"<PushPromises>::poll_push_promise","value":"fn poll_push_promise(&mut Self, &mut Context)\n-> Poll<Option<Result<PushPromise, crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615408,"byte_end":615415,"line_start":1412,"line_end":1412,"column_start":12,"column_end":19},"name":"request","qualname":"<PushPromise>::request","value":"fn request(&Self) -> &Request<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the push promise's request headers.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the push promise's request headers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615334,"byte_end":615396,"line_start":1411,"line_end":1411,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615556,"byte_end":615567,"line_start":1417,"line_end":1417,"column_start":12,"column_end":23},"name":"request_mut","qualname":"<PushPromise>::request_mut","value":"fn request_mut(&mut Self) -> &mut Request<()>","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the push promise's request headers.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the push promise's request headers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615474,"byte_end":615544,"line_start":1416,"line_end":1416,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615744,"byte_end":615754,"line_start":1423,"line_end":1423,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<PushPromise>::into_parts","value":"fn into_parts(Self) -> (Request<()>, PushedResponseFuture)","parent":null,"children":[],"decl_id":null,"docs":" Consumes `self`, returning the push promise's request headers and\n response future.\n","sig":null,"attributes":[{"value":"/ Consumes `self`, returning the push promise's request headers and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615638,"byte_end":615707,"line_start":1421,"line_end":1421,"column_start":5,"column_end":74}},{"value":"/ response future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615712,"byte_end":615732,"line_start":1422,"line_end":1422,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616000,"byte_end":616004,"line_start":1433,"line_end":1433,"column_start":8,"column_end":12},"name":"poll","qualname":"<PushedResponseFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616314,"byte_end":616323,"line_start":1444,"line_end":1444,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<PushedResponseFuture>::stream_id","value":"fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616161,"byte_end":616210,"line_start":1439,"line_end":1439,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616215,"byte_end":616218,"line_start":1440,"line_end":1440,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616223,"byte_end":616235,"line_start":1441,"line_end":1441,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616240,"byte_end":616243,"line_start":1442,"line_end":1442,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616248,"byte_end":616302,"line_start":1443,"line_end":1443,"column_start":5,"column_end":59}}]},{"kind":"Mod","id":{"krate":0,"index":3149},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","parent":null,"children":[{"krate":0,"index":3150},{"krate":0,"index":3153},{"krate":0,"index":3156},{"krate":0,"index":12072},{"krate":0,"index":12074},{"krate":0,"index":12076},{"krate":0,"index":12077},{"krate":0,"index":12079},{"krate":0,"index":12080},{"krate":0,"index":3159},{"krate":0,"index":3163},{"krate":0,"index":3166},{"krate":0,"index":3168}],"decl_id":null,"docs":" Extensions specific to the HTTP/2 protocol.\n","sig":null,"attributes":[{"value":"/ Extensions specific to the HTTP/2 protocol.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619501,"byte_end":619548,"line_start":1,"line_end":1,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":12072},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619838,"byte_end":619846,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"Protocol","qualname":"::ext::Protocol","value":"Protocol {  }","parent":null,"children":[{"krate":0,"index":12073}],"decl_id":null,"docs":" Represents the `:protocol` pseudo-header used by\n the [Extended CONNECT Protocol].","sig":null,"attributes":[{"value":"/ Represents the `:protocol` pseudo-header used by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619612,"byte_end":619664,"line_start":8,"line_end":8,"column_start":1,"column_end":53}},{"value":"/ the [Extended CONNECT Protocol].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619665,"byte_end":619701,"line_start":9,"line_end":9,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619702,"byte_end":619705,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [Extended CONNECT Protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619706,"byte_end":619794,"line_start":11,"line_end":11,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619959,"byte_end":619970,"line_start":19,"line_end":19,"column_start":18,"column_end":29},"name":"from_static","qualname":"<Protocol>::from_static","value":"const fn from_static(&'static str) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Converts a static string to a protocol name.\n","sig":null,"attributes":[{"value":"/ Converts a static string to a protocol name.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619893,"byte_end":619941,"line_start":18,"line_end":18,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620146,"byte_end":620152,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"as_str","qualname":"<Protocol>::as_str","value":"fn as_str(&Self) -> &str","parent":null,"children":[],"decl_id":null,"docs":" Returns a str representation of the header.\n","sig":null,"attributes":[{"value":"/ Returns a str representation of the header.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620087,"byte_end":620134,"line_start":25,"line_end":25,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620415,"byte_end":620419,"line_start":38,"line_end":38,"column_start":8,"column_end":12},"name":"from","qualname":"<Protocol as std::convert::From>::from","value":"fn from(&'a str) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620561,"byte_end":620567,"line_start":46,"line_end":46,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Protocol as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &[u8]","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620661,"byte_end":620664,"line_start":52,"line_end":52,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Protocol as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":3170},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"server","qualname":"::server","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","parent":null,"children":[{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3175},{"krate":0,"index":3178},{"krate":0,"index":3179},{"krate":0,"index":3182},{"krate":0,"index":3185},{"krate":0,"index":3188},{"krate":0,"index":3191},{"krate":0,"index":3194},{"krate":0,"index":3197},{"krate":0,"index":3198},{"krate":0,"index":3201},{"krate":0,"index":3204},{"krate":0,"index":3207},{"krate":0,"index":3210},{"krate":0,"index":3211},{"krate":0,"index":3214},{"krate":0,"index":3217},{"krate":0,"index":3220},{"krate":0,"index":3223},{"krate":0,"index":3224},{"krate":0,"index":3227},{"krate":0,"index":3230},{"krate":0,"index":3231},{"krate":0,"index":3234},{"krate":0,"index":3237},{"krate":0,"index":3240},{"krate":0,"index":3243},{"krate":0,"index":3246},{"krate":0,"index":3249},{"krate":0,"index":3250},{"krate":0,"index":3253},{"krate":0,"index":3256},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3270},{"krate":0,"index":3273},{"krate":0,"index":3276},{"krate":0,"index":3277},{"krate":0,"index":3280},{"krate":0,"index":3283},{"krate":0,"index":3289},{"krate":0,"index":12083},{"krate":0,"index":12089},{"krate":0,"index":12091},{"krate":0,"index":12093},{"krate":0,"index":12096},{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3299},{"krate":0,"index":3310},{"krate":0,"index":3314},{"krate":0,"index":12099},{"krate":0,"index":12101},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3323},{"krate":0,"index":3342},{"krate":0,"index":3346},{"krate":0,"index":3360},{"krate":0,"index":3362},{"krate":0,"index":3371},{"krate":0,"index":3377},{"krate":0,"index":3381},{"krate":0,"index":3386},{"krate":0,"index":3391},{"krate":0,"index":3397},{"krate":0,"index":3402},{"krate":0,"index":3406},{"krate":0,"index":3416},{"krate":0,"index":3433}],"decl_id":null,"docs":" Server implementation of the HTTP/2 protocol.","sig":null,"attributes":[{"value":"/ Server implementation of the HTTP/2 protocol.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":620748,"byte_end":620797,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":620798,"byte_end":620801,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":620802,"byte_end":620823,"line_start":3,"line_end":3,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":620824,"byte_end":620827,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Running an HTTP/2 server requires the caller to manage accepting the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":620828,"byte_end":620900,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ connections as well as getting the connections to a state that is ready to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":620901,"byte_end":620979,"line_start":6,"line_end":6,"column_start":1,"column_end":79}},{"value":"/ begin the HTTP/2 handshake. See [here](../index.html#handshake) for more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":620980,"byte_end":621056,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621057,"byte_end":621069,"line_start":8,"line_end":8,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621070,"byte_end":621073,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This could be as basic as using Tokio's [`TcpListener`] to accept","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621074,"byte_end":621143,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ connections, but usually it means using either ALPN or HTTP/1.1 protocol","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621144,"byte_end":621220,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/ upgrades.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621221,"byte_end":621234,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621235,"byte_end":621238,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Once a connection is obtained, it is passed to [`handshake`],","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621239,"byte_end":621304,"line_start":14,"line_end":14,"column_start":1,"column_end":66}},{"value":"/ which will begin the [HTTP/2 handshake]. This returns a future that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621305,"byte_end":621376,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ completes once the handshake process is performed and HTTP/2 streams may","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621377,"byte_end":621453,"line_start":16,"line_end":16,"column_start":1,"column_end":77}},{"value":"/ be received.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621454,"byte_end":621470,"line_start":17,"line_end":17,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621471,"byte_end":621474,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`handshake`] uses default configuration values. There are a number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621475,"byte_end":621549,"line_start":19,"line_end":19,"column_start":1,"column_end":75}},{"value":"/ settings that can be changed by using [`Builder`] instead.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621550,"byte_end":621612,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621613,"byte_end":621616,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Inbound streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621617,"byte_end":621638,"line_start":22,"line_end":22,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621639,"byte_end":621642,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance is used to accept inbound HTTP/2 streams. It","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621643,"byte_end":621719,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ does this by implementing [`futures::Stream`]. When a new stream is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621720,"byte_end":621791,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ received, a call to [`Connection::accept`] will return `(request, response)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621792,"byte_end":621873,"line_start":26,"line_end":26,"column_start":1,"column_end":82}},{"value":"/ The `request` handle (of type [`http::Request<RecvStream>`]) contains the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621874,"byte_end":621951,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ HTTP request head as well as provides a way to receive the inbound data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":621952,"byte_end":622027,"line_start":28,"line_end":28,"column_start":1,"column_end":76}},{"value":"/ stream and the trailers. The `response` handle (of type [`SendResponse`])","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622028,"byte_end":622105,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ allows responding to the request, stream the response payload, send","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622106,"byte_end":622177,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ trailers, and send push promises.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622178,"byte_end":622215,"line_start":31,"line_end":31,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622216,"byte_end":622219,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ The send ([`SendStream`]) and receive ([`RecvStream`]) halves of the stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622220,"byte_end":622299,"line_start":33,"line_end":33,"column_start":1,"column_end":80}},{"value":"/ can be operated independently.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622300,"byte_end":622334,"line_start":34,"line_end":34,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622335,"byte_end":622338,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Managing the connection","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622339,"byte_end":622368,"line_start":36,"line_end":36,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622369,"byte_end":622372,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance is used to manage connection state. The caller","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622373,"byte_end":622451,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ is required to call either [`Connection::accept`] or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622452,"byte_end":622508,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ [`Connection::poll_close`] in order to advance the connection state. Simply","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622509,"byte_end":622588,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ operating on [`SendStream`] or [`RecvStream`] will have no effect unless the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622589,"byte_end":622669,"line_start":41,"line_end":41,"column_start":1,"column_end":81}},{"value":"/ connection state is advanced.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622670,"byte_end":622703,"line_start":42,"line_end":42,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622704,"byte_end":622707,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ It is not required to call **both** [`Connection::accept`] and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622708,"byte_end":622774,"line_start":44,"line_end":44,"column_start":1,"column_end":67}},{"value":"/ [`Connection::poll_close`]. If the caller is ready to accept a new stream,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622775,"byte_end":622853,"line_start":45,"line_end":45,"column_start":1,"column_end":79}},{"value":"/ then only [`Connection::accept`] should be called. When the caller **does","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622854,"byte_end":622931,"line_start":46,"line_end":46,"column_start":1,"column_end":78}},{"value":"/ not** want to accept a new stream, [`Connection::poll_close`] should be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":622932,"byte_end":623007,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/ called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623008,"byte_end":623019,"line_start":48,"line_end":48,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623020,"byte_end":623023,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The [`Connection`] instance should only be dropped once","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623024,"byte_end":623083,"line_start":50,"line_end":50,"column_start":1,"column_end":60}},{"value":"/ [`Connection::poll_close`] returns `Ready`. Once [`Connection::accept`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623084,"byte_end":623159,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ returns `Ready(None)`, there will no longer be any more inbound streams. At","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623160,"byte_end":623239,"line_start":52,"line_end":52,"column_start":1,"column_end":80}},{"value":"/ this point, only [`Connection::poll_close`] should be called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623240,"byte_end":623305,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623306,"byte_end":623309,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ # Shutting down the server","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623310,"byte_end":623340,"line_start":55,"line_end":55,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623341,"byte_end":623344,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ Graceful shutdown of the server is [not yet","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623345,"byte_end":623392,"line_start":57,"line_end":57,"column_start":1,"column_end":48}},{"value":"/ implemented](https://github.com/hyperium/h2/issues/69).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623393,"byte_end":623452,"line_start":58,"line_end":58,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623453,"byte_end":623456,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623457,"byte_end":623470,"line_start":60,"line_end":60,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623471,"byte_end":623474,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ A basic HTTP/2 server example that runs over TCP and assumes [prior","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623475,"byte_end":623546,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ knowledge], i.e. both the client and the server assume that the TCP socket","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623547,"byte_end":623625,"line_start":63,"line_end":63,"column_start":1,"column_end":79}},{"value":"/ will use the HTTP/2 protocol without prior negotiation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623626,"byte_end":623685,"line_start":64,"line_end":64,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623686,"byte_end":623689,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623690,"byte_end":623703,"line_start":66,"line_end":66,"column_start":1,"column_end":14}},{"value":"/ use h2::server;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623704,"byte_end":623723,"line_start":67,"line_end":67,"column_start":1,"column_end":20}},{"value":"/ use http::{Response, StatusCode};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623724,"byte_end":623761,"line_start":68,"line_end":68,"column_start":1,"column_end":38}},{"value":"/ use tokio::net::TcpListener;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623762,"byte_end":623794,"line_start":69,"line_end":69,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623795,"byte_end":623798,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623799,"byte_end":623817,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/ pub async fn main() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623818,"byte_end":623843,"line_start":72,"line_end":72,"column_start":1,"column_end":26}},{"value":"/     let mut listener = TcpListener::bind(\"127.0.0.1:5928\").await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623844,"byte_end":623922,"line_start":73,"line_end":73,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623923,"byte_end":623926,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/     // Accept all incoming TCP connections.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623927,"byte_end":623974,"line_start":75,"line_end":75,"column_start":1,"column_end":48}},{"value":"/     loop {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623975,"byte_end":623989,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/         if let Ok((socket, _peer_addr)) = listener.accept().await {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":623990,"byte_end":624061,"line_start":77,"line_end":77,"column_start":1,"column_end":72}},{"value":"/             // Spawn a new task to process each connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624062,"byte_end":624125,"line_start":78,"line_end":78,"column_start":1,"column_end":64}},{"value":"/             tokio::spawn(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624126,"byte_end":624162,"line_start":79,"line_end":79,"column_start":1,"column_end":37}},{"value":"/                 // Start the HTTP/2 connection handshake","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624163,"byte_end":624223,"line_start":80,"line_end":80,"column_start":1,"column_end":61}},{"value":"/                 let mut h2 = server::handshake(socket).await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624224,"byte_end":624298,"line_start":81,"line_end":81,"column_start":1,"column_end":75}},{"value":"/                 // Accept all inbound HTTP/2 streams sent over the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624299,"byte_end":624369,"line_start":82,"line_end":82,"column_start":1,"column_end":71}},{"value":"/                 // connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624370,"byte_end":624404,"line_start":83,"line_end":83,"column_start":1,"column_end":35}},{"value":"/                 while let Some(request) = h2.accept().await {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624405,"byte_end":624470,"line_start":84,"line_end":84,"column_start":1,"column_end":66}},{"value":"/                     let (request, mut respond) = request.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624471,"byte_end":624541,"line_start":85,"line_end":85,"column_start":1,"column_end":71}},{"value":"/                     println!(\"Received request: {:?}\", request);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624542,"byte_end":624610,"line_start":86,"line_end":86,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624611,"byte_end":624614,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/                     // Build a response with no body","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624615,"byte_end":624671,"line_start":88,"line_end":88,"column_start":1,"column_end":57}},{"value":"/                     let response = Response::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624672,"byte_end":624730,"line_start":89,"line_end":89,"column_start":1,"column_end":59}},{"value":"/                         .status(StatusCode::OK)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624731,"byte_end":624782,"line_start":90,"line_end":90,"column_start":1,"column_end":52}},{"value":"/                         .body(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624783,"byte_end":624820,"line_start":91,"line_end":91,"column_start":1,"column_end":38}},{"value":"/                         .unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624821,"byte_end":624859,"line_start":92,"line_end":92,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624860,"byte_end":624863,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/                     // Send the response back to the client","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624864,"byte_end":624927,"line_start":94,"line_end":94,"column_start":1,"column_end":64}},{"value":"/                     respond.send_response(response, true)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624928,"byte_end":624989,"line_start":95,"line_end":95,"column_start":1,"column_end":62}},{"value":"/                         .unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":624990,"byte_end":625028,"line_start":96,"line_end":96,"column_start":1,"column_end":39}},{"value":"/                 }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625029,"byte_end":625050,"line_start":97,"line_end":97,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625051,"byte_end":625054,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/             });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625055,"byte_end":625074,"line_start":99,"line_end":99,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625075,"byte_end":625088,"line_start":100,"line_end":100,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625089,"byte_end":625098,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625099,"byte_end":625104,"line_start":102,"line_end":102,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625105,"byte_end":625112,"line_start":103,"line_end":103,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625113,"byte_end":625116,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ [prior knowledge]: http://httpwg.org/specs/rfc7540.html#known-http","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625117,"byte_end":625187,"line_start":105,"line_end":105,"column_start":1,"column_end":71}},{"value":"/ [`handshake`]: fn.handshake.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625188,"byte_end":625224,"line_start":106,"line_end":106,"column_start":1,"column_end":37}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625225,"byte_end":625302,"line_start":107,"line_end":107,"column_start":1,"column_end":78}},{"value":"/ [`Builder`]: struct.Builder.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625303,"byte_end":625339,"line_start":108,"line_end":108,"column_start":1,"column_end":37}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625340,"byte_end":625382,"line_start":109,"line_end":109,"column_start":1,"column_end":43}},{"value":"/ [`Connection::poll`]: struct.Connection.html#method.poll","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625383,"byte_end":625443,"line_start":110,"line_end":110,"column_start":1,"column_end":61}},{"value":"/ [`Connection::poll_close`]: struct.Connection.html#method.poll_close","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625444,"byte_end":625516,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ [`futures::Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625517,"byte_end":625602,"line_start":112,"line_end":112,"column_start":1,"column_end":86}},{"value":"/ [`http::Request<RecvStream>`]: ../struct.RecvStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625603,"byte_end":625663,"line_start":113,"line_end":113,"column_start":1,"column_end":61}},{"value":"/ [`RecvStream`]: ../struct.RecvStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625664,"byte_end":625709,"line_start":114,"line_end":114,"column_start":1,"column_end":46}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625710,"byte_end":625755,"line_start":115,"line_end":115,"column_start":1,"column_end":46}},{"value":"/ [`TcpListener`]: https://docs.rs/tokio-core/0.1/tokio_core/net/struct.TcpListener.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":625756,"byte_end":625846,"line_start":116,"line_end":116,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":3283},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626941,"byte_end":626950,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"Handshake","qualname":"::server::Handshake","value":"Handshake {  }","parent":null,"children":[{"krate":0,"index":3286},{"krate":0,"index":3287},{"krate":0,"index":3288}],"decl_id":null,"docs":" In progress HTTP/2 connection handshake future.","sig":null,"attributes":[{"value":"/ In progress HTTP/2 connection handshake future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626386,"byte_end":626437,"line_start":133,"line_end":133,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626438,"byte_end":626441,"line_start":134,"line_end":134,"column_start":1,"column_end":4}},{"value":"/ This type implements `Future`, yielding a `Connection` instance once the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626442,"byte_end":626518,"line_start":135,"line_end":135,"column_start":1,"column_end":77}},{"value":"/ handshake has completed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626519,"byte_end":626547,"line_start":136,"line_end":136,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626548,"byte_end":626551,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ The handshake is completed once the connection preface is fully received","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626552,"byte_end":626628,"line_start":138,"line_end":138,"column_start":1,"column_end":77}},{"value":"/ from the client **and** the initial settings frame is sent to the client.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626629,"byte_end":626706,"line_start":139,"line_end":139,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626707,"byte_end":626710,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The handshake future does not wait for the initial settings frame from the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626711,"byte_end":626789,"line_start":141,"line_end":141,"column_start":1,"column_end":79}},{"value":"/ client.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626790,"byte_end":626801,"line_start":142,"line_end":142,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626802,"byte_end":626805,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626806,"byte_end":626851,"line_start":144,"line_end":144,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626852,"byte_end":626855,"line_start":145,"line_end":145,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626856,"byte_end":626880,"line_start":146,"line_end":146,"column_start":1,"column_end":25}},{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":626881,"byte_end":626929,"line_start":147,"line_end":147,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3289},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628634,"byte_end":628644,"line_start":196,"line_end":196,"column_start":12,"column_end":22},"name":"Connection","qualname":"::server::Connection","value":"Connection {  }","parent":null,"children":[{"krate":0,"index":3292}],"decl_id":null,"docs":" Accepts inbound HTTP/2 streams on a connection.","sig":null,"attributes":[{"value":"/ Accepts inbound HTTP/2 streams on a connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627204,"byte_end":627255,"line_start":157,"line_end":157,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627256,"byte_end":627259,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ A `Connection` is backed by an I/O resource (usually a TCP socket) and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627260,"byte_end":627334,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/ implements the HTTP/2 server logic for that connection. It is responsible","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627335,"byte_end":627412,"line_start":160,"line_end":160,"column_start":1,"column_end":78}},{"value":"/ for receiving inbound streams initiated by the client as well as driving the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627413,"byte_end":627493,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ internal state forward.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627494,"byte_end":627521,"line_start":162,"line_end":162,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627522,"byte_end":627525,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ `Connection` values are created by calling [`handshake`]. Once a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627526,"byte_end":627594,"line_start":164,"line_end":164,"column_start":1,"column_end":69}},{"value":"/ `Connection` value is obtained, the caller must call [`poll`] or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627595,"byte_end":627663,"line_start":165,"line_end":165,"column_start":1,"column_end":69}},{"value":"/ [`poll_close`] in order to drive the internal connection state forward.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627664,"byte_end":627739,"line_start":166,"line_end":166,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627740,"byte_end":627743,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more details","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627744,"byte_end":627797,"line_start":168,"line_end":168,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627798,"byte_end":627801,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627802,"byte_end":627832,"line_start":170,"line_end":170,"column_start":1,"column_end":31}},{"value":"/ [`handshake`]: struct.Connection.html#method.handshake","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627833,"byte_end":627891,"line_start":171,"line_end":171,"column_start":1,"column_end":59}},{"value":"/ [`poll`]: struct.Connection.html#method.poll","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627892,"byte_end":627940,"line_start":172,"line_end":172,"column_start":1,"column_end":49}},{"value":"/ [`poll_close`]: struct.Connection.html#method.poll_close","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":627941,"byte_end":628001,"line_start":173,"line_end":173,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628002,"byte_end":628005,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628006,"byte_end":628020,"line_start":175,"line_end":175,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628021,"byte_end":628024,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628025,"byte_end":628032,"line_start":177,"line_end":177,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628033,"byte_end":628078,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/ # use h2::server;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628079,"byte_end":628100,"line_start":179,"line_end":179,"column_start":1,"column_end":22}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628101,"byte_end":628125,"line_start":180,"line_end":180,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628126,"byte_end":628131,"line_start":181,"line_end":181,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628132,"byte_end":628197,"line_start":182,"line_end":182,"column_start":1,"column_end":66}},{"value":"/ let mut server = server::handshake(my_io).await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628198,"byte_end":628259,"line_start":183,"line_end":183,"column_start":1,"column_end":62}},{"value":"/ while let Some(request) = server.accept().await {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628260,"byte_end":628313,"line_start":184,"line_end":184,"column_start":1,"column_end":54}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628314,"byte_end":628347,"line_start":185,"line_end":185,"column_start":1,"column_end":34}},{"value":"/         let (request, respond) = request.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628348,"byte_end":628402,"line_start":186,"line_end":186,"column_start":1,"column_end":55}},{"value":"/         // Process the request and send the response back to the client","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628403,"byte_end":628478,"line_start":187,"line_end":187,"column_start":1,"column_end":76}},{"value":"/         // using `respond`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628479,"byte_end":628510,"line_start":188,"line_end":188,"column_start":1,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628511,"byte_end":628522,"line_start":189,"line_end":189,"column_start":1,"column_end":12}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628523,"byte_end":628528,"line_start":190,"line_end":190,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628529,"byte_end":628536,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628537,"byte_end":628542,"line_start":192,"line_end":192,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628543,"byte_end":628565,"line_start":193,"line_end":193,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628566,"byte_end":628573,"line_start":194,"line_end":194,"column_start":1,"column_end":8}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628574,"byte_end":628622,"line_start":195,"line_end":195,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":12083},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629781,"byte_end":629788,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"Builder","qualname":"::server::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":12084},{"krate":0,"index":12085},{"krate":0,"index":12086},{"krate":0,"index":12087},{"krate":0,"index":12088}],"decl_id":null,"docs":" Builds server connections with custom configuration values.","sig":null,"attributes":[{"value":"/ Builds server connections with custom configuration values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628708,"byte_end":628771,"line_start":200,"line_end":200,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628772,"byte_end":628775,"line_start":201,"line_end":201,"column_start":1,"column_end":4}},{"value":"/ Methods can be chained in order to set the configuration values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628776,"byte_end":628844,"line_start":202,"line_end":202,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628845,"byte_end":628848,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ The server is constructed by calling [`handshake`] and passing the I/O","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628849,"byte_end":628923,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/ handle that will back the HTTP/2 server.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628924,"byte_end":628968,"line_start":205,"line_end":205,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628969,"byte_end":628972,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ New instances of `Builder` are obtained via [`Builder::new`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":628973,"byte_end":629038,"line_start":207,"line_end":207,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629039,"byte_end":629042,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ See function level documentation for details on the various server","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629043,"byte_end":629113,"line_start":209,"line_end":209,"column_start":1,"column_end":71}},{"value":"/ configuration settings.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629114,"byte_end":629141,"line_start":210,"line_end":210,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629142,"byte_end":629145,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ [`Builder::new`]: struct.Builder.html#method.new","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629146,"byte_end":629198,"line_start":212,"line_end":212,"column_start":1,"column_end":53}},{"value":"/ [`handshake`]: struct.Builder.html#method.handshake","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629199,"byte_end":629254,"line_start":213,"line_end":213,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629255,"byte_end":629258,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629259,"byte_end":629273,"line_start":215,"line_end":215,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629274,"byte_end":629277,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629278,"byte_end":629285,"line_start":217,"line_end":217,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629286,"byte_end":629331,"line_start":218,"line_end":218,"column_start":1,"column_end":46}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629332,"byte_end":629356,"line_start":219,"line_end":219,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629357,"byte_end":629362,"line_start":220,"line_end":220,"column_start":1,"column_end":6}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629363,"byte_end":629420,"line_start":221,"line_end":221,"column_start":1,"column_end":58}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629421,"byte_end":629442,"line_start":222,"line_end":222,"column_start":1,"column_end":22}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629443,"byte_end":629450,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629451,"byte_end":629524,"line_start":224,"line_end":224,"column_start":1,"column_end":74}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629525,"byte_end":629542,"line_start":225,"line_end":225,"column_start":1,"column_end":18}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629543,"byte_end":629578,"line_start":226,"line_end":226,"column_start":1,"column_end":36}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629579,"byte_end":629618,"line_start":227,"line_end":227,"column_start":1,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629619,"byte_end":629656,"line_start":228,"line_end":228,"column_start":1,"column_end":38}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629657,"byte_end":629683,"line_start":229,"line_end":229,"column_start":1,"column_end":27}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629684,"byte_end":629700,"line_start":230,"line_end":230,"column_start":1,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629701,"byte_end":629708,"line_start":231,"line_end":231,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629709,"byte_end":629714,"line_start":232,"line_end":232,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629715,"byte_end":629737,"line_start":233,"line_end":233,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":629738,"byte_end":629745,"line_start":234,"line_end":234,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12093},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630873,"byte_end":630885,"line_start":269,"line_end":269,"column_start":12,"column_end":24},"name":"SendResponse","qualname":"::server::SendResponse","value":"SendResponse {  }","parent":null,"children":[{"krate":0,"index":12095}],"decl_id":null,"docs":" Send a response back to the client","sig":null,"attributes":[{"value":"/ Send a response back to the client","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630301,"byte_end":630339,"line_start":253,"line_end":253,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630340,"byte_end":630343,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ A `SendResponse` instance is provided when receiving a request and is used","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630344,"byte_end":630422,"line_start":255,"line_end":255,"column_start":1,"column_end":79}},{"value":"/ to send the associated response back to the client. It is also used to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630423,"byte_end":630497,"line_start":256,"line_end":256,"column_start":1,"column_end":75}},{"value":"/ explicitly reset the stream with a custom reason.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630498,"byte_end":630551,"line_start":257,"line_end":257,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630552,"byte_end":630555,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ It will also be used to initiate push promises linked with the associated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630556,"byte_end":630633,"line_start":259,"line_end":259,"column_start":1,"column_end":78}},{"value":"/ stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630634,"byte_end":630645,"line_start":260,"line_end":260,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630646,"byte_end":630649,"line_start":261,"line_end":261,"column_start":1,"column_end":4}},{"value":"/ If the `SendResponse` instance is dropped without sending a response, then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630650,"byte_end":630728,"line_start":262,"line_end":262,"column_start":1,"column_end":79}},{"value":"/ the HTTP/2 stream will be reset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630729,"byte_end":630765,"line_start":263,"line_end":263,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630766,"byte_end":630769,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630770,"byte_end":630815,"line_start":265,"line_end":265,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630816,"byte_end":630819,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630820,"byte_end":630844,"line_start":267,"line_end":267,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":3293},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631456,"byte_end":631474,"line_start":287,"line_end":287,"column_start":12,"column_end":30},"name":"SendPushedResponse","qualname":"::server::SendPushedResponse","value":"SendPushedResponse {  }","parent":null,"children":[{"krate":0,"index":3295}],"decl_id":null,"docs":" Send a response to a promised request","sig":null,"attributes":[{"value":"/ Send a response to a promised request","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630931,"byte_end":630972,"line_start":273,"line_end":273,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630973,"byte_end":630976,"line_start":274,"line_end":274,"column_start":1,"column_end":4}},{"value":"/ A `SendPushedResponse` instance is provided when promising a request and is used","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":630977,"byte_end":631061,"line_start":275,"line_end":275,"column_start":1,"column_end":85}},{"value":"/ to send the associated response to the client. It is also used to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631062,"byte_end":631131,"line_start":276,"line_end":276,"column_start":1,"column_end":70}},{"value":"/ explicitly reset the stream with a custom reason.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631132,"byte_end":631185,"line_start":277,"line_end":277,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631186,"byte_end":631189,"line_start":278,"line_end":278,"column_start":1,"column_end":4}},{"value":"/ It can not be used to initiate push promises.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631190,"byte_end":631239,"line_start":279,"line_end":279,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631240,"byte_end":631243,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ If the `SendPushedResponse` instance is dropped without sending a response, then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631244,"byte_end":631328,"line_start":281,"line_end":281,"column_start":1,"column_end":85}},{"value":"/ the HTTP/2 stream will be reset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631329,"byte_end":631365,"line_start":282,"line_end":282,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631366,"byte_end":631369,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ See [module] level docs for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631370,"byte_end":631415,"line_start":284,"line_end":284,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631416,"byte_end":631419,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ [module]: index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631420,"byte_end":631444,"line_start":286,"line_end":286,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":3298},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631655,"byte_end":631658,"line_start":293,"line_end":293,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SendPushedResponse<B> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3321},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633594,"byte_end":633603,"line_start":355,"line_end":355,"column_start":8,"column_end":17},"name":"handshake","qualname":"::server::handshake","value":"fn handshake<T>(T) -> Handshake<T, Bytes> where T: AsyncRead + AsyncWrite +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2 server with default configuration\n values backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2 server with default configuration","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632469,"byte_end":632538,"line_start":324,"line_end":324,"column_start":1,"column_end":70}},{"value":"/ values backed by `io`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632539,"byte_end":632565,"line_start":325,"line_end":325,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632566,"byte_end":632569,"line_start":326,"line_end":326,"column_start":1,"column_end":4}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632570,"byte_end":632645,"line_start":327,"line_end":327,"column_start":1,"column_end":76}},{"value":"/ the [HTTP/2 handshake]. See [Handshake] for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632646,"byte_end":632707,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632708,"byte_end":632711,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"/ Returns a future which resolves to the [`Connection`] instance once the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632712,"byte_end":632787,"line_start":330,"line_end":330,"column_start":1,"column_end":76}},{"value":"/ HTTP/2 handshake has been completed. The returned [`Connection`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632788,"byte_end":632856,"line_start":331,"line_end":331,"column_start":1,"column_end":69}},{"value":"/ instance will be using default configuration values. Use [`Builder`] to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632857,"byte_end":632932,"line_start":332,"line_end":332,"column_start":1,"column_end":76}},{"value":"/ customize the configuration values used by a [`Connection`] instance.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":632933,"byte_end":633006,"line_start":333,"line_end":333,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633007,"byte_end":633010,"line_start":334,"line_end":334,"column_start":1,"column_end":4}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633011,"byte_end":633088,"line_start":335,"line_end":335,"column_start":1,"column_end":78}},{"value":"/ [Handshake]: ../index.html#handshake","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633089,"byte_end":633129,"line_start":336,"line_end":336,"column_start":1,"column_end":41}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633130,"byte_end":633172,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633173,"byte_end":633176,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633177,"byte_end":633191,"line_start":339,"line_end":339,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633192,"byte_end":633195,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633196,"byte_end":633203,"line_start":341,"line_end":341,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633204,"byte_end":633249,"line_start":342,"line_end":342,"column_start":1,"column_end":46}},{"value":"/ # use h2::server;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633250,"byte_end":633271,"line_start":343,"line_end":343,"column_start":1,"column_end":22}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633272,"byte_end":633296,"line_start":344,"line_end":344,"column_start":1,"column_end":25}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633297,"byte_end":633302,"line_start":345,"line_end":345,"column_start":1,"column_end":6}},{"value":"/ # async fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633303,"byte_end":633366,"line_start":346,"line_end":346,"column_start":1,"column_end":64}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633367,"byte_end":633374,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ let connection = server::handshake(my_io).await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633375,"byte_end":633436,"line_start":348,"line_end":348,"column_start":1,"column_end":62}},{"value":"/ // The HTTP/2 handshake has completed, now use `connection` to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633437,"byte_end":633503,"line_start":349,"line_end":349,"column_start":1,"column_end":67}},{"value":"/ // accept inbound HTTP/2 streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633504,"byte_end":633541,"line_start":350,"line_end":350,"column_start":1,"column_end":38}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633542,"byte_end":633549,"line_start":351,"line_end":351,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633550,"byte_end":633555,"line_start":352,"line_end":352,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633556,"byte_end":633578,"line_start":353,"line_end":353,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633579,"byte_end":633586,"line_start":354,"line_end":354,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3327},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":634864,"byte_end":634870,"line_start":403,"line_end":403,"column_start":18,"column_end":24},"name":"accept","qualname":"<Connection<T, B>>::accept","value":"async fn accept<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Accept the next incoming request on this connection.\n","sig":null,"attributes":[{"value":"/ Accept the next incoming request on this connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":634790,"byte_end":634846,"line_start":402,"line_end":402,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3331},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":635084,"byte_end":635095,"line_start":410,"line_end":410,"column_start":12,"column_end":23},"name":"poll_accept","qualname":"<Connection<T, B>>::poll_accept","value":"fn poll_accept(&mut Self, &mut Context)\n-> Poll<Option<Result<(Request<RecvStream>, SendResponse<B>), crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3332},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636850,"byte_end":636872,"line_start":453,"line_end":453,"column_start":12,"column_end":34},"name":"set_target_window_size","qualname":"<Connection<T, B>>::set_target_window_size","value":"fn set_target_window_size(&mut Self, u32)","parent":null,"children":[],"decl_id":null,"docs":" Sets the target window size for the whole connection.","sig":null,"attributes":[{"value":"/ Sets the target window size for the whole connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636058,"byte_end":636115,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636120,"byte_end":636123,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ If `size` is greater than the current value, then a `WINDOW_UPDATE`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636128,"byte_end":636199,"line_start":438,"line_end":438,"column_start":5,"column_end":76}},{"value":"/ frame will be immediately sent to the remote, increasing the connection","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636204,"byte_end":636279,"line_start":439,"line_end":439,"column_start":5,"column_end":80}},{"value":"/ level window by `size - current_value`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636284,"byte_end":636327,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636332,"byte_end":636335,"line_start":441,"line_end":441,"column_start":5,"column_end":8}},{"value":"/ If `size` is less than the current value, nothing will happen","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636340,"byte_end":636405,"line_start":442,"line_end":442,"column_start":5,"column_end":70}},{"value":"/ immediately. However, as window capacity is released by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636410,"byte_end":636469,"line_start":443,"line_end":443,"column_start":5,"column_end":64}},{"value":"/ [`FlowControl`] instances, no `WINDOW_UPDATE` frames will be sent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636474,"byte_end":636543,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ out until the number of \"in flight\" bytes drops below `size`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636548,"byte_end":636613,"line_start":445,"line_end":445,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636618,"byte_end":636621,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636626,"byte_end":636658,"line_start":447,"line_end":447,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636663,"byte_end":636666,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ See [`FlowControl`] documentation for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636671,"byte_end":636726,"line_start":449,"line_end":449,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636731,"byte_end":636734,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636739,"byte_end":636786,"line_start":451,"line_end":451,"column_start":5,"column_end":52}},{"value":"/ [library level]: ../index.html#flow-control","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":636791,"byte_end":636838,"line_start":452,"line_end":452,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3333},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637507,"byte_end":637530,"line_start":471,"line_end":471,"column_start":12,"column_end":35},"name":"set_initial_window_size","qualname":"<Connection<T, B>>::set_initial_window_size","value":"fn set_initial_window_size(&mut Self, u32) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Set a new `INITIAL_WINDOW_SIZE` setting (in octets) for stream-level","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637011,"byte_end":637083,"line_start":458,"line_end":458,"column_start":5,"column_end":77}},{"value":"/ flow control for received data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637088,"byte_end":637123,"line_start":459,"line_end":459,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637128,"byte_end":637131,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ The `SETTINGS` will be sent to the remote, and only applied once the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637136,"byte_end":637208,"line_start":461,"line_end":461,"column_start":5,"column_end":77}},{"value":"/ remote acknowledges the change.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637213,"byte_end":637248,"line_start":462,"line_end":462,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637253,"byte_end":637256,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ This can be used to increase or decrease the window size for existing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637261,"byte_end":637334,"line_start":464,"line_end":464,"column_start":5,"column_end":78}},{"value":"/ streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637339,"byte_end":637351,"line_start":465,"line_end":465,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637356,"byte_end":637359,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637364,"byte_end":637376,"line_start":467,"line_end":467,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637381,"byte_end":637384,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a previous call is still pending acknowledgement","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637389,"byte_end":637461,"line_start":469,"line_end":469,"column_start":5,"column_end":77}},{"value":"/ from the remote endpoint.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637466,"byte_end":637495,"line_start":470,"line_end":470,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3334},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638015,"byte_end":638038,"line_start":485,"line_end":485,"column_start":12,"column_end":35},"name":"enable_connect_protocol","qualname":"<Connection<T, B>>::enable_connect_protocol","value":"fn enable_connect_protocol(&mut Self) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Enables the [extended CONNECT protocol].","sig":null,"attributes":[{"value":"/ Enables the [extended CONNECT protocol].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637714,"byte_end":637758,"line_start":477,"line_end":477,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637763,"byte_end":637766,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ [extended CONNECT protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637771,"byte_end":637859,"line_start":479,"line_end":479,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637864,"byte_end":637867,"line_start":480,"line_end":480,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637872,"byte_end":637884,"line_start":481,"line_end":481,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637889,"byte_end":637892,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Returns an error if a previous call is still pending acknowledgement","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637897,"byte_end":637969,"line_start":483,"line_end":483,"column_start":5,"column_end":77}},{"value":"/ from the remote endpoint.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":637974,"byte_end":638003,"line_start":484,"line_end":484,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":3335},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638824,"byte_end":638835,"line_start":503,"line_end":503,"column_start":12,"column_end":23},"name":"poll_closed","qualname":"<Connection<T, B>>::poll_closed","value":"fn poll_closed(&mut Self, &mut Context) -> Poll<Result<(), crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Ready` when the underlying connection has closed.","sig":null,"attributes":[{"value":"/ Returns `Ready` when the underlying connection has closed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638162,"byte_end":638224,"line_start":490,"line_end":490,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638229,"byte_end":638232,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ If any new inbound streams are received during a call to `poll_closed`,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638237,"byte_end":638312,"line_start":492,"line_end":492,"column_start":5,"column_end":80}},{"value":"/ they will be queued and returned on the next call to [`poll_accept`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638317,"byte_end":638390,"line_start":493,"line_end":493,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638395,"byte_end":638398,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ This function will advance the internal connection state, driving","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638403,"byte_end":638472,"line_start":495,"line_end":495,"column_start":5,"column_end":74}},{"value":"/ progress on all the other handles (e.g. [`RecvStream`] and [`SendStream`]).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638477,"byte_end":638556,"line_start":496,"line_end":496,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638561,"byte_end":638564,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ See [here](index.html#managing-the-connection) for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638569,"byte_end":638637,"line_start":498,"line_end":498,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638642,"byte_end":638645,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ [`poll_accept`]: struct.Connection.html#method.poll_accept","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638650,"byte_end":638712,"line_start":500,"line_end":500,"column_start":5,"column_end":67}},{"value":"/ [`RecvStream`]: ../struct.RecvStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638717,"byte_end":638762,"line_start":501,"line_end":501,"column_start":5,"column_end":50}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638767,"byte_end":638812,"line_start":502,"line_end":502,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639042,"byte_end":639052,"line_start":509,"line_end":509,"column_start":12,"column_end":22},"name":"poll_close","qualname":"<Connection<T, B>>::poll_close","value":"fn poll_close(&mut Self, &mut Context) -> Poll<Result<(), crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to poll_closed\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":638984,"byte_end":639030,"line_start":508,"line_end":508,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639737,"byte_end":639752,"line_start":525,"line_end":525,"column_start":12,"column_end":27},"name":"abrupt_shutdown","qualname":"<Connection<T, B>>::abrupt_shutdown","value":"fn abrupt_shutdown(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Sets the connection to a GOAWAY state.","sig":null,"attributes":[{"value":"/ Sets the connection to a GOAWAY state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639158,"byte_end":639200,"line_start":513,"line_end":513,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639205,"byte_end":639208,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ Does not terminate the connection. Must continue being polled to close","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639213,"byte_end":639287,"line_start":515,"line_end":515,"column_start":5,"column_end":79}},{"value":"/ connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639292,"byte_end":639307,"line_start":516,"line_end":516,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639312,"byte_end":639315,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ After flushing the GOAWAY frame, the connection is closed. Any","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639320,"byte_end":639386,"line_start":518,"line_end":518,"column_start":5,"column_end":71}},{"value":"/ outstanding streams do not prevent the connection from closing. This","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639391,"byte_end":639463,"line_start":519,"line_end":519,"column_start":5,"column_end":77}},{"value":"/ should usually be reserved for shutting down when something bad","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639468,"byte_end":639535,"line_start":520,"line_end":520,"column_start":5,"column_end":72}},{"value":"/ external to `h2` has happened, and open streams cannot be properly","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639540,"byte_end":639610,"line_start":521,"line_end":521,"column_start":5,"column_end":75}},{"value":"/ handled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639615,"byte_end":639627,"line_start":522,"line_end":522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639632,"byte_end":639635,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ For graceful shutdowns, see [`graceful_shutdown`](Connection::graceful_shutdown).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639640,"byte_end":639725,"line_start":524,"line_end":524,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640318,"byte_end":640335,"line_start":539,"line_end":539,"column_start":12,"column_end":29},"name":"graceful_shutdown","qualname":"<Connection<T, B>>::graceful_shutdown","value":"fn graceful_shutdown(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Starts a [graceful shutdown][1] process.","sig":null,"attributes":[{"value":"/ Starts a [graceful shutdown][1] process.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639844,"byte_end":639888,"line_start":529,"line_end":529,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639893,"byte_end":639896,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ Must continue being polled to close connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639901,"byte_end":639952,"line_start":531,"line_end":531,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639957,"byte_end":639960,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ It's possible to receive more requests after calling this method, since","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":639965,"byte_end":640040,"line_start":533,"line_end":533,"column_start":5,"column_end":80}},{"value":"/ they might have been in-flight from the client already. After about","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640045,"byte_end":640116,"line_start":534,"line_end":534,"column_start":5,"column_end":76}},{"value":"/ 1 RTT, no new requests should be accepted. Once all active streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640121,"byte_end":640191,"line_start":535,"line_end":535,"column_start":5,"column_end":75}},{"value":"/ have completed, the connection is closed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640196,"byte_end":640241,"line_start":536,"line_end":536,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640246,"byte_end":640249,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ [1]: http://httpwg.org/specs/rfc7540.html#GOAWAY","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640254,"byte_end":640306,"line_start":538,"line_end":538,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":3339},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640582,"byte_end":640591,"line_start":548,"line_end":548,"column_start":12,"column_end":21},"name":"ping_pong","qualname":"<Connection<T, B>>::ping_pong","value":"fn ping_pong(&mut Self) -> Option<PingPong>","parent":null,"children":[],"decl_id":null,"docs":" Takes a `PingPong` instance from the connection.","sig":null,"attributes":[{"value":"/ Takes a `PingPong` instance from the connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640406,"byte_end":640458,"line_start":543,"line_end":543,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640463,"byte_end":640466,"line_start":544,"line_end":544,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640471,"byte_end":640481,"line_start":545,"line_end":545,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640486,"byte_end":640489,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ This may only be called once. Calling multiple times will return `None`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640494,"byte_end":640570,"line_start":547,"line_end":547,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641146,"byte_end":641173,"line_start":561,"line_end":561,"column_start":12,"column_end":39},"name":"max_concurrent_send_streams","qualname":"<Connection<T, B>>::max_concurrent_send_streams","value":"fn max_concurrent_send_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by the server on this connection.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640697,"byte_end":640771,"line_start":552,"line_end":552,"column_start":5,"column_end":79}},{"value":"/ by the server on this connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640776,"byte_end":640813,"line_start":553,"line_end":553,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640818,"byte_end":640821,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ This limit is configured by the client peer by sending the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640826,"byte_end":640888,"line_start":555,"line_end":555,"column_start":5,"column_end":67}},{"value":"/ [`SETTINGS_MAX_CONCURRENT_STREAMS` parameter][1] in a `SETTINGS` frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640893,"byte_end":640968,"line_start":556,"line_end":556,"column_start":5,"column_end":80}},{"value":"/ This method returns the currently acknowledged value received from the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":640973,"byte_end":641047,"line_start":557,"line_end":557,"column_start":5,"column_end":79}},{"value":"/ remote.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641052,"byte_end":641063,"line_start":558,"line_end":558,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641068,"byte_end":641071,"line_start":559,"line_end":559,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641076,"byte_end":641134,"line_start":560,"line_end":560,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3341},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641841,"byte_end":641868,"line_start":576,"line_end":576,"column_start":12,"column_end":39},"name":"max_concurrent_recv_streams","qualname":"<Connection<T, B>>::max_concurrent_recv_streams","value":"fn max_concurrent_recv_streams(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum number of concurrent streams that may be initiated\n by the client on this connection.","sig":null,"attributes":[{"value":"/ Returns the maximum number of concurrent streams that may be initiated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641246,"byte_end":641320,"line_start":565,"line_end":565,"column_start":5,"column_end":79}},{"value":"/ by the client on this connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641325,"byte_end":641362,"line_start":566,"line_end":566,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641367,"byte_end":641370,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ This returns the value of the [`SETTINGS_MAX_CONCURRENT_STREAMS`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641375,"byte_end":641443,"line_start":568,"line_end":568,"column_start":5,"column_end":73}},{"value":"/ parameter][1] sent in a `SETTINGS` frame that has been","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641448,"byte_end":641506,"line_start":569,"line_end":569,"column_start":5,"column_end":63}},{"value":"/ acknowledged by the remote peer. The value to be sent is configured by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641511,"byte_end":641585,"line_start":570,"line_end":570,"column_start":5,"column_end":79}},{"value":"/ the [`Builder::max_concurrent_streams`][2] method before handshaking","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641590,"byte_end":641662,"line_start":571,"line_end":571,"column_start":5,"column_end":77}},{"value":"/ with the remote peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641667,"byte_end":641692,"line_start":572,"line_end":572,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641697,"byte_end":641700,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ [1]: https://tools.ietf.org/html/rfc7540#section-5.1.2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641705,"byte_end":641763,"line_start":574,"line_end":574,"column_start":5,"column_end":63}},{"value":"/ [2]: ../struct.Builder.html#method.max_concurrent_streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":641768,"byte_end":641829,"line_start":575,"line_end":575,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3345},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642402,"byte_end":642405,"line_start":599,"line_end":599,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Connection<T, B> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3347},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643382,"byte_end":643385,"line_start":634,"line_end":634,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Returns a new server builder instance initialized with default\n configuration values.","sig":null,"attributes":[{"value":"/ Returns a new server builder instance initialized with default","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642625,"byte_end":642691,"line_start":609,"line_end":609,"column_start":5,"column_end":71}},{"value":"/ configuration values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642696,"byte_end":642721,"line_start":610,"line_end":610,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642726,"byte_end":642729,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ Configuration methods can be chained on the return value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642734,"byte_end":642795,"line_start":612,"line_end":612,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642800,"byte_end":642803,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642808,"byte_end":642822,"line_start":614,"line_end":614,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642827,"byte_end":642830,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642835,"byte_end":642842,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642847,"byte_end":642892,"line_start":617,"line_end":617,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642897,"byte_end":642921,"line_start":618,"line_end":618,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642926,"byte_end":642931,"line_start":619,"line_end":619,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642936,"byte_end":642993,"line_start":620,"line_end":620,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642998,"byte_end":643019,"line_start":621,"line_end":621,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643024,"byte_end":643031,"line_start":622,"line_end":622,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643036,"byte_end":643109,"line_start":623,"line_end":623,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643114,"byte_end":643131,"line_start":624,"line_end":624,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643136,"byte_end":643171,"line_start":625,"line_end":625,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643176,"byte_end":643215,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643220,"byte_end":643257,"line_start":627,"line_end":627,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643262,"byte_end":643288,"line_start":628,"line_end":628,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643293,"byte_end":643309,"line_start":629,"line_end":629,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643314,"byte_end":643321,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643326,"byte_end":643331,"line_start":631,"line_end":631,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643336,"byte_end":643358,"line_start":632,"line_end":632,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643363,"byte_end":643370,"line_start":633,"line_end":633,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644647,"byte_end":644666,"line_start":673,"line_end":673,"column_start":12,"column_end":31},"name":"initial_window_size","qualname":"<Builder>::initial_window_size","value":"fn initial_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for stream-level\n flow control for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for stream-level","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643764,"byte_end":643830,"line_start":644,"line_end":644,"column_start":5,"column_end":71}},{"value":"/ flow control for received data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643835,"byte_end":643870,"line_start":645,"line_end":645,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643875,"byte_end":643878,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The initial window of a stream is used as part of flow control. For more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643883,"byte_end":643959,"line_start":647,"line_end":647,"column_start":5,"column_end":81}},{"value":"/ details, see [`FlowControl`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":643964,"byte_end":643997,"line_start":648,"line_end":648,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644002,"byte_end":644005,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644010,"byte_end":644042,"line_start":650,"line_end":650,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644047,"byte_end":644050,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644055,"byte_end":644102,"line_start":652,"line_end":652,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644107,"byte_end":644110,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644115,"byte_end":644129,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644134,"byte_end":644137,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644142,"byte_end":644149,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644154,"byte_end":644199,"line_start":657,"line_end":657,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644204,"byte_end":644228,"line_start":658,"line_end":658,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644233,"byte_end":644238,"line_start":659,"line_end":659,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644243,"byte_end":644300,"line_start":660,"line_end":660,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644305,"byte_end":644326,"line_start":661,"line_end":661,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644331,"byte_end":644338,"line_start":662,"line_end":662,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644343,"byte_end":644416,"line_start":663,"line_end":663,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644421,"byte_end":644438,"line_start":664,"line_end":664,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644443,"byte_end":644478,"line_start":665,"line_end":665,"column_start":5,"column_end":40}},{"value":"/     .initial_window_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644483,"byte_end":644522,"line_start":666,"line_end":666,"column_start":5,"column_end":44}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644527,"byte_end":644553,"line_start":667,"line_end":667,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644558,"byte_end":644574,"line_start":668,"line_end":668,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644579,"byte_end":644586,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644591,"byte_end":644596,"line_start":670,"line_end":670,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644601,"byte_end":644623,"line_start":671,"line_end":671,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644628,"byte_end":644635,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645689,"byte_end":645719,"line_start":707,"line_end":707,"column_start":12,"column_end":42},"name":"initial_connection_window_size","qualname":"<Builder>::initial_connection_window_size","value":"fn initial_connection_window_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the initial window size (in octets) for connection-level flow control\n for received data.","sig":null,"attributes":[{"value":"/ Indicates the initial window size (in octets) for connection-level flow control","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644787,"byte_end":644870,"line_start":678,"line_end":678,"column_start":5,"column_end":88}},{"value":"/ for received data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644875,"byte_end":644897,"line_start":679,"line_end":679,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644902,"byte_end":644905,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ The initial window of a connection is used as part of flow control. For more details,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":644910,"byte_end":644999,"line_start":681,"line_end":681,"column_start":5,"column_end":94}},{"value":"/ see [`FlowControl`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645004,"byte_end":645028,"line_start":682,"line_end":682,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645033,"byte_end":645036,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ The default value is 65,535.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645041,"byte_end":645073,"line_start":684,"line_end":684,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645078,"byte_end":645081,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ [`FlowControl`]: ../struct.FlowControl.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645086,"byte_end":645133,"line_start":686,"line_end":686,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645138,"byte_end":645141,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645146,"byte_end":645160,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645165,"byte_end":645168,"line_start":689,"line_end":689,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645173,"byte_end":645180,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645185,"byte_end":645230,"line_start":691,"line_end":691,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645235,"byte_end":645259,"line_start":692,"line_end":692,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645264,"byte_end":645269,"line_start":693,"line_end":693,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645274,"byte_end":645331,"line_start":694,"line_end":694,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645336,"byte_end":645357,"line_start":695,"line_end":695,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645362,"byte_end":645369,"line_start":696,"line_end":696,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645374,"byte_end":645447,"line_start":697,"line_end":697,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645452,"byte_end":645469,"line_start":698,"line_end":698,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645474,"byte_end":645509,"line_start":699,"line_end":699,"column_start":5,"column_end":40}},{"value":"/     .initial_connection_window_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645514,"byte_end":645564,"line_start":700,"line_end":700,"column_start":5,"column_end":55}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645569,"byte_end":645595,"line_start":701,"line_end":701,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645600,"byte_end":645616,"line_start":702,"line_end":702,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645621,"byte_end":645628,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645633,"byte_end":645638,"line_start":704,"line_end":704,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645643,"byte_end":645665,"line_start":705,"line_end":705,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645670,"byte_end":645677,"line_start":706,"line_end":706,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646914,"byte_end":646928,"line_start":745,"line_end":745,"column_start":12,"column_end":26},"name":"max_frame_size","qualname":"<Builder>::max_frame_size","value":"fn max_frame_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Indicates the size (in octets) of the largest HTTP/2 frame payload that the\n configured server is able to accept.","sig":null,"attributes":[{"value":"/ Indicates the size (in octets) of the largest HTTP/2 frame payload that the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645846,"byte_end":645925,"line_start":712,"line_end":712,"column_start":5,"column_end":84}},{"value":"/ configured server is able to accept.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645930,"byte_end":645970,"line_start":713,"line_end":713,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645975,"byte_end":645978,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ The sender may send data frames that are **smaller** than this value,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":645983,"byte_end":646056,"line_start":715,"line_end":715,"column_start":5,"column_end":78}},{"value":"/ but any data larger than `max` will be broken up into multiple `DATA`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646061,"byte_end":646134,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646139,"byte_end":646150,"line_start":717,"line_end":717,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646155,"byte_end":646158,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ The value **must** be between 16,384 and 16,777,215. The default value is 16,384.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646163,"byte_end":646248,"line_start":719,"line_end":719,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646253,"byte_end":646256,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646261,"byte_end":646275,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646280,"byte_end":646283,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646288,"byte_end":646295,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646300,"byte_end":646345,"line_start":724,"line_end":724,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646350,"byte_end":646374,"line_start":725,"line_end":725,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646379,"byte_end":646384,"line_start":726,"line_end":726,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646389,"byte_end":646446,"line_start":727,"line_end":727,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646451,"byte_end":646472,"line_start":728,"line_end":728,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646477,"byte_end":646484,"line_start":729,"line_end":729,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646489,"byte_end":646562,"line_start":730,"line_end":730,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646567,"byte_end":646584,"line_start":731,"line_end":731,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646589,"byte_end":646624,"line_start":732,"line_end":732,"column_start":5,"column_end":40}},{"value":"/     .max_frame_size(1_000_000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646629,"byte_end":646663,"line_start":733,"line_end":733,"column_start":5,"column_end":39}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646668,"byte_end":646694,"line_start":734,"line_end":734,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646699,"byte_end":646715,"line_start":735,"line_end":735,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646720,"byte_end":646727,"line_start":736,"line_end":736,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646732,"byte_end":646737,"line_start":737,"line_end":737,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646742,"byte_end":646764,"line_start":738,"line_end":738,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646769,"byte_end":646776,"line_start":739,"line_end":739,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646781,"byte_end":646784,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646789,"byte_end":646801,"line_start":741,"line_end":741,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646806,"byte_end":646809,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is not within the legal range specified","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646814,"byte_end":646887,"line_start":743,"line_end":743,"column_start":5,"column_end":78}},{"value":"/ above.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":646892,"byte_end":646902,"line_start":744,"line_end":744,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648095,"byte_end":648115,"line_start":779,"line_end":779,"column_start":12,"column_end":32},"name":"max_header_list_size","qualname":"<Builder>::max_header_list_size","value":"fn max_header_list_size(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max size of received header frames.","sig":null,"attributes":[{"value":"/ Sets the max size of received header frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647042,"byte_end":647090,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647095,"byte_end":647098,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ This advisory setting informs a peer of the maximum size of header list","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647103,"byte_end":647178,"line_start":752,"line_end":752,"column_start":5,"column_end":80}},{"value":"/ that the sender is prepared to accept, in octets. The value is based on","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647183,"byte_end":647258,"line_start":753,"line_end":753,"column_start":5,"column_end":80}},{"value":"/ the uncompressed size of header fields, including the length of the name","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647263,"byte_end":647339,"line_start":754,"line_end":754,"column_start":5,"column_end":81}},{"value":"/ and value in octets plus an overhead of 32 octets for each header field.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647344,"byte_end":647420,"line_start":755,"line_end":755,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647425,"byte_end":647428,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ This setting is also used to limit the maximum amount of data that is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647433,"byte_end":647506,"line_start":757,"line_end":757,"column_start":5,"column_end":78}},{"value":"/ buffered to decode HEADERS frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647511,"byte_end":647549,"line_start":758,"line_end":758,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647554,"byte_end":647557,"line_start":759,"line_end":759,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647562,"byte_end":647576,"line_start":760,"line_end":760,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647581,"byte_end":647584,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647589,"byte_end":647596,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647601,"byte_end":647646,"line_start":763,"line_end":763,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647651,"byte_end":647675,"line_start":764,"line_end":764,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647680,"byte_end":647685,"line_start":765,"line_end":765,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647690,"byte_end":647747,"line_start":766,"line_end":766,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647752,"byte_end":647773,"line_start":767,"line_end":767,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647778,"byte_end":647785,"line_start":768,"line_end":768,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647790,"byte_end":647863,"line_start":769,"line_end":769,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647868,"byte_end":647885,"line_start":770,"line_end":770,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647890,"byte_end":647925,"line_start":771,"line_end":771,"column_start":5,"column_end":40}},{"value":"/     .max_header_list_size(16 * 1024)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647930,"byte_end":647970,"line_start":772,"line_end":772,"column_start":5,"column_end":45}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":647975,"byte_end":648001,"line_start":773,"line_end":773,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648006,"byte_end":648022,"line_start":774,"line_end":774,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648027,"byte_end":648034,"line_start":775,"line_end":775,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648039,"byte_end":648044,"line_start":776,"line_end":776,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648049,"byte_end":648071,"line_start":777,"line_end":777,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648076,"byte_end":648083,"line_start":778,"line_end":778,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649931,"byte_end":649953,"line_start":827,"line_end":827,"column_start":12,"column_end":34},"name":"max_concurrent_streams","qualname":"<Builder>::max_concurrent_streams","value":"fn max_concurrent_streams(&mut Self, u32) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648235,"byte_end":648285,"line_start":784,"line_end":784,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648290,"byte_end":648293,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ The maximum concurrent streams setting only controls the maximum number","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648298,"byte_end":648373,"line_start":786,"line_end":786,"column_start":5,"column_end":80}},{"value":"/ of streams that can be initiated by the remote peer. In other words,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648378,"byte_end":648450,"line_start":787,"line_end":787,"column_start":5,"column_end":77}},{"value":"/ when this setting is set to 100, this does not limit the number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648455,"byte_end":648525,"line_start":788,"line_end":788,"column_start":5,"column_end":75}},{"value":"/ concurrent streams that can be created by the caller.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648530,"byte_end":648587,"line_start":789,"line_end":789,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648592,"byte_end":648595,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ It is recommended that this value be no smaller than 100, so as to not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648600,"byte_end":648674,"line_start":791,"line_end":791,"column_start":5,"column_end":79}},{"value":"/ unnecessarily limit parallelism. However, any value is legal, including","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648679,"byte_end":648754,"line_start":792,"line_end":792,"column_start":5,"column_end":80}},{"value":"/ 0. If `max` is set to 0, then the remote will not be permitted to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648759,"byte_end":648828,"line_start":793,"line_end":793,"column_start":5,"column_end":74}},{"value":"/ initiate streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648833,"byte_end":648854,"line_start":794,"line_end":794,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648859,"byte_end":648862,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ Note that streams in the reserved state, i.e., push promises that have","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648867,"byte_end":648941,"line_start":796,"line_end":796,"column_start":5,"column_end":79}},{"value":"/ been reserved but the stream has not started, do not count against this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":648946,"byte_end":649021,"line_start":797,"line_end":797,"column_start":5,"column_end":80}},{"value":"/ setting.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649026,"byte_end":649038,"line_start":798,"line_end":798,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649043,"byte_end":649046,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ Also note that if the remote *does* exceed the value set here, it is not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649051,"byte_end":649127,"line_start":800,"line_end":800,"column_start":5,"column_end":81}},{"value":"/ a protocol level error. Instead, the `h2` library will immediately reset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649132,"byte_end":649208,"line_start":801,"line_end":801,"column_start":5,"column_end":81}},{"value":"/ the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649213,"byte_end":649228,"line_start":802,"line_end":802,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649233,"byte_end":649236,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ See [Section 5.1.2] in the HTTP/2 spec for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649241,"byte_end":649301,"line_start":804,"line_end":804,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649306,"byte_end":649309,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ [Section 5.1.2]: https://http2.github.io/http2-spec/#rfc.section.5.1.2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649314,"byte_end":649388,"line_start":806,"line_end":806,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649393,"byte_end":649396,"line_start":807,"line_end":807,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649401,"byte_end":649415,"line_start":808,"line_end":808,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649420,"byte_end":649423,"line_start":809,"line_end":809,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649428,"byte_end":649435,"line_start":810,"line_end":810,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649440,"byte_end":649485,"line_start":811,"line_end":811,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649490,"byte_end":649514,"line_start":812,"line_end":812,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649519,"byte_end":649524,"line_start":813,"line_end":813,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649529,"byte_end":649586,"line_start":814,"line_end":814,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649591,"byte_end":649612,"line_start":815,"line_end":815,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649617,"byte_end":649624,"line_start":816,"line_end":816,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649629,"byte_end":649702,"line_start":817,"line_end":817,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649707,"byte_end":649724,"line_start":818,"line_end":818,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649729,"byte_end":649764,"line_start":819,"line_end":819,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_streams(1000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649769,"byte_end":649806,"line_start":820,"line_end":820,"column_start":5,"column_end":42}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649811,"byte_end":649837,"line_start":821,"line_end":821,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649842,"byte_end":649858,"line_start":822,"line_end":822,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649863,"byte_end":649870,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649875,"byte_end":649880,"line_start":824,"line_end":824,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649885,"byte_end":649907,"line_start":825,"line_end":825,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":649912,"byte_end":649919,"line_start":826,"line_end":826,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651701,"byte_end":651729,"line_start":873,"line_end":873,"column_start":12,"column_end":40},"name":"max_concurrent_reset_streams","qualname":"<Builder>::max_concurrent_reset_streams","value":"fn max_concurrent_reset_streams(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent locally reset streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650075,"byte_end":650139,"line_start":832,"line_end":832,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650144,"byte_end":650147,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset by either calling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650152,"byte_end":650207,"line_start":834,"line_end":834,"column_start":5,"column_end":60}},{"value":"/ [`SendResponse::send_reset`] or by dropping a [`SendResponse`] instance","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650212,"byte_end":650287,"line_start":835,"line_end":835,"column_start":5,"column_end":80}},{"value":"/ before completing the stream, the HTTP/2 specification requires that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650292,"byte_end":650364,"line_start":836,"line_end":836,"column_start":5,"column_end":77}},{"value":"/ any further frames received for that stream must be ignored for \"some","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650369,"byte_end":650442,"line_start":837,"line_end":837,"column_start":5,"column_end":78}},{"value":"/ time\".","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650447,"byte_end":650457,"line_start":838,"line_end":838,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650462,"byte_end":650465,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650470,"byte_end":650546,"line_start":840,"line_end":840,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650551,"byte_end":650626,"line_start":841,"line_end":841,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650631,"byte_end":650666,"line_start":842,"line_end":842,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650671,"byte_end":650674,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ The `max_concurrent_reset_streams` setting configures sets an upper","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650679,"byte_end":650750,"line_start":844,"line_end":844,"column_start":5,"column_end":76}},{"value":"/ bound on the amount of state that is maintained. When this max value is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650755,"byte_end":650830,"line_start":845,"line_end":845,"column_start":5,"column_end":80}},{"value":"/ reached, the oldest reset stream is purged from memory.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650835,"byte_end":650894,"line_start":846,"line_end":846,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650899,"byte_end":650902,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650907,"byte_end":650983,"line_start":848,"line_end":848,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":650988,"byte_end":651059,"line_start":849,"line_end":849,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651064,"byte_end":651111,"line_start":850,"line_end":850,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651116,"byte_end":651119,"line_start":851,"line_end":851,"column_start":5,"column_end":8}},{"value":"/ The default value is 10.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651124,"byte_end":651152,"line_start":852,"line_end":852,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651157,"byte_end":651160,"line_start":853,"line_end":853,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651165,"byte_end":651179,"line_start":854,"line_end":854,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651184,"byte_end":651187,"line_start":855,"line_end":855,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651192,"byte_end":651199,"line_start":856,"line_end":856,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651204,"byte_end":651249,"line_start":857,"line_end":857,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651254,"byte_end":651278,"line_start":858,"line_end":858,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651283,"byte_end":651288,"line_start":859,"line_end":859,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651293,"byte_end":651350,"line_start":860,"line_end":860,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651355,"byte_end":651376,"line_start":861,"line_end":861,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651381,"byte_end":651388,"line_start":862,"line_end":862,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651393,"byte_end":651466,"line_start":863,"line_end":863,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651471,"byte_end":651488,"line_start":864,"line_end":864,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651493,"byte_end":651528,"line_start":865,"line_end":865,"column_start":5,"column_end":40}},{"value":"/     .max_concurrent_reset_streams(1000)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651533,"byte_end":651576,"line_start":866,"line_end":866,"column_start":5,"column_end":48}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651581,"byte_end":651607,"line_start":867,"line_end":867,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651612,"byte_end":651628,"line_start":868,"line_end":868,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651633,"byte_end":651640,"line_start":869,"line_end":869,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651645,"byte_end":651650,"line_start":870,"line_end":870,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651655,"byte_end":651677,"line_start":871,"line_end":871,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651682,"byte_end":651689,"line_start":872,"line_end":872,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652324,"byte_end":652344,"line_start":890,"line_end":890,"column_start":12,"column_end":32},"name":"max_send_buffer_size","qualname":"<Builder>::max_send_buffer_size","value":"fn max_send_buffer_size(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum send buffer size per stream.","sig":null,"attributes":[{"value":"/ Sets the maximum send buffer size per stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651829,"byte_end":651878,"line_start":878,"line_end":878,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651883,"byte_end":651886,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ Once a stream has buffered up to (or over) the maximum, the stream's","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651891,"byte_end":651963,"line_start":880,"line_end":880,"column_start":5,"column_end":77}},{"value":"/ flow control will not \"poll\" additional capacity. Once bytes for the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":651968,"byte_end":652040,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/ stream have been written to the connection, the send buffer capacity","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652045,"byte_end":652117,"line_start":882,"line_end":882,"column_start":5,"column_end":77}},{"value":"/ will be freed up again.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652122,"byte_end":652149,"line_start":883,"line_end":883,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652154,"byte_end":652157,"line_start":884,"line_end":884,"column_start":5,"column_end":8}},{"value":"/ The default is currently ~400MB, but may change.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652162,"byte_end":652214,"line_start":885,"line_end":885,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652219,"byte_end":652222,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652227,"byte_end":652239,"line_start":887,"line_end":887,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652244,"byte_end":652247,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ This function panics if `max` is larger than `u32::MAX`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652252,"byte_end":652312,"line_start":889,"line_end":889,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":3355},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654159,"byte_end":654180,"line_start":938,"line_end":938,"column_start":12,"column_end":33},"name":"reset_stream_duration","qualname":"<Builder>::reset_stream_duration","value":"fn reset_stream_duration(&mut Self, Duration) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the maximum number of concurrent locally reset streams.","sig":null,"attributes":[{"value":"/ Sets the maximum number of concurrent locally reset streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652496,"byte_end":652560,"line_start":896,"line_end":896,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652565,"byte_end":652568,"line_start":897,"line_end":897,"column_start":5,"column_end":8}},{"value":"/ When a stream is explicitly reset by either calling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652573,"byte_end":652628,"line_start":898,"line_end":898,"column_start":5,"column_end":60}},{"value":"/ [`SendResponse::send_reset`] or by dropping a [`SendResponse`] instance","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652633,"byte_end":652708,"line_start":899,"line_end":899,"column_start":5,"column_end":80}},{"value":"/ before completing the stream, the HTTP/2 specification requires that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652713,"byte_end":652785,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ any further frames received for that stream must be ignored for \"some","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652790,"byte_end":652863,"line_start":901,"line_end":901,"column_start":5,"column_end":78}},{"value":"/ time\".","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652868,"byte_end":652878,"line_start":902,"line_end":902,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652883,"byte_end":652886,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ In order to satisfy the specification, internal state must be maintained","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652891,"byte_end":652967,"line_start":904,"line_end":904,"column_start":5,"column_end":81}},{"value":"/ to implement the behavior. This state grows linearly with the number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":652972,"byte_end":653047,"line_start":905,"line_end":905,"column_start":5,"column_end":80}},{"value":"/ streams that are locally reset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653052,"byte_end":653087,"line_start":906,"line_end":906,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653092,"byte_end":653095,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ The `reset_stream_duration` setting configures the max amount of time","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653100,"byte_end":653173,"line_start":908,"line_end":908,"column_start":5,"column_end":78}},{"value":"/ this state will be maintained in memory. Once the duration elapses, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653178,"byte_end":653253,"line_start":909,"line_end":909,"column_start":5,"column_end":80}},{"value":"/ stream state is purged from memory.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653258,"byte_end":653297,"line_start":910,"line_end":910,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653302,"byte_end":653305,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ Once the stream has been fully purged from memory, any additional frames","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653310,"byte_end":653386,"line_start":912,"line_end":912,"column_start":5,"column_end":81}},{"value":"/ received for that stream will result in a connection level protocol","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653391,"byte_end":653462,"line_start":913,"line_end":913,"column_start":5,"column_end":76}},{"value":"/ error, forcing the connection to terminate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653467,"byte_end":653514,"line_start":914,"line_end":914,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653519,"byte_end":653522,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ The default value is 30 seconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653527,"byte_end":653563,"line_start":916,"line_end":916,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653568,"byte_end":653571,"line_start":917,"line_end":917,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653576,"byte_end":653590,"line_start":918,"line_end":918,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653595,"byte_end":653598,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653603,"byte_end":653610,"line_start":920,"line_end":920,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653615,"byte_end":653660,"line_start":921,"line_end":921,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653665,"byte_end":653689,"line_start":922,"line_end":922,"column_start":5,"column_end":29}},{"value":"/ # use std::time::Duration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653694,"byte_end":653724,"line_start":923,"line_end":923,"column_start":5,"column_end":35}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653729,"byte_end":653734,"line_start":924,"line_end":924,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653739,"byte_end":653796,"line_start":925,"line_end":925,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653801,"byte_end":653822,"line_start":926,"line_end":926,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653827,"byte_end":653834,"line_start":927,"line_end":927,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653839,"byte_end":653912,"line_start":928,"line_end":928,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653917,"byte_end":653934,"line_start":929,"line_end":929,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653939,"byte_end":653974,"line_start":930,"line_end":930,"column_start":5,"column_end":40}},{"value":"/     .reset_stream_duration(Duration::from_secs(10))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":653979,"byte_end":654034,"line_start":931,"line_end":931,"column_start":5,"column_end":60}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654039,"byte_end":654065,"line_start":932,"line_end":932,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654070,"byte_end":654086,"line_start":933,"line_end":933,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654091,"byte_end":654098,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654103,"byte_end":654108,"line_start":935,"line_end":935,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654113,"byte_end":654135,"line_start":936,"line_end":936,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654140,"byte_end":654147,"line_start":937,"line_end":937,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654445,"byte_end":654468,"line_start":946,"line_end":946,"column_start":12,"column_end":35},"name":"enable_connect_protocol","qualname":"<Builder>::enable_connect_protocol","value":"fn enable_connect_protocol(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Enables the [extended CONNECT protocol].","sig":null,"attributes":[{"value":"/ Enables the [extended CONNECT protocol].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654288,"byte_end":654332,"line_start":943,"line_end":943,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654337,"byte_end":654340,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ [extended CONNECT protocol]: https://datatracker.ietf.org/doc/html/rfc8441#section-4","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654345,"byte_end":654433,"line_start":945,"line_end":945,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656476,"byte_end":656485,"line_start":1007,"line_end":1007,"column_start":12,"column_end":21},"name":"handshake","qualname":"<Builder>::handshake","value":"fn handshake<T, B>(&Self, T) -> Handshake<T, B> where T: AsyncRead +\nAsyncWrite + Unpin, B: Buf + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a new configured HTTP/2 server backed by `io`.","sig":null,"attributes":[{"value":"/ Creates a new configured HTTP/2 server backed by `io`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654579,"byte_end":654637,"line_start":951,"line_end":951,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654642,"byte_end":654645,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ It is expected that `io` already be in an appropriate state to commence","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654650,"byte_end":654725,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/ the [HTTP/2 handshake]. See [Handshake] for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654730,"byte_end":654791,"line_start":954,"line_end":954,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654796,"byte_end":654799,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ Returns a future which resolves to the [`Connection`] instance once the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654804,"byte_end":654879,"line_start":956,"line_end":956,"column_start":5,"column_end":80}},{"value":"/ HTTP/2 handshake has been completed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654884,"byte_end":654924,"line_start":957,"line_end":957,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654929,"byte_end":654932,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ This function also allows the caller to configure the send payload data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":654937,"byte_end":655012,"line_start":959,"line_end":959,"column_start":5,"column_end":80}},{"value":"/ type. See [Outbound data type] for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655017,"byte_end":655069,"line_start":960,"line_end":960,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655074,"byte_end":655077,"line_start":961,"line_end":961,"column_start":5,"column_end":8}},{"value":"/ [HTTP/2 handshake]: http://httpwg.org/specs/rfc7540.html#ConnectionHeader","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655082,"byte_end":655159,"line_start":962,"line_end":962,"column_start":5,"column_end":82}},{"value":"/ [Handshake]: ../index.html#handshake","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655164,"byte_end":655204,"line_start":963,"line_end":963,"column_start":5,"column_end":45}},{"value":"/ [`Connection`]: struct.Connection.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655209,"byte_end":655251,"line_start":964,"line_end":964,"column_start":5,"column_end":47}},{"value":"/ [Outbound data type]: ../index.html#outbound-data-type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655256,"byte_end":655315,"line_start":965,"line_end":965,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655320,"byte_end":655323,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655328,"byte_end":655342,"line_start":967,"line_end":967,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655347,"byte_end":655350,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ Basic usage:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655355,"byte_end":655371,"line_start":969,"line_end":969,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655376,"byte_end":655379,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655384,"byte_end":655391,"line_start":971,"line_end":971,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655396,"byte_end":655441,"line_start":972,"line_end":972,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655446,"byte_end":655470,"line_start":973,"line_end":973,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655475,"byte_end":655480,"line_start":974,"line_end":974,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655485,"byte_end":655542,"line_start":975,"line_end":975,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655547,"byte_end":655568,"line_start":976,"line_end":976,"column_start":5,"column_end":26}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655573,"byte_end":655580,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655585,"byte_end":655658,"line_start":978,"line_end":978,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655663,"byte_end":655680,"line_start":979,"line_end":979,"column_start":5,"column_end":22}},{"value":"/ let server_fut = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655685,"byte_end":655720,"line_start":980,"line_end":980,"column_start":5,"column_end":40}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655725,"byte_end":655751,"line_start":981,"line_end":981,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655756,"byte_end":655772,"line_start":982,"line_end":982,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655777,"byte_end":655784,"line_start":983,"line_end":983,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655789,"byte_end":655794,"line_start":984,"line_end":984,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655799,"byte_end":655821,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655826,"byte_end":655833,"line_start":986,"line_end":986,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655838,"byte_end":655841,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ Configures the send-payload data type. In this case, the outbound data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655846,"byte_end":655920,"line_start":988,"line_end":988,"column_start":5,"column_end":79}},{"value":"/ type will be `&'static [u8]`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655925,"byte_end":655958,"line_start":989,"line_end":989,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655963,"byte_end":655966,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655971,"byte_end":655978,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":655983,"byte_end":656028,"line_start":992,"line_end":992,"column_start":5,"column_end":50}},{"value":"/ # use h2::server::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656033,"byte_end":656057,"line_start":993,"line_end":993,"column_start":5,"column_end":29}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656062,"byte_end":656067,"line_start":994,"line_end":994,"column_start":5,"column_end":10}},{"value":"/ # fn doc<T: AsyncRead + AsyncWrite + Unpin>(my_io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656072,"byte_end":656129,"line_start":995,"line_end":995,"column_start":5,"column_end":62}},{"value":"/ # -> Handshake<T, &'static [u8]>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656134,"byte_end":656170,"line_start":996,"line_end":996,"column_start":5,"column_end":41}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656175,"byte_end":656182,"line_start":997,"line_end":997,"column_start":5,"column_end":12}},{"value":"/ // `server_fut` is a future representing the completion of the HTTP/2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656187,"byte_end":656260,"line_start":998,"line_end":998,"column_start":5,"column_end":78}},{"value":"/ // handshake.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656265,"byte_end":656282,"line_start":999,"line_end":999,"column_start":5,"column_end":22}},{"value":"/ let server_fut: Handshake<_, &'static [u8]> = Builder::new()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656287,"byte_end":656351,"line_start":1000,"line_end":1000,"column_start":5,"column_end":69}},{"value":"/     .handshake(my_io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656356,"byte_end":656382,"line_start":1001,"line_end":1001,"column_start":5,"column_end":31}},{"value":"/ # server_fut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656387,"byte_end":656403,"line_start":1002,"line_end":1002,"column_start":5,"column_end":21}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656408,"byte_end":656415,"line_start":1003,"line_end":1003,"column_start":5,"column_end":12}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656420,"byte_end":656425,"line_start":1004,"line_end":1004,"column_start":5,"column_end":10}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656430,"byte_end":656452,"line_start":1005,"line_end":1005,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656457,"byte_end":656464,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3361},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656702,"byte_end":656709,"line_start":1017,"line_end":1017,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Builder","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3364},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657555,"byte_end":657568,"line_start":1041,"line_end":1041,"column_start":12,"column_end":25},"name":"send_response","qualname":"<SendResponse<B>>::send_response","value":"fn send_response(&mut Self, Response<()>, bool)\n-> Result<SendStream<B>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Send a response to a client request.","sig":null,"attributes":[{"value":"/ Send a response to a client request.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656826,"byte_end":656866,"line_start":1025,"line_end":1025,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656871,"byte_end":656874,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ On success, a [`SendStream`] instance is returned. This instance can be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656879,"byte_end":656954,"line_start":1027,"line_end":1027,"column_start":5,"column_end":80}},{"value":"/ used to stream the response body and send trailers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656959,"byte_end":657014,"line_start":1028,"line_end":1028,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657019,"byte_end":657022,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ If a body or trailers will be sent on the returned [`SendStream`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657027,"byte_end":657096,"line_start":1030,"line_end":1030,"column_start":5,"column_end":74}},{"value":"/ instance, then `end_of_stream` must be set to `false` when calling this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657101,"byte_end":657176,"line_start":1031,"line_end":1031,"column_start":5,"column_end":80}},{"value":"/ function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657181,"byte_end":657194,"line_start":1032,"line_end":1032,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657199,"byte_end":657202,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ The [`SendResponse`] instance is already associated with a received","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657207,"byte_end":657278,"line_start":1034,"line_end":1034,"column_start":5,"column_end":76}},{"value":"/ request.  This function may only be called once per instance and only if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657283,"byte_end":657359,"line_start":1035,"line_end":1035,"column_start":5,"column_end":81}},{"value":"/ [`send_reset`] has not been previously called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657364,"byte_end":657414,"line_start":1036,"line_end":1036,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657419,"byte_end":657422,"line_start":1037,"line_end":1037,"column_start":5,"column_end":8}},{"value":"/ [`SendResponse`]: #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657427,"byte_end":657450,"line_start":1038,"line_end":1038,"column_start":5,"column_end":28}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657455,"byte_end":657500,"line_start":1039,"line_end":1039,"column_start":5,"column_end":50}},{"value":"/ [`send_reset`]: #method.send_reset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657505,"byte_end":657543,"line_start":1040,"line_end":1040,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658032,"byte_end":658044,"line_start":1057,"line_end":1057,"column_start":12,"column_end":24},"name":"push_request","qualname":"<SendResponse<B>>::push_request","value":"fn push_request(&mut Self, Request<()>)\n-> Result<SendPushedResponse<B>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Push a request and response to the client","sig":null,"attributes":[{"value":"/ Push a request and response to the client","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657870,"byte_end":657915,"line_start":1052,"line_end":1052,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657920,"byte_end":657923,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ On success, a [`SendResponse`] instance is returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657928,"byte_end":657984,"line_start":1054,"line_end":1054,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657989,"byte_end":657992,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ [`SendResponse`]: #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":657997,"byte_end":658020,"line_start":1056,"line_end":1056,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658964,"byte_end":658974,"line_start":1084,"line_end":1084,"column_start":12,"column_end":22},"name":"send_reset","qualname":"<SendResponse<B>>::send_reset","value":"fn send_reset(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Send a stream reset to the peer.","sig":null,"attributes":[{"value":"/ Send a stream reset to the peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658361,"byte_end":658397,"line_start":1069,"line_end":1069,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658402,"byte_end":658405,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ This essentially cancels the stream, including any inbound or outbound","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658410,"byte_end":658484,"line_start":1071,"line_end":1071,"column_start":5,"column_end":79}},{"value":"/ data streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658489,"byte_end":658506,"line_start":1072,"line_end":1072,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658511,"byte_end":658514,"line_start":1073,"line_end":1073,"column_start":5,"column_end":8}},{"value":"/ If this function is called before [`send_response`], a call to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658519,"byte_end":658585,"line_start":1074,"line_end":1074,"column_start":5,"column_end":71}},{"value":"/ [`send_response`] will result in an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658590,"byte_end":658636,"line_start":1075,"line_end":1075,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658641,"byte_end":658644,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ If this function is called while a [`SendStream`] instance is active,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658649,"byte_end":658722,"line_start":1077,"line_end":1077,"column_start":5,"column_end":78}},{"value":"/ any further use of the instance will result in an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658727,"byte_end":658787,"line_start":1078,"line_end":1078,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658792,"byte_end":658795,"line_start":1079,"line_end":1079,"column_start":5,"column_end":8}},{"value":"/ This function should only be called once.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658800,"byte_end":658845,"line_start":1080,"line_end":1080,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658850,"byte_end":658853,"line_start":1081,"line_end":1081,"column_start":5,"column_end":8}},{"value":"/ [`send_response`]: #method.send_response","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658858,"byte_end":658902,"line_start":1082,"line_end":1082,"column_start":5,"column_end":49}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":658907,"byte_end":658952,"line_start":1083,"line_end":1083,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659539,"byte_end":659549,"line_start":1100,"line_end":1100,"column_start":12,"column_end":22},"name":"poll_reset","qualname":"<SendResponse<B>>::poll_reset","value":"fn poll_reset(&mut Self, &mut Context) -> Poll<Result<Reason, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to be notified when the client resets this stream.","sig":null,"attributes":[{"value":"/ Polls to be notified when the client resets this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659053,"byte_end":659113,"line_start":1088,"line_end":1088,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659118,"byte_end":659121,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ If stream is still open, this returns `Poll::Pending`, and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659126,"byte_end":659188,"line_start":1090,"line_end":1090,"column_start":5,"column_end":67}},{"value":"/ registers the task to be notified if a `RST_STREAM` is received.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659193,"byte_end":659261,"line_start":1091,"line_end":1091,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659266,"byte_end":659269,"line_start":1092,"line_end":1092,"column_start":5,"column_end":8}},{"value":"/ If a `RST_STREAM` frame is received for this stream, calling this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659274,"byte_end":659343,"line_start":1093,"line_end":1093,"column_start":5,"column_end":74}},{"value":"/ method will yield the `Reason` for the reset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659348,"byte_end":659397,"line_start":1094,"line_end":1094,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659402,"byte_end":659405,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659410,"byte_end":659421,"line_start":1096,"line_end":1096,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659426,"byte_end":659429,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ Calling this method after having called `send_response` will return","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659434,"byte_end":659505,"line_start":1098,"line_end":1098,"column_start":5,"column_end":76}},{"value":"/ a user error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659510,"byte_end":659527,"line_start":1099,"line_end":1099,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3370},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659852,"byte_end":659861,"line_start":1109,"line_end":1109,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<SendResponse<B>>::stream_id","value":"fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659699,"byte_end":659748,"line_start":1104,"line_end":1104,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659753,"byte_end":659756,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659761,"byte_end":659773,"line_start":1106,"line_end":1106,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659778,"byte_end":659781,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":659786,"byte_end":659840,"line_start":1108,"line_end":1108,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660778,"byte_end":660791,"line_start":1133,"line_end":1133,"column_start":12,"column_end":25},"name":"send_response","qualname":"<SendPushedResponse<B>>::send_response","value":"fn send_response(&mut Self, Response<()>, bool)\n-> Result<SendStream<B>, crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Send a response to a promised request.","sig":null,"attributes":[{"value":"/ Send a response to a promised request.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660043,"byte_end":660085,"line_start":1117,"line_end":1117,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660090,"byte_end":660093,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ On success, a [`SendStream`] instance is returned. This instance can be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660098,"byte_end":660173,"line_start":1119,"line_end":1119,"column_start":5,"column_end":80}},{"value":"/ used to stream the response body and send trailers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660178,"byte_end":660233,"line_start":1120,"line_end":1120,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660238,"byte_end":660241,"line_start":1121,"line_end":1121,"column_start":5,"column_end":8}},{"value":"/ If a body or trailers will be sent on the returned [`SendStream`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660246,"byte_end":660315,"line_start":1122,"line_end":1122,"column_start":5,"column_end":74}},{"value":"/ instance, then `end_of_stream` must be set to `false` when calling this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660320,"byte_end":660395,"line_start":1123,"line_end":1123,"column_start":5,"column_end":80}},{"value":"/ function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660400,"byte_end":660413,"line_start":1124,"line_end":1124,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660418,"byte_end":660421,"line_start":1125,"line_end":1125,"column_start":5,"column_end":8}},{"value":"/ The [`SendPushedResponse`] instance is associated with a promised","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660426,"byte_end":660495,"line_start":1126,"line_end":1126,"column_start":5,"column_end":74}},{"value":"/ request.  This function may only be called once per instance and only if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660500,"byte_end":660576,"line_start":1127,"line_end":1127,"column_start":5,"column_end":81}},{"value":"/ [`send_reset`] has not been previously called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660581,"byte_end":660631,"line_start":1128,"line_end":1128,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660636,"byte_end":660639,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ [`SendPushedResponse`]: #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660644,"byte_end":660673,"line_start":1130,"line_end":1130,"column_start":5,"column_end":34}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660678,"byte_end":660723,"line_start":1131,"line_end":1131,"column_start":5,"column_end":50}},{"value":"/ [`send_reset`]: #method.send_reset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660728,"byte_end":660766,"line_start":1132,"line_end":1132,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3374},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661592,"byte_end":661602,"line_start":1156,"line_end":1156,"column_start":12,"column_end":22},"name":"send_reset","qualname":"<SendPushedResponse<B>>::send_reset","value":"fn send_reset(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Send a stream reset to the peer.","sig":null,"attributes":[{"value":"/ Send a stream reset to the peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660989,"byte_end":661025,"line_start":1141,"line_end":1141,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661030,"byte_end":661033,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}},{"value":"/ This essentially cancels the stream, including any inbound or outbound","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661038,"byte_end":661112,"line_start":1143,"line_end":1143,"column_start":5,"column_end":79}},{"value":"/ data streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661117,"byte_end":661134,"line_start":1144,"line_end":1144,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661139,"byte_end":661142,"line_start":1145,"line_end":1145,"column_start":5,"column_end":8}},{"value":"/ If this function is called before [`send_response`], a call to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661147,"byte_end":661213,"line_start":1146,"line_end":1146,"column_start":5,"column_end":71}},{"value":"/ [`send_response`] will result in an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661218,"byte_end":661264,"line_start":1147,"line_end":1147,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661269,"byte_end":661272,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ If this function is called while a [`SendStream`] instance is active,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661277,"byte_end":661350,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ any further use of the instance will result in an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661355,"byte_end":661415,"line_start":1150,"line_end":1150,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661420,"byte_end":661423,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ This function should only be called once.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661428,"byte_end":661473,"line_start":1152,"line_end":1152,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661478,"byte_end":661481,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ [`send_response`]: #method.send_response","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661486,"byte_end":661530,"line_start":1154,"line_end":1154,"column_start":5,"column_end":49}},{"value":"/ [`SendStream`]: ../struct.SendStream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661535,"byte_end":661580,"line_start":1155,"line_end":1155,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":3375},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662167,"byte_end":662177,"line_start":1172,"line_end":1172,"column_start":12,"column_end":22},"name":"poll_reset","qualname":"<SendPushedResponse<B>>::poll_reset","value":"fn poll_reset(&mut Self, &mut Context) -> Poll<Result<Reason, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to be notified when the client resets this stream.","sig":null,"attributes":[{"value":"/ Polls to be notified when the client resets this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661681,"byte_end":661741,"line_start":1160,"line_end":1160,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661746,"byte_end":661749,"line_start":1161,"line_end":1161,"column_start":5,"column_end":8}},{"value":"/ If stream is still open, this returns `Poll::Pending`, and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661754,"byte_end":661816,"line_start":1162,"line_end":1162,"column_start":5,"column_end":67}},{"value":"/ registers the task to be notified if a `RST_STREAM` is received.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661821,"byte_end":661889,"line_start":1163,"line_end":1163,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661894,"byte_end":661897,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ If a `RST_STREAM` frame is received for this stream, calling this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661902,"byte_end":661971,"line_start":1165,"line_end":1165,"column_start":5,"column_end":74}},{"value":"/ method will yield the `Reason` for the reset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":661976,"byte_end":662025,"line_start":1166,"line_end":1166,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662030,"byte_end":662033,"line_start":1167,"line_end":1167,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662038,"byte_end":662049,"line_start":1168,"line_end":1168,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662054,"byte_end":662057,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ Calling this method after having called `send_response` will return","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662062,"byte_end":662133,"line_start":1170,"line_end":1170,"column_start":5,"column_end":76}},{"value":"/ a user error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662138,"byte_end":662155,"line_start":1171,"line_end":1171,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3376},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662445,"byte_end":662454,"line_start":1181,"line_end":1181,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<SendPushedResponse<B>>::stream_id","value":"fn stream_id(&Self) -> crate::StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the response stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of the response stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662292,"byte_end":662341,"line_start":1176,"line_end":1176,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662346,"byte_end":662349,"line_start":1177,"line_end":1177,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662354,"byte_end":662366,"line_start":1178,"line_end":1178,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662371,"byte_end":662374,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662379,"byte_end":662433,"line_start":1180,"line_end":1180,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":664816,"byte_end":664820,"line_start":1269,"line_end":1269,"column_start":8,"column_end":12},"name":"poll","qualname":"<Handshake<T, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3405},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":667535,"byte_end":667538,"line_start":1333,"line_end":1333,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Handshake<T, B> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12758},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678811,"byte_end":678821,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"SendStream","qualname":"::share::SendStream","value":"SendStream {  }","parent":null,"children":[{"krate":0,"index":12760}],"decl_id":null,"docs":" Sends the body stream and trailers to the remote peer.","sig":null,"attributes":[{"value":"/ Sends the body stream and trailers to the remote peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674337,"byte_end":674395,"line_start":13,"line_end":13,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674396,"byte_end":674399,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674400,"byte_end":674414,"line_start":15,"line_end":15,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674415,"byte_end":674418,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ A `SendStream` is provided by [`SendRequest`] and [`SendResponse`] once the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674419,"byte_end":674498,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ HTTP/2 message header has been sent sent. It is used to stream the message","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674499,"byte_end":674577,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ body and send the message trailers. See method level documentation for more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674578,"byte_end":674657,"line_start":19,"line_end":19,"column_start":1,"column_end":80}},{"value":"/ details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674658,"byte_end":674670,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674671,"byte_end":674674,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The `SendStream` instance is also used to manage outbound flow control.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674675,"byte_end":674750,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674751,"byte_end":674754,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ If a `SendStream` is dropped without explicitly closing the send stream, a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674755,"byte_end":674833,"line_start":24,"line_end":24,"column_start":1,"column_end":79}},{"value":"/ `RST_STREAM` frame will be sent. This essentially cancels the request /","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674834,"byte_end":674909,"line_start":25,"line_end":25,"column_start":1,"column_end":76}},{"value":"/ response exchange.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674910,"byte_end":674932,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674933,"byte_end":674936,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The ways to explicitly close the send stream are:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674937,"byte_end":674990,"line_start":28,"line_end":28,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674991,"byte_end":674994,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ * Set `end_of_stream` to true when calling [`send_request`],","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":674995,"byte_end":675059,"line_start":30,"line_end":30,"column_start":1,"column_end":65}},{"value":"/   [`send_response`], or [`send_data`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675060,"byte_end":675102,"line_start":31,"line_end":31,"column_start":1,"column_end":43}},{"value":"/ * Send trailers with [`send_trailers`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675103,"byte_end":675146,"line_start":32,"line_end":32,"column_start":1,"column_end":44}},{"value":"/ * Explicitly reset the stream with [`send_reset`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675147,"byte_end":675201,"line_start":33,"line_end":33,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675202,"byte_end":675205,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ # Flow control","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675206,"byte_end":675224,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675225,"byte_end":675228,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ In HTTP/2, data cannot be sent to the remote peer unless there is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675229,"byte_end":675298,"line_start":37,"line_end":37,"column_start":1,"column_end":70}},{"value":"/ available window capacity on both the stream and the connection. When a data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675299,"byte_end":675379,"line_start":38,"line_end":38,"column_start":1,"column_end":81}},{"value":"/ frame is sent, both the stream window and the connection window are","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675380,"byte_end":675451,"line_start":39,"line_end":39,"column_start":1,"column_end":72}},{"value":"/ decremented. When the stream level window reaches zero, no further data can","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675452,"byte_end":675531,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ be sent on that stream. When the connection level window reaches zero, no","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675532,"byte_end":675609,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ further data can be sent on any stream for that connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675610,"byte_end":675673,"line_start":42,"line_end":42,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675674,"byte_end":675677,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ When the remote peer is ready to receive more data, it sends `WINDOW_UPDATE`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675678,"byte_end":675758,"line_start":44,"line_end":44,"column_start":1,"column_end":81}},{"value":"/ frames. These frames increment the windows. See the [specification] for more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675759,"byte_end":675839,"line_start":45,"line_end":45,"column_start":1,"column_end":81}},{"value":"/ details on the principles of HTTP/2 flow control.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675840,"byte_end":675893,"line_start":46,"line_end":46,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675894,"byte_end":675897,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ The implications for sending data are that the caller **should** ensure that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675898,"byte_end":675978,"line_start":48,"line_end":48,"column_start":1,"column_end":81}},{"value":"/ both the stream and the connection has available window capacity before","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":675979,"byte_end":676054,"line_start":49,"line_end":49,"column_start":1,"column_end":76}},{"value":"/ loading the data to send into memory. The `SendStream` instance provides the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676055,"byte_end":676135,"line_start":50,"line_end":50,"column_start":1,"column_end":81}},{"value":"/ necessary APIs to perform this logic. This, however, is not an obligation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676136,"byte_end":676214,"line_start":51,"line_end":51,"column_start":1,"column_end":79}},{"value":"/ If the caller attempts to send data on a stream when there is no available","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676215,"byte_end":676293,"line_start":52,"line_end":52,"column_start":1,"column_end":79}},{"value":"/ window capacity, the library will buffer the data until capacity becomes","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676294,"byte_end":676370,"line_start":53,"line_end":53,"column_start":1,"column_end":77}},{"value":"/ available, at which point the buffer will be flushed to the connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676371,"byte_end":676446,"line_start":54,"line_end":54,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676447,"byte_end":676450,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ **NOTE**: There is no bound on the amount of data that the library will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676451,"byte_end":676526,"line_start":56,"line_end":56,"column_start":1,"column_end":76}},{"value":"/ buffer. If you are sending large amounts of data, you really should hook","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676527,"byte_end":676603,"line_start":57,"line_end":57,"column_start":1,"column_end":77}},{"value":"/ into the flow control lifecycle. Otherwise, you risk using up significant","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676604,"byte_end":676681,"line_start":58,"line_end":58,"column_start":1,"column_end":78}},{"value":"/ amounts of memory.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676682,"byte_end":676704,"line_start":59,"line_end":59,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676705,"byte_end":676708,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ To hook into the flow control lifecycle, the caller signals to the library","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676709,"byte_end":676787,"line_start":61,"line_end":61,"column_start":1,"column_end":79}},{"value":"/ that it intends to send data by calling [`reserve_capacity`], specifying the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676788,"byte_end":676868,"line_start":62,"line_end":62,"column_start":1,"column_end":81}},{"value":"/ amount of data, in octets, that the caller intends to send. After this,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676869,"byte_end":676944,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/ `poll_capacity` is used to be notified when the requested capacity is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":676945,"byte_end":677018,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assigned to the stream. Once [`poll_capacity`] returns `Ready` with the number","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677019,"byte_end":677101,"line_start":65,"line_end":65,"column_start":1,"column_end":83}},{"value":"/ of octets available to the stream, the caller is able to actually send the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677102,"byte_end":677180,"line_start":66,"line_end":66,"column_start":1,"column_end":79}},{"value":"/ data using [`send_data`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677181,"byte_end":677210,"line_start":67,"line_end":67,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677211,"byte_end":677214,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ Because there is also a connection level window that applies to **all**","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677215,"byte_end":677290,"line_start":69,"line_end":69,"column_start":1,"column_end":76}},{"value":"/ streams on a connection, when capacity is assigned to a stream (indicated by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677291,"byte_end":677371,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ `poll_capacity` returning `Ready`), this capacity is reserved on the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677372,"byte_end":677444,"line_start":71,"line_end":71,"column_start":1,"column_end":73}},{"value":"/ connection and will **not** be assigned to any other stream. If data is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677445,"byte_end":677520,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/ never written to the stream, that capacity is effectively lost to other","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677521,"byte_end":677596,"line_start":73,"line_end":73,"column_start":1,"column_end":76}},{"value":"/ streams and this introduces the risk of deadlocking a connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677597,"byte_end":677666,"line_start":74,"line_end":74,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677667,"byte_end":677670,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ To avoid throttling data on a connection, the caller should not reserve","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677671,"byte_end":677746,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ capacity until ready to send data and once any capacity is assigned to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677747,"byte_end":677825,"line_start":77,"line_end":77,"column_start":1,"column_end":79}},{"value":"/ stream, the caller should immediately send data consuming this capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677826,"byte_end":677902,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ There is no guarantee as to when the full capacity requested will become","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677903,"byte_end":677979,"line_start":79,"line_end":79,"column_start":1,"column_end":77}},{"value":"/ available. For example, if the caller requests 64 KB of data and 512 bytes","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":677980,"byte_end":678058,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ become available, the caller should immediately send 512 bytes of data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678059,"byte_end":678134,"line_start":81,"line_end":81,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678135,"byte_end":678138,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ See [`reserve_capacity`] documentation for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678139,"byte_end":678199,"line_start":83,"line_end":83,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678200,"byte_end":678203,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ [`SendRequest`]: client/struct.SendRequest.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678204,"byte_end":678255,"line_start":85,"line_end":85,"column_start":1,"column_end":52}},{"value":"/ [`SendResponse`]: server/struct.SendResponse.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678256,"byte_end":678309,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/ [specification]: http://httpwg.org/specs/rfc7540.html#FlowControl","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678310,"byte_end":678379,"line_start":87,"line_end":87,"column_start":1,"column_end":70}},{"value":"/ [`reserve_capacity`]: #method.reserve_capacity","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678380,"byte_end":678430,"line_start":88,"line_end":88,"column_start":1,"column_end":51}},{"value":"/ [`poll_capacity`]: #method.poll_capacity","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678431,"byte_end":678475,"line_start":89,"line_end":89,"column_start":1,"column_end":45}},{"value":"/ [`send_data`]: #method.send_data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678476,"byte_end":678512,"line_start":90,"line_end":90,"column_start":1,"column_end":37}},{"value":"/ [`send_request`]: client/struct.SendRequest.html#method.send_request","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678513,"byte_end":678585,"line_start":91,"line_end":91,"column_start":1,"column_end":73}},{"value":"/ [`send_response`]: server/struct.SendResponse.html#method.send_response","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678586,"byte_end":678661,"line_start":92,"line_end":92,"column_start":1,"column_end":76}},{"value":"/ [`send_data`]: #method.send_data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678662,"byte_end":678698,"line_start":93,"line_end":93,"column_start":1,"column_end":37}},{"value":"/ [`send_trailers`]: #method.send_trailers","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678699,"byte_end":678743,"line_start":94,"line_end":94,"column_start":1,"column_end":45}},{"value":"/ [`send_reset`]: #method.send_reset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678744,"byte_end":678782,"line_start":95,"line_end":95,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":12764},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679446,"byte_end":679454,"line_start":112,"line_end":112,"column_start":12,"column_end":20},"name":"StreamId","qualname":"::share::StreamId","value":"","parent":null,"children":[],"decl_id":null,"docs":" A stream identifier, as described in [Section 5.1.1] of RFC 7540.","sig":null,"attributes":[{"value":"/ A stream identifier, as described in [Section 5.1.1] of RFC 7540.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678862,"byte_end":678931,"line_start":101,"line_end":101,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678932,"byte_end":678935,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Streams are identified with an unsigned 31-bit integer. Streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":678936,"byte_end":679003,"line_start":103,"line_end":103,"column_start":1,"column_end":68}},{"value":"/ initiated by a client MUST use odd-numbered stream identifiers; those","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679004,"byte_end":679077,"line_start":104,"line_end":104,"column_start":1,"column_end":74}},{"value":"/ initiated by the server MUST use even-numbered stream identifiers.  A","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679078,"byte_end":679151,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ stream identifier of zero (0x0) is used for connection control","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679152,"byte_end":679218,"line_start":106,"line_end":106,"column_start":1,"column_end":67}},{"value":"/ messages; the stream identifier of zero cannot be used to establish a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679219,"byte_end":679292,"line_start":107,"line_end":107,"column_start":1,"column_end":74}},{"value":"/ new stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679293,"byte_end":679308,"line_start":108,"line_end":108,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679309,"byte_end":679312,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ [Section 5.1.1]: https://tools.ietf.org/html/rfc7540#section-5.1.1","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679313,"byte_end":679383,"line_start":110,"line_end":110,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":3472},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679499,"byte_end":679503,"line_start":115,"line_end":115,"column_start":8,"column_end":12},"name":"from","qualname":"<u32 as std::convert::From>::from","value":"fn from(StreamId) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3473},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680424,"byte_end":680434,"line_start":138,"line_end":138,"column_start":12,"column_end":22},"name":"RecvStream","qualname":"::share::RecvStream","value":"RecvStream {  }","parent":null,"children":[{"krate":0,"index":3474}],"decl_id":null,"docs":" Receives the body stream and trailers from the remote peer.","sig":null,"attributes":[{"value":"/ Receives the body stream and trailers from the remote peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679552,"byte_end":679615,"line_start":120,"line_end":120,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679616,"byte_end":679619,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ A `RecvStream` is provided by [`client::ResponseFuture`] and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679620,"byte_end":679684,"line_start":122,"line_end":122,"column_start":1,"column_end":65}},{"value":"/ [`server::Connection`] with the received HTTP/2 message head (the response","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679685,"byte_end":679763,"line_start":123,"line_end":123,"column_start":1,"column_end":79}},{"value":"/ and request head respectively).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679764,"byte_end":679799,"line_start":124,"line_end":124,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679800,"byte_end":679803,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ A `RecvStream` instance is used to receive the streaming message body and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679804,"byte_end":679881,"line_start":126,"line_end":126,"column_start":1,"column_end":78}},{"value":"/ any trailers from the remote peer. It is also used to manage inbound flow","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679882,"byte_end":679959,"line_start":127,"line_end":127,"column_start":1,"column_end":78}},{"value":"/ control.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679960,"byte_end":679972,"line_start":128,"line_end":128,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679973,"byte_end":679976,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ See method level documentation for more details on receiving data. See","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":679977,"byte_end":680051,"line_start":130,"line_end":130,"column_start":1,"column_end":75}},{"value":"/ [`FlowControl`] for more details on inbound flow control.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680052,"byte_end":680113,"line_start":131,"line_end":131,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680114,"byte_end":680117,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ [`client::ResponseFuture`]: client/struct.ResponseFuture.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680118,"byte_end":680183,"line_start":133,"line_end":133,"column_start":1,"column_end":66}},{"value":"/ [`server::Connection`]: server/struct.Connection.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680184,"byte_end":680241,"line_start":134,"line_end":134,"column_start":1,"column_end":58}},{"value":"/ [`FlowControl`]: struct.FlowControl.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680242,"byte_end":680286,"line_start":135,"line_end":135,"column_start":1,"column_end":45}},{"value":"/ [`Stream`]: https://docs.rs/futures/0.1/futures/stream/trait.Stream.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680287,"byte_end":680363,"line_start":136,"line_end":136,"column_start":1,"column_end":77}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680364,"byte_end":680412,"line_start":137,"line_end":137,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":12782},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682992,"byte_end":683003,"line_start":195,"line_end":195,"column_start":12,"column_end":23},"name":"FlowControl","qualname":"::share::FlowControl","value":"FlowControl {  }","parent":null,"children":[{"krate":0,"index":12783}],"decl_id":null,"docs":" A handle to release window capacity to a remote stream.","sig":null,"attributes":[{"value":"/ A handle to release window capacity to a remote stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680464,"byte_end":680523,"line_start":142,"line_end":142,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680524,"byte_end":680527,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ This type allows the caller to manage inbound data [flow control]. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680528,"byte_end":680602,"line_start":144,"line_end":144,"column_start":1,"column_end":75}},{"value":"/ caller is expected to call [`release_capacity`] after dropping data frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680603,"byte_end":680682,"line_start":145,"line_end":145,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680683,"byte_end":680686,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ # Overview","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680687,"byte_end":680701,"line_start":147,"line_end":147,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680702,"byte_end":680705,"line_start":148,"line_end":148,"column_start":1,"column_end":4}},{"value":"/ Each stream has a window size. This window size is the maximum amount of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680706,"byte_end":680782,"line_start":149,"line_end":149,"column_start":1,"column_end":77}},{"value":"/ inbound data that can be in-flight. In-flight data is defined as data that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680783,"byte_end":680861,"line_start":150,"line_end":150,"column_start":1,"column_end":79}},{"value":"/ has been received, but not yet released.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680862,"byte_end":680906,"line_start":151,"line_end":151,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680907,"byte_end":680910,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ When a stream is created, the window size is set to the connection's initial","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680911,"byte_end":680991,"line_start":153,"line_end":153,"column_start":1,"column_end":81}},{"value":"/ window size value. When a data frame is received, the window size is then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":680992,"byte_end":681069,"line_start":154,"line_end":154,"column_start":1,"column_end":78}},{"value":"/ decremented by size of the data frame before the data is provided to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681070,"byte_end":681146,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ caller. As the caller finishes using the data, [`release_capacity`] must be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681147,"byte_end":681226,"line_start":156,"line_end":156,"column_start":1,"column_end":80}},{"value":"/ called. This will then increment the window size again, allowing the peer to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681227,"byte_end":681307,"line_start":157,"line_end":157,"column_start":1,"column_end":81}},{"value":"/ send more data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681308,"byte_end":681327,"line_start":158,"line_end":158,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681328,"byte_end":681331,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ There is also a connection level window as well as the stream level window.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681332,"byte_end":681411,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ Received data counts against the connection level window as well and calls","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681412,"byte_end":681490,"line_start":161,"line_end":161,"column_start":1,"column_end":79}},{"value":"/ to [`release_capacity`] will also increment the connection level window.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681491,"byte_end":681567,"line_start":162,"line_end":162,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681568,"byte_end":681571,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ # Sending `WINDOW_UPDATE` frames","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681572,"byte_end":681608,"line_start":164,"line_end":164,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681609,"byte_end":681612,"line_start":165,"line_end":165,"column_start":1,"column_end":4}},{"value":"/ `WINDOW_UPDATE` frames will not be sent out for **every** call to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681613,"byte_end":681682,"line_start":166,"line_end":166,"column_start":1,"column_end":70}},{"value":"/ `release_capacity`, as this would end up slowing down the protocol. Instead,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681683,"byte_end":681763,"line_start":167,"line_end":167,"column_start":1,"column_end":81}},{"value":"/ `h2` waits until the window size is increased to a certain threshold and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681764,"byte_end":681840,"line_start":168,"line_end":168,"column_start":1,"column_end":77}},{"value":"/ then sends out a single `WINDOW_UPDATE` frame representing all the calls to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681841,"byte_end":681920,"line_start":169,"line_end":169,"column_start":1,"column_end":80}},{"value":"/ `release_capacity` since the last `WINDOW_UPDATE` frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681921,"byte_end":681981,"line_start":170,"line_end":170,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681982,"byte_end":681985,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ This essentially batches window updating.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":681986,"byte_end":682031,"line_start":172,"line_end":172,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682032,"byte_end":682035,"line_start":173,"line_end":173,"column_start":1,"column_end":4}},{"value":"/ # Scenarios","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682036,"byte_end":682051,"line_start":174,"line_end":174,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682052,"byte_end":682055,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ Following is a basic scenario with an HTTP/2 connection containing a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682056,"byte_end":682128,"line_start":176,"line_end":176,"column_start":1,"column_end":73}},{"value":"/ single active stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682129,"byte_end":682154,"line_start":177,"line_end":177,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682155,"byte_end":682158,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ * A new stream is activated. The receive window is initialized to 1024 (the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682159,"byte_end":682238,"line_start":179,"line_end":179,"column_start":1,"column_end":80}},{"value":"/   value of the initial window size for this connection).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682239,"byte_end":682299,"line_start":180,"line_end":180,"column_start":1,"column_end":61}},{"value":"/ * A `DATA` frame is received containing a payload of 600 bytes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682300,"byte_end":682367,"line_start":181,"line_end":181,"column_start":1,"column_end":68}},{"value":"/ * The receive window size is reduced to 424 bytes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682368,"byte_end":682422,"line_start":182,"line_end":182,"column_start":1,"column_end":55}},{"value":"/ * [`release_capacity`] is called with 200.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682423,"byte_end":682469,"line_start":183,"line_end":183,"column_start":1,"column_end":47}},{"value":"/ * The receive window size is now 624 bytes. The peer may send no more than","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682470,"byte_end":682548,"line_start":184,"line_end":184,"column_start":1,"column_end":79}},{"value":"/   this.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682549,"byte_end":682560,"line_start":185,"line_end":185,"column_start":1,"column_end":12}},{"value":"/ * A `DATA` frame is received with a payload of 624 bytes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682561,"byte_end":682622,"line_start":186,"line_end":186,"column_start":1,"column_end":62}},{"value":"/ * The window size is now 0 bytes. The peer may not send any more data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682623,"byte_end":682697,"line_start":187,"line_end":187,"column_start":1,"column_end":75}},{"value":"/ * [`release_capacity`] is called with 1024.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682698,"byte_end":682745,"line_start":188,"line_end":188,"column_start":1,"column_end":48}},{"value":"/ * The receive window size is now 1024 bytes. The peer may now send more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682746,"byte_end":682821,"line_start":189,"line_end":189,"column_start":1,"column_end":76}},{"value":"/ data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682822,"byte_end":682831,"line_start":190,"line_end":190,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682832,"byte_end":682835,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ [flow control]: ../index.html#flow-control","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682836,"byte_end":682882,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/ [`release_capacity`]: struct.FlowControl.html#method.release_capacity","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":682883,"byte_end":682956,"line_start":193,"line_end":193,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3475},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683139,"byte_end":683147,"line_start":201,"line_end":201,"column_start":12,"column_end":20},"name":"PingPong","qualname":"::share::PingPong","value":"PingPong {  }","parent":null,"children":[{"krate":0,"index":3476}],"decl_id":null,"docs":" A handle to send and receive PING frames with the peer.\n","sig":null,"attributes":[{"value":"/ A handle to send and receive PING frames with the peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683044,"byte_end":683103,"line_start":199,"line_end":199,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":3477},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683296,"byte_end":683300,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"Ping","qualname":"::share::Ping","value":"Ping {  }","parent":null,"children":[{"krate":0,"index":3478}],"decl_id":null,"docs":" Sent via [`PingPong`][] to send a PING frame to a peer.","sig":null,"attributes":[{"value":"/ Sent via [`PingPong`][] to send a PING frame to a peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683182,"byte_end":683241,"line_start":205,"line_end":205,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683242,"byte_end":683245,"line_start":206,"line_end":206,"column_start":1,"column_end":4}},{"value":"/ [`PingPong`]: struct.PingPong.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683246,"byte_end":683284,"line_start":207,"line_end":207,"column_start":1,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":3479},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683474,"byte_end":683478,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"Pong","qualname":"::share::Pong","value":"Pong {  }","parent":null,"children":[{"krate":0,"index":3480}],"decl_id":null,"docs":" Received via [`PingPong`][] when a peer acknowledges a [`Ping`][].","sig":null,"attributes":[{"value":"/ Received via [`PingPong`][] when a peer acknowledges a [`Ping`][].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683318,"byte_end":683388,"line_start":212,"line_end":212,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683389,"byte_end":683392,"line_start":213,"line_end":213,"column_start":1,"column_end":4}},{"value":"/ [`PingPong`]: struct.PingPong.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683393,"byte_end":683431,"line_start":214,"line_end":214,"column_start":1,"column_end":39}},{"value":"/ [`Ping`]: struct.Ping.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683432,"byte_end":683462,"line_start":215,"line_end":215,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685937,"byte_end":685953,"line_start":285,"line_end":285,"column_start":12,"column_end":28},"name":"reserve_capacity","qualname":"<SendStream<B>>::reserve_capacity","value":"fn reserve_capacity(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Requests capacity to send data.","sig":null,"attributes":[{"value":"/ Requests capacity to send data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683657,"byte_end":683692,"line_start":227,"line_end":227,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683697,"byte_end":683700,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ This function is used to express intent to send data. This requests","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683705,"byte_end":683776,"line_start":229,"line_end":229,"column_start":5,"column_end":76}},{"value":"/ connection level capacity. Once the capacity is available, it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683781,"byte_end":683849,"line_start":230,"line_end":230,"column_start":5,"column_end":73}},{"value":"/ assigned to the stream and not reused by other streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683854,"byte_end":683913,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683918,"byte_end":683921,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This function may be called repeatedly. The `capacity` argument is the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683926,"byte_end":684000,"line_start":233,"line_end":233,"column_start":5,"column_end":79}},{"value":"/ **total** amount of requested capacity. Sequential calls to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684005,"byte_end":684068,"line_start":234,"line_end":234,"column_start":5,"column_end":68}},{"value":"/ `reserve_capacity` are *not* additive. Given the following:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684073,"byte_end":684136,"line_start":235,"line_end":235,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684141,"byte_end":684144,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684149,"byte_end":684160,"line_start":237,"line_end":237,"column_start":5,"column_end":16}},{"value":"/ # use h2::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684165,"byte_end":684181,"line_start":238,"line_end":238,"column_start":5,"column_end":21}},{"value":"/ # fn doc(mut send_stream: SendStream<&'static [u8]>) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684186,"byte_end":684244,"line_start":239,"line_end":239,"column_start":5,"column_end":63}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684249,"byte_end":684287,"line_start":240,"line_end":240,"column_start":5,"column_end":43}},{"value":"/ send_stream.reserve_capacity(200);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684292,"byte_end":684330,"line_start":241,"line_end":241,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684335,"byte_end":684342,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684347,"byte_end":684354,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684359,"byte_end":684362,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ After the second call to `reserve_capacity`, the *total* requested","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684367,"byte_end":684437,"line_start":245,"line_end":245,"column_start":5,"column_end":75}},{"value":"/ capacity will be 200.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684442,"byte_end":684467,"line_start":246,"line_end":246,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684472,"byte_end":684475,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ `reserve_capacity` is also used to cancel previous capacity requests.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684480,"byte_end":684553,"line_start":248,"line_end":248,"column_start":5,"column_end":78}},{"value":"/ Given the following:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684558,"byte_end":684582,"line_start":249,"line_end":249,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684587,"byte_end":684590,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684595,"byte_end":684606,"line_start":251,"line_end":251,"column_start":5,"column_end":16}},{"value":"/ # use h2::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684611,"byte_end":684627,"line_start":252,"line_end":252,"column_start":5,"column_end":21}},{"value":"/ # fn doc(mut send_stream: SendStream<&'static [u8]>) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684632,"byte_end":684690,"line_start":253,"line_end":253,"column_start":5,"column_end":63}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684695,"byte_end":684733,"line_start":254,"line_end":254,"column_start":5,"column_end":43}},{"value":"/ send_stream.reserve_capacity(0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684738,"byte_end":684774,"line_start":255,"line_end":255,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684779,"byte_end":684786,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684791,"byte_end":684798,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684803,"byte_end":684806,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ After the second call to `reserve_capacity`, the *total* requested","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684811,"byte_end":684881,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ capacity will be 0, i.e. there is no requested capacity for the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684886,"byte_end":684961,"line_start":260,"line_end":260,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684966,"byte_end":684969,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ If `reserve_capacity` is called with a lower value than the amount of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":684974,"byte_end":685047,"line_start":262,"line_end":262,"column_start":5,"column_end":78}},{"value":"/ capacity **currently** assigned to the stream, this capacity will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685052,"byte_end":685124,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ returned to the connection to be re-assigned to other streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685129,"byte_end":685195,"line_start":264,"line_end":264,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685200,"byte_end":685203,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ Also, the amount of capacity that is reserved gets decremented as data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685208,"byte_end":685282,"line_start":266,"line_end":266,"column_start":5,"column_end":79}},{"value":"/ is sent. For example:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685287,"byte_end":685312,"line_start":267,"line_end":267,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685317,"byte_end":685320,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685325,"byte_end":685336,"line_start":269,"line_end":269,"column_start":5,"column_end":16}},{"value":"/ # use h2::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685341,"byte_end":685357,"line_start":270,"line_end":270,"column_start":5,"column_end":21}},{"value":"/ # async fn doc(mut send_stream: SendStream<&'static [u8]>) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685362,"byte_end":685426,"line_start":271,"line_end":271,"column_start":5,"column_end":69}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685431,"byte_end":685469,"line_start":272,"line_end":272,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685474,"byte_end":685477,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ send_stream.send_data(b\"hello\", false).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685482,"byte_end":685534,"line_start":274,"line_end":274,"column_start":5,"column_end":57}},{"value":"/ // At this point, the total amount of requested capacity is 95 bytes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685539,"byte_end":685612,"line_start":275,"line_end":275,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685617,"byte_end":685620,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ // Calling `reserve_capacity` with `100` again essentially requests an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685625,"byte_end":685699,"line_start":277,"line_end":277,"column_start":5,"column_end":79}},{"value":"/ // additional 5 bytes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685704,"byte_end":685730,"line_start":278,"line_end":278,"column_start":5,"column_end":31}},{"value":"/ send_stream.reserve_capacity(100);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685735,"byte_end":685773,"line_start":279,"line_end":279,"column_start":5,"column_end":43}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685778,"byte_end":685785,"line_start":280,"line_end":280,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685790,"byte_end":685797,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685802,"byte_end":685805,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ See [Flow control](struct.SendStream.html#flow-control) for an overview","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685810,"byte_end":685885,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ of how send flow control works.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":685890,"byte_end":685925,"line_start":284,"line_end":284,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3485},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686268,"byte_end":686276,"line_start":294,"line_end":294,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SendStream<B>>::capacity","value":"fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream's current send capacity.","sig":null,"attributes":[{"value":"/ Returns the stream's current send capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686091,"byte_end":686138,"line_start":290,"line_end":290,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686143,"byte_end":686146,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ This allows the caller to check the current amount of available capacity","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686151,"byte_end":686227,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ before sending data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686232,"byte_end":686256,"line_start":293,"line_end":293,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3486},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687167,"byte_end":687180,"line_start":312,"line_end":312,"column_start":12,"column_end":25},"name":"poll_capacity","qualname":"<SendStream<B>>::poll_capacity","value":"fn poll_capacity(&mut Self, &mut Context)\n-> Poll<Option<Result<usize, crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Requests to be notified when the stream's capacity increases.","sig":null,"attributes":[{"value":"/ Requests to be notified when the stream's capacity increases.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686345,"byte_end":686410,"line_start":298,"line_end":298,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686415,"byte_end":686418,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ Before calling this, capacity should be requested with","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686423,"byte_end":686481,"line_start":300,"line_end":300,"column_start":5,"column_end":63}},{"value":"/ `reserve_capacity`. Once capacity is requested, the connection will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686486,"byte_end":686557,"line_start":301,"line_end":301,"column_start":5,"column_end":76}},{"value":"/ assign capacity to the stream **as it becomes available**. There is no","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686562,"byte_end":686636,"line_start":302,"line_end":302,"column_start":5,"column_end":79}},{"value":"/ guarantee as to when and in what increments capacity gets assigned to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686641,"byte_end":686714,"line_start":303,"line_end":303,"column_start":5,"column_end":78}},{"value":"/ the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686719,"byte_end":686734,"line_start":304,"line_end":304,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686739,"byte_end":686742,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ To get notified when the available capacity increases, the caller calls","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686747,"byte_end":686822,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ `poll_capacity`, which returns `Ready(Some(n))` when `n` has been","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686827,"byte_end":686896,"line_start":307,"line_end":307,"column_start":5,"column_end":74}},{"value":"/ increased by the connection. Note that `n` here represents the **total**","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686901,"byte_end":686977,"line_start":308,"line_end":308,"column_start":5,"column_end":81}},{"value":"/ amount of assigned capacity at that point in time. It is also possible","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":686982,"byte_end":687056,"line_start":309,"line_end":309,"column_start":5,"column_end":79}},{"value":"/ that `n` is lower than the previous call if, since then, the caller has","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687061,"byte_end":687136,"line_start":310,"line_end":310,"column_start":5,"column_end":80}},{"value":"/ sent data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687141,"byte_end":687155,"line_start":311,"line_end":311,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":3488},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688217,"byte_end":688226,"line_start":334,"line_end":334,"column_start":12,"column_end":21},"name":"send_data","qualname":"<SendStream<B>>::send_data","value":"fn send_data(&mut Self, B, bool) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends a single data frame to the remote peer.","sig":null,"attributes":[{"value":"/ Sends a single data frame to the remote peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687387,"byte_end":687436,"line_start":319,"line_end":319,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687441,"byte_end":687444,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ This function may be called repeatedly as long as `end_of_stream` is set","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687449,"byte_end":687525,"line_start":321,"line_end":321,"column_start":5,"column_end":81}},{"value":"/ to `false`. Setting `end_of_stream` to `true` sets the end stream flag","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687530,"byte_end":687604,"line_start":322,"line_end":322,"column_start":5,"column_end":79}},{"value":"/ on the data frame. Any further calls to `send_data` or `send_trailers`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687609,"byte_end":687683,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ will return an [`Error`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687688,"byte_end":687717,"line_start":324,"line_end":324,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687722,"byte_end":687725,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ `send_data` can be called without reserving capacity. In this case, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687730,"byte_end":687805,"line_start":326,"line_end":326,"column_start":5,"column_end":80}},{"value":"/ data is buffered and the capacity is implicitly requested. Once the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687810,"byte_end":687881,"line_start":327,"line_end":327,"column_start":5,"column_end":76}},{"value":"/ capacity becomes available, the data is flushed to the connection.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687886,"byte_end":687956,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ However, this buffering is unbounded. As such, sending large amounts of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":687961,"byte_end":688036,"line_start":329,"line_end":329,"column_start":5,"column_end":80}},{"value":"/ data without reserving capacity before hand could result in large","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688041,"byte_end":688110,"line_start":330,"line_end":330,"column_start":5,"column_end":74}},{"value":"/ amounts of data being buffered in memory.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688115,"byte_end":688160,"line_start":331,"line_end":331,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688165,"byte_end":688168,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ [`Error`]: struct.Error.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688173,"byte_end":688205,"line_start":333,"line_end":333,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3489},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688589,"byte_end":688602,"line_start":344,"line_end":344,"column_start":12,"column_end":25},"name":"send_trailers","qualname":"<SendStream<B>>::send_trailers","value":"fn send_trailers(&mut Self, HeaderMap) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Sends trailers to the remote peer.","sig":null,"attributes":[{"value":"/ Sends trailers to the remote peer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688405,"byte_end":688443,"line_start":340,"line_end":340,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688448,"byte_end":688451,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ Sending trailers implicitly closes the send stream. Once the send stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688456,"byte_end":688532,"line_start":342,"line_end":342,"column_start":5,"column_end":81}},{"value":"/ is closed, no more data can be sent.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688537,"byte_end":688577,"line_start":343,"line_end":343,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3490},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689030,"byte_end":689040,"line_start":355,"line_end":355,"column_start":12,"column_end":22},"name":"send_reset","qualname":"<SendStream<B>>::send_reset","value":"fn send_reset(&mut Self, Reason)","parent":null,"children":[],"decl_id":null,"docs":" Resets the stream.","sig":null,"attributes":[{"value":"/ Resets the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688739,"byte_end":688761,"line_start":348,"line_end":348,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688766,"byte_end":688769,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ This cancels the request / response exchange. If the response has not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688774,"byte_end":688847,"line_start":350,"line_end":350,"column_start":5,"column_end":78}},{"value":"/ yet been received, the associated `ResponseFuture` will return an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688852,"byte_end":688921,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/ [`Error`] to reflect the canceled exchange.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688926,"byte_end":688973,"line_start":352,"line_end":352,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688978,"byte_end":688981,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ [`Error`]: struct.Error.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":688986,"byte_end":689018,"line_start":354,"line_end":354,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3491},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689599,"byte_end":689609,"line_start":371,"line_end":371,"column_start":12,"column_end":22},"name":"poll_reset","qualname":"<SendStream<B>>::poll_reset","value":"fn poll_reset(&mut Self, &mut Context) -> Poll<Result<Reason, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":" Polls to be notified when the client resets this stream.","sig":null,"attributes":[{"value":"/ Polls to be notified when the client resets this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689119,"byte_end":689179,"line_start":359,"line_end":359,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689184,"byte_end":689187,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ If stream is still open, this returns `Poll::Pending`, and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689192,"byte_end":689254,"line_start":361,"line_end":361,"column_start":5,"column_end":67}},{"value":"/ registers the task to be notified if a `RST_STREAM` is received.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689259,"byte_end":689327,"line_start":362,"line_end":362,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689332,"byte_end":689335,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ If a `RST_STREAM` frame is received for this stream, calling this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689340,"byte_end":689409,"line_start":364,"line_end":364,"column_start":5,"column_end":74}},{"value":"/ method will yield the `Reason` for the reset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689414,"byte_end":689463,"line_start":365,"line_end":365,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689468,"byte_end":689471,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689476,"byte_end":689487,"line_start":367,"line_end":367,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689492,"byte_end":689495,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ If connection sees an error, this returns that error instead of a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689500,"byte_end":689569,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/ `Reason`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689574,"byte_end":689587,"line_start":370,"line_end":370,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":3492},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689904,"byte_end":689913,"line_start":380,"line_end":380,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<SendStream<B>>::stream_id","value":"fn stream_id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of this `SendStream`.","sig":null,"attributes":[{"value":"/ Returns the stream ID of this `SendStream`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689753,"byte_end":689800,"line_start":375,"line_end":375,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689805,"byte_end":689808,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689813,"byte_end":689825,"line_start":377,"line_end":377,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689830,"byte_end":689833,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":689838,"byte_end":689892,"line_start":379,"line_end":379,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3495},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690500,"byte_end":690506,"line_start":400,"line_end":400,"column_start":12,"column_end":18},"name":"as_u32","qualname":"<StreamId>::as_u32","value":"fn as_u32(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the `u32` corresponding to this `StreamId`","sig":null,"attributes":[{"value":"/ Returns the `u32` corresponding to this `StreamId`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690155,"byte_end":690209,"line_start":392,"line_end":392,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690214,"byte_end":690217,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690222,"byte_end":690232,"line_start":394,"line_end":394,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690237,"byte_end":690240,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ This is the same as the `From<StreamId>` implementation, but","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690245,"byte_end":690309,"line_start":396,"line_end":396,"column_start":5,"column_end":69}},{"value":"/ included as an inherent method because that implementation doesn't","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690314,"byte_end":690384,"line_start":397,"line_end":397,"column_start":5,"column_end":75}},{"value":"/ appear in rustdocs, as well as a way to force the type instead of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690389,"byte_end":690458,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/ relying on inference.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690463,"byte_end":690488,"line_start":399,"line_end":399,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690742,"byte_end":690746,"line_start":412,"line_end":412,"column_start":18,"column_end":22},"name":"data","qualname":"<RecvStream>::data","value":"async fn data<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get the next data frame.\n","sig":null,"attributes":[{"value":"/ Get the next data frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690696,"byte_end":690724,"line_start":411,"line_end":411,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690944,"byte_end":690952,"line_start":417,"line_end":417,"column_start":18,"column_end":26},"name":"trailers","qualname":"<RecvStream>::trailers","value":"async fn trailers<'_>(&'_ mut Self) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Get optional trailers for this stream.\n","sig":null,"attributes":[{"value":"/ Get optional trailers for this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690884,"byte_end":690926,"line_start":416,"line_end":416,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":691143,"byte_end":691152,"line_start":422,"line_end":422,"column_start":12,"column_end":21},"name":"poll_data","qualname":"<RecvStream>::poll_data","value":"fn poll_data(&mut Self, &mut Context)\n-> Poll<Option<Result<Bytes, crate::Error>>>","parent":null,"children":[],"decl_id":null,"docs":" Poll for the next data frame.\n","sig":null,"attributes":[{"value":"/ Poll for the next data frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":691098,"byte_end":691131,"line_start":421,"line_end":421,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":691329,"byte_end":691342,"line_start":427,"line_end":427,"column_start":12,"column_end":25},"name":"poll_trailers","qualname":"<RecvStream>::poll_trailers","value":"fn poll_trailers(&mut Self, &mut Context)\n-> Poll<Result<Option<HeaderMap>, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":691882,"byte_end":691895,"line_start":442,"line_end":442,"column_start":12,"column_end":25},"name":"is_end_stream","qualname":"<RecvStream>::is_end_stream","value":"fn is_end_stream(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the receive half has reached the end of stream.","sig":null,"attributes":[{"value":"/ Returns true if the receive half has reached the end of stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":691682,"byte_end":691749,"line_start":438,"line_end":438,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":691754,"byte_end":691757,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ A return value of `true` means that calls to `poll` and `poll_trailers`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":691762,"byte_end":691837,"line_start":440,"line_end":440,"column_start":5,"column_end":80}},{"value":"/ will both return `None`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":691842,"byte_end":691870,"line_start":441,"line_end":441,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692108,"byte_end":692120,"line_start":449,"line_end":449,"column_start":12,"column_end":24},"name":"flow_control","qualname":"<RecvStream>::flow_control","value":"fn flow_control(&mut Self) -> &mut FlowControl","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to this stream's `FlowControl`.","sig":null,"attributes":[{"value":"/ Get a mutable reference to this stream's `FlowControl`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":691965,"byte_end":692024,"line_start":446,"line_end":446,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692029,"byte_end":692032,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ It can be used immediately, or cloned to be used later.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692037,"byte_end":692096,"line_start":448,"line_end":448,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692334,"byte_end":692343,"line_start":458,"line_end":458,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<RecvStream>::stream_id","value":"fn stream_id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of this stream.","sig":null,"attributes":[{"value":"/ Returns the stream ID of this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692189,"byte_end":692230,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692235,"byte_end":692238,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692243,"byte_end":692255,"line_start":455,"line_end":455,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692260,"byte_end":692263,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ If the lock on the stream store has been poisoned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692268,"byte_end":692322,"line_start":457,"line_end":457,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692692,"byte_end":692695,"line_start":473,"line_end":473,"column_start":8,"column_end":11},"name":"fmt","qualname":"<RecvStream as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3514},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692891,"byte_end":692895,"line_start":481,"line_end":481,"column_start":8,"column_end":12},"name":"drop","qualname":"<RecvStream as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693545,"byte_end":693554,"line_start":500,"line_end":500,"column_start":12,"column_end":21},"name":"stream_id","qualname":"<FlowControl>::stream_id","value":"fn stream_id(&Self) -> StreamId","parent":null,"children":[],"decl_id":null,"docs":" Returns the stream ID of the stream whose capacity will\n be released by this `FlowControl`.\n","sig":null,"attributes":[{"value":"/ Returns the stream ID of the stream whose capacity will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693431,"byte_end":693490,"line_start":498,"line_end":498,"column_start":5,"column_end":64}},{"value":"/ be released by this `FlowControl`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693495,"byte_end":693533,"line_start":499,"line_end":499,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3518},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693730,"byte_end":693748,"line_start":505,"line_end":505,"column_start":12,"column_end":30},"name":"available_capacity","qualname":"<FlowControl>::available_capacity","value":"fn available_capacity(&Self) -> isize","parent":null,"children":[],"decl_id":null,"docs":" Get the current available capacity of data this stream *could* receive.\n","sig":null,"attributes":[{"value":"/ Get the current available capacity of data this stream *could* receive.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693643,"byte_end":693718,"line_start":504,"line_end":504,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":3519},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693974,"byte_end":693987,"line_start":512,"line_end":512,"column_start":12,"column_end":25},"name":"used_capacity","qualname":"<FlowControl>::used_capacity","value":"fn used_capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the currently *used* capacity for this stream.","sig":null,"attributes":[{"value":"/ Get the currently *used* capacity for this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693823,"byte_end":693877,"line_start":509,"line_end":509,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693882,"byte_end":693885,"line_start":510,"line_end":510,"column_start":5,"column_end":8}},{"value":"/ This is the amount of bytes that can be released back to the remote.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693890,"byte_end":693962,"line_start":511,"line_end":511,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3520},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694750,"byte_end":694766,"line_start":532,"line_end":532,"column_start":12,"column_end":28},"name":"release_capacity","qualname":"<FlowControl>::release_capacity","value":"fn release_capacity(&mut Self, usize) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":" Release window capacity back to remote stream.","sig":null,"attributes":[{"value":"/ Release window capacity back to remote stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694066,"byte_end":694116,"line_start":516,"line_end":516,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694121,"byte_end":694124,"line_start":517,"line_end":517,"column_start":5,"column_end":8}},{"value":"/ This releases capacity back to the stream level and the connection level","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694129,"byte_end":694205,"line_start":518,"line_end":518,"column_start":5,"column_end":81}},{"value":"/ windows. Both window sizes will be increased by `sz`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694210,"byte_end":694267,"line_start":519,"line_end":519,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694272,"byte_end":694275,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ See [struct level] documentation for more details.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694280,"byte_end":694334,"line_start":521,"line_end":521,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694339,"byte_end":694342,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694347,"byte_end":694359,"line_start":523,"line_end":523,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694364,"byte_end":694367,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ This function errors if increasing the receive window size by `sz` would","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694372,"byte_end":694448,"line_start":525,"line_end":525,"column_start":5,"column_end":81}},{"value":"/ result in a window size greater than the target window size. In other","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694453,"byte_end":694526,"line_start":526,"line_end":526,"column_start":5,"column_end":78}},{"value":"/ words, the caller cannot release more capacity than data has been","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694531,"byte_end":694600,"line_start":527,"line_end":527,"column_start":5,"column_end":74}},{"value":"/ received. If 1024 bytes of data have been received, at most 1024 bytes","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694605,"byte_end":694679,"line_start":528,"line_end":528,"column_start":5,"column_end":79}},{"value":"/ can be released.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694684,"byte_end":694704,"line_start":529,"line_end":529,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694709,"byte_end":694712,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ [struct level]: #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":694717,"byte_end":694738,"line_start":531,"line_end":531,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3523},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":695280,"byte_end":695284,"line_start":550,"line_end":550,"column_start":18,"column_end":22},"name":"ping","qualname":"<PingPong>::ping","value":"async fn ping<'_>(&'_ mut Self, Ping) -> /*impl Trait*/","parent":null,"children":[],"decl_id":null,"docs":" Send a PING frame and wait for the peer to send the pong.\n","sig":null,"attributes":[{"value":"/ Send a PING frame and wait for the peer to send the pong.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":695201,"byte_end":695262,"line_start":549,"line_end":549,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3527},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":695477,"byte_end":695486,"line_start":556,"line_end":556,"column_start":12,"column_end":21},"name":"send_ping","qualname":"<PingPong>::send_ping","value":"fn send_ping(&mut Self, Ping) -> Result<(), crate::Error>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":695932,"byte_end":695941,"line_start":569,"line_end":569,"column_start":12,"column_end":21},"name":"poll_pong","qualname":"<PingPong>::poll_pong","value":"fn poll_pong(&mut Self, &mut Context) -> Poll<Result<Pong, crate::Error>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3531},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696140,"byte_end":696143,"line_start":576,"line_end":576,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PingPong as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3533},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696498,"byte_end":696504,"line_start":589,"line_end":589,"column_start":12,"column_end":18},"name":"opaque","qualname":"<Ping>::opaque","value":"fn opaque() -> Ping","parent":null,"children":[],"decl_id":null,"docs":" Creates a new opaque `Ping` to be sent via a [`PingPong`][].","sig":null,"attributes":[{"value":"/ Creates a new opaque `Ping` to be sent via a [`PingPong`][].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696291,"byte_end":696355,"line_start":584,"line_end":584,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696360,"byte_end":696363,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ The payload is \"opaque\", such that it shouldn't be depended on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696368,"byte_end":696435,"line_start":586,"line_end":586,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696440,"byte_end":696443,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ [`PingPong`]: struct.PingPong.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696448,"byte_end":696486,"line_start":588,"line_end":588,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696584,"byte_end":696587,"line_start":595,"line_end":595,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Ping as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3537},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696749,"byte_end":696752,"line_start":603,"line_end":603,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Pong as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11897,"byte_end":11906,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11933,"byte_end":11942,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":22}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12168,"byte_end":12177,"line_start":67,"line_end":67,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12289,"byte_end":12298,"line_start":73,"line_end":73,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12430,"byte_end":12439,"line_start":81,"line_end":81,"column_start":23,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12466,"byte_end":12475,"line_start":83,"line_end":83,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":29}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","byte_start":14517,"byte_end":14527,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","byte_start":25474,"byte_end":25484,"line_start":329,"line_end":329,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","byte_start":26877,"byte_end":26888,"line_start":374,"line_end":374,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","byte_start":27743,"byte_end":27748,"line_start":402,"line_end":402,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":29971,"byte_end":29982,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":190}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":33719,"byte_end":33726,"line_start":198,"line_end":198,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":38047,"byte_end":38054,"line_start":319,"line_end":319,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":209}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":38157,"byte_end":38168,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":38988,"byte_end":38999,"line_start":352,"line_end":352,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":221}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":39275,"byte_end":39286,"line_start":363,"line_end":363,"column_start":29,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":5222,"byte_end":5227,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":6206,"byte_end":6211,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":8305,"byte_end":8310,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":9197,"byte_end":9202,"line_start":155,"line_end":155,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":9464,"byte_end":9469,"line_start":166,"line_end":166,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":314},{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":10366,"byte_end":10371,"line_start":194,"line_end":194,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40634,"byte_end":40639,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":42425,"byte_end":42430,"line_start":108,"line_end":108,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43009,"byte_end":43014,"line_start":126,"line_end":126,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43150,"byte_end":43155,"line_start":134,"line_end":134,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43355,"byte_end":43360,"line_start":143,"line_end":143,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43494,"byte_end":43499,"line_start":151,"line_end":151,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":377}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":44966,"byte_end":44971,"line_start":188,"line_end":188,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":49702,"byte_end":49709,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450},{"krate":0,"index":451},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":56302,"byte_end":56309,"line_start":356,"line_end":356,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":56419,"byte_end":56433,"line_start":364,"line_end":364,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":464}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":59577,"byte_end":59589,"line_start":466,"line_end":466,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":480}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":60188,"byte_end":60193,"line_start":488,"line_end":488,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":62694,"byte_end":62706,"line_start":577,"line_end":577,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":62869,"byte_end":62881,"line_start":584,"line_end":584,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":63060,"byte_end":63072,"line_start":591,"line_end":591,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":63245,"byte_end":63257,"line_start":598,"line_end":598,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":497}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":63430,"byte_end":63442,"line_start":605,"line_end":605,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":499}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":63613,"byte_end":63618,"line_start":612,"line_end":612,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":501}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/encoder.rs","byte_start":74175,"byte_end":74182,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/encoder.rs","byte_start":79700,"byte_end":79707,"line_start":185,"line_end":185,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":97431,"byte_end":97437,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":97996,"byte_end":98002,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":103102,"byte_end":103108,"line_start":212,"line_end":212,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":103665,"byte_end":103669,"line_start":229,"line_end":229,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":105050,"byte_end":105058,"line_start":266,"line_end":266,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":105737,"byte_end":105745,"line_start":291,"line_end":291,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":615},{"krate":0,"index":616}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":105853,"byte_end":105861,"line_start":298,"line_end":298,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":105949,"byte_end":105957,"line_start":304,"line_end":304,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/huffman/mod.rs","byte_start":107471,"byte_end":107478,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655},{"krate":0,"index":656}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/table.rs","byte_start":222679,"byte_end":222684,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":700},{"krate":0,"index":702},{"krate":0,"index":703},{"krate":0,"index":704},{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707},{"krate":0,"index":708},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/table.rs","byte_start":240796,"byte_end":240801,"line_start":637,"line_end":637,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":717}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":248723,"byte_end":248733,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":819},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":830},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":835},{"krate":0,"index":836}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":259253,"byte_end":259268,"line_start":353,"line_end":353,"column_start":12,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":259719,"byte_end":259732,"line_start":378,"line_end":378,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":843},{"krate":0,"index":844},{"krate":0,"index":845},{"krate":0,"index":846},{"krate":0,"index":848}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":265515,"byte_end":265525,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":861}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":265709,"byte_end":265719,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":267115,"byte_end":267125,"line_start":574,"line_end":574,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267745,"byte_end":267750,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":898}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":268662,"byte_end":268671,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":900}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":268853,"byte_end":268858,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":269207,"byte_end":269212,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":269327,"byte_end":269332,"line_start":77,"line_end":77,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":269479,"byte_end":269488,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/go_away.rs","byte_start":271075,"byte_end":271081,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/go_away.rs","byte_start":274380,"byte_end":274389,"line_start":154,"line_end":154,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":956}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/peer.rs","byte_start":275463,"byte_end":275466,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":996},{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":999}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":278601,"byte_end":278609,"line_start":63,"line_end":63,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":282993,"byte_end":283005,"line_start":201,"line_end":201,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":283200,"byte_end":283209,"line_start":212,"line_end":212,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1062},{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":284764,"byte_end":284775,"line_start":263,"line_end":263,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":285293,"byte_end":285304,"line_start":285,"line_end":285,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1070}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/settings.rs","byte_start":286328,"byte_end":286336,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/buffer.rs","byte_start":292707,"byte_end":292713,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1110}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/buffer.rs","byte_start":292797,"byte_end":292802,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1116},{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/counts.rs","byte_start":295176,"byte_end":295182,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1126},{"krate":0,"index":1127},{"krate":0,"index":1128},{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131},{"krate":0,"index":1132},{"krate":0,"index":1133},{"krate":0,"index":1134},{"krate":0,"index":1135},{"krate":0,"index":1136},{"krate":0,"index":1139},{"krate":0,"index":1140},{"krate":0,"index":1141},{"krate":0,"index":1142},{"krate":0,"index":1143}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/counts.rs","byte_start":300697,"byte_end":300703,"line_start":202,"line_end":202,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":302659,"byte_end":302670,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1166},{"krate":0,"index":1167},{"krate":0,"index":1168},{"krate":0,"index":1169},{"krate":0,"index":1170},{"krate":0,"index":1171},{"krate":0,"index":1172},{"krate":0,"index":1173},{"krate":0,"index":1174},{"krate":0,"index":1175},{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306996,"byte_end":307002,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1178},{"krate":0,"index":1179}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307312,"byte_end":307318,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307508,"byte_end":307514,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307789,"byte_end":307795,"line_start":229,"line_end":229,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1185}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307926,"byte_end":307932,"line_start":235,"line_end":235,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1187},{"krate":0,"index":1188}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":308103,"byte_end":308109,"line_start":242,"line_end":242,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1190}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":308225,"byte_end":308231,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/prioritize.rs","byte_start":311143,"byte_end":311153,"line_start":81,"line_end":81,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260},{"krate":0,"index":1262},{"krate":0,"index":1265},{"krate":0,"index":1266},{"krate":0,"index":1269},{"krate":0,"index":1272},{"krate":0,"index":1275},{"krate":0,"index":1277},{"krate":0,"index":1279},{"krate":0,"index":1280},{"krate":0,"index":1281},{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/prioritize.rs","byte_start":341846,"byte_end":341857,"line_start":874,"line_end":874,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1292},{"krate":0,"index":1294}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/prioritize.rs","byte_start":342257,"byte_end":342268,"line_start":895,"line_end":895,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/recv.rs","byte_start":344859,"byte_end":344863,"line_start":83,"line_end":83,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1365},{"krate":0,"index":1367},{"krate":0,"index":1370},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1383},{"krate":0,"index":1384},{"krate":0,"index":1387},{"krate":0,"index":1388},{"krate":0,"index":1389},{"krate":0,"index":1390},{"krate":0,"index":1391},{"krate":0,"index":1392},{"krate":0,"index":1393},{"krate":0,"index":1394},{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":1404},{"krate":0,"index":1405},{"krate":0,"index":1407},{"krate":0,"index":1408},{"krate":0,"index":1409},{"krate":0,"index":1412},{"krate":0,"index":1415},{"krate":0,"index":1419},{"krate":0,"index":1421},{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/recv.rs","byte_start":380727,"byte_end":380731,"line_start":1080,"line_end":1080,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/recv.rs","byte_start":380970,"byte_end":380990,"line_start":1093,"line_end":1093,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1430}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/send.rs","byte_start":382437,"byte_end":382441,"line_start":50,"line_end":50,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1519},{"krate":0,"index":1521},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1526},{"krate":0,"index":1528},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1541},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/state.rs","byte_start":402982,"byte_end":402987,"line_start":88,"line_end":88,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592},{"krate":0,"index":1593},{"krate":0,"index":1594},{"krate":0,"index":1595},{"krate":0,"index":1596},{"krate":0,"index":1597},{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605},{"krate":0,"index":1606},{"krate":0,"index":1607},{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/state.rs","byte_start":415514,"byte_end":415519,"line_start":462,"line_end":462,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/state.rs","byte_start":415613,"byte_end":415617,"line_start":468,"line_end":468,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":417480,"byte_end":417485,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1665},{"krate":0,"index":1666},{"krate":0,"index":1667},{"krate":0,"index":1668},{"krate":0,"index":1670},{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":419808,"byte_end":419813,"line_start":179,"line_end":179,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1677}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":419928,"byte_end":419933,"line_start":185,"line_end":185,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1679},{"krate":0,"index":1680}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":420281,"byte_end":420286,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1684}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":420600,"byte_end":420605,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":421358,"byte_end":421363,"line_start":239,"line_end":239,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691},{"krate":0,"index":1692},{"krate":0,"index":1693},{"krate":0,"index":1696},{"krate":0,"index":1697}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":423952,"byte_end":423955,"line_start":343,"line_end":343,"column_start":10,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":424848,"byte_end":424851,"line_start":374,"line_end":374,"column_start":22,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1709}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425014,"byte_end":425017,"line_start":383,"line_end":383,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1712},{"krate":0,"index":1713}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425150,"byte_end":425153,"line_start":391,"line_end":391,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425272,"byte_end":425275,"line_start":397,"line_end":397,"column_start":25,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425422,"byte_end":425435,"line_start":405,"line_end":405,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1722}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425635,"byte_end":425646,"line_start":415,"line_end":415,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1725}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":429963,"byte_end":429969,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1742},{"krate":0,"index":1743},{"krate":0,"index":1744},{"krate":0,"index":1745},{"krate":0,"index":1746},{"krate":0,"index":1747},{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750},{"krate":0,"index":1751},{"krate":0,"index":1752},{"krate":0,"index":1753},{"krate":0,"index":1754},{"krate":0,"index":1755},{"krate":0,"index":1756}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":437283,"byte_end":437293,"line_start":335,"line_end":335,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1758},{"krate":0,"index":1759},{"krate":0,"index":1760},{"krate":0,"index":1761},{"krate":0,"index":1762}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":437821,"byte_end":437829,"line_start":357,"line_end":357,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1764},{"krate":0,"index":1765},{"krate":0,"index":1766},{"krate":0,"index":1767},{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":438561,"byte_end":438577,"line_start":384,"line_end":384,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1770},{"krate":0,"index":1771},{"krate":0,"index":1772},{"krate":0,"index":1773},{"krate":0,"index":1774}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":439140,"byte_end":439156,"line_start":406,"line_end":406,"column_start":22,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1776},{"krate":0,"index":1777},{"krate":0,"index":1778},{"krate":0,"index":1779},{"krate":0,"index":1780}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":439695,"byte_end":439703,"line_start":428,"line_end":428,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1782},{"krate":0,"index":1783},{"krate":0,"index":1784},{"krate":0,"index":1785},{"krate":0,"index":1786}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":440415,"byte_end":440430,"line_start":455,"line_end":455,"column_start":22,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1788},{"krate":0,"index":1789},{"krate":0,"index":1790},{"krate":0,"index":1791},{"krate":0,"index":1792}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":441064,"byte_end":441077,"line_start":483,"line_end":483,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1794}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":444229,"byte_end":444236,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1939},{"krate":0,"index":1940},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1948},{"krate":0,"index":1949},{"krate":0,"index":1950},{"krate":0,"index":1957}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":450560,"byte_end":450570,"line_start":311,"line_end":311,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1960},{"krate":0,"index":1961},{"krate":0,"index":1962},{"krate":0,"index":1963},{"krate":0,"index":1964},{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":452665,"byte_end":452670,"line_start":370,"line_end":370,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1977},{"krate":0,"index":1980},{"krate":0,"index":1983},{"krate":0,"index":1985},{"krate":0,"index":1989},{"krate":0,"index":1993},{"krate":0,"index":1997},{"krate":0,"index":2001},{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":472334,"byte_end":472341,"line_start":910,"line_end":910,"column_start":9,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2008}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":473085,"byte_end":473092,"line_start":937,"line_end":937,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2012},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":474594,"byte_end":474601,"line_start":993,"line_end":993,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2021}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":474896,"byte_end":474903,"line_start":1007,"line_end":1007,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2025}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":475256,"byte_end":475265,"line_start":1025,"line_end":1025,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2033},{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":482355,"byte_end":482364,"line_start":1244,"line_end":1244,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2046}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":482573,"byte_end":482588,"line_start":1255,"line_end":1255,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2048},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":485871,"byte_end":485886,"line_start":1362,"line_end":1362,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2061}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":486659,"byte_end":486674,"line_start":1386,"line_end":1386,"column_start":16,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2064}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":487002,"byte_end":487017,"line_start":1400,"line_end":1400,"column_start":15,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2066}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":489837,"byte_end":489847,"line_start":1485,"line_end":1485,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2073}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":489995,"byte_end":490002,"line_start":1494,"line_end":1494,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2078},{"krate":0,"index":2080},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":498150,"byte_end":498154,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":500695,"byte_end":500699,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2287}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":501319,"byte_end":501323,"line_start":144,"line_end":144,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2290}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":501741,"byte_end":501746,"line_start":160,"line_end":160,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":501845,"byte_end":501849,"line_start":166,"line_end":166,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2297}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":502309,"byte_end":502318,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2299},{"krate":0,"index":2300},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":502877,"byte_end":502886,"line_start":214,"line_end":214,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":503055,"byte_end":503064,"line_start":226,"line_end":226,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/go_away.rs","byte_start":503570,"byte_end":503576,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/go_away.rs","byte_start":504824,"byte_end":504829,"line_start":61,"line_end":61,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/go_away.rs","byte_start":504933,"byte_end":504939,"line_start":67,"line_end":67,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2353}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/head.rs","byte_start":505781,"byte_end":505785,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/head.rs","byte_start":506804,"byte_end":506808,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2371}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":509825,"byte_end":509832,"line_start":111,"line_end":111,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2459},{"krate":0,"index":2460},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":514330,"byte_end":514335,"line_start":284,"line_end":284,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2478}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":514434,"byte_end":514441,"line_start":290,"line_end":290,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2480}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":515508,"byte_end":515519,"line_start":340,"line_end":340,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490},{"krate":0,"index":2491},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2497},{"krate":0,"index":2498}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":520317,"byte_end":520322,"line_start":507,"line_end":507,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2501}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":520429,"byte_end":520440,"line_start":513,"line_end":513,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":520816,"byte_end":520828,"line_start":526,"line_end":526,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":521180,"byte_end":521186,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":523550,"byte_end":523569,"line_start":626,"line_end":626,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2518}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":525189,"byte_end":525193,"line_start":678,"line_end":678,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2521},{"krate":0,"index":2522}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526281,"byte_end":526292,"line_start":720,"line_end":720,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2528},{"krate":0,"index":2529},{"krate":0,"index":2530},{"krate":0,"index":2531},{"krate":0,"index":2532},{"krate":0,"index":2533}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526965,"byte_end":526976,"line_start":754,"line_end":754,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2535}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527223,"byte_end":527234,"line_start":767,"line_end":767,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527628,"byte_end":527643,"line_start":780,"line_end":780,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2542},{"krate":0,"index":2543},{"krate":0,"index":2544},{"krate":0,"index":2545}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528080,"byte_end":528095,"line_start":802,"line_end":802,"column_start":18,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528358,"byte_end":528373,"line_start":815,"line_end":815,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528648,"byte_end":528659,"line_start":826,"line_end":826,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":2553},{"krate":0,"index":2557},{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/ping.rs","byte_start":536693,"byte_end":536697,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2595},{"krate":0,"index":2597}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/ping.rs","byte_start":539068,"byte_end":539073,"line_start":98,"line_end":98,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2601}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/priority.rs","byte_start":539732,"byte_end":539740,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2605}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/priority.rs","byte_start":540129,"byte_end":540134,"line_start":38,"line_end":38,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2608}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/priority.rs","byte_start":540258,"byte_end":540274,"line_start":46,"line_end":46,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541697,"byte_end":541703,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":544893,"byte_end":544899,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2634}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":545070,"byte_end":545076,"line_start":99,"line_end":99,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":545837,"byte_end":545840,"line_start":124,"line_end":124,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2643}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":545972,"byte_end":545978,"line_start":130,"line_end":130,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reset.rs","byte_start":546302,"byte_end":546307,"line_start":11,"line_end":11,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2671},{"krate":0,"index":2672},{"krate":0,"index":2673},{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reset.rs","byte_start":547315,"byte_end":547320,"line_start":52,"line_end":52,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2678}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":548933,"byte_end":548941,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2743}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":555043,"byte_end":555048,"line_start":264,"line_end":264,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2748}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":555153,"byte_end":555161,"line_start":270,"line_end":270,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":556271,"byte_end":556278,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2753},{"krate":0,"index":2755},{"krate":0,"index":2756}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558105,"byte_end":558118,"line_start":361,"line_end":361,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558536,"byte_end":558549,"line_start":385,"line_end":385,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559457,"byte_end":559465,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775},{"krate":0,"index":2777},{"krate":0,"index":2778},{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":561168,"byte_end":561176,"line_start":79,"line_end":79,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2783}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":561436,"byte_end":561444,"line_start":92,"line_end":92,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2787}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/util.rs","byte_start":563094,"byte_end":563104,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2811},{"krate":0,"index":2813}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/window_update.rs","byte_start":563921,"byte_end":563933,"line_start":13,"line_end":13,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2839},{"krate":0,"index":2840},{"krate":0,"index":2841}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/window_update.rs","byte_start":565270,"byte_end":565275,"line_start":58,"line_end":58,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2845}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/mod.rs","byte_start":494984,"byte_end":494989,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2927}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/mod.rs","byte_start":495580,"byte_end":495585,"line_start":113,"line_end":113,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578239,"byte_end":578250,"line_start":342,"line_end":342,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3058},{"krate":0,"index":3060}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585907,"byte_end":585918,"line_start":539,"line_end":539,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3063}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":586079,"byte_end":586090,"line_start":548,"line_end":548,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3066}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":586997,"byte_end":587013,"line_start":585,"line_end":585,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3069},{"krate":0,"index":3070}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587498,"byte_end":587505,"line_start":605,"line_end":605,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":3079},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605409,"byte_end":605416,"line_start":1109,"line_end":1109,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":607444,"byte_end":607454,"line_start":1177,"line_end":1177,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3100},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612229,"byte_end":612239,"line_start":1306,"line_end":1306,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612586,"byte_end":612596,"line_start":1319,"line_end":1319,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3116}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612850,"byte_end":612864,"line_start":1332,"line_end":1332,"column_start":17,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3118},{"krate":0,"index":3119}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613239,"byte_end":613253,"line_start":1343,"line_end":1343,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3121},{"krate":0,"index":3122}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":614015,"byte_end":614027,"line_start":1371,"line_end":1371,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3128}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615316,"byte_end":615327,"line_start":1410,"line_end":1410,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615907,"byte_end":615927,"line_start":1430,"line_end":1430,"column_start":17,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3134},{"krate":0,"index":3135}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616134,"byte_end":616154,"line_start":1438,"line_end":1438,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3137}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616423,"byte_end":616427,"line_start":1451,"line_end":1451,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3139}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":618570,"byte_end":618574,"line_start":1516,"line_end":1516,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619878,"byte_end":619886,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620397,"byte_end":620405,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3165}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620543,"byte_end":620551,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3167}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620643,"byte_end":620651,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3169}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631624,"byte_end":631642,"line_start":292,"line_end":292,"column_start":42,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3298}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633763,"byte_end":633773,"line_start":364,"line_end":364,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3331},{"krate":0,"index":3332},{"krate":0,"index":3333},{"krate":0,"index":3334},{"krate":0,"index":3335},{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338},{"krate":0,"index":3339},{"krate":0,"index":3340},{"krate":0,"index":3341}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642326,"byte_end":642336,"line_start":594,"line_end":594,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3345}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642611,"byte_end":642618,"line_start":608,"line_end":608,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3356},{"krate":0,"index":3357}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656685,"byte_end":656692,"line_start":1016,"line_end":1016,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3361}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656804,"byte_end":656816,"line_start":1024,"line_end":1024,"column_start":14,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3364},{"krate":0,"index":3366},{"krate":0,"index":3368},{"krate":0,"index":3369},{"krate":0,"index":3370}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660015,"byte_end":660033,"line_start":1116,"line_end":1116,"column_start":14,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3375},{"krate":0,"index":3376}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662566,"byte_end":662571,"line_start":1188,"line_end":1188,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3380}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662689,"byte_end":662694,"line_start":1194,"line_end":1194,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3384},{"krate":0,"index":3385}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":663107,"byte_end":663118,"line_start":1210,"line_end":1210,"column_start":17,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3389},{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":663377,"byte_end":663388,"line_start":1223,"line_end":1223,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3394},{"krate":0,"index":3395}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":664665,"byte_end":664674,"line_start":1262,"line_end":1262,"column_start":28,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3400},{"krate":0,"index":3401}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":667435,"byte_end":667444,"line_start":1328,"line_end":1328,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3405}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":667644,"byte_end":667648,"line_start":1338,"line_end":1338,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3407},{"krate":0,"index":3411}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":669713,"byte_end":669717,"line_start":1414,"line_end":1414,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3417},{"krate":0,"index":3418},{"krate":0,"index":3419},{"krate":0,"index":3420},{"krate":0,"index":3421}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":673738,"byte_end":673749,"line_start":1540,"line_end":1540,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3436}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683541,"byte_end":683551,"line_start":222,"line_end":222,"column_start":14,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3483},{"krate":0,"index":3484},{"krate":0,"index":3485},{"krate":0,"index":3486},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3490},{"krate":0,"index":3491},{"krate":0,"index":3492}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690035,"byte_end":690043,"line_start":387,"line_end":387,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3494},{"krate":0,"index":3495}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690591,"byte_end":690601,"line_start":406,"line_end":406,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498},{"krate":0,"index":3502},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692672,"byte_end":692682,"line_start":472,"line_end":472,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692871,"byte_end":692881,"line_start":480,"line_end":480,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3514}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693313,"byte_end":693324,"line_start":493,"line_end":493,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3516},{"krate":0,"index":3517},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":695095,"byte_end":695103,"line_start":544,"line_end":544,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3522},{"krate":0,"index":3523},{"krate":0,"index":3527},{"krate":0,"index":3529}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696122,"byte_end":696130,"line_start":575,"line_end":575,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3531}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696280,"byte_end":696284,"line_start":583,"line_end":583,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":3533}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696570,"byte_end":696574,"line_start":594,"line_end":594,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3535}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696735,"byte_end":696739,"line_start":602,"line_end":602,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3537}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4329,"byte_end":4335,"line_start":122,"line_end":122,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":2935}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4345,"byte_end":4348,"line_start":123,"line_end":123,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":3149}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/lib.rs","byte_start":4358,"byte_end":4364,"line_start":124,"line_end":124,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":3170}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11897,"byte_end":11906,"line_start":56,"line_end":56,"column_start":23,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3567},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":11933,"byte_end":11942,"line_start":58,"line_end":58,"column_start":23,"column_end":32},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3567},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12168,"byte_end":12177,"line_start":67,"line_end":67,"column_start":26,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3567},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12289,"byte_end":12298,"line_start":73,"line_end":73,"column_start":26,"column_end":35},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3567},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12430,"byte_end":12439,"line_start":81,"line_end":81,"column_start":23,"column_end":32},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3576},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/error.rs","byte_start":12466,"byte_end":12475,"line_start":83,"line_end":83,"column_start":23,"column_end":32},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3576},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","byte_start":14517,"byte_end":14527,"line_start":52,"line_end":52,"column_start":9,"column_end":19},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3603},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","byte_start":25474,"byte_end":25484,"line_start":329,"line_end":329,"column_start":20,"column_end":30},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3603},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","byte_start":26877,"byte_end":26888,"line_start":374,"line_end":374,"column_start":6,"column_end":17},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3617},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_read.rs","byte_start":27743,"byte_end":27748,"line_start":402,"line_end":402,"column_start":31,"column_end":36},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":29971,"byte_end":29982,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":4616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":33719,"byte_end":33726,"line_start":198,"line_end":198,"column_start":9,"column_end":16},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":4625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":38047,"byte_end":38054,"line_start":319,"line_end":319,"column_start":9,"column_end":16},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":4625},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":38157,"byte_end":38168,"line_start":325,"line_end":325,"column_start":12,"column_end":23},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":4616},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":38988,"byte_end":38999,"line_start":352,"line_end":352,"column_start":45,"column_end":56},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":4616},"to":{"krate":22,"index":207}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/framed_write.rs","byte_start":39275,"byte_end":39286,"line_start":363,"line_end":363,"column_start":29,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":4616},"to":{"krate":2,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":5222,"byte_end":5227,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":4965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":6206,"byte_end":6211,"line_start":61,"line_end":61,"column_start":12,"column_end":17},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":4965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":8305,"byte_end":8310,"line_start":124,"line_end":124,"column_start":12,"column_end":17},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":4965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":9197,"byte_end":9202,"line_start":155,"line_end":155,"column_start":23,"column_end":28},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":4965},"to":{"krate":20,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":9464,"byte_end":9469,"line_start":166,"line_end":166,"column_start":31,"column_end":36},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":4965},"to":{"krate":37,"index":17}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/codec/mod.rs","byte_start":10366,"byte_end":10371,"line_start":194,"line_end":194,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":4965},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":40634,"byte_end":40639,"line_start":46,"line_end":46,"column_start":6,"column_end":11},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":4973},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":42425,"byte_end":42430,"line_start":108,"line_end":108,"column_start":29,"column_end":34},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":4973},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43009,"byte_end":43014,"line_start":126,"line_end":126,"column_start":23,"column_end":28},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":4973},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43150,"byte_end":43155,"line_start":134,"line_end":134,"column_start":26,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":4973},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43355,"byte_end":43360,"line_start":143,"line_end":143,"column_start":26,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":4973},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":43494,"byte_end":43499,"line_start":151,"line_end":151,"column_start":23,"column_end":28},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":4973},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/error.rs","byte_start":44966,"byte_end":44971,"line_start":188,"line_end":188,"column_start":23,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":4973},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":49702,"byte_end":49709,"line_start":153,"line_end":153,"column_start":6,"column_end":13},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":4999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":56302,"byte_end":56309,"line_start":356,"line_end":356,"column_start":18,"column_end":25},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":4999},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":56419,"byte_end":56433,"line_start":364,"line_end":364,"column_start":6,"column_end":20},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":59577,"byte_end":59589,"line_start":466,"line_end":466,"column_start":6,"column_end":18},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":444},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":60188,"byte_end":60193,"line_start":488,"line_end":488,"column_start":6,"column_end":11},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":5058},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":62694,"byte_end":62706,"line_start":577,"line_end":577,"column_start":26,"column_end":38},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":5006},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":62869,"byte_end":62881,"line_start":584,"line_end":584,"column_start":43,"column_end":55},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":5006},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":63060,"byte_end":63072,"line_start":591,"line_end":591,"column_start":42,"column_end":54},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":5006},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":63245,"byte_end":63257,"line_start":598,"line_end":598,"column_start":38,"column_end":50},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":5006},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":63430,"byte_end":63442,"line_start":605,"line_end":605,"column_start":42,"column_end":54},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":5006},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/decoder.rs","byte_start":63613,"byte_end":63618,"line_start":612,"line_end":612,"column_start":36,"column_end":41},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":11930},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/encoder.rs","byte_start":74175,"byte_end":74182,"line_start":19,"line_end":19,"column_start":6,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":5325},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/encoder.rs","byte_start":79700,"byte_end":79707,"line_start":185,"line_end":185,"column_start":18,"column_end":25},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":5325},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":97431,"byte_end":97437,"line_start":43,"line_end":43,"column_start":6,"column_end":12},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":5355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":97996,"byte_end":98002,"line_start":63,"line_end":63,"column_start":6,"column_end":12},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":5355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":103102,"byte_end":103108,"line_start":212,"line_end":212,"column_start":23,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":5355},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":103665,"byte_end":103669,"line_start":229,"line_end":229,"column_start":10,"column_end":14},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":5395},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":105050,"byte_end":105058,"line_start":266,"line_end":266,"column_start":6,"column_end":14},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":5433},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":105737,"byte_end":105745,"line_start":291,"line_end":291,"column_start":26,"column_end":34},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":5433},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":105853,"byte_end":105861,"line_start":298,"line_end":298,"column_start":22,"column_end":30},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":5433},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/header.rs","byte_start":105949,"byte_end":105957,"line_start":304,"line_end":304,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":5433},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/huffman/mod.rs","byte_start":107471,"byte_end":107478,"line_start":68,"line_end":68,"column_start":6,"column_end":13},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":645},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/table.rs","byte_start":222679,"byte_end":222684,"line_start":74,"line_end":74,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":5447},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/hpack/table.rs","byte_start":240796,"byte_end":240801,"line_start":637,"line_end":637,"column_start":6,"column_end":11},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":5456},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":248723,"byte_end":248733,"line_start":98,"line_end":98,"column_start":15,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":5516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":259253,"byte_end":259268,"line_start":353,"line_end":353,"column_start":12,"column_end":27},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":5527},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":259719,"byte_end":259732,"line_start":378,"line_end":378,"column_start":9,"column_end":22},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":265515,"byte_end":265525,"line_start":529,"line_end":529,"column_start":12,"column_end":22},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":5516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":265709,"byte_end":265719,"line_start":539,"line_end":539,"column_start":12,"column_end":22},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":5516},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/connection.rs","byte_start":267115,"byte_end":267125,"line_start":574,"line_end":574,"column_start":24,"column_end":34},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":5516},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":267745,"byte_end":267750,"line_start":23,"line_end":23,"column_start":6,"column_end":11},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":6113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":268662,"byte_end":268671,"line_start":52,"line_end":52,"column_start":6,"column_end":15},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":6132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":268853,"byte_end":268858,"line_start":61,"line_end":61,"column_start":23,"column_end":28},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":6113},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":269207,"byte_end":269212,"line_start":71,"line_end":71,"column_start":30,"column_end":35},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":6113},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":269327,"byte_end":269332,"line_start":77,"line_end":77,"column_start":26,"column_end":31},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":6113},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/error.rs","byte_start":269479,"byte_end":269488,"line_start":83,"line_end":83,"column_start":22,"column_end":31},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":3567},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/go_away.rs","byte_start":271075,"byte_end":271081,"line_start":44,"line_end":44,"column_start":6,"column_end":12},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":6147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/go_away.rs","byte_start":274380,"byte_end":274389,"line_start":154,"line_end":154,"column_start":6,"column_end":15},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":6154},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/peer.rs","byte_start":275463,"byte_end":275466,"line_start":48,"line_end":48,"column_start":6,"column_end":9},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":6159},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":278601,"byte_end":278609,"line_start":63,"line_end":63,"column_start":6,"column_end":14},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":6248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":282993,"byte_end":283005,"line_start":201,"line_end":201,"column_start":6,"column_end":18},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":6275},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":283200,"byte_end":283209,"line_start":212,"line_end":212,"column_start":6,"column_end":15},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":6254},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":284764,"byte_end":284775,"line_start":263,"line_end":263,"column_start":6,"column_end":17},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":6259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/ping_pong.rs","byte_start":285293,"byte_end":285304,"line_start":285,"line_end":285,"column_start":15,"column_end":26},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":6259},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/settings.rs","byte_start":286328,"byte_end":286336,"line_start":28,"line_end":28,"column_start":6,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":6380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/buffer.rs","byte_start":292707,"byte_end":292713,"line_start":28,"line_end":28,"column_start":9,"column_end":15},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":6556},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/buffer.rs","byte_start":292797,"byte_end":292802,"line_start":34,"line_end":34,"column_start":6,"column_end":11},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":6562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/counts.rs","byte_start":295176,"byte_end":295182,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":6583},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/counts.rs","byte_start":300697,"byte_end":300703,"line_start":202,"line_end":202,"column_start":15,"column_end":21},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":6583},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":302659,"byte_end":302670,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":6657},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":306996,"byte_end":307002,"line_start":194,"line_end":194,"column_start":6,"column_end":12},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":6793},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307312,"byte_end":307318,"line_start":209,"line_end":209,"column_start":27,"column_end":33},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":6793},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307508,"byte_end":307514,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":6793},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307789,"byte_end":307795,"line_start":229,"line_end":229,"column_start":44,"column_end":50},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":6793},"to":{"krate":2,"index":3253}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":307926,"byte_end":307932,"line_start":235,"line_end":235,"column_start":38,"column_end":44},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":6793},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":308103,"byte_end":308109,"line_start":242,"line_end":242,"column_start":44,"column_end":50},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":6793},"to":{"krate":2,"index":3249}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/flow_control.rs","byte_start":308225,"byte_end":308231,"line_start":248,"line_end":248,"column_start":23,"column_end":29},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":6793},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/prioritize.rs","byte_start":311143,"byte_end":311153,"line_start":81,"line_end":81,"column_start":6,"column_end":16},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":6807},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/prioritize.rs","byte_start":341846,"byte_end":341857,"line_start":874,"line_end":874,"column_start":17,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1241},"to":{"krate":21,"index":42}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/prioritize.rs","byte_start":342257,"byte_end":342268,"line_start":895,"line_end":895,"column_start":29,"column_end":40},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1241},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/recv.rs","byte_start":344859,"byte_end":344863,"line_start":83,"line_end":83,"column_start":6,"column_end":10},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":7731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/recv.rs","byte_start":380727,"byte_end":380731,"line_start":1080,"line_end":1080,"column_start":6,"column_end":10},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":7771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/recv.rs","byte_start":380970,"byte_end":380990,"line_start":1093,"line_end":1093,"column_start":25,"column_end":45},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":7760},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/send.rs","byte_start":382437,"byte_end":382441,"line_start":50,"line_end":50,"column_start":6,"column_end":10},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":8674},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/state.rs","byte_start":402982,"byte_end":402987,"line_start":88,"line_end":88,"column_start":6,"column_end":11},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9106},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/state.rs","byte_start":415514,"byte_end":415519,"line_start":462,"line_end":462,"column_start":18,"column_end":23},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":9106},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/state.rs","byte_start":415613,"byte_end":415617,"line_start":468,"line_end":468,"column_start":18,"column_end":22},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":9135},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":417480,"byte_end":417485,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":9606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":419808,"byte_end":419813,"line_start":179,"line_end":179,"column_start":18,"column_end":23},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":9606},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":419928,"byte_end":419933,"line_start":185,"line_end":185,"column_start":26,"column_end":31},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":9606},"to":{"krate":2,"index":3454}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":420281,"byte_end":420286,"line_start":198,"line_end":198,"column_start":29,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":9606},"to":{"krate":2,"index":3458}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":420600,"byte_end":420605,"line_start":209,"line_end":209,"column_start":6,"column_end":11},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":9606},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":421358,"byte_end":421363,"line_start":239,"line_end":239,"column_start":9,"column_end":14},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":9641},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":423952,"byte_end":423955,"line_start":343,"line_end":343,"column_start":10,"column_end":13},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1637},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":424848,"byte_end":424851,"line_start":374,"line_end":374,"column_start":22,"column_end":25},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1637},"to":{"krate":0,"index":1662}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425014,"byte_end":425017,"line_start":383,"line_end":383,"column_start":25,"column_end":28},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1637},"to":{"krate":2,"index":3369}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425150,"byte_end":425153,"line_start":391,"line_end":391,"column_start":28,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1637},"to":{"krate":2,"index":3382}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425272,"byte_end":425275,"line_start":397,"line_end":397,"column_start":25,"column_end":28},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1637},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425422,"byte_end":425435,"line_start":405,"line_end":405,"column_start":10,"column_end":23},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1655},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/store.rs","byte_start":425635,"byte_end":425646,"line_start":415,"line_end":415,"column_start":10,"column_end":21},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1658},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":429963,"byte_end":429969,"line_start":138,"line_end":138,"column_start":6,"column_end":12},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":9784},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":437283,"byte_end":437293,"line_start":335,"line_end":335,"column_start":22,"column_end":32},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":9826},"to":{"krate":0,"index":1641}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":437821,"byte_end":437829,"line_start":357,"line_end":357,"column_start":22,"column_end":30},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":9830},"to":{"krate":0,"index":1641}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":438561,"byte_end":438577,"line_start":384,"line_end":384,"column_start":22,"column_end":38},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9834},"to":{"krate":0,"index":1641}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":439140,"byte_end":439156,"line_start":406,"line_end":406,"column_start":22,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":9838},"to":{"krate":0,"index":1641}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":439695,"byte_end":439703,"line_start":428,"line_end":428,"column_start":22,"column_end":30},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":9842},"to":{"krate":0,"index":1641}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":440415,"byte_end":440430,"line_start":455,"line_end":455,"column_start":22,"column_end":37},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":9846},"to":{"krate":0,"index":1641}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/stream.rs","byte_start":441064,"byte_end":441077,"line_start":483,"line_end":483,"column_start":6,"column_end":19},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":9816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":444229,"byte_end":444236,"line_start":106,"line_end":106,"column_start":12,"column_end":19},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":9914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":450560,"byte_end":450570,"line_start":311,"line_end":311,"column_start":9,"column_end":19},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":9924},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":452665,"byte_end":452670,"line_start":370,"line_end":370,"column_start":6,"column_end":11},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":9941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":472334,"byte_end":472341,"line_start":910,"line_end":910,"column_start":9,"column_end":16},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":9914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":473085,"byte_end":473092,"line_start":937,"line_end":937,"column_start":12,"column_end":19},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":9914},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":474594,"byte_end":474601,"line_start":993,"line_end":993,"column_start":22,"column_end":29},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":9914},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":474896,"byte_end":474903,"line_start":1007,"line_end":1007,"column_start":21,"column_end":28},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":9914},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":475256,"byte_end":475265,"line_start":1025,"line_end":1025,"column_start":9,"column_end":18},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":9934},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":482355,"byte_end":482364,"line_start":1244,"line_end":1244,"column_start":19,"column_end":28},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":9934},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":482573,"byte_end":482588,"line_start":1255,"line_end":1255,"column_start":6,"column_end":21},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":1933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":485871,"byte_end":485886,"line_start":1362,"line_end":1362,"column_start":21,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1933},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":486659,"byte_end":486674,"line_start":1386,"line_end":1386,"column_start":16,"column_end":31},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1933},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":487002,"byte_end":487017,"line_start":1400,"line_end":1400,"column_start":15,"column_end":30},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1933},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":489837,"byte_end":489847,"line_start":1485,"line_end":1485,"column_start":9,"column_end":19},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":9955},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/proto/streams/streams.rs","byte_start":489995,"byte_end":490002,"line_start":1494,"line_end":1494,"column_start":6,"column_end":13},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":9948},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":498150,"byte_end":498154,"line_start":26,"line_end":26,"column_start":9,"column_end":13},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":10518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":500695,"byte_end":500699,"line_start":119,"line_end":119,"column_start":6,"column_end":10},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":10518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":501319,"byte_end":501323,"line_start":144,"line_end":144,"column_start":14,"column_end":18},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":10518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":501741,"byte_end":501746,"line_start":160,"line_end":160,"column_start":27,"column_end":32},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":501845,"byte_end":501849,"line_start":166,"line_end":166,"column_start":24,"column_end":28},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":10518},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":502309,"byte_end":502318,"line_start":183,"line_end":183,"column_start":6,"column_end":15},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":10535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":502877,"byte_end":502886,"line_start":214,"line_end":214,"column_start":18,"column_end":27},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10535},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/data.rs","byte_start":503055,"byte_end":503064,"line_start":226,"line_end":226,"column_start":21,"column_end":30},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":10535},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/go_away.rs","byte_start":503570,"byte_end":503576,"line_start":15,"line_end":15,"column_start":6,"column_end":12},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":10548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/go_away.rs","byte_start":504824,"byte_end":504829,"line_start":61,"line_end":61,"column_start":33,"column_end":38},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/go_away.rs","byte_start":504933,"byte_end":504939,"line_start":67,"line_end":67,"column_start":21,"column_end":27},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":10548},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/head.rs","byte_start":505781,"byte_end":505785,"line_start":30,"line_end":30,"column_start":6,"column_end":10},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":10593},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/head.rs","byte_start":506804,"byte_end":506808,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10609},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":509825,"byte_end":509832,"line_start":111,"line_end":111,"column_start":6,"column_end":13},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10653},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":514330,"byte_end":514335,"line_start":284,"line_end":284,"column_start":27,"column_end":32},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":514434,"byte_end":514441,"line_start":290,"line_end":290,"column_start":21,"column_end":28},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":10653},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":515508,"byte_end":515519,"line_start":340,"line_end":340,"column_start":6,"column_end":17},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10678},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":520317,"byte_end":520322,"line_start":507,"line_end":507,"column_start":31,"column_end":36},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":520429,"byte_end":520440,"line_start":513,"line_end":513,"column_start":21,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":10678},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":520816,"byte_end":520828,"line_start":526,"line_end":526,"column_start":6,"column_end":18},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":10703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":521180,"byte_end":521186,"line_start":541,"line_end":541,"column_start":6,"column_end":12},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":10708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":523550,"byte_end":523569,"line_start":626,"line_end":626,"column_start":6,"column_end":25},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":10744},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":525189,"byte_end":525193,"line_start":678,"line_end":678,"column_start":19,"column_end":23},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":10726},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526281,"byte_end":526292,"line_start":720,"line_end":720,"column_start":6,"column_end":17},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":10665},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":526965,"byte_end":526976,"line_start":754,"line_end":754,"column_start":18,"column_end":29},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":10665},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527223,"byte_end":527234,"line_start":767,"line_end":767,"column_start":21,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":10665},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":527628,"byte_end":527643,"line_start":780,"line_end":780,"column_start":6,"column_end":21},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":10690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528080,"byte_end":528095,"line_start":802,"line_end":802,"column_start":18,"column_end":33},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":10690},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528358,"byte_end":528373,"line_start":815,"line_end":815,"column_start":21,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":10690},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/headers.rs","byte_start":528648,"byte_end":528659,"line_start":826,"line_end":826,"column_start":6,"column_end":17},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":10731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/ping.rs","byte_start":536693,"byte_end":536697,"line_start":19,"line_end":19,"column_start":6,"column_end":10},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":11530},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/ping.rs","byte_start":539068,"byte_end":539073,"line_start":98,"line_end":98,"column_start":24,"column_end":29},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/priority.rs","byte_start":539732,"byte_end":539740,"line_start":23,"line_end":23,"column_start":6,"column_end":14},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":11574},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/priority.rs","byte_start":540129,"byte_end":540134,"line_start":38,"line_end":38,"column_start":28,"column_end":33},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/priority.rs","byte_start":540258,"byte_end":540274,"line_start":46,"line_end":46,"column_start":6,"column_end":22},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":11586},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":541697,"byte_end":541703,"line_start":21,"line_end":21,"column_start":6,"column_end":12},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":11599},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":544893,"byte_end":544899,"line_start":87,"line_end":87,"column_start":20,"column_end":26},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":11599},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":545070,"byte_end":545076,"line_start":99,"line_end":99,"column_start":21,"column_end":27},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":11599},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":545837,"byte_end":545840,"line_start":124,"line_end":124,"column_start":21,"column_end":24},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2639},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reason.rs","byte_start":545972,"byte_end":545978,"line_start":130,"line_end":130,"column_start":23,"column_end":29},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":11599},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reset.rs","byte_start":546302,"byte_end":546307,"line_start":11,"line_end":11,"column_start":6,"column_end":11},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":11612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/reset.rs","byte_start":547315,"byte_end":547320,"line_start":52,"line_end":52,"column_start":32,"column_end":37},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":548933,"byte_end":548941,"line_start":57,"line_end":57,"column_start":6,"column_end":14},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":11659},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":555043,"byte_end":555048,"line_start":264,"line_end":264,"column_start":28,"column_end":33},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":555153,"byte_end":555161,"line_start":270,"line_end":270,"column_start":21,"column_end":29},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":11659},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":556271,"byte_end":556278,"line_start":305,"line_end":305,"column_start":6,"column_end":13},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":11679},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558105,"byte_end":558118,"line_start":361,"line_end":361,"column_start":6,"column_end":19},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":11703},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/settings.rs","byte_start":558536,"byte_end":558549,"line_start":385,"line_end":385,"column_start":21,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":11703},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":559457,"byte_end":559465,"line_start":21,"line_end":21,"column_start":6,"column_end":14},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":11814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":561168,"byte_end":561176,"line_start":79,"line_end":79,"column_start":20,"column_end":28},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":11814},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/stream_id.rs","byte_start":561436,"byte_end":561444,"line_start":92,"line_end":92,"column_start":25,"column_end":33},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":11814},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/util.rs","byte_start":563094,"byte_end":563104,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/window_update.rs","byte_start":563921,"byte_end":563933,"line_start":13,"line_end":13,"column_start":6,"column_end":18},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":11843},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/window_update.rs","byte_start":565270,"byte_end":565275,"line_start":58,"line_end":58,"column_start":39,"column_end":44},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/mod.rs","byte_start":494984,"byte_end":494989,"line_start":92,"line_end":92,"column_start":9,"column_end":14},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":11890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/frame/mod.rs","byte_start":495580,"byte_end":495585,"line_start":113,"line_end":113,"column_start":24,"column_end":29},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":11890},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":578239,"byte_end":578250,"line_start":342,"line_end":342,"column_start":9,"column_end":20},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":3046},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":585907,"byte_end":585918,"line_start":539,"line_end":539,"column_start":24,"column_end":35},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":3046},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":586079,"byte_end":586090,"line_start":548,"line_end":548,"column_start":19,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":3046},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":586997,"byte_end":587013,"line_start":585,"line_end":585,"column_start":20,"column_end":36},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":11963},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":587498,"byte_end":587505,"line_start":605,"line_end":605,"column_start":6,"column_end":13},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":11987},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":605409,"byte_end":605416,"line_start":1109,"line_end":1109,"column_start":18,"column_end":25},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":11987},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":607444,"byte_end":607454,"line_start":1177,"line_end":1177,"column_start":12,"column_end":22},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":3050},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612229,"byte_end":612239,"line_start":1306,"line_end":1306,"column_start":23,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":3050},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612586,"byte_end":612596,"line_start":1319,"line_end":1319,"column_start":27,"column_end":37},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":3050},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":612850,"byte_end":612864,"line_start":1332,"line_end":1332,"column_start":17,"column_end":31},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":11969},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":613239,"byte_end":613253,"line_start":1343,"line_end":1343,"column_start":6,"column_end":20},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":11969},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":614015,"byte_end":614027,"line_start":1371,"line_end":1371,"column_start":6,"column_end":18},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":11983},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615316,"byte_end":615327,"line_start":1410,"line_end":1410,"column_start":6,"column_end":17},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":11978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":615907,"byte_end":615927,"line_start":1430,"line_end":1430,"column_start":17,"column_end":37},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":11974},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616134,"byte_end":616154,"line_start":1438,"line_end":1438,"column_start":6,"column_end":26},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":11974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":616423,"byte_end":616427,"line_start":1451,"line_end":1451,"column_start":6,"column_end":10},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":11999},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/client.rs","byte_start":618570,"byte_end":618574,"line_start":1516,"line_end":1516,"column_start":22,"column_end":26},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":11999},"to":{"krate":0,"index":988}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":619878,"byte_end":619886,"line_start":17,"line_end":17,"column_start":6,"column_end":14},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":12072},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620397,"byte_end":620405,"line_start":37,"line_end":37,"column_start":28,"column_end":36},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":12072},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620543,"byte_end":620551,"line_start":45,"line_end":45,"column_start":22,"column_end":30},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":12072},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/ext.rs","byte_start":620643,"byte_end":620651,"line_start":51,"line_end":51,"column_start":21,"column_end":29},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":12072},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":631624,"byte_end":631642,"line_start":292,"line_end":292,"column_start":42,"column_end":60},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":3293},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":633763,"byte_end":633773,"line_start":364,"line_end":364,"column_start":12,"column_end":22},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":3289},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642326,"byte_end":642336,"line_start":594,"line_end":594,"column_start":27,"column_end":37},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":3289},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":642611,"byte_end":642618,"line_start":608,"line_end":608,"column_start":6,"column_end":13},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":12083},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656685,"byte_end":656692,"line_start":1016,"line_end":1016,"column_start":18,"column_end":25},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":12083},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":656804,"byte_end":656816,"line_start":1024,"line_end":1024,"column_start":14,"column_end":26},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":12093},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":660015,"byte_end":660033,"line_start":1116,"line_end":1116,"column_start":14,"column_end":32},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":3293},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662566,"byte_end":662571,"line_start":1188,"line_end":1188,"column_start":17,"column_end":22},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":662689,"byte_end":662694,"line_start":1194,"line_end":1194,"column_start":23,"column_end":28},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":3310},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":663107,"byte_end":663118,"line_start":1210,"line_end":1210,"column_start":17,"column_end":28},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":3314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":663377,"byte_end":663388,"line_start":1223,"line_end":1223,"column_start":23,"column_end":34},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":3314},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":664665,"byte_end":664674,"line_start":1262,"line_end":1262,"column_start":28,"column_end":37},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":3283},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":667435,"byte_end":667444,"line_start":1328,"line_end":1328,"column_start":27,"column_end":36},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":3283},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":667644,"byte_end":667648,"line_start":1338,"line_end":1338,"column_start":6,"column_end":10},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":12099},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":669713,"byte_end":669717,"line_start":1414,"line_end":1414,"column_start":22,"column_end":26},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":12099},"to":{"krate":0,"index":988}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/server.rs","byte_start":673738,"byte_end":673749,"line_start":1540,"line_end":1540,"column_start":27,"column_end":38},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":3299},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":683541,"byte_end":683551,"line_start":222,"line_end":222,"column_start":14,"column_end":24},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":12758},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690035,"byte_end":690043,"line_start":387,"line_end":387,"column_start":6,"column_end":14},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":12764},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":690591,"byte_end":690601,"line_start":406,"line_end":406,"column_start":6,"column_end":16},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692672,"byte_end":692682,"line_start":472,"line_end":472,"column_start":21,"column_end":31},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3473},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":692871,"byte_end":692881,"line_start":480,"line_end":480,"column_start":15,"column_end":25},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3473},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":693313,"byte_end":693324,"line_start":493,"line_end":493,"column_start":6,"column_end":17},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":12782},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":695095,"byte_end":695103,"line_start":544,"line_end":544,"column_start":6,"column_end":14},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":3475},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696122,"byte_end":696130,"line_start":575,"line_end":575,"column_start":21,"column_end":29},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3475},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696280,"byte_end":696284,"line_start":583,"line_end":583,"column_start":6,"column_end":10},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":3477},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696570,"byte_end":696574,"line_start":594,"line_end":594,"column_start":21,"column_end":25},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":3477},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/h2-0.3.15/src/share.rs","byte_start":696735,"byte_end":696739,"line_start":602,"line_end":602,"column_start":21,"column_end":25},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":3479},"to":{"krate":2,"index":9900}}]}