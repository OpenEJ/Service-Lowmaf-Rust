{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0","program":"/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","httparse","--edition=2018","/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=7170d0fda1b656ca","-C","extra-filename=-7170d0fda1b656ca","--out-dir","/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","-L","dependency=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","--cap-lints","allow","--cfg","httparse_simd","--error-format=json","--sysroot","/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libhttparse-7170d0fda1b656ca.rmeta"},"prelude":{"crate_id":{"name":"httparse","disambiguator":[5774478491591004260,0]},"crate_root":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src","external_crates":[{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}}],"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":0,"byte_end":81194,"line_start":1,"line_end":2236,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":0,"byte_end":81194,"line_start":1,"line_end":2236,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":58},{"krate":0,"index":65},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":223},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":247},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":249},{"krate":0,"index":251},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":259},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":278},{"krate":0,"index":282},{"krate":0,"index":129},{"krate":0,"index":285},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":295},{"krate":0,"index":134},{"krate":0,"index":297},{"krate":0,"index":304},{"krate":0,"index":308},{"krate":0,"index":311},{"krate":0,"index":315},{"krate":0,"index":318},{"krate":0,"index":155},{"krate":0,"index":168},{"krate":0,"index":169},{"krate":0,"index":323},{"krate":0,"index":330},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":170},{"krate":0,"index":349},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":177},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":183},{"krate":0,"index":185},{"krate":0,"index":187},{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":193},{"krate":0,"index":196},{"krate":0,"index":200},{"krate":0,"index":202},{"krate":0,"index":221}],"decl_id":null,"docs":" # httparse","sig":null,"attributes":[{"value":"deny(missing_docs)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":43,"byte_end":65,"line_start":2,"line_end":2,"column_start":1,"column_end":23}},{"value":"/ # httparse","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":102,"byte_end":116,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":117,"byte_end":120,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ A push library for parsing HTTP/1.x requests and responses.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":121,"byte_end":184,"line_start":7,"line_end":7,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":185,"byte_end":188,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ The focus is on speed and safety. Unsafe code is used to keep parsing fast,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":189,"byte_end":268,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ but unsafety is contained in a submodule, with invariants enforced. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":269,"byte_end":344,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ parsing internals use an `Iterator` instead of direct indexing, while","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":345,"byte_end":418,"line_start":11,"line_end":11,"column_start":1,"column_end":74}},{"value":"/ skipping bounds checks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":419,"byte_end":446,"line_start":12,"line_end":12,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":447,"byte_end":450,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ With Rust 1.27.0 or later, support for SIMD is enabled automatically.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":451,"byte_end":524,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/ If building an executable to be run on multiple platforms, and thus","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":525,"byte_end":596,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ not passing `target_feature` or `target_cpu` flags to the compiler,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":597,"byte_end":668,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ runtime detection can still detect SSE4.2 or AVX2 support to provide","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":669,"byte_end":741,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ massive wins.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":742,"byte_end":759,"line_start":18,"line_end":18,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":760,"byte_end":763,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If compiling for a specific target, remembering to include","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":764,"byte_end":826,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/ `-C target_cpu=native` allows the detection to become compile time checks,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":827,"byte_end":905,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ making it *even* faster.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":906,"byte_end":934,"line_start":22,"line_end":22,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":224},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5031,"byte_end":5041,"line_start":137,"line_end":137,"column_start":5,"column_end":15},"name":"HeaderName","qualname":"::Error::HeaderName","value":"Error::HeaderName","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Invalid byte in header name.\n","sig":null,"attributes":[{"value":"/ Invalid byte in header name.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":4994,"byte_end":5026,"line_start":136,"line_end":136,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":226},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5085,"byte_end":5096,"line_start":139,"line_end":139,"column_start":5,"column_end":16},"name":"HeaderValue","qualname":"::Error::HeaderValue","value":"Error::HeaderValue","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Invalid byte in header value.\n","sig":null,"attributes":[{"value":"/ Invalid byte in header value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5047,"byte_end":5080,"line_start":138,"line_end":138,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":228},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5136,"byte_end":5143,"line_start":141,"line_end":141,"column_start":5,"column_end":12},"name":"NewLine","qualname":"::Error::NewLine","value":"Error::NewLine","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Invalid byte in new line.\n","sig":null,"attributes":[{"value":"/ Invalid byte in new line.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5102,"byte_end":5131,"line_start":140,"line_end":140,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":230},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5190,"byte_end":5196,"line_start":143,"line_end":143,"column_start":5,"column_end":11},"name":"Status","qualname":"::Error::Status","value":"Error::Status","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Invalid byte in Response status.\n","sig":null,"attributes":[{"value":"/ Invalid byte in Response status.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5149,"byte_end":5185,"line_start":142,"line_end":142,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":232},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5248,"byte_end":5253,"line_start":145,"line_end":145,"column_start":5,"column_end":10},"name":"Token","qualname":"::Error::Token","value":"Error::Token","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Invalid byte where token is required.\n","sig":null,"attributes":[{"value":"/ Invalid byte where token is required.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5202,"byte_end":5243,"line_start":144,"line_end":144,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":234},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5321,"byte_end":5335,"line_start":147,"line_end":147,"column_start":5,"column_end":19},"name":"TooManyHeaders","qualname":"::Error::TooManyHeaders","value":"Error::TooManyHeaders","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Parsed more headers than provided buffer can contain.\n","sig":null,"attributes":[{"value":"/ Parsed more headers than provided buffer can contain.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5259,"byte_end":5316,"line_start":146,"line_end":146,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":236},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5379,"byte_end":5386,"line_start":149,"line_end":149,"column_start":5,"column_end":12},"name":"Version","qualname":"::Error::Version","value":"Error::Version","parent":{"krate":0,"index":223},"children":[],"decl_id":null,"docs":" Invalid byte in HTTP version.\n","sig":null,"attributes":[{"value":"/ Invalid byte in HTTP version.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5341,"byte_end":5374,"line_start":148,"line_end":148,"column_start":5,"column_end":38}}]},{"kind":"Enum","id":{"krate":0,"index":223},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":4982,"byte_end":4987,"line_start":135,"line_end":135,"column_start":10,"column_end":15},"name":"Error","qualname":"::Error","value":"enum Error {\n    HeaderName,\n    HeaderValue,\n    NewLine,\n    Status,\n    Token,\n    TooManyHeaders,\n    Version,\n}","parent":null,"children":[{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":234},{"krate":0,"index":236}],"decl_id":null,"docs":" An error in parsing.\n","sig":null,"attributes":[{"value":"/ An error in parsing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":4903,"byte_end":4927,"line_start":133,"line_end":133,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":122},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5920,"byte_end":5923,"line_start":168,"line_end":168,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6095,"byte_end":6106,"line_start":175,"line_end":175,"column_start":8,"column_end":19},"name":"description","qualname":"<Error as std::error::Error>::description","value":"fn description(&Self) -> &str","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2559},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":249},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6307,"byte_end":6323,"line_start":183,"line_end":183,"column_start":12,"column_end":28},"name":"InvalidChunkSize","qualname":"::InvalidChunkSize","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error in parsing a chunk size.\n","sig":null,"attributes":[{"value":"/ An error in parsing a chunk size.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6164,"byte_end":6201,"line_start":180,"line_end":180,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":126},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6374,"byte_end":6377,"line_start":186,"line_end":186,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidChunkSize as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":127},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6718,"byte_end":6724,"line_start":196,"line_end":196,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"result::Result<Status<T>, Error>","parent":null,"children":[],"decl_id":null,"docs":" A Result of any parsing action.","sig":null,"attributes":[{"value":"/ A Result of any parsing action.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6481,"byte_end":6516,"line_start":191,"line_end":191,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6517,"byte_end":6520,"line_start":192,"line_end":192,"column_start":1,"column_end":4}},{"value":"/ If the input is invalid, an `Error` will be returned. Note that incomplete","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6521,"byte_end":6599,"line_start":193,"line_end":193,"column_start":1,"column_end":79}},{"value":"/ data is not considered invalid, and so will not return an error, but rather","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6600,"byte_end":6679,"line_start":194,"line_end":194,"column_start":1,"column_end":80}},{"value":"/ a `Ok(Status::Partial)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6680,"byte_end":6708,"line_start":195,"line_end":195,"column_start":1,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":261},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7096,"byte_end":7104,"line_start":206,"line_end":206,"column_start":5,"column_end":13},"name":"Complete","qualname":"::Status::Complete","value":"Status::Complete(T)","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" The completed result.\n","sig":null,"attributes":[{"value":"/ The completed result.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7066,"byte_end":7091,"line_start":205,"line_end":205,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":263},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7105,"byte_end":7106,"line_start":206,"line_end":206,"column_start":14,"column_end":15},"name":"0","qualname":"::Status::Complete::0","value":"T","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":264},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7139,"byte_end":7146,"line_start":208,"line_end":208,"column_start":5,"column_end":12},"name":"Partial","qualname":"::Status::Partial","value":"Status::Partial","parent":{"krate":0,"index":259},"children":[],"decl_id":null,"docs":" A partial result.\n","sig":null,"attributes":[{"value":"/ A partial result.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7113,"byte_end":7134,"line_start":207,"line_end":207,"column_start":5,"column_end":26}}]},{"kind":"Enum","id":{"krate":0,"index":259},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7050,"byte_end":7056,"line_start":204,"line_end":204,"column_start":10,"column_end":16},"name":"Status","qualname":"::Status","value":"enum Status<T> { Complete(T), Partial, }","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":264}],"decl_id":null,"docs":" The result of a successful parse pass.","sig":null,"attributes":[{"value":"/ The result of a successful parse pass.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6765,"byte_end":6807,"line_start":198,"line_end":198,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6808,"byte_end":6811,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ `Complete` is used when the buffer contained the complete value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6812,"byte_end":6880,"line_start":200,"line_end":200,"column_start":1,"column_end":69}},{"value":"/ `Partial` is used when parsing did not reach the end of the expected value,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6881,"byte_end":6960,"line_start":201,"line_end":201,"column_start":1,"column_end":80}},{"value":"/ but no invalid data was found.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6961,"byte_end":6995,"line_start":202,"line_end":202,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7254,"byte_end":7265,"line_start":214,"line_end":214,"column_start":12,"column_end":23},"name":"is_complete","qualname":"<Status<T>>::is_complete","value":"fn is_complete(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to check if status is complete.\n","sig":null,"attributes":[{"value":"/ Convenience method to check if status is complete.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7174,"byte_end":7228,"line_start":212,"line_end":212,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7233,"byte_end":7242,"line_start":213,"line_end":213,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7484,"byte_end":7494,"line_start":223,"line_end":223,"column_start":12,"column_end":22},"name":"is_partial","qualname":"<Status<T>>::is_partial","value":"fn is_partial(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to check if status is partial.\n","sig":null,"attributes":[{"value":"/ Convenience method to check if status is partial.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7405,"byte_end":7458,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7463,"byte_end":7472,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7753,"byte_end":7759,"line_start":233,"line_end":233,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Status<T>>::unwrap","value":"fn unwrap(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Convenience method to unwrap a Complete value. Panics if the status is\n `Partial`.\n","sig":null,"attributes":[{"value":"/ Convenience method to unwrap a Complete value. Panics if the status is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7634,"byte_end":7708,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ `Partial`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7713,"byte_end":7727,"line_start":231,"line_end":231,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7732,"byte_end":7741,"line_start":232,"line_end":232,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7994,"byte_end":8006,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"ParserConfig","qualname":"::ParserConfig","value":"ParserConfig {  }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":290}],"decl_id":null,"docs":" Parser configuration.\n","sig":null,"attributes":[{"value":"/ Parser configuration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7924,"byte_end":7949,"line_start":241,"line_end":241,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8413,"byte_end":8456,"line_start":253,"line_end":253,"column_start":12,"column_end":55},"name":"allow_spaces_after_header_name_in_responses","qualname":"<ParserConfig>::allow_spaces_after_header_name_in_responses","value":"fn allow_spaces_after_header_name_in_responses(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether spaces and tabs should be allowed after header names in responses.\n","sig":null,"attributes":[{"value":"/ Sets whether spaces and tabs should be allowed after header names in responses.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8318,"byte_end":8401,"line_start":252,"line_end":252,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9275,"byte_end":9323,"line_start":274,"line_end":274,"column_start":12,"column_end":60},"name":"allow_multiple_spaces_in_request_line_delimiters","qualname":"<ParserConfig>::allow_multiple_spaces_in_request_line_delimiters","value":"fn allow_multiple_spaces_in_request_line_delimiters(&mut Self, bool)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether multiple spaces are allowed as delimiters in request lines.","sig":null,"attributes":[{"value":"/ Sets whether multiple spaces are allowed as delimiters in request lines.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8609,"byte_end":8685,"line_start":261,"line_end":261,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8690,"byte_end":8693,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ # Background","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8698,"byte_end":8714,"line_start":263,"line_end":263,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8719,"byte_end":8722,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8727,"byte_end":8819,"line_start":265,"line_end":265,"column_start":5,"column_end":97}},{"value":"/ whitespace characters in place of the `SP` delimiters in the request line, including:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8824,"byte_end":8913,"line_start":266,"line_end":266,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8918,"byte_end":8921,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ > SP, HTAB, VT (%x0B), FF (%x0C), or bare CR","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8926,"byte_end":8974,"line_start":268,"line_end":268,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8979,"byte_end":8982,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This option relaxes the parser to allow for multiple spaces, but does *not* allow the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8987,"byte_end":9076,"line_start":270,"line_end":270,"column_start":5,"column_end":94}},{"value":"/ request line to contain the other mentioned whitespace characters.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9081,"byte_end":9151,"line_start":271,"line_end":271,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9156,"byte_end":9159,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.3.p.3","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9164,"byte_end":9263,"line_start":273,"line_end":273,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9541,"byte_end":9595,"line_start":280,"line_end":280,"column_start":12,"column_end":66},"name":"multiple_spaces_in_request_line_delimiters_are_allowed","qualname":"<ParserConfig>::multiple_spaces_in_request_line_delimiters_are_allowed","value":"fn multiple_spaces_in_request_line_delimiters_are_allowed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether multiple spaces are allowed as delimiters in request lines.\n","sig":null,"attributes":[{"value":"/ Whether multiple spaces are allowed as delimiters in request lines.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9458,"byte_end":9529,"line_start":279,"line_end":279,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10375,"byte_end":10426,"line_start":298,"line_end":298,"column_start":12,"column_end":63},"name":"allow_multiple_spaces_in_response_status_delimiters","qualname":"<ParserConfig>::allow_multiple_spaces_in_response_status_delimiters","value":"fn allow_multiple_spaces_in_response_status_delimiters(&mut Self, bool)\n-> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether multiple spaces are allowed as delimiters in response status lines.","sig":null,"attributes":[{"value":"/ Sets whether multiple spaces are allowed as delimiters in response status lines.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9686,"byte_end":9770,"line_start":284,"line_end":284,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9775,"byte_end":9778,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # Background","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9783,"byte_end":9799,"line_start":286,"line_end":286,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9804,"byte_end":9807,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ The [latest version of the HTTP/1.1 spec][spec] allows implementations to parse multiple","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9812,"byte_end":9904,"line_start":288,"line_end":288,"column_start":5,"column_end":97}},{"value":"/ whitespace characters in place of the `SP` delimiters in the response status line,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":9909,"byte_end":9995,"line_start":289,"line_end":289,"column_start":5,"column_end":91}},{"value":"/ including:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10000,"byte_end":10014,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10019,"byte_end":10022,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ > SP, HTAB, VT (%x0B), FF (%x0C), or bare CR","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10027,"byte_end":10075,"line_start":292,"line_end":292,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10080,"byte_end":10083,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This option relaxes the parser to allow for multiple spaces, but does *not* allow the status","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10088,"byte_end":10184,"line_start":294,"line_end":294,"column_start":5,"column_end":101}},{"value":"/ line to contain the other mentioned whitespace characters.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10189,"byte_end":10251,"line_start":295,"line_end":295,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10256,"byte_end":10259,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ [spec]: https://httpwg.org/http-core/draft-ietf-httpbis-messaging-latest.html#rfc.section.4.p.3","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10264,"byte_end":10363,"line_start":297,"line_end":297,"column_start":5,"column_end":104}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10655,"byte_end":10712,"line_start":304,"line_end":304,"column_start":12,"column_end":69},"name":"multiple_spaces_in_response_status_delimiters_are_allowed","qualname":"<ParserConfig>::multiple_spaces_in_response_status_delimiters_are_allowed","value":"fn multiple_spaces_in_response_status_delimiters_are_allowed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether multiple spaces are allowed as delimiters in response status lines.\n","sig":null,"attributes":[{"value":"/ Whether multiple spaces are allowed as delimiters in response status lines.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10564,"byte_end":10643,"line_start":303,"line_end":303,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11810,"byte_end":11855,"line_start":331,"line_end":331,"column_start":12,"column_end":57},"name":"allow_obsolete_multiline_headers_in_responses","qualname":"<ParserConfig>::allow_obsolete_multiline_headers_in_responses","value":"fn allow_obsolete_multiline_headers_in_responses(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether obsolete multiline headers should be allowed.","sig":null,"attributes":[{"value":"/ Sets whether obsolete multiline headers should be allowed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10806,"byte_end":10868,"line_start":308,"line_end":308,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10873,"byte_end":10876,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ This is an obsolete part of HTTP/1. Use at your own risk. If you are","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10881,"byte_end":10953,"line_start":310,"line_end":310,"column_start":5,"column_end":77}},{"value":"/ building an HTTP library, the newlines (`\\r` and `\\n`) should be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":10958,"byte_end":11026,"line_start":311,"line_end":311,"column_start":5,"column_end":73}},{"value":"/ replaced by spaces before handing the header value to the user.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11031,"byte_end":11098,"line_start":312,"line_end":312,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11103,"byte_end":11106,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11111,"byte_end":11124,"line_start":314,"line_end":314,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11129,"byte_end":11132,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11137,"byte_end":11148,"line_start":316,"line_end":316,"column_start":5,"column_end":16}},{"value":"/ let buf = b\"HTTP/1.1 200 OK\\r\\nFolded-Header: hello\\r\\n there \\r\\n\\r\\n\";","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11153,"byte_end":11229,"line_start":317,"line_end":317,"column_start":5,"column_end":81}},{"value":"/ let mut headers = [httparse::EMPTY_HEADER; 16];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11234,"byte_end":11285,"line_start":318,"line_end":318,"column_start":5,"column_end":56}},{"value":"/ let mut response = httparse::Response::new(&mut headers);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11290,"byte_end":11351,"line_start":319,"line_end":319,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11356,"byte_end":11359,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ let res = httparse::ParserConfig::default()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11364,"byte_end":11411,"line_start":321,"line_end":321,"column_start":5,"column_end":52}},{"value":"/     .allow_obsolete_multiline_headers_in_responses(true)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11416,"byte_end":11476,"line_start":322,"line_end":322,"column_start":5,"column_end":65}},{"value":"/     .parse_response(&mut response, buf);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11481,"byte_end":11525,"line_start":323,"line_end":323,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11530,"byte_end":11533,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(res, Ok(httparse::Status::Complete(buf.len())));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11538,"byte_end":11601,"line_start":325,"line_end":325,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11606,"byte_end":11609,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(response.headers.len(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11614,"byte_end":11656,"line_start":327,"line_end":327,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(response.headers[0].name, \"Folded-Header\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11661,"byte_end":11719,"line_start":328,"line_end":328,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(response.headers[0].value, b\"hello\\r\\n there\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11724,"byte_end":11786,"line_start":329,"line_end":329,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":11791,"byte_end":11798,"line_start":330,"line_end":330,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":12079,"byte_end":12130,"line_start":340,"line_end":340,"column_start":12,"column_end":63},"name":"obsolete_multiline_headers_in_responses_are_allowed","qualname":"<ParserConfig>::obsolete_multiline_headers_in_responses_are_allowed","value":"fn obsolete_multiline_headers_in_responses_are_allowed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether obsolete multiline headers should be allowed.\n","sig":null,"attributes":[{"value":"/ Whether obsolete multiline headers should be allowed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":12010,"byte_end":12067,"line_start":339,"line_end":339,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":12273,"byte_end":12286,"line_start":345,"line_end":345,"column_start":12,"column_end":25},"name":"parse_request","qualname":"<ParserConfig>::parse_request","value":"fn parse_request<'headers, 'buf>(&Self, &mut Request, &'buf [u8])\n-> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Parses a request with the given config.\n","sig":null,"attributes":[{"value":"/ Parses a request with the given config.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":12218,"byte_end":12261,"line_start":344,"line_end":344,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":12549,"byte_end":12582,"line_start":354,"line_end":354,"column_start":12,"column_end":45},"name":"parse_request_with_uninit_headers","qualname":"<ParserConfig>::parse_request_with_uninit_headers","value":"fn parse_request_with_uninit_headers<'headers,\n'buf>(&Self, &mut Request, &'buf [u8], &'headers mut [MaybeUninit<Header>])\n-> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Parses a request with the given config and buffer for headers\n","sig":null,"attributes":[{"value":"/ Parses a request with the given config and buffer for headers","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":12472,"byte_end":12537,"line_start":353,"line_end":353,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14685,"byte_end":14720,"line_start":393,"line_end":393,"column_start":12,"column_end":47},"name":"ignore_invalid_headers_in_responses","qualname":"<ParserConfig>::ignore_invalid_headers_in_responses","value":"fn ignore_invalid_headers_in_responses(&mut Self, bool) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets whether invalid header lines should be silently ignored in responses.","sig":null,"attributes":[{"value":"/ Sets whether invalid header lines should be silently ignored in responses.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":12856,"byte_end":12934,"line_start":363,"line_end":363,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":12939,"byte_end":12942,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This mimicks the behaviour of major browsers. You probably don't want this.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":12947,"byte_end":13026,"line_start":365,"line_end":365,"column_start":5,"column_end":84}},{"value":"/ You should only want this if you are implementing a proxy whose main","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13031,"byte_end":13103,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ purpose is to sit in front of browsers whose users access arbitrary content","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13108,"byte_end":13187,"line_start":367,"line_end":367,"column_start":5,"column_end":84}},{"value":"/ which may be malformed, and they expect everything that works without","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13192,"byte_end":13265,"line_start":368,"line_end":368,"column_start":5,"column_end":78}},{"value":"/ the proxy to keep working with the proxy.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13270,"byte_end":13315,"line_start":369,"line_end":369,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13320,"byte_end":13323,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This option will prevent `ParserConfig::parse_response` from returning","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13328,"byte_end":13402,"line_start":371,"line_end":371,"column_start":5,"column_end":79}},{"value":"/ an error encountered when parsing a header, except if the error was caused","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13407,"byte_end":13485,"line_start":372,"line_end":372,"column_start":5,"column_end":83}},{"value":"/ by the character NUL (ASCII code 0), as Chrome specifically always reject","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13490,"byte_end":13567,"line_start":373,"line_end":373,"column_start":5,"column_end":82}},{"value":"/ those, or if the error was caused by a lone character `\\r`, as Firefox and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13572,"byte_end":13650,"line_start":374,"line_end":374,"column_start":5,"column_end":83}},{"value":"/ Chrome behave differently in that case.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13655,"byte_end":13698,"line_start":375,"line_end":375,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13703,"byte_end":13706,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The ignorable errors are:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13711,"byte_end":13740,"line_start":377,"line_end":377,"column_start":5,"column_end":34}},{"value":"/ * empty header names;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13745,"byte_end":13770,"line_start":378,"line_end":378,"column_start":5,"column_end":30}},{"value":"/ * characters that are not allowed in header names, except for `\\0` and `\\r`;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13775,"byte_end":13855,"line_start":379,"line_end":379,"column_start":5,"column_end":85}},{"value":"/ * when `allow_spaces_after_header_name_in_responses` is not enabled,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13860,"byte_end":13932,"line_start":380,"line_end":380,"column_start":5,"column_end":77}},{"value":"/   spaces and tabs between the header name and the colon;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":13937,"byte_end":13997,"line_start":381,"line_end":381,"column_start":5,"column_end":65}},{"value":"/ * missing colon between header name and value;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14002,"byte_end":14052,"line_start":382,"line_end":382,"column_start":5,"column_end":55}},{"value":"/ * when `allow_obsolete_multiline_headers_in_responses` is not enabled,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14057,"byte_end":14131,"line_start":383,"line_end":383,"column_start":5,"column_end":79}},{"value":"/   headers using obsolete line folding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14136,"byte_end":14178,"line_start":384,"line_end":384,"column_start":5,"column_end":47}},{"value":"/ * characters that are not allowed in header values except for `\\0` and `\\r`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14183,"byte_end":14263,"line_start":385,"line_end":385,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14268,"byte_end":14271,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ If an ignorable error is encountered, the parser tries to find the next","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14276,"byte_end":14351,"line_start":387,"line_end":387,"column_start":5,"column_end":80}},{"value":"/ line in the input to resume parsing the rest of the headers. As lines","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14356,"byte_end":14429,"line_start":388,"line_end":388,"column_start":5,"column_end":78}},{"value":"/ contributing to a header using obsolete line folding always start","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14434,"byte_end":14503,"line_start":389,"line_end":389,"column_start":5,"column_end":74}},{"value":"/ with whitespace, those will be ignored too. An error will be emitted","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14508,"byte_end":14580,"line_start":390,"line_end":390,"column_start":5,"column_end":77}},{"value":"/ nonetheless if it finds `\\0` or a lone `\\r` while looking for the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14585,"byte_end":14654,"line_start":391,"line_end":391,"column_start":5,"column_end":74}},{"value":"/ next line.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14659,"byte_end":14673,"line_start":392,"line_end":392,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":149},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14921,"byte_end":14935,"line_start":402,"line_end":402,"column_start":12,"column_end":26},"name":"parse_response","qualname":"<ParserConfig>::parse_response","value":"fn parse_response<'headers, 'buf>(&Self, &mut Response, &'buf [u8])\n-> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Parses a response with the given config.\n","sig":null,"attributes":[{"value":"/ Parses a response with the given config.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":14865,"byte_end":14909,"line_start":401,"line_end":401,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":152},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15202,"byte_end":15236,"line_start":411,"line_end":411,"column_start":12,"column_end":46},"name":"parse_response_with_uninit_headers","qualname":"<ParserConfig>::parse_response_with_uninit_headers","value":"fn parse_response_with_uninit_headers<'headers,\n'buf>(&Self, &mut Response, &'buf [u8], &'headers mut [MaybeUninit<Header>])\n-> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Parses a response with the given config and buffer for headers\n","sig":null,"attributes":[{"value":"/ Parses a response with the given config and buffer for headers","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15124,"byte_end":15190,"line_start":410,"line_end":410,"column_start":5,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":297},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16350,"byte_end":16357,"line_start":447,"line_end":447,"column_start":12,"column_end":19},"name":"Request","qualname":"::Request","value":"Request { method, path, version, headers }","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303}],"decl_id":null,"docs":" A parsed Request.","sig":null,"attributes":[{"value":"/ A parsed Request.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15511,"byte_end":15532,"line_start":421,"line_end":421,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15533,"byte_end":15536,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ The optional values will be `None` if a parse was not complete, and did not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15537,"byte_end":15616,"line_start":423,"line_end":423,"column_start":1,"column_end":80}},{"value":"/ parse the associated property. This allows you to inspect the parts that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15617,"byte_end":15693,"line_start":424,"line_end":424,"column_start":1,"column_end":77}},{"value":"/ could be parsed, before reading more, in case you wish to exit early.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15694,"byte_end":15767,"line_start":425,"line_end":425,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15768,"byte_end":15771,"line_start":426,"line_end":426,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15772,"byte_end":15785,"line_start":427,"line_end":427,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15786,"byte_end":15789,"line_start":428,"line_end":428,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15790,"byte_end":15803,"line_start":429,"line_end":429,"column_start":1,"column_end":14}},{"value":"/ let buf = b\"GET /404 HTTP/1.1\\r\\nHost:\";","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15804,"byte_end":15848,"line_start":430,"line_end":430,"column_start":1,"column_end":45}},{"value":"/ let mut headers = [httparse::EMPTY_HEADER; 16];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15849,"byte_end":15900,"line_start":431,"line_end":431,"column_start":1,"column_end":52}},{"value":"/ let mut req = httparse::Request::new(&mut headers);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15901,"byte_end":15956,"line_start":432,"line_end":432,"column_start":1,"column_end":56}},{"value":"/ let res = req.parse(buf).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15957,"byte_end":15995,"line_start":433,"line_end":433,"column_start":1,"column_end":39}},{"value":"/ if res.is_partial() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":15996,"byte_end":16021,"line_start":434,"line_end":434,"column_start":1,"column_end":26}},{"value":"/     match req.path {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16022,"byte_end":16046,"line_start":435,"line_end":435,"column_start":1,"column_end":25}},{"value":"/         Some(ref path) => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16047,"byte_end":16078,"line_start":436,"line_end":436,"column_start":1,"column_end":32}},{"value":"/             // check router for path.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16079,"byte_end":16120,"line_start":437,"line_end":437,"column_start":1,"column_end":42}},{"value":"/             // /404 doesn't exist? we could stop parsing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16121,"byte_end":16181,"line_start":438,"line_end":438,"column_start":1,"column_end":61}},{"value":"/         },","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16182,"byte_end":16196,"line_start":439,"line_end":439,"column_start":1,"column_end":15}},{"value":"/         None => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16197,"byte_end":16218,"line_start":440,"line_end":440,"column_start":1,"column_end":22}},{"value":"/             // must read more and parse again","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16219,"byte_end":16268,"line_start":441,"line_end":441,"column_start":1,"column_end":50}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16269,"byte_end":16282,"line_start":442,"line_end":442,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16283,"byte_end":16292,"line_start":443,"line_end":443,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16293,"byte_end":16298,"line_start":444,"line_end":444,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16299,"byte_end":16306,"line_start":445,"line_end":445,"column_start":1,"column_end":8}}]},{"kind":"Field","id":{"krate":0,"index":300},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16427,"byte_end":16433,"line_start":449,"line_end":449,"column_start":9,"column_end":15},"name":"method","qualname":"::Request::method","value":"std::option::Option<&'buf str>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" The request method, such as `GET`.\n","sig":null,"attributes":[{"value":"/ The request method, such as `GET`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16380,"byte_end":16418,"line_start":448,"line_end":448,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":301},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16509,"byte_end":16513,"line_start":451,"line_end":451,"column_start":9,"column_end":13},"name":"path","qualname":"::Request::path","value":"std::option::Option<&'buf str>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" The request path, such as `/about-us`.\n","sig":null,"attributes":[{"value":"/ The request path, such as `/about-us`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16458,"byte_end":16500,"line_start":450,"line_end":450,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":302},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16605,"byte_end":16612,"line_start":453,"line_end":453,"column_start":9,"column_end":16},"name":"version","qualname":"::Request::version","value":"std::option::Option<u8>","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" The request minor version, such as `1` for `HTTP/1.1`.\n","sig":null,"attributes":[{"value":"/ The request minor version, such as `1` for `HTTP/1.1`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16538,"byte_end":16596,"line_start":452,"line_end":452,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":303},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16663,"byte_end":16670,"line_start":455,"line_end":455,"column_start":9,"column_end":16},"name":"headers","qualname":"::Request::headers","value":"&'headers mut [Header<'buf>]","parent":{"krate":0,"index":297},"children":[],"decl_id":null,"docs":" The request headers.\n","sig":null,"attributes":[{"value":"/ The request headers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16630,"byte_end":16654,"line_start":454,"line_end":454,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16830,"byte_end":16833,"line_start":461,"line_end":461,"column_start":12,"column_end":15},"name":"new","qualname":"<Request>::new","value":"fn new(&'h mut [Header]) -> Request","parent":null,"children":[],"decl_id":null,"docs":" Creates a new Request, using a slice of headers you allocate.\n","sig":null,"attributes":[{"value":"/ Creates a new Request, using a slice of headers you allocate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16739,"byte_end":16804,"line_start":459,"line_end":459,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16809,"byte_end":16818,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":18895,"byte_end":18920,"line_start":523,"line_end":523,"column_start":12,"column_end":37},"name":"parse_with_uninit_headers","qualname":"<Request>::parse_with_uninit_headers","value":"fn parse_with_uninit_headers(&mut Self, &'b [u8],\n&'h mut [MaybeUninit<Header>]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to parse a buffer of bytes into the Request,\n except use an uninitialized slice of `Header`s.","sig":null,"attributes":[{"value":"/ Try to parse a buffer of bytes into the Request,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":18725,"byte_end":18777,"line_start":519,"line_end":519,"column_start":5,"column_end":57}},{"value":"/ except use an uninitialized slice of `Header`s.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":18782,"byte_end":18833,"line_start":520,"line_end":520,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":18838,"byte_end":18841,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ For more information, see `parse`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":18846,"byte_end":18883,"line_start":522,"line_end":522,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":20023,"byte_end":20028,"line_start":552,"line_end":552,"column_start":12,"column_end":17},"name":"parse","qualname":"<Request>::parse","value":"fn parse(&mut Self, &'b [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to parse a buffer of bytes into the Request.","sig":null,"attributes":[{"value":"/ Try to parse a buffer of bytes into the Request.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":19891,"byte_end":19943,"line_start":549,"line_end":549,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":19948,"byte_end":19951,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ Returns byte offset in `buf` to start of HTTP body.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":19956,"byte_end":20011,"line_start":551,"line_end":551,"column_start":5,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":323},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21397,"byte_end":21405,"line_start":602,"line_end":602,"column_start":12,"column_end":20},"name":"Response","qualname":"::Response","value":"Response { version, code, reason, headers }","parent":null,"children":[{"krate":0,"index":326},{"krate":0,"index":327},{"krate":0,"index":328},{"krate":0,"index":329}],"decl_id":null,"docs":" A parsed Response.","sig":null,"attributes":[{"value":"/ A parsed Response.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21268,"byte_end":21290,"line_start":598,"line_end":598,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21291,"byte_end":21294,"line_start":599,"line_end":599,"column_start":1,"column_end":4}},{"value":"/ See `Request` docs for explanation of optional values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21295,"byte_end":21353,"line_start":600,"line_end":600,"column_start":1,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":326},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21496,"byte_end":21503,"line_start":604,"line_end":604,"column_start":9,"column_end":16},"name":"version","qualname":"::Response::version","value":"std::option::Option<u8>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" The response minor version, such as `1` for `HTTP/1.1`.\n","sig":null,"attributes":[{"value":"/ The response minor version, such as `1` for `HTTP/1.1`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21428,"byte_end":21487,"line_start":603,"line_end":603,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":327},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21567,"byte_end":21571,"line_start":606,"line_end":606,"column_start":9,"column_end":13},"name":"code","qualname":"::Response::code","value":"std::option::Option<u16>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" The response code, such as `200`.\n","sig":null,"attributes":[{"value":"/ The response code, such as `200`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21521,"byte_end":21558,"line_start":605,"line_end":605,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":328},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21751,"byte_end":21757,"line_start":610,"line_end":610,"column_start":9,"column_end":15},"name":"reason","qualname":"::Response::reason","value":"std::option::Option<&'buf str>","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" The response reason-phrase, such as `OK`.","sig":null,"attributes":[{"value":"/ The response reason-phrase, such as `OK`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21590,"byte_end":21635,"line_start":607,"line_end":607,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21640,"byte_end":21643,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ Contains an empty string if the reason-phrase was missing or contained invalid characters.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21648,"byte_end":21742,"line_start":609,"line_end":609,"column_start":5,"column_end":99}}]},{"kind":"Field","id":{"krate":0,"index":329},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21816,"byte_end":21823,"line_start":612,"line_end":612,"column_start":9,"column_end":16},"name":"headers","qualname":"::Response::headers","value":"&'headers mut [Header<'buf>]","parent":{"krate":0,"index":323},"children":[],"decl_id":null,"docs":" The response headers.\n","sig":null,"attributes":[{"value":"/ The response headers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21782,"byte_end":21807,"line_start":611,"line_end":611,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21994,"byte_end":21997,"line_start":618,"line_end":618,"column_start":12,"column_end":15},"name":"new","qualname":"<Response>::new","value":"fn new(&'h mut [Header]) -> Response","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Response` using a slice of `Header`s you have allocated.\n","sig":null,"attributes":[{"value":"/ Creates a new `Response` using a slice of `Header`s you have allocated.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21893,"byte_end":21968,"line_start":616,"line_end":616,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21973,"byte_end":21982,"line_start":617,"line_end":617,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":22257,"byte_end":22262,"line_start":628,"line_end":628,"column_start":12,"column_end":17},"name":"parse","qualname":"<Response>::parse","value":"fn parse(&mut Self, &'b [u8]) -> Result<usize>","parent":null,"children":[],"decl_id":null,"docs":" Try to parse a buffer of bytes into this `Response`.\n","sig":null,"attributes":[{"value":"/ Try to parse a buffer of bytes into this `Response`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":22189,"byte_end":22245,"line_start":627,"line_end":627,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":349},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25325,"byte_end":25331,"line_start":710,"line_end":710,"column_start":12,"column_end":18},"name":"Header","qualname":"::Header","value":"Header { name, value }","parent":null,"children":[{"krate":0,"index":351},{"krate":0,"index":352}],"decl_id":null,"docs":" Represents a parsed header.\n","sig":null,"attributes":[{"value":"/ Represents a parsed header.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25244,"byte_end":25275,"line_start":708,"line_end":708,"column_start":1,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":351},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25473,"byte_end":25477,"line_start":714,"line_end":714,"column_start":9,"column_end":13},"name":"name","qualname":"::Header::name","value":"&'a str","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":" The name portion of a header.","sig":null,"attributes":[{"value":"/ The name portion of a header.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25342,"byte_end":25375,"line_start":711,"line_end":711,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25380,"byte_end":25383,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ A header name must be valid ASCII-US, so it's safe to store as a `&str`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25388,"byte_end":25464,"line_start":713,"line_end":713,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":352},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25687,"byte_end":25692,"line_start":719,"line_end":719,"column_start":9,"column_end":14},"name":"value","qualname":"::Header::value","value":"&'a [u8]","parent":{"krate":0,"index":349},"children":[],"decl_id":null,"docs":" The value portion of a header.","sig":null,"attributes":[{"value":"/ The value portion of a header.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25492,"byte_end":25526,"line_start":715,"line_end":715,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25531,"byte_end":25534,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ While headers **should** be ASCII-US, the specification allows for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25539,"byte_end":25609,"line_start":717,"line_end":717,"column_start":5,"column_end":75}},{"value":"/ values that may not be, and so the value is stored as bytes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25614,"byte_end":25678,"line_start":718,"line_end":718,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25751,"byte_end":25754,"line_start":723,"line_end":723,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Header as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":180},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":26268,"byte_end":26280,"line_start":743,"line_end":743,"column_start":11,"column_end":23},"name":"EMPTY_HEADER","qualname":"::EMPTY_HEADER","value":"Header","parent":null,"children":[],"decl_id":null,"docs":" An empty header, useful for constructing a `Header` array to pass in for\n parsing.","sig":null,"attributes":[{"value":"/ An empty header, useful for constructing a `Header` array to pass in for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":26082,"byte_end":26158,"line_start":735,"line_end":735,"column_start":1,"column_end":77}},{"value":"/ parsing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":26159,"byte_end":26171,"line_start":736,"line_end":736,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":26172,"byte_end":26175,"line_start":737,"line_end":737,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":26176,"byte_end":26189,"line_start":738,"line_end":738,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":26190,"byte_end":26193,"line_start":739,"line_end":739,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":26194,"byte_end":26201,"line_start":740,"line_end":740,"column_start":1,"column_end":8}},{"value":"/ let headers = [httparse::EMPTY_HEADER; 64];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":26202,"byte_end":26249,"line_start":741,"line_end":741,"column_start":1,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":26250,"byte_end":26257,"line_start":742,"line_end":742,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":190},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31561,"byte_end":31574,"line_start":893,"line_end":893,"column_start":8,"column_end":21},"name":"parse_headers","qualname":"::parse_headers","value":"fn parse_headers<'b, 'h>(&'b [u8], &'h mut [Header])\n-> Result<(usize, &'h [Header])> where 'b:'h","parent":null,"children":[],"decl_id":null,"docs":" Parse a buffer of bytes as headers.","sig":null,"attributes":[{"value":"/ Parse a buffer of bytes as headers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":30836,"byte_end":30875,"line_start":875,"line_end":875,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":30876,"byte_end":30879,"line_start":876,"line_end":876,"column_start":1,"column_end":4}},{"value":"/ The return value, if complete and successful, includes the index of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":30880,"byte_end":30955,"line_start":877,"line_end":877,"column_start":1,"column_end":76}},{"value":"/ buffer that parsing stopped at, and a sliced reference to the parsed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":30956,"byte_end":31028,"line_start":878,"line_end":878,"column_start":1,"column_end":73}},{"value":"/ headers. The length of the slice will be equal to the number of properly","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31029,"byte_end":31105,"line_start":879,"line_end":879,"column_start":1,"column_end":77}},{"value":"/ parsed headers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31106,"byte_end":31125,"line_start":880,"line_end":880,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31126,"byte_end":31129,"line_start":881,"line_end":881,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31130,"byte_end":31143,"line_start":882,"line_end":882,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31144,"byte_end":31147,"line_start":883,"line_end":883,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31148,"byte_end":31155,"line_start":884,"line_end":884,"column_start":1,"column_end":8}},{"value":"/ let buf = b\"Host: foo.bar\\nAccept: */*\\n\\nblah blah\";","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31156,"byte_end":31213,"line_start":885,"line_end":885,"column_start":1,"column_end":58}},{"value":"/ let mut headers = [httparse::EMPTY_HEADER; 4];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31214,"byte_end":31264,"line_start":886,"line_end":886,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(httparse::parse_headers(buf, &mut headers),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31265,"byte_end":31323,"line_start":887,"line_end":887,"column_start":1,"column_end":59}},{"value":"/            Ok(httparse::Status::Complete((27, &[","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31324,"byte_end":31376,"line_start":888,"line_end":888,"column_start":1,"column_end":53}},{"value":"/                httparse::Header { name: \"Host\", value: b\"foo.bar\" },","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31377,"byte_end":31449,"line_start":889,"line_end":889,"column_start":1,"column_end":73}},{"value":"/                httparse::Header { name: \"Accept\", value: b\"*/*\" }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31450,"byte_end":31519,"line_start":890,"line_end":890,"column_start":1,"column_end":70}},{"value":"/            ][..]))));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31520,"byte_end":31545,"line_start":891,"line_end":891,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":31546,"byte_end":31553,"line_start":892,"line_end":892,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41831,"byte_end":41847,"line_start":1203,"line_end":1203,"column_start":8,"column_end":24},"name":"parse_chunk_size","qualname":"::parse_chunk_size","value":"fn parse_chunk_size(&[u8])\n-> result::Result<Status<(usize, u64)>, InvalidChunkSize>","parent":null,"children":[],"decl_id":null,"docs":" Parse a buffer of bytes as a chunk size.","sig":null,"attributes":[{"value":"/ Parse a buffer of bytes as a chunk size.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41443,"byte_end":41487,"line_start":1191,"line_end":1191,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41488,"byte_end":41491,"line_start":1192,"line_end":1192,"column_start":1,"column_end":4}},{"value":"/ The return value, if complete and successful, includes the index of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41492,"byte_end":41567,"line_start":1193,"line_end":1193,"column_start":1,"column_end":76}},{"value":"/ buffer that parsing stopped at, and the size of the following chunk.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41568,"byte_end":41640,"line_start":1194,"line_end":1194,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41641,"byte_end":41644,"line_start":1195,"line_end":1195,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41645,"byte_end":41658,"line_start":1196,"line_end":1196,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41659,"byte_end":41662,"line_start":1197,"line_end":1197,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41663,"byte_end":41670,"line_start":1198,"line_end":1198,"column_start":1,"column_end":8}},{"value":"/ let buf = b\"4\\r\\nRust\\r\\n0\\r\\n\\r\\n\";","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41671,"byte_end":41711,"line_start":1199,"line_end":1199,"column_start":1,"column_end":41}},{"value":"/ assert_eq!(httparse::parse_chunk_size(buf),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41712,"byte_end":41759,"line_start":1200,"line_end":1200,"column_start":1,"column_end":48}},{"value":"/            Ok(httparse::Status::Complete((3, 4))));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41760,"byte_end":41815,"line_start":1201,"line_end":1201,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":41816,"byte_end":41823,"line_start":1202,"line_end":1202,"column_start":1,"column_end":8}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/iter.rs","byte_start":81341,"byte_end":81346,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/iter.rs","byte_start":83281,"byte_end":83286,"line_start":88,"line_end":88,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":53}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/iter.rs","byte_start":83402,"byte_end":83407,"line_start":95,"line_end":95,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5396,"byte_end":5401,"line_start":152,"line_end":152,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5905,"byte_end":5910,"line_start":167,"line_end":167,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6080,"byte_end":6085,"line_start":174,"line_end":174,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6348,"byte_end":6364,"line_start":185,"line_end":185,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7158,"byte_end":7164,"line_start":211,"line_end":211,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8299,"byte_end":8311,"line_start":251,"line_end":251,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16717,"byte_end":16724,"line_start":458,"line_end":458,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21870,"byte_end":21878,"line_start":615,"line_end":615,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25731,"byte_end":25737,"line_start":722,"line_end":722,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":33480,"byte_end":33492,"line_start":951,"line_end":951,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/iter.rs","byte_start":81341,"byte_end":81346,"line_start":10,"line_end":10,"column_start":10,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":33},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/iter.rs","byte_start":83281,"byte_end":83286,"line_start":88,"line_end":88,"column_start":26,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/iter.rs","byte_start":83402,"byte_end":83407,"line_start":95,"line_end":95,"column_start":23,"column_end":28},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5396,"byte_end":5401,"line_start":152,"line_end":152,"column_start":6,"column_end":11},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":223},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":5905,"byte_end":5910,"line_start":167,"line_end":167,"column_start":23,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":223},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6080,"byte_end":6085,"line_start":174,"line_end":174,"column_start":28,"column_end":33},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":223},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":6348,"byte_end":6364,"line_start":185,"line_end":185,"column_start":23,"column_end":39},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":249},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":7158,"byte_end":7164,"line_start":211,"line_end":211,"column_start":9,"column_end":15},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":259},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":8299,"byte_end":8311,"line_start":251,"line_end":251,"column_start":6,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":285},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":16717,"byte_end":16724,"line_start":458,"line_end":458,"column_start":14,"column_end":21},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":297},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":21870,"byte_end":21878,"line_start":615,"line_end":615,"column_start":14,"column_end":22},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":25731,"byte_end":25737,"line_start":722,"line_end":722,"column_start":25,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":349},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/httparse-1.8.0/src/lib.rs","byte_start":33480,"byte_end":33492,"line_start":951,"line_end":951,"column_start":33,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":205},"to":{"krate":2,"index":3393}}]}