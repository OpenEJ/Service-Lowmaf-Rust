{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0","program":"/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","actix_codec","--edition=2018","/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9014f399ea335e21","-C","extra-filename=-9014f399ea335e21","--out-dir","/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","-L","dependency=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","--extern","bitflags=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libbitflags-213553ecd056d7c5.rmeta","--extern","bytes=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libbytes-e737b883a82268c6.rmeta","--extern","futures_core=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_core-bf2e7f64aaea6921.rmeta","--extern","futures_sink=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_sink-4016e03cbf9d29a0.rmeta","--extern","log=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/liblog-bda40c43492e48d6.rmeta","--extern","memchr=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libmemchr-96ec57ae9a03ecfc.rmeta","--extern","pin_project_lite=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libpin_project_lite-e742030a2f16f4a6.rmeta","--extern","tokio=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtokio-8196ba47352960b6.rmeta","--extern","tokio_util=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtokio_util-e470673fbc8394ba.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libactix_codec-9014f399ea335e21.rmeta"},"prelude":{"crate_id":{"name":"actix_codec","disambiguator":[7437889249424108277,0]},"crate_root":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src","external_crates":[{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","num":20,"id":{"name":"bytes","disambiguator":[10438007896072012438,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","num":21,"id":{"name":"bitflags","disambiguator":[9922722930592506933,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","num":22,"id":{"name":"futures_core","disambiguator":[2889476389752248248,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","num":23,"id":{"name":"futures_sink","disambiguator":[17069752836241684674,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","num":24,"id":{"name":"pin_project_lite","disambiguator":[13349260882500549000,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","num":25,"id":{"name":"memchr","disambiguator":[6978731604939472485,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":26,"id":{"name":"tokio","disambiguator":[4006362457328451787,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":27,"id":{"name":"parking_lot","disambiguator":[1645823837944776078,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":28,"id":{"name":"lock_api","disambiguator":[8777307412983186541,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":29,"id":{"name":"scopeguard","disambiguator":[15237943330495450837,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":30,"id":{"name":"parking_lot_core","disambiguator":[10238583472048639811,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":31,"id":{"name":"smallvec","disambiguator":[12545130721221692768,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":32,"id":{"name":"cfg_if","disambiguator":[12105970879533839803,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":33,"id":{"name":"libc","disambiguator":[15637978272933725136,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":34,"id":{"name":"mio","disambiguator":[14896478052810656221,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","num":35,"id":{"name":"log","disambiguator":[17988533960493539055,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":36,"id":{"name":"socket2","disambiguator":[491492713441182150,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":37,"id":{"name":"signal_hook_registry","disambiguator":[9295126702021841154,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":38,"id":{"name":"tokio_util","disambiguator":[5218935504171966760,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":39,"id":{"name":"tracing","disambiguator":[1052523234040929968,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":40,"id":{"name":"tracing_core","disambiguator":[15038953675681300187,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","num":41,"id":{"name":"once_cell","disambiguator":[15736546551684500465,0]}}],"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":0,"byte_end":824,"line_start":1,"line_end":25,"column_start":1,"column_end":39}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":220},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":595,"byte_end":605,"line_start":19,"line_end":19,"column_start":23,"column_end":33},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":221},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":595,"byte_end":605,"line_start":19,"line_end":19,"column_start":23,"column_end":33},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":319},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":630,"byte_end":636,"line_start":20,"line_end":20,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":376},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":638,"byte_end":649,"line_start":20,"line_end":20,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":388},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":673,"byte_end":683,"line_start":21,"line_end":21,"column_start":22,"column_end":32},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":389},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":673,"byte_end":683,"line_start":21,"line_end":21,"column_start":22,"column_end":32},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":207},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":706,"byte_end":715,"line_start":23,"line_end":23,"column_start":21,"column_end":30},"alias_span":null,"name":"AsyncRead","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":286},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":717,"byte_end":727,"line_start":23,"line_end":23,"column_start":32,"column_end":42},"alias_span":null,"name":"AsyncWrite","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":26,"index":346},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":729,"byte_end":736,"line_start":23,"line_end":23,"column_start":44,"column_end":51},"alias_span":null,"name":"ReadBuf","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":512},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":767,"byte_end":774,"line_start":24,"line_end":24,"column_start":29,"column_end":36},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":776,"byte_end":783,"line_start":24,"line_end":24,"column_start":38,"column_end":45},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":38,"index":450},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":810,"byte_end":823,"line_start":25,"line_end":25,"column_start":25,"column_end":38},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":0,"byte_end":824,"line_start":1,"line_end":25,"column_start":1,"column_end":39},"name":"","qualname":"::","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":31},{"krate":0,"index":149},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":207},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217}],"decl_id":null,"docs":" Codec utilities for working with framed protocols.","sig":null,"attributes":[{"value":"/ Codec utilities for working with framed protocols.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":0,"byte_end":54,"line_start":1,"line_end":1,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":55,"byte_end":58,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":59,"byte_end":127,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":128,"byte_end":203,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as `transports`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":204,"byte_end":254,"line_start":5,"line_end":5,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":255,"byte_end":258,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":259,"byte_end":291,"line_start":7,"line_end":7,"column_start":1,"column_end":33}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":292,"byte_end":328,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"deny(rust_2018_idioms, nonstandard_style)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":330,"byte_end":375,"line_start":10,"line_end":10,"column_start":1,"column_end":46}},{"value":"warn(future_incompatible, missing_docs)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lib.rs","byte_start":376,"byte_end":419,"line_start":11,"line_end":11,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":220},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","byte_start":1010,"byte_end":1020,"line_start":9,"line_end":9,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::bcodec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Bytes codec. Reads/writes chunks of bytes from a stream.\n","sig":null,"attributes":[{"value":"/ Bytes codec. Reads/writes chunks of bytes from a stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","byte_start":908,"byte_end":968,"line_start":7,"line_end":7,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","byte_start":1110,"byte_end":1116,"line_start":15,"line_end":15,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as tokio_util::codec::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":38,"index":529},"children":[],"decl_id":{"krate":38,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","byte_start":1093,"byte_end":1102,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","byte_start":1351,"byte_end":1357,"line_start":25,"line_end":25,"column_start":8,"column_end":14},"name":"decode","qualname":"<BytesCodec as tokio_util::codec::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":38,"index":512},"children":[],"decl_id":{"krate":38,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":319},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":2588,"byte_end":2594,"line_start":35,"line_end":35,"column_start":16,"column_end":22},"name":"Framed","qualname":"::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":322},{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"decl_id":null,"docs":" A unified `Stream` and `Sink` interface to an underlying I/O object, using the `Encoder` and\n `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3083,"byte_end":3086,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" This function returns a *single* object that is both `Stream` and `Sink`; grouping this into\n a single object is often useful for layering things like gzip or TLS, which require both\n read and write access to the underlying object.\n","sig":null,"attributes":[{"value":"/ This function returns a *single* object that is both `Stream` and `Sink`; grouping this into","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":2822,"byte_end":2918,"line_start":50,"line_end":50,"column_start":5,"column_end":101}},{"value":"/ a single object is often useful for layering things like gzip or TLS, which require both","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":2923,"byte_end":3015,"line_start":51,"line_end":51,"column_start":5,"column_end":97}},{"value":"/ read and write access to the underlying object.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3020,"byte_end":3071,"line_start":52,"line_end":52,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3421,"byte_end":3430,"line_start":66,"line_end":66,"column_start":12,"column_end":21},"name":"codec_ref","qualname":"<Framed<T, U>>::codec_ref","value":"fn codec_ref(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3361,"byte_end":3409,"line_start":65,"line_end":65,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3545,"byte_end":3554,"line_start":71,"line_end":71,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3477,"byte_end":3533,"line_start":70,"line_end":70,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3879,"byte_end":3885,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"name":"io_ref","qualname":"<Framed<T, U>>::io_ref","value":"fn io_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by `Frame`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by `Frame`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3613,"byte_end":3685,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3690,"byte_end":3693,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream of data coming in as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3698,"byte_end":3794,"line_start":77,"line_end":77,"column_start":5,"column_end":101}},{"value":"/ it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3799,"byte_end":3867,"line_start":78,"line_end":78,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4184,"byte_end":4190,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"io_mut","qualname":"<Framed<T, U>>::io_mut","value":"fn io_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3929,"byte_end":3990,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3995,"byte_end":3998,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream of data coming in as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4003,"byte_end":4099,"line_start":85,"line_end":85,"column_start":5,"column_end":101}},{"value":"/ it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4104,"byte_end":4172,"line_start":86,"line_end":86,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4330,"byte_end":4336,"line_start":92,"line_end":92,"column_start":12,"column_end":18},"name":"io_pin","qualname":"<Framed<T, U>>::io_pin","value":"fn io_pin(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Pin` of a mutable reference to the underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Returns a `Pin` of a mutable reference to the underlying I/O stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4246,"byte_end":4318,"line_start":91,"line_end":91,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4459,"byte_end":4476,"line_start":97,"line_end":97,"column_start":12,"column_end":29},"name":"is_read_buf_empty","qualname":"<Framed<T, U>>::is_read_buf_empty","value":"fn is_read_buf_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if read buffer is empty.\n","sig":null,"attributes":[{"value":"/ Check if read buffer is empty.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4413,"byte_end":4447,"line_start":96,"line_end":96,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4585,"byte_end":4603,"line_start":102,"line_end":102,"column_start":12,"column_end":30},"name":"is_write_buf_empty","qualname":"<Framed<T, U>>::is_write_buf_empty","value":"fn is_write_buf_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if write buffer is empty.\n","sig":null,"attributes":[{"value":"/ Check if write buffer is empty.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4538,"byte_end":4573,"line_start":101,"line_end":101,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4712,"byte_end":4729,"line_start":107,"line_end":107,"column_start":12,"column_end":29},"name":"is_write_buf_full","qualname":"<Framed<T, U>>::is_write_buf_full","value":"fn is_write_buf_full(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if write buffer is full.\n","sig":null,"attributes":[{"value":"/ Check if write buffer is full.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4666,"byte_end":4700,"line_start":106,"line_end":106,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4940,"byte_end":4954,"line_start":114,"line_end":114,"column_start":12,"column_end":26},"name":"is_write_ready","qualname":"<Framed<T, U>>::is_write_ready","value":"fn is_write_ready(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if framed is able to write more data.","sig":null,"attributes":[{"value":"/ Check if framed is able to write more data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4793,"byte_end":4840,"line_start":111,"line_end":111,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4845,"byte_end":4848,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ `Framed` object considers ready if there is free space in write buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":4853,"byte_end":4928,"line_start":113,"line_end":113,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":5093,"byte_end":5106,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"replace_codec","qualname":"<Framed<T, U>>::replace_codec","value":"fn replace_codec<U2>(Self, U2) -> Framed<T, U2>","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different codec.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different codec.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":5017,"byte_end":5081,"line_start":118,"line_end":118,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":5409,"byte_end":5420,"line_start":130,"line_end":130,"column_start":12,"column_end":23},"name":"into_map_io","qualname":"<Framed<T, U>>::into_map_io","value":"fn into_map_io<F, T2>(Self, F) -> Framed<T2, U> where F: Fn(T) -> T2","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different io.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different io.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":5336,"byte_end":5397,"line_start":129,"line_end":129,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":5777,"byte_end":5791,"line_start":144,"line_end":144,"column_start":12,"column_end":26},"name":"into_map_codec","qualname":"<Framed<T, U>>::into_map_codec","value":"fn into_map_codec<F, U2>(Self, F) -> Framed<T, U2> where F: Fn(U) -> U2","parent":null,"children":[],"decl_id":null,"docs":" Consume the `Frame`, returning `Frame` with different codec.\n","sig":null,"attributes":[{"value":"/ Consume the `Frame`, returning `Frame` with different codec.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":5701,"byte_end":5765,"line_start":143,"line_end":143,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":6160,"byte_end":6165,"line_start":160,"line_end":160,"column_start":12,"column_end":17},"name":"write","qualname":"<Framed<T, U>>::write","value":"fn write<I>(Pin<&mut Self>, I) -> Result<(), <U as Encoder<I>>::Error> where\nT: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Serialize item and write to the inner buffer\n","sig":null,"attributes":[{"value":"/ Serialize item and write to the inner buffer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":6100,"byte_end":6148,"line_start":159,"line_end":159,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":6657,"byte_end":6666,"line_start":176,"line_end":176,"column_start":12,"column_end":21},"name":"next_item","qualname":"<Framed<T, U>>::next_item","value":"fn next_item(Pin<&mut Self>, &mut Context)\n-> Poll<Option<Result<<U as Decoder>::Item, U::Error>>> where T: AsyncRead,\nU: Decoder","parent":null,"children":[],"decl_id":null,"docs":" Try to read underlying I/O stream and decode item.\n","sig":null,"attributes":[{"value":"/ Try to read underlying I/O stream and decode item.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":6591,"byte_end":6645,"line_start":175,"line_end":175,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":9049,"byte_end":9054,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"flush","qualname":"<Framed<T, U>>::flush","value":"fn flush<I>(Pin<&mut Self>, &mut Context) -> Poll<Result<(), U::Error>> where\nT: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Flush write buffer to underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Flush write buffer to underlying I/O stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":8989,"byte_end":9037,"line_start":235,"line_end":235,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":119},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":10085,"byte_end":10090,"line_start":272,"line_end":272,"column_start":12,"column_end":17},"name":"close","qualname":"<Framed<T, U>>::close","value":"fn close<I>(Pin<&mut Self>, &mut Context) -> Poll<Result<(), U::Error>> where\nT: AsyncWrite, U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Flush write buffer and shutdown underlying I/O stream.\n","sig":null,"attributes":[{"value":"/ Flush write buffer and shutdown underlying I/O stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":10015,"byte_end":10073,"line_start":271,"line_end":271,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":10573,"byte_end":10582,"line_start":294,"line_end":294,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Framed<T, U> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":22,"index":96},"children":[],"decl_id":{"krate":22,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":131},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":10844,"byte_end":10854,"line_start":307,"line_end":307,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":23,"index":17},"children":[],"decl_id":{"krate":23,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11069,"byte_end":11079,"line_start":315,"line_end":315,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Framed<T, U> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":23,"index":17},"children":[],"decl_id":{"krate":23,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":133},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11179,"byte_end":11189,"line_start":319,"line_end":319,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":23,"index":17},"children":[],"decl_id":{"krate":23,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11306,"byte_end":11316,"line_start":323,"line_end":323,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":23,"index":17},"children":[],"decl_id":{"krate":23,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11520,"byte_end":11523,"line_start":333,"line_end":333,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Framed<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12179,"byte_end":12189,"line_start":348,"line_end":348,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" This function returns a *single* object that is both `Stream` and `Sink`; grouping this into\n a single object is often useful for layering things like gzip or TLS, which require both\n read and write access to the underlying object.","sig":null,"attributes":[{"value":"/ This function returns a *single* object that is both `Stream` and `Sink`; grouping this into","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11746,"byte_end":11842,"line_start":342,"line_end":342,"column_start":5,"column_end":101}},{"value":"/ a single object is often useful for layering things like gzip or TLS, which require both","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11847,"byte_end":11939,"line_start":343,"line_end":343,"column_start":5,"column_end":97}},{"value":"/ read and write access to the underlying object.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11944,"byte_end":11995,"line_start":344,"line_end":344,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12000,"byte_end":12003,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ These objects take a stream, a read buffer and a write buffer. These fields can be obtained","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12008,"byte_end":12103,"line_start":346,"line_end":346,"column_start":5,"column_end":100}},{"value":"/ from an existing `Framed` with the `into_parts` method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12108,"byte_end":12167,"line_start":347,"line_end":347,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12753,"byte_end":12763,"line_start":363,"line_end":363,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Frame`, returning its underlying I/O stream, the buffer with unprocessed data,\n and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Frame`, returning its underlying I/O stream, the buffer with unprocessed data,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12440,"byte_end":12536,"line_start":358,"line_end":358,"column_start":5,"column_end":101}},{"value":"/ and the codec.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12541,"byte_end":12559,"line_start":359,"line_end":359,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12564,"byte_end":12567,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream of data coming in as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12572,"byte_end":12668,"line_start":361,"line_end":361,"column_start":5,"column_end":101}},{"value":"/ it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12673,"byte_end":12741,"line_start":362,"line_end":362,"column_start":5,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":376},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13233,"byte_end":13244,"line_start":379,"line_end":379,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":12997,"byte_end":13068,"line_start":374,"line_end":374,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13069,"byte_end":13072,"line_start":375,"line_end":375,"column_start":1,"column_end":4}},{"value":"/ It can be used to construct a new `Framed` with a different codec. It contains all current","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13073,"byte_end":13167,"line_start":376,"line_end":376,"column_start":1,"column_end":95}},{"value":"/ buffers and the inner transport.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13168,"byte_end":13204,"line_start":377,"line_end":377,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":379},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13331,"byte_end":13333,"line_start":381,"line_end":381,"column_start":9,"column_end":11},"name":"io","qualname":"::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to.\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13257,"byte_end":13322,"line_start":380,"line_end":380,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":380},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13373,"byte_end":13378,"line_start":384,"line_end":384,"column_start":9,"column_end":14},"name":"codec","qualname":"::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" The codec object.\n","sig":null,"attributes":[{"value":"/ The codec object.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13343,"byte_end":13364,"line_start":383,"line_end":383,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":381},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13443,"byte_end":13451,"line_start":387,"line_end":387,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13388,"byte_end":13434,"line_start":386,"line_end":386,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":382},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13538,"byte_end":13547,"line_start":390,"line_end":390,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":376},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13468,"byte_end":13529,"line_start":389,"line_end":389,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13668,"byte_end":13671,"line_start":397,"line_end":397,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn new(T, U) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new default `FramedParts`.\n","sig":null,"attributes":[{"value":"/ Creates a new default `FramedParts`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13616,"byte_end":13656,"line_start":396,"line_end":396,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":148},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13965,"byte_end":13978,"line_start":408,"line_end":408,"column_start":12,"column_end":25},"name":"with_read_buf","qualname":"<FramedParts<T, U>>::with_read_buf","value":"fn with_read_buf(T, U, BytesMut) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedParts` with read buffer.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedParts` with read buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13904,"byte_end":13953,"line_start":407,"line_end":407,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":388},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14568,"byte_end":14578,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::lines::LinesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lines codec. Reads/writes line delimited strings.","sig":null,"attributes":[{"value":"/ Lines codec. Reads/writes line delimited strings.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14322,"byte_end":14375,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14376,"byte_end":14379,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Will split input up by LF or CRLF delimiters. Carriage return characters at the end of lines are","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14380,"byte_end":14480,"line_start":10,"line_end":10,"column_start":1,"column_end":101}},{"value":"/ not preserved.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14481,"byte_end":14499,"line_start":11,"line_end":11,"column_start":1,"column_end":19}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14539,"byte_end":14556,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14679,"byte_end":14685,"line_start":20,"line_end":20,"column_start":8,"column_end":14},"name":"encode","qualname":"<LinesCodec as tokio_util::codec::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":38,"index":529},"children":[],"decl_id":{"krate":38,"index":532},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14662,"byte_end":14671,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":15007,"byte_end":15013,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"decode","qualname":"<LinesCodec as tokio_util::codec::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":38,"index":512},"children":[],"decl_id":{"krate":38,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":15798,"byte_end":15808,"line_start":65,"line_end":65,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<LinesCodec as tokio_util::codec::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":38,"index":512},"children":[],"decl_id":{"krate":38,"index":516},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","byte_start":1047,"byte_end":1057,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":25},{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","byte_start":1276,"byte_end":1286,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":2750,"byte_end":2756,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3342,"byte_end":3348,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":105},{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":6081,"byte_end":6087,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":10467,"byte_end":10473,"line_start":287,"line_end":287,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":125}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":10719,"byte_end":10725,"line_start":299,"line_end":299,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11454,"byte_end":11460,"line_start":328,"line_end":328,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11727,"byte_end":11733,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13592,"byte_end":13603,"line_start":395,"line_end":395,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14616,"byte_end":14626,"line_start":16,"line_end":16,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":178},{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14934,"byte_end":14944,"line_start":29,"line_end":29,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","byte_start":1047,"byte_end":1057,"line_start":11,"line_end":11,"column_start":25,"column_end":35},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":220},"to":{"krate":38,"index":529}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/bcodec.rs","byte_start":1276,"byte_end":1286,"line_start":21,"line_end":21,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":220},"to":{"krate":38,"index":512}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":2750,"byte_end":2756,"line_start":45,"line_end":45,"column_start":12,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":3342,"byte_end":3348,"line_start":64,"line_end":64,"column_start":12,"column_end":18},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":6081,"byte_end":6087,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":10467,"byte_end":10473,"line_start":287,"line_end":287,"column_start":23,"column_end":29},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":319},"to":{"krate":22,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":10719,"byte_end":10725,"line_start":299,"line_end":299,"column_start":27,"column_end":33},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":319},"to":{"krate":23,"index":17}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11454,"byte_end":11460,"line_start":328,"line_end":328,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":319},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":11727,"byte_end":11733,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":319},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/framed.rs","byte_start":13592,"byte_end":13603,"line_start":395,"line_end":395,"column_start":12,"column_end":23},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14616,"byte_end":14626,"line_start":16,"line_end":16,"column_start":36,"column_end":46},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":388},"to":{"krate":38,"index":529}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/actix-codec-0.5.0/src/lines.rs","byte_start":14934,"byte_end":14944,"line_start":29,"line_end":29,"column_start":18,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":388},"to":{"krate":38,"index":512}}]}