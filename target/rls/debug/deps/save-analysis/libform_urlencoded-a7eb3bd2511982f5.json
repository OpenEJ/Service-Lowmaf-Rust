{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0","program":"/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","form_urlencoded","--edition=2018","/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=a7eb3bd2511982f5","-C","extra-filename=-a7eb3bd2511982f5","--out-dir","/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","-L","dependency=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","--extern","percent_encoding=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libpercent_encoding-dc50fa35a9316fdf.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libform_urlencoded-a7eb3bd2511982f5.rmeta"},"prelude":{"crate_id":{"name":"form_urlencoded","disambiguator":[14401765580902448421,0]},"crate_root":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src","external_crates":[{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","num":20,"id":{"name":"percent_encoding","disambiguator":[14994067487341571851,0]}}],"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":352,"byte_end":13126,"line_start":9,"line_end":416,"column_start":1,"column_end":75}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":352,"byte_end":13126,"line_start":9,"line_end":416,"column_start":1,"column_end":75},"name":"","qualname":"::","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":21},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":41},{"krate":0,"index":104},{"krate":0,"index":107},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":49},{"krate":0,"index":55},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":68},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":91},{"krate":0,"index":93},{"krate":0,"index":94}],"decl_id":null,"docs":" Parser and serializer for the [`application/x-www-form-urlencoded` syntax](\n http://url.spec.whatwg.org/#application/x-www-form-urlencoded),\n as used by HTML forms.","sig":null,"attributes":[{"value":"/ Parser and serializer for the [`application/x-www-form-urlencoded` syntax](","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":352,"byte_end":431,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ http://url.spec.whatwg.org/#application/x-www-form-urlencoded),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":432,"byte_end":499,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"/ as used by HTML forms.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":500,"byte_end":526,"line_start":11,"line_end":11,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":527,"byte_end":530,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Converts between a string (such as an URLâ€™s query string)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":531,"byte_end":594,"line_start":13,"line_end":13,"column_start":1,"column_end":62}},{"value":"/ and a sequence of (name, value) pairs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":595,"byte_end":637,"line_start":14,"line_end":14,"column_start":1,"column_end":43}}]},{"kind":"Function","id":{"krate":0,"index":20},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":1083,"byte_end":1088,"line_start":28,"line_end":28,"column_start":8,"column_end":13},"name":"parse","qualname":"::parse","value":"fn parse(&[u8]) -> Parse","parent":null,"children":[],"decl_id":null,"docs":" Convert a byte string in the `application/x-www-form-urlencoded` syntax\n into a iterator of (name, value) pairs.","sig":null,"attributes":[{"value":"/ Convert a byte string in the `application/x-www-form-urlencoded` syntax","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":747,"byte_end":822,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"/ into a iterator of (name, value) pairs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":823,"byte_end":866,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":867,"byte_end":870,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ Use `parse(input.as_bytes())` to parse a `&str` string.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":871,"byte_end":930,"line_start":23,"line_end":23,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":931,"byte_end":934,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The names and values are percent-decoded. For instance, `%23first=%25try%25` will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":935,"byte_end":1023,"line_start":25,"line_end":25,"column_start":1,"column_end":89}},{"value":"/ converted to `[(\"#first\", \"%try%\")]`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":1024,"byte_end":1065,"line_start":26,"line_end":26,"column_start":1,"column_end":42}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":1066,"byte_end":1075,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":96},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":1208,"byte_end":1213,"line_start":33,"line_end":33,"column_start":12,"column_end":17},"name":"Parse","qualname":"::Parse","value":"Parse {  }","parent":null,"children":[{"krate":0,"index":98}],"decl_id":null,"docs":" The return type of `parse()`.\n","sig":null,"attributes":[{"value":"/ The return type of `parse()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":1140,"byte_end":1173,"line_start":31,"line_end":31,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":1332,"byte_end":1336,"line_start":40,"line_end":40,"column_start":8,"column_end":12},"name":"next","qualname":"<Parse as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":2836,"byte_end":2846,"line_start":86,"line_end":86,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Parse>::into_owned","value":"fn into_owned(Self) -> ParseIntoOwned","parent":null,"children":[],"decl_id":null,"docs":" Return a new iterator that yields pairs of `String` instead of pairs of `Cow<str>`.\n","sig":null,"attributes":[{"value":"/ Return a new iterator that yields pairs of `String` instead of pairs of `Cow<str>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":2737,"byte_end":2824,"line_start":85,"line_end":85,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":33},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3015,"byte_end":3029,"line_start":92,"line_end":92,"column_start":12,"column_end":26},"name":"ParseIntoOwned","qualname":"::ParseIntoOwned","value":"ParseIntoOwned {  }","parent":null,"children":[{"krate":0,"index":35}],"decl_id":null,"docs":" Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.\n","sig":null,"attributes":[{"value":"/ Like `Parse`, but yields pairs of `String` instead of pairs of `Cow<str>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":2925,"byte_end":3003,"line_start":91,"line_end":91,"column_start":1,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":39},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3146,"byte_end":3150,"line_start":99,"line_end":99,"column_start":8,"column_end":12},"name":"next","qualname":"<ParseIntoOwned as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":41},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3479,"byte_end":3493,"line_start":110,"line_end":110,"column_start":8,"column_end":22},"name":"byte_serialize","qualname":"::byte_serialize","value":"fn byte_serialize(&[u8]) -> ByteSerialize","parent":null,"children":[],"decl_id":null,"docs":" The [`application/x-www-form-urlencoded` byte serializer](\n https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer).","sig":null,"attributes":[{"value":"/ The [`application/x-www-form-urlencoded` byte serializer](","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3294,"byte_end":3356,"line_start":106,"line_end":106,"column_start":1,"column_end":63}},{"value":"/ https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3357,"byte_end":3426,"line_start":107,"line_end":107,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3427,"byte_end":3430,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ Return an iterator of `&str` slices.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3431,"byte_end":3471,"line_start":109,"line_end":109,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":104},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3637,"byte_end":3650,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"ByteSerialize","qualname":"::ByteSerialize","value":"ByteSerialize {  }","parent":null,"children":[{"krate":0,"index":106}],"decl_id":null,"docs":" Return value of `byte_serialize()`.\n","sig":null,"attributes":[{"value":"/ Return value of `byte_serialize()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3569,"byte_end":3608,"line_start":114,"line_end":114,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3902,"byte_end":3906,"line_start":127,"line_end":127,"column_start":8,"column_end":12},"name":"next","qualname":"<ByteSerialize as std::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<&'a str>","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":48},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5042,"byte_end":5051,"line_start":154,"line_end":154,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ByteSerialize as std::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":2,"index":8186},"children":[],"decl_id":{"krate":2,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":49},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5357,"byte_end":5367,"line_start":165,"line_end":165,"column_start":12,"column_end":22},"name":"Serializer","qualname":"::Serializer","value":"Serializer {  }","parent":null,"children":[{"krate":0,"index":52},{"krate":0,"index":53},{"krate":0,"index":54}],"decl_id":null,"docs":" The [`application/x-www-form-urlencoded` serializer](\n https://url.spec.whatwg.org/#concept-urlencoded-serializer).\n","sig":null,"attributes":[{"value":"/ The [`application/x-www-form-urlencoded` serializer](","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5223,"byte_end":5280,"line_start":163,"line_end":163,"column_start":1,"column_end":58}},{"value":"/ https://url.spec.whatwg.org/#concept-urlencoded-serializer).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5281,"byte_end":5345,"line_start":164,"line_end":164,"column_start":1,"column_end":65}}]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5484,"byte_end":5490,"line_start":171,"line_end":171,"column_start":11,"column_end":17},"name":"Target","qualname":"::Target","value":"Target","parent":null,"children":[{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5500,"byte_end":5513,"line_start":172,"line_end":172,"column_start":8,"column_end":21},"name":"as_mut_string","qualname":"::Target::as_mut_string","value":"fn as_mut_string(&mut Self) -> &mut String","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5548,"byte_end":5554,"line_start":173,"line_end":173,"column_start":8,"column_end":14},"name":"finish","qualname":"::Target::finish","value":"fn finish(Self) -> Self::Finished","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":58},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5589,"byte_end":5597,"line_start":174,"line_end":174,"column_start":10,"column_end":18},"name":"Finished","qualname":"::Target::Finished","value":"type Finished;","parent":{"krate":0,"index":55},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":60},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5634,"byte_end":5647,"line_start":178,"line_end":178,"column_start":8,"column_end":21},"name":"as_mut_string","qualname":"<String as Target>::as_mut_string","value":"fn as_mut_string(&mut Self) -> &mut String","parent":{"krate":0,"index":55},"children":[],"decl_id":{"krate":0,"index":56},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":61},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5702,"byte_end":5708,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"finish","qualname":"<String as Target>::finish","value":"fn finish(Self) -> Self","parent":{"krate":0,"index":55},"children":[],"decl_id":{"krate":0,"index":57},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":65},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5817,"byte_end":5830,"line_start":188,"line_end":188,"column_start":8,"column_end":21},"name":"as_mut_string","qualname":"<&'a mut String as Target>::as_mut_string","value":"fn as_mut_string(&mut Self) -> &mut String","parent":{"krate":0,"index":55},"children":[],"decl_id":{"krate":0,"index":56},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5892,"byte_end":5898,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"finish","qualname":"<&'a mut String as Target>::finish","value":"fn finish(Self) -> Self","parent":{"krate":0,"index":55},"children":[],"decl_id":{"krate":0,"index":57},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6240,"byte_end":6243,"line_start":202,"line_end":202,"column_start":12,"column_end":15},"name":"new","qualname":"<Serializer>::new","value":"fn new(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `application/x-www-form-urlencoded` serializer for the given target.","sig":null,"attributes":[{"value":"/ Create a new `application/x-www-form-urlencoded` serializer for the given target.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6007,"byte_end":6092,"line_start":198,"line_end":198,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6097,"byte_end":6100,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ If the target is non-empty,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6105,"byte_end":6136,"line_start":200,"line_end":200,"column_start":5,"column_end":36}},{"value":"/ its content is assumed to already be in `application/x-www-form-urlencoded` syntax.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6141,"byte_end":6228,"line_start":201,"line_end":201,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":72},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6566,"byte_end":6576,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"for_suffix","qualname":"<Serializer>::for_suffix","value":"fn for_suffix(T, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `application/x-www-form-urlencoded` serializer\n for a suffix of the given target.","sig":null,"attributes":[{"value":"/ Create a new `application/x-www-form-urlencoded` serializer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6312,"byte_end":6375,"line_start":206,"line_end":206,"column_start":5,"column_end":68}},{"value":"/ for a suffix of the given target.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6380,"byte_end":6417,"line_start":207,"line_end":207,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6422,"byte_end":6425,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ If that suffix is non-empty,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6430,"byte_end":6462,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/ its content is assumed to already be in `application/x-www-form-urlencoded` syntax.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":6467,"byte_end":6554,"line_start":210,"line_end":210,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":73},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7104,"byte_end":7109,"line_start":230,"line_end":230,"column_start":12,"column_end":17},"name":"clear","qualname":"<Serializer>::clear","value":"fn clear(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Remove any existing name/value pair.","sig":null,"attributes":[{"value":"/ Remove any existing name/value pair.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7000,"byte_end":7040,"line_start":227,"line_end":227,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7045,"byte_end":7048,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Panics if called after `.finish()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7053,"byte_end":7092,"line_start":229,"line_end":229,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7323,"byte_end":7340,"line_start":236,"line_end":236,"column_start":12,"column_end":29},"name":"encoding_override","qualname":"<Serializer>::encoding_override","value":"fn encoding_override(&mut Self, EncodingOverride) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Set the character encoding to be used for names and values before percent-encoding.\n","sig":null,"attributes":[{"value":"/ Set the character encoding to be used for names and values before percent-encoding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7224,"byte_end":7311,"line_start":235,"line_end":235,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7554,"byte_end":7565,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"append_pair","qualname":"<Serializer>::append_pair","value":"fn append_pair(&mut Self, &str, &str) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Serialize and append a name/value pair.","sig":null,"attributes":[{"value":"/ Serialize and append a name/value pair.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7447,"byte_end":7490,"line_start":241,"line_end":241,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7495,"byte_end":7498,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ Panics if called after `.finish()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7503,"byte_end":7542,"line_start":243,"line_end":243,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7935,"byte_end":7950,"line_start":258,"line_end":258,"column_start":12,"column_end":27},"name":"append_key_only","qualname":"<Serializer>::append_key_only","value":"fn append_key_only(&mut Self, &str) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Serialize and append a name of parameter without any value.","sig":null,"attributes":[{"value":"/ Serialize and append a name of parameter without any value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7808,"byte_end":7871,"line_start":255,"line_end":255,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7876,"byte_end":7879,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ Panics if called after `.finish()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":7884,"byte_end":7923,"line_start":257,"line_end":257,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":8497,"byte_end":8509,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"extend_pairs","qualname":"<Serializer>::extend_pairs","value":"fn extend_pairs<I, K, V>(&mut Self, I) -> &mut Self where I: IntoIterator,\nI::Item: Borrow<(K, V)>, K: AsRef<str>, V: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Serialize and append a number of name/value pairs.","sig":null,"attributes":[{"value":"/ Serialize and append a number of name/value pairs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":8165,"byte_end":8219,"line_start":268,"line_end":268,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":8224,"byte_end":8227,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ This simply calls `append_pair` repeatedly.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":8232,"byte_end":8279,"line_start":270,"line_end":270,"column_start":5,"column_end":52}},{"value":"/ This can be more convenient, so the user doesnâ€™t need to introduce a block","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":8284,"byte_end":8364,"line_start":271,"line_end":271,"column_start":5,"column_end":83}},{"value":"/ to limit the scope of `Serializer`â€™s borrow of its string.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":8369,"byte_end":8433,"line_start":272,"line_end":272,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":8438,"byte_end":8441,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ Panics if called after `.finish()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":8446,"byte_end":8485,"line_start":274,"line_end":274,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9421,"byte_end":9437,"line_start":305,"line_end":305,"column_start":12,"column_end":28},"name":"extend_keys_only","qualname":"<Serializer>::extend_keys_only","value":"fn extend_keys_only<I, K>(&mut Self, I) -> &mut Self where I: IntoIterator,\nI::Item: Borrow<K>, K: AsRef<str>","parent":null,"children":[],"decl_id":null,"docs":" Serialize and append a number of names without values.","sig":null,"attributes":[{"value":"/ Serialize and append a number of names without values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9081,"byte_end":9139,"line_start":298,"line_end":298,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9144,"byte_end":9147,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ This simply calls `append_key_only` repeatedly.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9152,"byte_end":9203,"line_start":300,"line_end":300,"column_start":5,"column_end":56}},{"value":"/ This can be more convenient, so the user doesnâ€™t need to introduce a block","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9208,"byte_end":9288,"line_start":301,"line_end":301,"column_start":5,"column_end":83}},{"value":"/ to limit the scope of `Serializer`â€™s borrow of its string.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9293,"byte_end":9357,"line_start":302,"line_end":302,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9362,"byte_end":9365,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Panics if called after `.finish()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9370,"byte_end":9409,"line_start":304,"line_end":304,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":10316,"byte_end":10322,"line_start":333,"line_end":333,"column_start":12,"column_end":18},"name":"finish","qualname":"<Serializer>::finish","value":"fn finish(&mut Self) -> T::Finished","parent":null,"children":[],"decl_id":null,"docs":" If this serializer was constructed with a string, take and return that string.","sig":null,"attributes":[{"value":"/ If this serializer was constructed with a string, take and return that string.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9835,"byte_end":9917,"line_start":321,"line_end":321,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9922,"byte_end":9925,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9930,"byte_end":9941,"line_start":323,"line_end":323,"column_start":5,"column_end":16}},{"value":"/ use form_urlencoded;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9946,"byte_end":9970,"line_start":324,"line_end":324,"column_start":5,"column_end":29}},{"value":"/ let encoded: String = form_urlencoded::Serializer::new(String::new())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":9975,"byte_end":10048,"line_start":325,"line_end":325,"column_start":5,"column_end":78}},{"value":"/     .append_pair(\"foo\", \"bar & baz\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":10053,"byte_end":10093,"line_start":326,"line_end":326,"column_start":5,"column_end":45}},{"value":"/     .append_pair(\"saison\", \"Ã‰tÃ©+hiver\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":10098,"byte_end":10143,"line_start":327,"line_end":327,"column_start":5,"column_end":48}},{"value":"/     .finish();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":10148,"byte_end":10166,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ assert_eq!(encoded, \"foo=bar+%26+baz&saison=%C3%89t%C3%A9%2Bhiver\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":10171,"byte_end":10243,"line_start":329,"line_end":329,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":10248,"byte_end":10255,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":10260,"byte_end":10263,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ Panics if called more than once.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":10268,"byte_end":10304,"line_start":332,"line_end":332,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":94},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":13061,"byte_end":13077,"line_start":416,"line_end":416,"column_start":10,"column_end":26},"name":"EncodingOverride","qualname":"::EncodingOverride","value":"Option<&'a dyn Fn(&str) -> Cow<, [u8]>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":1266,"byte_end":1271,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":2721,"byte_end":2726,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3083,"byte_end":3097,"line_start":96,"line_end":96,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":39}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3849,"byte_end":3862,"line_start":124,"line_end":124,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":48}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5618,"byte_end":5624,"line_start":177,"line_end":177,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5983,"byte_end":5993,"line_start":197,"line_end":197,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":81},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":1266,"byte_end":1271,"line_start":37,"line_end":37,"column_start":23,"column_end":28},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":96},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":2721,"byte_end":2726,"line_start":84,"line_end":84,"column_start":10,"column_end":15},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":96},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3083,"byte_end":3097,"line_start":96,"line_end":96,"column_start":23,"column_end":37},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":33},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":3849,"byte_end":3862,"line_start":124,"line_end":124,"column_start":23,"column_end":36},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":104},"to":{"krate":2,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5618,"byte_end":5624,"line_start":177,"line_end":177,"column_start":17,"column_end":23},"kind":{"Impl":{"id":4}},"from":{"krate":5,"index":8050},"to":{"krate":0,"index":55}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/form_urlencoded-1.1.0/src/lib.rs","byte_start":5983,"byte_end":5993,"line_start":197,"line_end":197,"column_start":21,"column_end":31},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":49},"to":{"krate":4294967295,"index":4294967295}}]}