{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4","program":"/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","tokio_util","--edition=2018","/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","--cfg","feature=\"io\"","--cfg","feature=\"tracing\"","-C","metadata=e470673fbc8394ba","-C","extra-filename=-e470673fbc8394ba","--out-dir","/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","-L","dependency=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","--extern","bytes=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libbytes-e737b883a82268c6.rmeta","--extern","futures_core=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_core-bf2e7f64aaea6921.rmeta","--extern","futures_sink=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_sink-4016e03cbf9d29a0.rmeta","--extern","pin_project_lite=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libpin_project_lite-e742030a2f16f4a6.rmeta","--extern","tokio=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtokio-8196ba47352960b6.rmeta","--extern","tracing=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtracing-b11b62c27e91ca87.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtokio_util-e470673fbc8394ba.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[5218935504171966760,0]},"crate_root":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src","external_crates":[{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","num":2,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","num":20,"id":{"name":"pin_project_lite","disambiguator":[13349260882500549000,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":21,"id":{"name":"futures_sink","disambiguator":[17069752836241684674,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":22,"id":{"name":"tokio","disambiguator":[4006362457328451787,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":23,"id":{"name":"parking_lot","disambiguator":[1645823837944776078,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":24,"id":{"name":"lock_api","disambiguator":[8777307412983186541,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":25,"id":{"name":"scopeguard","disambiguator":[15237943330495450837,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":26,"id":{"name":"parking_lot_core","disambiguator":[10238583472048639811,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":27,"id":{"name":"smallvec","disambiguator":[12545130721221692768,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":28,"id":{"name":"cfg_if","disambiguator":[12105970879533839803,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":29,"id":{"name":"libc","disambiguator":[15637978272933725136,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":30,"id":{"name":"mio","disambiguator":[14896478052810656221,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":31,"id":{"name":"log","disambiguator":[17988533960493539055,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","num":32,"id":{"name":"bytes","disambiguator":[10438007896072012438,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":33,"id":{"name":"memchr","disambiguator":[6978731604939472485,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":34,"id":{"name":"socket2","disambiguator":[491492713441182150,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","num":35,"id":{"name":"signal_hook_registry","disambiguator":[9295126702021841154,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","num":36,"id":{"name":"futures_core","disambiguator":[2889476389752248248,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":37,"id":{"name":"tracing","disambiguator":[1052523234040929968,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":38,"id":{"name":"tracing_core","disambiguator":[15038953675681300187,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","num":39,"id":{"name":"once_cell","disambiguator":[15736546551684500465,0]}}],"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":0,"byte_end":5547,"line_start":1,"line_end":205,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":1166},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218890,"byte_end":16218900,"line_start":262,"line_end":262,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":512},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218939,"byte_end":16218946,"line_start":265,"line_end":265,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218985,"byte_end":16218992,"line_start":268,"line_end":268,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1724},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219154,"byte_end":16219160,"line_start":275,"line_end":275,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1202},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219162,"byte_end":16219173,"line_start":275,"line_end":275,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1683},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219221,"byte_end":16219231,"line_start":278,"line_end":278,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1642},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219280,"byte_end":16219291,"line_start":281,"line_end":281,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1226},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219353,"byte_end":16219373,"line_start":284,"line_end":284,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":974},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219375,"byte_end":16219400,"line_start":284,"line_end":284,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1244},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219449,"byte_end":16219459,"line_start":287,"line_end":287,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1266},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219461,"byte_end":16219476,"line_start":287,"line_end":287,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1274},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219541,"byte_end":16219558,"line_start":290,"line_end":290,"column_start":37,"column_end":54},"alias_span":null,"name":"AnyDelimiterCodec","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1298},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219560,"byte_end":16219582,"line_start":290,"line_end":290,"column_start":56,"column_end":78},"alias_span":null,"name":"AnyDelimiterCodecError","value":"","parent":{"krate":0,"index":459}},{"kind":"Use","ref_id":{"krate":0,"index":1330},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318779,"byte_end":16318787,"line_start":21,"line_end":21,"column_start":25,"column_end":33},"alias_span":null,"name":"read_buf","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":1598},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318818,"byte_end":16318830,"line_start":22,"line_end":22,"column_start":30,"column_end":42},"alias_span":null,"name":"ReaderStream","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":1549},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318861,"byte_end":16318873,"line_start":23,"line_end":23,"column_start":30,"column_end":42},"alias_span":null,"name":"StreamReader","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":450},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318897,"byte_end":16318910,"line_start":24,"line_end":24,"column_start":23,"column_end":36},"alias_span":null,"name":"poll_read_buf","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":453},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318912,"byte_end":16318926,"line_start":24,"line_end":24,"column_start":38,"column_end":52},"alias_span":null,"name":"poll_write_buf","value":"","parent":{"krate":0,"index":1306}},{"kind":"Use","ref_id":{"krate":0,"index":1461},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7139,"byte_end":7148,"line_start":4,"line_end":4,"column_start":37,"column_end":46},"alias_span":null,"name":"DropGuard","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":81},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7150,"byte_end":7167,"line_start":4,"line_end":4,"column_start":48,"column_end":65},"alias_span":null,"name":"CancellationToken","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1465},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7169,"byte_end":7194,"line_start":4,"line_end":4,"column_start":67,"column_end":92},"alias_span":null,"name":"WaitForCancellationFuture","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1502},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7223,"byte_end":7236,"line_start":7,"line_end":7,"column_start":16,"column_end":29},"alias_span":null,"name":"PollSendError","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":1524},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7238,"byte_end":7248,"line_start":7,"line_end":7,"column_start":31,"column_end":41},"alias_span":null,"name":"PollSender","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":226},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7296,"byte_end":7309,"line_start":10,"line_end":10,"column_start":25,"column_end":38},"alias_span":null,"name":"PollSemaphore","value":"","parent":{"krate":0,"index":14}},{"kind":"Use","ref_id":{"krate":0,"index":282},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7352,"byte_end":7369,"line_start":13,"line_end":13,"column_start":23,"column_end":40},"alias_span":null,"name":"ReusableBoxFuture","value":"","parent":{"krate":0,"index":14}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":0,"byte_end":5547,"line_start":1,"line_end":205,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":10},{"krate":0,"index":459},{"krate":0,"index":1306},{"krate":0,"index":14},{"krate":0,"index":340},{"krate":0,"index":409}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":0,"byte_end":40,"line_start":1,"line_end":1,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":41,"byte_end":147,"line_start":2,"line_end":7,"column_start":1,"column_end":3}},{"value":"/ Utilities for working with Tokio.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":305,"byte_end":342,"line_start":14,"line_end":14,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":343,"byte_end":346,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This crate is not versioned in lockstep with the core","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":347,"byte_end":404,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/ [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":405,"byte_end":469,"line_start":17,"line_end":17,"column_start":1,"column_end":65}},{"value":"/ semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":470,"byte_end":545,"line_start":18,"line_end":18,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":546,"byte_end":549,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ [`tokio`]: https://docs.rs/tokio","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":550,"byte_end":586,"line_start":20,"line_end":20,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":459},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","parent":null,"children":[{"krate":0,"index":460},{"krate":0,"index":492},{"krate":0,"index":495},{"krate":0,"index":519},{"krate":0,"index":522},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":633},{"krate":0,"index":634},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":646},{"krate":0,"index":748},{"krate":0,"index":749},{"krate":0,"index":752},{"krate":0,"index":755},{"krate":0,"index":832},{"krate":0,"index":835},{"krate":0,"index":914},{"krate":0,"index":917},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1032},{"krate":0,"index":1035},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1096},{"krate":0,"index":1099},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1163}],"decl_id":null,"docs":" Adaptors from AsyncRead/AsyncWrite to Stream/Sink","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/cfg.rs","byte_start":5623,"byte_end":5648,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"/ Adaptors from AsyncRead/AsyncWrite to Stream/Sink","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16208618,"byte_end":16208671,"line_start":1,"line_end":1,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16208672,"byte_end":16208675,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16208676,"byte_end":16208751,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\".","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16208752,"byte_end":16208817,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16208818,"byte_end":16208821,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This module contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16208822,"byte_end":16208902,"line_start":6,"line_end":6,"column_start":1,"column_end":81}},{"value":"/ [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16208903,"byte_end":16208978,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ Framed streams are also known as transports.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16208979,"byte_end":16209027,"line_start":8,"line_end":8,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209028,"byte_end":16209031,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ # The Decoder trait","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209032,"byte_end":16209055,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209056,"byte_end":16209059,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ A [`Decoder`] is used together with [`FramedRead`] or [`Framed`] to turn an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209060,"byte_end":16209139,"line_start":12,"line_end":12,"column_start":1,"column_end":80}},{"value":"/ [`AsyncRead`] into a [`Stream`]. The job of the decoder trait is to specify","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209140,"byte_end":16209219,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/ how sequences of bytes are turned into a sequence of frames, and to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209220,"byte_end":16209291,"line_start":14,"line_end":14,"column_start":1,"column_end":72}},{"value":"/ determine where the boundaries between frames are.  The job of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209292,"byte_end":16209362,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/ `FramedRead` is to repeatedly switch between reading more data from the IO","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209363,"byte_end":16209441,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ resource, and asking the decoder whether we have received enough data to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209442,"byte_end":16209518,"line_start":17,"line_end":17,"column_start":1,"column_end":77}},{"value":"/ decode another frame of data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209519,"byte_end":16209552,"line_start":18,"line_end":18,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209553,"byte_end":16209556,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Decoder` trait is the [`decode`] method. This method","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209557,"byte_end":16209637,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ takes as argument the data that has been read so far, and when it is called,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209638,"byte_end":16209718,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ it will be in one of the following situations:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209719,"byte_end":16209769,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209770,"byte_end":16209773,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/  1. The buffer contains less than a full frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209774,"byte_end":16209825,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/  2. The buffer contains exactly a full frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209826,"byte_end":16209875,"line_start":25,"line_end":25,"column_start":1,"column_end":50}},{"value":"/  3. The buffer contains more than a full frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209876,"byte_end":16209927,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209928,"byte_end":16209931,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ In the first situation, the decoder should return `Ok(None)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209932,"byte_end":16209997,"line_start":28,"line_end":28,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16209998,"byte_end":16210001,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ In the second situation, the decoder should clear the provided buffer and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210002,"byte_end":16210079,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ return `Ok(Some(the_decoded_frame))`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210080,"byte_end":16210121,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210122,"byte_end":16210125,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ In the third situation, the decoder should use a method such as [`split_to`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210126,"byte_end":16210206,"line_start":33,"line_end":33,"column_start":1,"column_end":81}},{"value":"/ or [`advance`] to modify the buffer such that the frame is removed from the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210207,"byte_end":16210286,"line_start":34,"line_end":34,"column_start":1,"column_end":80}},{"value":"/ buffer, but any data in the buffer after that frame should still remain in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210287,"byte_end":16210365,"line_start":35,"line_end":35,"column_start":1,"column_end":79}},{"value":"/ the buffer. The decoder should also return `Ok(Some(the_decoded_frame))` in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210366,"byte_end":16210445,"line_start":36,"line_end":36,"column_start":1,"column_end":80}},{"value":"/ this case.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210446,"byte_end":16210460,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210461,"byte_end":16210464,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Finally the decoder may return an error if the data is invalid in some way.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210465,"byte_end":16210544,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ The decoder should _not_ return an error just because it has yet to receive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210545,"byte_end":16210624,"line_start":40,"line_end":40,"column_start":1,"column_end":80}},{"value":"/ a full frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210625,"byte_end":16210642,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210643,"byte_end":16210646,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `decode` to another, the provided","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210647,"byte_end":16210724,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that if more data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210725,"byte_end":16210804,"line_start":44,"line_end":44,"column_start":1,"column_end":80}},{"value":"/ has arrived through the IO resource, that data will have been appended to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210805,"byte_end":16210882,"line_start":45,"line_end":45,"column_start":1,"column_end":78}},{"value":"/ the buffer.  This means that reading frames from a `FramedRead` is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210883,"byte_end":16210953,"line_start":46,"line_end":46,"column_start":1,"column_end":71}},{"value":"/ essentially equivalent to the following loop:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16210954,"byte_end":16211003,"line_start":47,"line_end":47,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211004,"byte_end":16211007,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211008,"byte_end":16211021,"line_start":49,"line_end":49,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncReadExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211022,"byte_end":16211054,"line_start":50,"line_end":50,"column_start":1,"column_end":33}},{"value":"/ # // This uses async_stream to create an example that compiles.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211055,"byte_end":16211122,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/ # fn foo() -> impl futures_core::Stream<Item = std::io::Result<bytes::BytesMut>> { async_stream::try_stream! {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211123,"byte_end":16211237,"line_start":52,"line_end":52,"column_start":1,"column_end":115}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211238,"byte_end":16211275,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ # let mut decoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211276,"byte_end":16211337,"line_start":54,"line_end":54,"column_start":1,"column_end":62}},{"value":"/ # let io_resource = &mut &[0u8, 1, 2, 3][..];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211338,"byte_end":16211387,"line_start":55,"line_end":55,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211388,"byte_end":16211391,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211392,"byte_end":16211433,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211434,"byte_end":16211444,"line_start":58,"line_end":58,"column_start":1,"column_end":11}},{"value":"/     // The read_buf call will append to buf rather than overwrite existing data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211445,"byte_end":16211529,"line_start":59,"line_end":59,"column_start":1,"column_end":85}},{"value":"/     let len = io_resource.read_buf(&mut buf).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211530,"byte_end":16211586,"line_start":60,"line_end":60,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211587,"byte_end":16211590,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/     if len == 0 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211591,"byte_end":16211612,"line_start":62,"line_end":62,"column_start":1,"column_end":22}},{"value":"/         while let Some(frame) = decoder.decode_eof(&mut buf)? {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211613,"byte_end":16211680,"line_start":63,"line_end":63,"column_start":1,"column_end":68}},{"value":"/             yield frame;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211681,"byte_end":16211709,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211710,"byte_end":16211723,"line_start":65,"line_end":65,"column_start":1,"column_end":14}},{"value":"/         break;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211724,"byte_end":16211742,"line_start":66,"line_end":66,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211743,"byte_end":16211752,"line_start":67,"line_end":67,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211753,"byte_end":16211756,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/     while let Some(frame) = decoder.decode(&mut buf)? {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211757,"byte_end":16211816,"line_start":69,"line_end":69,"column_start":1,"column_end":60}},{"value":"/         yield frame;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211817,"byte_end":16211841,"line_start":70,"line_end":70,"column_start":1,"column_end":25}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211842,"byte_end":16211851,"line_start":71,"line_end":71,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211852,"byte_end":16211857,"line_start":72,"line_end":72,"column_start":1,"column_end":6}},{"value":"/ # }}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211858,"byte_end":16211866,"line_start":73,"line_end":73,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211867,"byte_end":16211874,"line_start":74,"line_end":74,"column_start":1,"column_end":8}},{"value":"/ The example above uses `yield` whenever the `Stream` produces an item.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211875,"byte_end":16211949,"line_start":75,"line_end":75,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211950,"byte_end":16211953,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ ## Example decoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211954,"byte_end":16211976,"line_start":77,"line_end":77,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211977,"byte_end":16211980,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16211981,"byte_end":16212058,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212059,"byte_end":16212135,"line_start":80,"line_end":80,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The decoder fails with an error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212136,"byte_end":16212215,"line_start":81,"line_end":81,"column_start":1,"column_end":80}},{"value":"/ if the string data is not valid utf-8 or too long.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212216,"byte_end":16212270,"line_start":82,"line_end":82,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212271,"byte_end":16212274,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/ Such a decoder can be written like this:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212275,"byte_end":16212319,"line_start":84,"line_end":84,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212320,"byte_end":16212327,"line_start":85,"line_end":85,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Decoder;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212328,"byte_end":16212363,"line_start":86,"line_end":86,"column_start":1,"column_end":36}},{"value":"/ use bytes::{BytesMut, Buf};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212364,"byte_end":16212395,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212396,"byte_end":16212399,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ struct MyStringDecoder {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212400,"byte_end":16212429,"line_start":89,"line_end":89,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212430,"byte_end":16212433,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212434,"byte_end":16212473,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212474,"byte_end":16212477,"line_start":92,"line_end":92,"column_start":1,"column_end":4}},{"value":"/ impl Decoder for MyStringDecoder {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212478,"byte_end":16212516,"line_start":93,"line_end":93,"column_start":1,"column_end":39}},{"value":"/     type Item = String;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212517,"byte_end":16212544,"line_start":94,"line_end":94,"column_start":1,"column_end":28}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212545,"byte_end":16212581,"line_start":95,"line_end":95,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212582,"byte_end":16212585,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/     fn decode(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212586,"byte_end":16212604,"line_start":97,"line_end":97,"column_start":1,"column_end":19}},{"value":"/         &mut self,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212605,"byte_end":16212627,"line_start":98,"line_end":98,"column_start":1,"column_end":23}},{"value":"/         src: &mut BytesMut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212628,"byte_end":16212658,"line_start":99,"line_end":99,"column_start":1,"column_end":31}},{"value":"/     ) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212659,"byte_end":16212713,"line_start":100,"line_end":100,"column_start":1,"column_end":55}},{"value":"/         if src.len() < 4 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212714,"byte_end":16212744,"line_start":101,"line_end":101,"column_start":1,"column_end":31}},{"value":"/             // Not enough data to read length marker.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212745,"byte_end":16212802,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/             return Ok(None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212803,"byte_end":16212835,"line_start":103,"line_end":103,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212836,"byte_end":16212849,"line_start":104,"line_end":104,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212850,"byte_end":16212853,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/         // Read length marker.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212854,"byte_end":16212888,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/         let mut length_bytes = [0u8; 4];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212889,"byte_end":16212933,"line_start":107,"line_end":107,"column_start":1,"column_end":45}},{"value":"/         length_bytes.copy_from_slice(&src[..4]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212934,"byte_end":16212986,"line_start":108,"line_end":108,"column_start":1,"column_end":53}},{"value":"/         let length = u32::from_le_bytes(length_bytes) as usize;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16212987,"byte_end":16213054,"line_start":109,"line_end":109,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213055,"byte_end":16213058,"line_start":110,"line_end":110,"column_start":1,"column_end":4}},{"value":"/         // Check that the length is not too large to avoid a denial of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213059,"byte_end":16213133,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/         // service attack where the server runs out of memory.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213134,"byte_end":16213200,"line_start":112,"line_end":112,"column_start":1,"column_end":67}},{"value":"/         if length > MAX {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213201,"byte_end":16213230,"line_start":113,"line_end":113,"column_start":1,"column_end":30}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213231,"byte_end":16213278,"line_start":114,"line_end":114,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213279,"byte_end":16213331,"line_start":115,"line_end":115,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", length)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213332,"byte_end":16213403,"line_start":116,"line_end":116,"column_start":1,"column_end":72}},{"value":"/             ));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213404,"byte_end":16213423,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213424,"byte_end":16213437,"line_start":118,"line_end":118,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213438,"byte_end":16213441,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/         if src.len() < 4 + length {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213442,"byte_end":16213481,"line_start":120,"line_end":120,"column_start":1,"column_end":40}},{"value":"/             // The full string has not yet arrived.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213482,"byte_end":16213537,"line_start":121,"line_end":121,"column_start":1,"column_end":56}},{"value":"/             //","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213538,"byte_end":16213556,"line_start":122,"line_end":122,"column_start":1,"column_end":19}},{"value":"/             // We reserve more space in the buffer. This is not strictly","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213557,"byte_end":16213633,"line_start":123,"line_end":123,"column_start":1,"column_end":77}},{"value":"/             // necessary, but is a good idea performance-wise.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213634,"byte_end":16213700,"line_start":124,"line_end":124,"column_start":1,"column_end":67}},{"value":"/             src.reserve(4 + length - src.len());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213701,"byte_end":16213753,"line_start":125,"line_end":125,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213754,"byte_end":16213757,"line_start":126,"line_end":126,"column_start":1,"column_end":4}},{"value":"/             // We inform the Framed that we need more bytes to form the next","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213758,"byte_end":16213838,"line_start":127,"line_end":127,"column_start":1,"column_end":81}},{"value":"/             // frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213839,"byte_end":16213864,"line_start":128,"line_end":128,"column_start":1,"column_end":26}},{"value":"/             return Ok(None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213865,"byte_end":16213897,"line_start":129,"line_end":129,"column_start":1,"column_end":33}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213898,"byte_end":16213911,"line_start":130,"line_end":130,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213912,"byte_end":16213915,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/         // Use advance to modify src such that it no longer contains","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213916,"byte_end":16213988,"line_start":132,"line_end":132,"column_start":1,"column_end":73}},{"value":"/         // this frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16213989,"byte_end":16214015,"line_start":133,"line_end":133,"column_start":1,"column_end":27}},{"value":"/         let data = src[4..4 + length].to_vec();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214016,"byte_end":16214067,"line_start":134,"line_end":134,"column_start":1,"column_end":52}},{"value":"/         src.advance(4 + length);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214068,"byte_end":16214104,"line_start":135,"line_end":135,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214105,"byte_end":16214108,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/         // Convert the data to a string, or fail if it is not valid utf-8.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214109,"byte_end":16214187,"line_start":137,"line_end":137,"column_start":1,"column_end":79}},{"value":"/         match String::from_utf8(data) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214188,"byte_end":16214231,"line_start":138,"line_end":138,"column_start":1,"column_end":44}},{"value":"/             Ok(string) => Ok(Some(string)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214232,"byte_end":16214279,"line_start":139,"line_end":139,"column_start":1,"column_end":48}},{"value":"/             Err(utf8_error) => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214280,"byte_end":16214316,"line_start":140,"line_end":140,"column_start":1,"column_end":37}},{"value":"/                 Err(std::io::Error::new(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214317,"byte_end":16214361,"line_start":141,"line_end":141,"column_start":1,"column_end":45}},{"value":"/                     std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214362,"byte_end":16214418,"line_start":142,"line_end":142,"column_start":1,"column_end":57}},{"value":"/                     utf8_error.utf8_error(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214419,"byte_end":16214467,"line_start":143,"line_end":143,"column_start":1,"column_end":49}},{"value":"/                 ))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214468,"byte_end":16214490,"line_start":144,"line_end":144,"column_start":1,"column_end":23}},{"value":"/             },","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214491,"byte_end":16214509,"line_start":145,"line_end":145,"column_start":1,"column_end":19}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214510,"byte_end":16214523,"line_start":146,"line_end":146,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214524,"byte_end":16214533,"line_start":147,"line_end":147,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214534,"byte_end":16214539,"line_start":148,"line_end":148,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214540,"byte_end":16214547,"line_start":149,"line_end":149,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214548,"byte_end":16214551,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # The Encoder trait","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214552,"byte_end":16214575,"line_start":151,"line_end":151,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214576,"byte_end":16214579,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ An [`Encoder`] is used together with [`FramedWrite`] or [`Framed`] to turn","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214580,"byte_end":16214658,"line_start":153,"line_end":153,"column_start":1,"column_end":79}},{"value":"/ an [`AsyncWrite`] into a [`Sink`]. The job of the encoder trait is to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214659,"byte_end":16214732,"line_start":154,"line_end":154,"column_start":1,"column_end":74}},{"value":"/ specify how frames are turned into a sequences of bytes.  The job of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214733,"byte_end":16214809,"line_start":155,"line_end":155,"column_start":1,"column_end":77}},{"value":"/ `FramedWrite` is to take the resulting sequence of bytes and write it to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214810,"byte_end":16214890,"line_start":156,"line_end":156,"column_start":1,"column_end":81}},{"value":"/ IO resource.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214891,"byte_end":16214907,"line_start":157,"line_end":157,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214908,"byte_end":16214911,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ The main method on the `Encoder` trait is the [`encode`] method. This method","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214912,"byte_end":16214992,"line_start":159,"line_end":159,"column_start":1,"column_end":81}},{"value":"/ takes an item that is being written, and a buffer to write the item to. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16214993,"byte_end":16215072,"line_start":160,"line_end":160,"column_start":1,"column_end":80}},{"value":"/ buffer may already contain data, and in this case, the encoder should append","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215073,"byte_end":16215153,"line_start":161,"line_end":161,"column_start":1,"column_end":81}},{"value":"/ the new frame the to buffer rather than overwrite the existing data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215154,"byte_end":16215226,"line_start":162,"line_end":162,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215227,"byte_end":16215230,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ It is guaranteed that, from one call to `encode` to another, the provided","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215231,"byte_end":16215308,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ buffer will contain the exact same data as before, except that some of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215309,"byte_end":16215387,"line_start":165,"line_end":165,"column_start":1,"column_end":79}},{"value":"/ data may have been removed from the front of the buffer. Writing to a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215388,"byte_end":16215461,"line_start":166,"line_end":166,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` is essentially equivalent to the following loop:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215462,"byte_end":16215528,"line_start":167,"line_end":167,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215529,"byte_end":16215532,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215533,"byte_end":16215546,"line_start":169,"line_end":169,"column_start":1,"column_end":14}},{"value":"/ use tokio::io::AsyncWriteExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215547,"byte_end":16215580,"line_start":170,"line_end":170,"column_start":1,"column_end":34}},{"value":"/ use bytes::Buf; // for advance","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215581,"byte_end":16215615,"line_start":171,"line_end":171,"column_start":1,"column_end":35}},{"value":"/ # use tokio_util::codec::Encoder;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215616,"byte_end":16215653,"line_start":172,"line_end":172,"column_start":1,"column_end":38}},{"value":"/ # async fn next_frame() -> bytes::Bytes { bytes::Bytes::new() }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215654,"byte_end":16215721,"line_start":173,"line_end":173,"column_start":1,"column_end":68}},{"value":"/ # async fn no_more_frames() { }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215722,"byte_end":16215757,"line_start":174,"line_end":174,"column_start":1,"column_end":36}},{"value":"/ # #[tokio::main] async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215758,"byte_end":16215819,"line_start":175,"line_end":175,"column_start":1,"column_end":62}},{"value":"/ # let mut io_resource = tokio::io::sink();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215820,"byte_end":16215866,"line_start":176,"line_end":176,"column_start":1,"column_end":47}},{"value":"/ # let mut encoder = tokio_util::codec::BytesCodec::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215867,"byte_end":16215928,"line_start":177,"line_end":177,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215929,"byte_end":16215932,"line_start":178,"line_end":178,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8192;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215933,"byte_end":16215961,"line_start":179,"line_end":179,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215962,"byte_end":16215965,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ let mut buf = bytes::BytesMut::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16215966,"byte_end":16216007,"line_start":181,"line_end":181,"column_start":1,"column_end":42}},{"value":"/ loop {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216008,"byte_end":16216018,"line_start":182,"line_end":182,"column_start":1,"column_end":11}},{"value":"/     tokio::select! {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216019,"byte_end":16216043,"line_start":183,"line_end":183,"column_start":1,"column_end":25}},{"value":"/         num_written = io_resource.write(&buf), if !buf.is_empty() => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216044,"byte_end":16216118,"line_start":184,"line_end":184,"column_start":1,"column_end":75}},{"value":"/             buf.advance(num_written?);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216119,"byte_end":16216161,"line_start":185,"line_end":185,"column_start":1,"column_end":43}},{"value":"/         },","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216162,"byte_end":16216176,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/         frame = next_frame(), if buf.len() < MAX => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216177,"byte_end":16216234,"line_start":187,"line_end":187,"column_start":1,"column_end":58}},{"value":"/             encoder.encode(frame, &mut buf)?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216235,"byte_end":16216284,"line_start":188,"line_end":188,"column_start":1,"column_end":50}},{"value":"/         },","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216285,"byte_end":16216299,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/         _ = no_more_frames() => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216300,"byte_end":16216337,"line_start":190,"line_end":190,"column_start":1,"column_end":38}},{"value":"/             io_resource.write_all(&buf).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216338,"byte_end":16216389,"line_start":191,"line_end":191,"column_start":1,"column_end":52}},{"value":"/             io_resource.shutdown().await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216390,"byte_end":16216436,"line_start":192,"line_end":192,"column_start":1,"column_end":47}},{"value":"/             return Ok(());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216437,"byte_end":16216467,"line_start":193,"line_end":193,"column_start":1,"column_end":31}},{"value":"/         },","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216468,"byte_end":16216482,"line_start":194,"line_end":194,"column_start":1,"column_end":15}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216483,"byte_end":16216492,"line_start":195,"line_end":195,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216493,"byte_end":16216498,"line_start":196,"line_end":196,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216499,"byte_end":16216506,"line_start":197,"line_end":197,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216507,"byte_end":16216514,"line_start":198,"line_end":198,"column_start":1,"column_end":8}},{"value":"/ Here the `next_frame` method corresponds to any frames you write to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216515,"byte_end":16216590,"line_start":199,"line_end":199,"column_start":1,"column_end":76}},{"value":"/ `FramedWrite`. The `no_more_frames` method corresponds to closing the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216591,"byte_end":16216664,"line_start":200,"line_end":200,"column_start":1,"column_end":74}},{"value":"/ `FramedWrite` with [`SinkExt::close`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216665,"byte_end":16216707,"line_start":201,"line_end":201,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216708,"byte_end":16216711,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/ ## Example encoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216712,"byte_end":16216734,"line_start":203,"line_end":203,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216735,"byte_end":16216738,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ As an example, consider a protocol that can be used to send strings where","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216739,"byte_end":16216816,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ each frame is a four byte integer that contains the length of the frame,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216817,"byte_end":16216893,"line_start":206,"line_end":206,"column_start":1,"column_end":77}},{"value":"/ followed by that many bytes of string data. The encoder will fail if the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216894,"byte_end":16216970,"line_start":207,"line_end":207,"column_start":1,"column_end":77}},{"value":"/ string is too long.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216971,"byte_end":16216994,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216995,"byte_end":16216998,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ Such an encoder can be written like this:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16216999,"byte_end":16217044,"line_start":210,"line_end":210,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217045,"byte_end":16217052,"line_start":211,"line_end":211,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::Encoder;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217053,"byte_end":16217088,"line_start":212,"line_end":212,"column_start":1,"column_end":36}},{"value":"/ use bytes::BytesMut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217089,"byte_end":16217113,"line_start":213,"line_end":213,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217114,"byte_end":16217117,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ struct MyStringEncoder {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217118,"byte_end":16217147,"line_start":215,"line_end":215,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217148,"byte_end":16217151,"line_start":216,"line_end":216,"column_start":1,"column_end":4}},{"value":"/ const MAX: usize = 8 * 1024 * 1024;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217152,"byte_end":16217191,"line_start":217,"line_end":217,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217192,"byte_end":16217195,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ impl Encoder<String> for MyStringEncoder {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217196,"byte_end":16217242,"line_start":219,"line_end":219,"column_start":1,"column_end":47}},{"value":"/     type Error = std::io::Error;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217243,"byte_end":16217279,"line_start":220,"line_end":220,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217280,"byte_end":16217283,"line_start":221,"line_end":221,"column_start":1,"column_end":4}},{"value":"/     fn encode(&mut self, item: String, dst: &mut BytesMut) -> Result<(), Self::Error> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217284,"byte_end":16217375,"line_start":222,"line_end":222,"column_start":1,"column_end":92}},{"value":"/         // Don't send a string if it is longer than the other end will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217376,"byte_end":16217450,"line_start":223,"line_end":223,"column_start":1,"column_end":75}},{"value":"/         // accept.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217451,"byte_end":16217473,"line_start":224,"line_end":224,"column_start":1,"column_end":23}},{"value":"/         if item.len() > MAX {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217474,"byte_end":16217507,"line_start":225,"line_end":225,"column_start":1,"column_end":34}},{"value":"/             return Err(std::io::Error::new(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217508,"byte_end":16217555,"line_start":226,"line_end":226,"column_start":1,"column_end":48}},{"value":"/                 std::io::ErrorKind::InvalidData,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217556,"byte_end":16217608,"line_start":227,"line_end":227,"column_start":1,"column_end":53}},{"value":"/                 format!(\"Frame of length {} is too large.\", item.len())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217609,"byte_end":16217684,"line_start":228,"line_end":228,"column_start":1,"column_end":76}},{"value":"/             ));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217685,"byte_end":16217704,"line_start":229,"line_end":229,"column_start":1,"column_end":20}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217705,"byte_end":16217718,"line_start":230,"line_end":230,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217719,"byte_end":16217722,"line_start":231,"line_end":231,"column_start":1,"column_end":4}},{"value":"/         // Convert the length into a byte array.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217723,"byte_end":16217775,"line_start":232,"line_end":232,"column_start":1,"column_end":53}},{"value":"/         // The cast to u32 cannot overflow due to the length check above.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217776,"byte_end":16217853,"line_start":233,"line_end":233,"column_start":1,"column_end":78}},{"value":"/         let len_slice = u32::to_le_bytes(item.len() as u32);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217854,"byte_end":16217918,"line_start":234,"line_end":234,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217919,"byte_end":16217922,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/         // Reserve space in the buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217923,"byte_end":16217966,"line_start":236,"line_end":236,"column_start":1,"column_end":44}},{"value":"/         dst.reserve(4 + item.len());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16217967,"byte_end":16218007,"line_start":237,"line_end":237,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218008,"byte_end":16218011,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/         // Write the length and string to the buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218012,"byte_end":16218069,"line_start":239,"line_end":239,"column_start":1,"column_end":58}},{"value":"/         dst.extend_from_slice(&len_slice);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218070,"byte_end":16218116,"line_start":240,"line_end":240,"column_start":1,"column_end":47}},{"value":"/         dst.extend_from_slice(item.as_bytes());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218117,"byte_end":16218168,"line_start":241,"line_end":241,"column_start":1,"column_end":52}},{"value":"/         Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218169,"byte_end":16218187,"line_start":242,"line_end":242,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218188,"byte_end":16218197,"line_start":243,"line_end":243,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218198,"byte_end":16218203,"line_start":244,"line_end":244,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218204,"byte_end":16218211,"line_start":245,"line_end":245,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218212,"byte_end":16218215,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218216,"byte_end":16218255,"line_start":247,"line_end":247,"column_start":1,"column_end":40}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218256,"byte_end":16218297,"line_start":248,"line_end":248,"column_start":1,"column_end":42}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218298,"byte_end":16218334,"line_start":249,"line_end":249,"column_start":1,"column_end":37}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218335,"byte_end":16218367,"line_start":250,"line_end":250,"column_start":1,"column_end":33}},{"value":"/ [`SinkExt::close`]: https://docs.rs/futures/0.3/futures/sink/trait.SinkExt.html#method.close","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218368,"byte_end":16218464,"line_start":251,"line_end":251,"column_start":1,"column_end":97}},{"value":"/ [`FramedRead`]: struct@crate::codec::FramedRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218465,"byte_end":16218516,"line_start":252,"line_end":252,"column_start":1,"column_end":52}},{"value":"/ [`FramedWrite`]: struct@crate::codec::FramedWrite","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218517,"byte_end":16218570,"line_start":253,"line_end":253,"column_start":1,"column_end":54}},{"value":"/ [`Framed`]: struct@crate::codec::Framed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218571,"byte_end":16218614,"line_start":254,"line_end":254,"column_start":1,"column_end":44}},{"value":"/ [`Decoder`]: trait@crate::codec::Decoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218615,"byte_end":16218659,"line_start":255,"line_end":255,"column_start":1,"column_end":45}},{"value":"/ [`decode`]: fn@crate::codec::Decoder::decode","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218660,"byte_end":16218708,"line_start":256,"line_end":256,"column_start":1,"column_end":49}},{"value":"/ [`encode`]: fn@crate::codec::Encoder::encode","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218709,"byte_end":16218757,"line_start":257,"line_end":257,"column_start":1,"column_end":49}},{"value":"/ [`split_to`]: fn@bytes::BytesMut::split_to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218758,"byte_end":16218804,"line_start":258,"line_end":258,"column_start":1,"column_end":47}},{"value":"/ [`advance`]: fn@bytes::Buf::advance","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16218805,"byte_end":16218844,"line_start":259,"line_end":259,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":1166},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220868,"byte_end":16220878,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219711,"byte_end":16219796,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219797,"byte_end":16219800,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219801,"byte_end":16219839,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219840,"byte_end":16219878,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219879,"byte_end":16219882,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219883,"byte_end":16219896,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219897,"byte_end":16219900,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219901,"byte_end":16219982,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219983,"byte_end":16219986,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16219987,"byte_end":16220026,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220027,"byte_end":16220060,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220061,"byte_end":16220090,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220091,"byte_end":16220094,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220095,"byte_end":16220102,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220103,"byte_end":16220121,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220122,"byte_end":16220152,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220153,"byte_end":16220177,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220178,"byte_end":16220185,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220186,"byte_end":16220215,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220216,"byte_end":16220268,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220269,"byte_end":16220272,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220273,"byte_end":16220291,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220292,"byte_end":16220309,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220310,"byte_end":16220390,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220391,"byte_end":16220425,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220426,"byte_end":16220479,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220480,"byte_end":16220491,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220492,"byte_end":16220499,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220500,"byte_end":16220505,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220506,"byte_end":16220553,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220554,"byte_end":16220607,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220608,"byte_end":16220666,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220667,"byte_end":16220746,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220747,"byte_end":16220759,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220760,"byte_end":16220767,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220768,"byte_end":16220775,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220776,"byte_end":16220779,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220980,"byte_end":16220983,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220907,"byte_end":16220968,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16221126,"byte_end":16221132,"line_start":58,"line_end":58,"column_start":8,"column_end":14},"name":"decode","qualname":"<BytesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<BytesMut>, io::Error>","parent":{"krate":0,"index":512},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":488},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16221437,"byte_end":16221443,"line_start":71,"line_end":71,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16221671,"byte_end":16221677,"line_start":81,"line_end":81,"column_start":8,"column_end":14},"name":"encode","qualname":"<BytesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, BytesMut, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":512},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223220,"byte_end":16223227,"line_start":35,"line_end":35,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":513},{"krate":0,"index":514},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16221935,"byte_end":16221970,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16221971,"byte_end":16221974,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16221975,"byte_end":16222044,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222045,"byte_end":16222124,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222125,"byte_end":16222197,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222198,"byte_end":16222222,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222223,"byte_end":16222226,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222227,"byte_end":16222295,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222296,"byte_end":16222373,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222374,"byte_end":16222435,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222436,"byte_end":16222439,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ For some underlying data-sources, namely files and FIFOs,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222440,"byte_end":16222501,"line_start":19,"line_end":19,"column_start":1,"column_end":62}},{"value":"/ it's possible to temporarily read 0 bytes by reaching EOF.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222502,"byte_end":16222564,"line_start":20,"line_end":20,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222565,"byte_end":16222568,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In these cases `decode_eof` will be called until it signals","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222569,"byte_end":16222632,"line_start":22,"line_end":22,"column_start":1,"column_end":64}},{"value":"/ fulfillment of all closing frames by returning `Ok(None)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222633,"byte_end":16222695,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/ After that, repeated attempts to read from the [`Framed`] or [`FramedRead`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222696,"byte_end":16222775,"line_start":24,"line_end":24,"column_start":1,"column_end":80}},{"value":"/ will not invoke `decode` or `decode_eof` again, until data can be read","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222776,"byte_end":16222850,"line_start":25,"line_end":25,"column_start":1,"column_end":75}},{"value":"/ during a retry.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222851,"byte_end":16222870,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222871,"byte_end":16222874,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ It is up to the Decoder to keep track of a restart after an EOF,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222875,"byte_end":16222943,"line_start":28,"line_end":28,"column_start":1,"column_end":69}},{"value":"/ and to decide how to handle such an event by, for example,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16222944,"byte_end":16223006,"line_start":29,"line_end":29,"column_start":1,"column_end":63}},{"value":"/ allowing frames to cross EOF boundaries, re-emitting opening frames, or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223007,"byte_end":16223082,"line_start":30,"line_end":30,"column_start":1,"column_end":76}},{"value":"/ resetting the entire internal state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223083,"byte_end":16223123,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223124,"byte_end":16223127,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223128,"byte_end":16223164,"line_start":33,"line_end":33,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223165,"byte_end":16223209,"line_start":34,"line_end":34,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":513},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223275,"byte_end":16223279,"line_start":37,"line_end":37,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223234,"byte_end":16223265,"line_start":36,"line_end":36,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":514},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224045,"byte_end":16224050,"line_start":54,"line_end":54,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223286,"byte_end":16223338,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223343,"byte_end":16223346,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223351,"byte_end":16223420,"line_start":41,"line_end":41,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223425,"byte_end":16223495,"line_start":42,"line_end":42,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223500,"byte_end":16223546,"line_start":43,"line_end":43,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223551,"byte_end":16223554,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223559,"byte_end":16223635,"line_start":45,"line_end":45,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223640,"byte_end":16223715,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223720,"byte_end":16223795,"line_start":47,"line_end":47,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223800,"byte_end":16223840,"line_start":48,"line_end":48,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223845,"byte_end":16223848,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223853,"byte_end":16223927,"line_start":50,"line_end":50,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223932,"byte_end":16223978,"line_start":51,"line_end":51,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223983,"byte_end":16223986,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16223991,"byte_end":16224035,"line_start":53,"line_end":53,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226986,"byte_end":16226992,"line_start":124,"line_end":124,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224074,"byte_end":16224139,"line_start":56,"line_end":56,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224144,"byte_end":16224147,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224152,"byte_end":16224226,"line_start":58,"line_end":58,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224231,"byte_end":16224303,"line_start":59,"line_end":59,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224308,"byte_end":16224381,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224386,"byte_end":16224429,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224434,"byte_end":16224437,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224442,"byte_end":16224515,"line_start":63,"line_end":63,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224520,"byte_end":16224583,"line_start":64,"line_end":64,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224588,"byte_end":16224663,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224668,"byte_end":16224743,"line_start":66,"line_end":66,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224748,"byte_end":16224771,"line_start":67,"line_end":67,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224776,"byte_end":16224779,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224784,"byte_end":16224856,"line_start":69,"line_end":69,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224861,"byte_end":16224935,"line_start":70,"line_end":70,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16224940,"byte_end":16225010,"line_start":71,"line_end":71,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225015,"byte_end":16225018,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225023,"byte_end":16225091,"line_start":73,"line_end":73,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225096,"byte_end":16225167,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225172,"byte_end":16225252,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225257,"byte_end":16225269,"line_start":76,"line_end":76,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225274,"byte_end":16225277,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225282,"byte_end":16225352,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225357,"byte_end":16225432,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225437,"byte_end":16225474,"line_start":80,"line_end":80,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225479,"byte_end":16225482,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225487,"byte_end":16225523,"line_start":82,"line_end":82,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225528,"byte_end":16225572,"line_start":83,"line_end":83,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225577,"byte_end":16225580,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225585,"byte_end":16225608,"line_start":85,"line_end":85,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225613,"byte_end":16225616,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225621,"byte_end":16225695,"line_start":87,"line_end":87,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225700,"byte_end":16225774,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225779,"byte_end":16225832,"line_start":89,"line_end":89,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225837,"byte_end":16225840,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225845,"byte_end":16225916,"line_start":91,"line_end":91,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225921,"byte_end":16225991,"line_start":92,"line_end":92,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16225996,"byte_end":16226012,"line_start":93,"line_end":93,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226017,"byte_end":16226020,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226025,"byte_end":16226038,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226043,"byte_end":16226061,"line_start":96,"line_end":96,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226066,"byte_end":16226071,"line_start":97,"line_end":97,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226076,"byte_end":16226102,"line_start":98,"line_end":98,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226107,"byte_end":16226144,"line_start":99,"line_end":99,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226149,"byte_end":16226154,"line_start":100,"line_end":100,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226159,"byte_end":16226180,"line_start":101,"line_end":101,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226185,"byte_end":16226190,"line_start":102,"line_end":102,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226195,"byte_end":16226225,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226230,"byte_end":16226244,"line_start":104,"line_end":104,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226249,"byte_end":16226280,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226285,"byte_end":16226318,"line_start":106,"line_end":106,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226323,"byte_end":16226326,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226331,"byte_end":16226424,"line_start":108,"line_end":108,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226429,"byte_end":16226447,"line_start":109,"line_end":109,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226452,"byte_end":16226455,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226460,"byte_end":16226532,"line_start":111,"line_end":111,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226537,"byte_end":16226597,"line_start":112,"line_end":112,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226602,"byte_end":16226654,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226659,"byte_end":16226721,"line_start":114,"line_end":114,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226726,"byte_end":16226793,"line_start":115,"line_end":115,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226798,"byte_end":16226801,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226806,"byte_end":16226834,"line_start":117,"line_end":117,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226839,"byte_end":16226848,"line_start":118,"line_end":118,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226853,"byte_end":16226858,"line_start":119,"line_end":119,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226863,"byte_end":16226870,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226875,"byte_end":16226878,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226883,"byte_end":16226952,"line_start":122,"line_end":122,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16226957,"byte_end":16226978,"line_start":123,"line_end":123,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228158,"byte_end":16228168,"line_start":144,"line_end":144,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227073,"byte_end":16227145,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227150,"byte_end":16227199,"line_start":127,"line_end":127,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227204,"byte_end":16227207,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227212,"byte_end":16227280,"line_start":129,"line_end":129,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227285,"byte_end":16227352,"line_start":130,"line_end":130,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227357,"byte_end":16227425,"line_start":131,"line_end":131,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream, or if you need to construct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227430,"byte_end":16227506,"line_start":132,"line_end":132,"column_start":5,"column_end":81}},{"value":"/ frames _across_ eof boundaries on sources that can be resumed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227511,"byte_end":16227577,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227582,"byte_end":16227585,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227590,"byte_end":16227658,"line_start":135,"line_end":135,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227663,"byte_end":16227738,"line_start":136,"line_end":136,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227743,"byte_end":16227818,"line_start":137,"line_end":137,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227823,"byte_end":16227895,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227900,"byte_end":16227942,"line_start":139,"line_end":139,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227947,"byte_end":16227950,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Once `None` has been returned, `decode_eof` won't be called again until","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16227955,"byte_end":16228030,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ an attempt to resume the stream has been made, where the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228035,"byte_end":16228113,"line_start":142,"line_end":142,"column_start":5,"column_end":83}},{"value":"/ actually returned more data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228118,"byte_end":16228150,"line_start":143,"line_end":143,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229776,"byte_end":16229782,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"fn framed<T>(Self, T) -> Framed<T, Self> where T: AsyncRead + AsyncWrite +\nSized, Self: Sized","parent":{"krate":0,"index":512},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228586,"byte_end":16228666,"line_start":157,"line_end":157,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228671,"byte_end":16228747,"line_start":158,"line_end":158,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228752,"byte_end":16228755,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228760,"byte_end":16228835,"line_start":160,"line_end":160,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228840,"byte_end":16228910,"line_start":161,"line_end":161,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228915,"byte_end":16228986,"line_start":162,"line_end":162,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16228991,"byte_end":16229063,"line_start":163,"line_end":163,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229068,"byte_end":16229126,"line_start":164,"line_end":164,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229131,"byte_end":16229134,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229139,"byte_end":16229208,"line_start":166,"line_end":166,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229213,"byte_end":16229288,"line_start":167,"line_end":167,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229293,"byte_end":16229369,"line_start":168,"line_end":168,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229374,"byte_end":16229396,"line_start":169,"line_end":169,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229401,"byte_end":16229404,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229409,"byte_end":16229482,"line_start":171,"line_end":171,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229487,"byte_end":16229560,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229565,"byte_end":16229641,"line_start":173,"line_end":173,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229646,"byte_end":16229649,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229654,"byte_end":16229690,"line_start":175,"line_end":175,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229695,"byte_end":16229727,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/decoder.rs","byte_start":16229732,"byte_end":16229768,"line_start":177,"line_end":177,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230116,"byte_end":16230123,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":532}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16229961,"byte_end":16230033,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230034,"byte_end":16230054,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230055,"byte_end":16230058,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230059,"byte_end":16230105,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":531},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230388,"byte_end":16230393,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230136,"byte_end":16230168,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230173,"byte_end":16230176,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230181,"byte_end":16230258,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230263,"byte_end":16230319,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230324,"byte_end":16230327,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230332,"byte_end":16230378,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230744,"byte_end":16230750,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230417,"byte_end":16230462,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230467,"byte_end":16230470,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230475,"byte_end":16230549,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230554,"byte_end":16230634,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230639,"byte_end":16230677,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230682,"byte_end":16230685,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/encoder.rs","byte_start":16230690,"byte_end":16230736,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":1724},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244390,"byte_end":16244396,"line_start":27,"line_end":27,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":1727}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246169,"byte_end":16246172,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244538,"byte_end":16244618,"line_start":37,"line_end":37,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244623,"byte_end":16244704,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244709,"byte_end":16244712,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244717,"byte_end":16244792,"line_start":40,"line_end":40,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244797,"byte_end":16244867,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244872,"byte_end":16244941,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244946,"byte_end":16245018,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245023,"byte_end":16245081,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245086,"byte_end":16245089,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245094,"byte_end":16245165,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245170,"byte_end":16245247,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245252,"byte_end":16245328,"line_start":48,"line_end":48,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245333,"byte_end":16245355,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245360,"byte_end":16245363,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245368,"byte_end":16245441,"line_start":51,"line_end":51,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245446,"byte_end":16245519,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245524,"byte_end":16245600,"line_start":53,"line_end":53,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245605,"byte_end":16245608,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that, for some byte sources, the stream can be resumed after an EOF","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245613,"byte_end":16245689,"line_start":55,"line_end":55,"column_start":5,"column_end":81}},{"value":"/ by reading from it, even after it has returned `None`. Repeated attempts","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245694,"byte_end":16245770,"line_start":56,"line_end":56,"column_start":5,"column_end":81}},{"value":"/ to do so, without new data available, continue to return `None` without","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245775,"byte_end":16245850,"line_start":57,"line_end":57,"column_start":5,"column_end":80}},{"value":"/ creating more (closing) frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245855,"byte_end":16245890,"line_start":58,"line_end":58,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245895,"byte_end":16245898,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245903,"byte_end":16245939,"line_start":60,"line_end":60,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245944,"byte_end":16245976,"line_start":61,"line_end":61,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16245981,"byte_end":16246018,"line_start":62,"line_end":62,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246023,"byte_end":16246061,"line_start":63,"line_end":63,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246066,"byte_end":16246157,"line_start":64,"line_end":64,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247780,"byte_end":16247793,"line_start":99,"line_end":99,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246385,"byte_end":16246465,"line_start":75,"line_end":75,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246470,"byte_end":16246551,"line_start":76,"line_end":76,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246556,"byte_end":16246605,"line_start":77,"line_end":77,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246610,"byte_end":16246613,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246618,"byte_end":16246693,"line_start":79,"line_end":79,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246698,"byte_end":16246768,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246773,"byte_end":16246842,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246847,"byte_end":16246919,"line_start":82,"line_end":82,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246924,"byte_end":16246982,"line_start":83,"line_end":83,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246987,"byte_end":16246990,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16246995,"byte_end":16247066,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247071,"byte_end":16247148,"line_start":86,"line_end":86,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247153,"byte_end":16247229,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247234,"byte_end":16247256,"line_start":88,"line_end":88,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247261,"byte_end":16247264,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247269,"byte_end":16247342,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247347,"byte_end":16247420,"line_start":91,"line_end":91,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247425,"byte_end":16247501,"line_start":92,"line_end":92,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247506,"byte_end":16247509,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247514,"byte_end":16247550,"line_start":94,"line_end":94,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247555,"byte_end":16247587,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247592,"byte_end":16247629,"line_start":96,"line_end":96,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247634,"byte_end":16247672,"line_start":97,"line_end":97,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16247677,"byte_end":16247768,"line_start":98,"line_end":98,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":709},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249940,"byte_end":16249950,"line_start":146,"line_end":146,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248363,"byte_end":16248443,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248448,"byte_end":16248529,"line_start":120,"line_end":120,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248534,"byte_end":16248537,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248542,"byte_end":16248617,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248622,"byte_end":16248692,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248697,"byte_end":16248768,"line_start":124,"line_end":124,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248773,"byte_end":16248845,"line_start":125,"line_end":125,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248850,"byte_end":16248908,"line_start":126,"line_end":126,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248913,"byte_end":16248916,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248921,"byte_end":16248992,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248997,"byte_end":16249074,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249079,"byte_end":16249155,"line_start":130,"line_end":130,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249160,"byte_end":16249182,"line_start":131,"line_end":131,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249187,"byte_end":16249190,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249195,"byte_end":16249274,"line_start":133,"line_end":133,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249279,"byte_end":16249356,"line_start":134,"line_end":134,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249361,"byte_end":16249364,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249369,"byte_end":16249442,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249447,"byte_end":16249520,"line_start":137,"line_end":137,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249525,"byte_end":16249601,"line_start":138,"line_end":138,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249606,"byte_end":16249609,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249614,"byte_end":16249650,"line_start":140,"line_end":140,"column_start":5,"column_end":41}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249655,"byte_end":16249687,"line_start":141,"line_end":141,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249692,"byte_end":16249730,"line_start":142,"line_end":142,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249735,"byte_end":16249773,"line_start":143,"line_end":143,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249778,"byte_end":16249832,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16249837,"byte_end":16249928,"line_start":145,"line_end":145,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250585,"byte_end":16250592,"line_start":165,"line_end":165,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250302,"byte_end":16250365,"line_start":159,"line_end":159,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250370,"byte_end":16250383,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250388,"byte_end":16250391,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250396,"byte_end":16250471,"line_start":162,"line_end":162,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250476,"byte_end":16250546,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250551,"byte_end":16250573,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250936,"byte_end":16250943,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250645,"byte_end":16250716,"line_start":169,"line_end":169,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250721,"byte_end":16250734,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250739,"byte_end":16250742,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250747,"byte_end":16250822,"line_start":172,"line_end":172,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250827,"byte_end":16250897,"line_start":173,"line_end":173,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16250902,"byte_end":16250924,"line_start":174,"line_end":174,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251306,"byte_end":16251317,"line_start":185,"line_end":185,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Framed<T, U>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251008,"byte_end":16251086,"line_start":179,"line_end":179,"column_start":5,"column_end":83}},{"value":"/ `Framed`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251091,"byte_end":16251104,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251109,"byte_end":16251112,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251117,"byte_end":16251192,"line_start":182,"line_end":182,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251197,"byte_end":16251267,"line_start":183,"line_end":183,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251272,"byte_end":16251294,"line_start":184,"line_end":184,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251664,"byte_end":16251669,"line_start":194,"line_end":194,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251413,"byte_end":16251471,"line_start":189,"line_end":189,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251476,"byte_end":16251489,"line_start":190,"line_end":190,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251494,"byte_end":16251497,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251502,"byte_end":16251576,"line_start":192,"line_end":192,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251581,"byte_end":16251652,"line_start":193,"line_end":193,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251981,"byte_end":16251990,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251722,"byte_end":16251788,"line_start":198,"line_end":198,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251793,"byte_end":16251806,"line_start":199,"line_end":199,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251811,"byte_end":16251814,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251819,"byte_end":16251893,"line_start":201,"line_end":201,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16251898,"byte_end":16251969,"line_start":202,"line_end":202,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252327,"byte_end":16252336,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"map_codec","qualname":"<Framed<T, U>>::map_codec","value":"fn map_codec<C, F>(Self, F) -> Framed<T, C> where F: FnOnce(U) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the codec `U` to `C`, preserving the read and write buffers\n wrapped by `Framed`.","sig":null,"attributes":[{"value":"/ Maps the codec `U` to `C`, preserving the read and write buffers","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252055,"byte_end":16252123,"line_start":207,"line_end":207,"column_start":5,"column_end":73}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252128,"byte_end":16252152,"line_start":208,"line_end":208,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252157,"byte_end":16252160,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252165,"byte_end":16252239,"line_start":210,"line_end":210,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252244,"byte_end":16252315,"line_start":211,"line_end":211,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253027,"byte_end":16253040,"line_start":232,"line_end":232,"column_start":12,"column_end":25},"name":"codec_pin_mut","qualname":"<Framed<T, U>>::codec_pin_mut","value":"fn codec_pin_mut(Pin<&mut Self>) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252768,"byte_end":16252834,"line_start":227,"line_end":227,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252839,"byte_end":16252852,"line_start":228,"line_end":228,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252857,"byte_end":16252860,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252865,"byte_end":16252939,"line_start":230,"line_end":230,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16252944,"byte_end":16253015,"line_start":231,"line_end":231,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253186,"byte_end":16253197,"line_start":237,"line_end":237,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253131,"byte_end":16253174,"line_start":236,"line_end":236,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253332,"byte_end":16253347,"line_start":242,"line_end":242,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<Framed<T, U>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253269,"byte_end":16253320,"line_start":241,"line_end":241,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":721},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253487,"byte_end":16253499,"line_start":247,"line_end":247,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<Framed<T, U>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253431,"byte_end":16253475,"line_start":246,"line_end":246,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":722},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253636,"byte_end":16253652,"line_start":252,"line_end":252,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<Framed<T, U>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253572,"byte_end":16253624,"line_start":251,"line_end":251,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":723},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254002,"byte_end":16254012,"line_start":261,"line_end":261,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253737,"byte_end":16253800,"line_start":256,"line_end":256,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253805,"byte_end":16253808,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253813,"byte_end":16253888,"line_start":258,"line_end":258,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253893,"byte_end":16253963,"line_start":259,"line_end":259,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16253968,"byte_end":16253990,"line_start":260,"line_end":260,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254384,"byte_end":16254394,"line_start":271,"line_end":271,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254062,"byte_end":16254136,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254141,"byte_end":16254182,"line_start":266,"line_end":266,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254187,"byte_end":16254190,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254195,"byte_end":16254270,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254275,"byte_end":16254345,"line_start":269,"line_end":269,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254350,"byte_end":16254372,"line_start":270,"line_end":270,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":729},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254847,"byte_end":16254856,"line_start":290,"line_end":290,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Framed<T, U> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":36,"index":96},"children":[],"decl_id":{"krate":36,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":735},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16255188,"byte_end":16255198,"line_start":304,"line_end":304,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":736},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16255336,"byte_end":16255346,"line_start":308,"line_end":308,"column_start":8,"column_end":18},"name":"start_send","qualname":"<Framed<T, U> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":737},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16255467,"byte_end":16255477,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":738},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16255615,"byte_end":16255625,"line_start":316,"line_end":316,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<Framed<T, U> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":742},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16255850,"byte_end":16255853,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Framed<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1202},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256368,"byte_end":16256379,"line_start":341,"line_end":341,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256053,"byte_end":16256124,"line_start":334,"line_end":334,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256125,"byte_end":16256197,"line_start":335,"line_end":335,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256198,"byte_end":16256258,"line_start":336,"line_end":336,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256259,"byte_end":16256262,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256263,"byte_end":16256299,"line_start":338,"line_end":338,"column_start":1,"column_end":37}},{"value":"allow(clippy :: manual_non_exhaustive)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256317,"byte_end":16256356,"line_start":340,"line_end":340,"column_start":1,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":1205},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256465,"byte_end":16256467,"line_start":343,"line_end":343,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256392,"byte_end":16256456,"line_start":342,"line_end":342,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":1206},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256499,"byte_end":16256504,"line_start":346,"line_end":346,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256477,"byte_end":16256490,"line_start":345,"line_end":345,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":1207},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256569,"byte_end":16256577,"line_start":349,"line_end":349,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256514,"byte_end":16256560,"line_start":348,"line_end":348,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":1208},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256664,"byte_end":16256673,"line_start":352,"line_end":352,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":1202},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256594,"byte_end":16256655,"line_start":351,"line_end":351,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":746},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256906,"byte_end":16256909,"line_start":361,"line_end":361,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256854,"byte_end":16256894,"line_start":360,"line_end":360,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":1683},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16257638,"byte_end":16257648,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":1686}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":797},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16257899,"byte_end":16257902,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16257831,"byte_end":16257887,"line_start":32,"line_end":32,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258250,"byte_end":16258263,"line_start":45,"line_end":45,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258134,"byte_end":16258216,"line_start":43,"line_end":43,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258221,"byte_end":16258238,"line_start":44,"line_end":44,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":802},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259017,"byte_end":16259024,"line_start":68,"line_end":68,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258730,"byte_end":16258793,"line_start":62,"line_end":62,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258798,"byte_end":16258815,"line_start":63,"line_end":63,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258820,"byte_end":16258823,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258828,"byte_end":16258903,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258908,"byte_end":16258978,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258983,"byte_end":16259005,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":803},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259372,"byte_end":16259379,"line_start":78,"line_end":78,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259077,"byte_end":16259148,"line_start":72,"line_end":72,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259153,"byte_end":16259170,"line_start":73,"line_end":73,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259175,"byte_end":16259178,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259183,"byte_end":16259258,"line_start":75,"line_end":75,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259263,"byte_end":16259333,"line_start":76,"line_end":76,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259338,"byte_end":16259360,"line_start":77,"line_end":77,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":804},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259746,"byte_end":16259757,"line_start":88,"line_end":88,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedRead<T, D>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259444,"byte_end":16259522,"line_start":82,"line_end":82,"column_start":5,"column_end":83}},{"value":"/ `FramedRead`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259527,"byte_end":16259544,"line_start":83,"line_end":83,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259549,"byte_end":16259552,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259557,"byte_end":16259632,"line_start":85,"line_end":85,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259637,"byte_end":16259707,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259712,"byte_end":16259734,"line_start":87,"line_end":87,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":805},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260122,"byte_end":16260132,"line_start":97,"line_end":97,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259853,"byte_end":16259920,"line_start":92,"line_end":92,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259925,"byte_end":16259928,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16259933,"byte_end":16260008,"line_start":94,"line_end":94,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260013,"byte_end":16260083,"line_start":95,"line_end":95,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260088,"byte_end":16260110,"line_start":96,"line_end":96,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260244,"byte_end":16260251,"line_start":102,"line_end":102,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260182,"byte_end":16260232,"line_start":101,"line_end":101,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":807},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260374,"byte_end":16260385,"line_start":107,"line_end":107,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260304,"byte_end":16260362,"line_start":106,"line_end":106,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260550,"byte_end":16260561,"line_start":113,"line_end":113,"column_start":12,"column_end":23},"name":"map_decoder","qualname":"<FramedRead<T, D>>::map_decoder","value":"fn map_decoder<C, F>(Self, F) -> FramedRead<T, C> where F: FnOnce(D) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the decoder `D` to `C`, preserving the read buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the decoder `D` to `C`, preserving the read buffer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260450,"byte_end":16260509,"line_start":111,"line_end":111,"column_start":5,"column_end":64}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16260514,"byte_end":16260538,"line_start":112,"line_end":112,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261077,"byte_end":16261092,"line_start":133,"line_end":133,"column_start":12,"column_end":27},"name":"decoder_pin_mut","qualname":"<FramedRead<T, D>>::decoder_pin_mut","value":"fn decoder_pin_mut(Pin<&mut Self>) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261007,"byte_end":16261065,"line_start":132,"line_end":132,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":812},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261238,"byte_end":16261249,"line_start":138,"line_end":138,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261183,"byte_end":16261226,"line_start":137,"line_end":137,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":813},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261379,"byte_end":16261394,"line_start":143,"line_end":143,"column_start":12,"column_end":27},"name":"read_buffer_mut","qualname":"<FramedRead<T, D>>::read_buffer_mut","value":"fn read_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the read buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261316,"byte_end":16261367,"line_start":142,"line_end":142,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":818},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261657,"byte_end":16261666,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedRead<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":36,"index":96},"children":[],"decl_id":{"krate":36,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":824},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261946,"byte_end":16261956,"line_start":168,"line_end":168,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":825},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16262110,"byte_end":16262120,"line_start":172,"line_end":172,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedRead<T, D> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16262257,"byte_end":16262267,"line_start":176,"line_end":176,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":827},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16262421,"byte_end":16262431,"line_start":180,"line_end":180,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedRead<T, D> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":831},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16262676,"byte_end":16262679,"line_start":190,"line_end":190,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedRead<T, D> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1642},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16263495,"byte_end":16263506,"line_start":19,"line_end":19,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":1645}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16263713,"byte_end":16263716,"line_start":30,"line_end":30,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16263644,"byte_end":16263701,"line_start":29,"line_end":29,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264274,"byte_end":16264281,"line_start":48,"line_end":48,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16263986,"byte_end":16264049,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264054,"byte_end":16264072,"line_start":43,"line_end":43,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264077,"byte_end":16264080,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264085,"byte_end":16264160,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264165,"byte_end":16264235,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264240,"byte_end":16264262,"line_start":47,"line_end":47,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264630,"byte_end":16264637,"line_start":58,"line_end":58,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264334,"byte_end":16264405,"line_start":52,"line_end":52,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264410,"byte_end":16264428,"line_start":53,"line_end":53,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264433,"byte_end":16264436,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264441,"byte_end":16264516,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264521,"byte_end":16264591,"line_start":56,"line_end":56,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264596,"byte_end":16264618,"line_start":57,"line_end":57,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":886},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265005,"byte_end":16265016,"line_start":68,"line_end":68,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<FramedWrite<T, E>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a pinned mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a pinned mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264702,"byte_end":16264780,"line_start":62,"line_end":62,"column_start":5,"column_end":83}},{"value":"/ `FramedWrite`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264785,"byte_end":16264803,"line_start":63,"line_end":63,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264808,"byte_end":16264811,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264816,"byte_end":16264891,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264896,"byte_end":16264966,"line_start":66,"line_end":66,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16264971,"byte_end":16264993,"line_start":67,"line_end":67,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265382,"byte_end":16265392,"line_start":77,"line_end":77,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265112,"byte_end":16265180,"line_start":72,"line_end":72,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265185,"byte_end":16265188,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265193,"byte_end":16265268,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265273,"byte_end":16265343,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265348,"byte_end":16265370,"line_start":76,"line_end":76,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":888},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265504,"byte_end":16265511,"line_start":82,"line_end":82,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying encoder.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265442,"byte_end":16265492,"line_start":81,"line_end":81,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":889},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265634,"byte_end":16265645,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265564,"byte_end":16265622,"line_start":86,"line_end":86,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":890},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265811,"byte_end":16265822,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"map_encoder","qualname":"<FramedWrite<T, E>>::map_encoder","value":"fn map_encoder<C, F>(Self, F) -> FramedWrite<T, C> where F: FnOnce(E) -> C","parent":null,"children":[],"decl_id":null,"docs":" Maps the encoder `E` to `C`, preserving the write buffer\n wrapped by `Framed`.\n","sig":null,"attributes":[{"value":"/ Maps the encoder `E` to `C`, preserving the write buffer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265710,"byte_end":16265770,"line_start":91,"line_end":91,"column_start":5,"column_end":65}},{"value":"/ wrapped by `Framed`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16265775,"byte_end":16265799,"line_start":92,"line_end":92,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16266340,"byte_end":16266355,"line_start":113,"line_end":113,"column_start":12,"column_end":27},"name":"encoder_pin_mut","qualname":"<FramedWrite<T, E>>::encoder_pin_mut","value":"fn encoder_pin_mut(Pin<&mut Self>) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying encoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying encoder.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16266270,"byte_end":16266328,"line_start":112,"line_end":112,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16266502,"byte_end":16266514,"line_start":118,"line_end":118,"column_start":12,"column_end":24},"name":"write_buffer","qualname":"<FramedWrite<T, E>>::write_buffer","value":"fn write_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the write buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16266446,"byte_end":16266490,"line_start":117,"line_end":117,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16266645,"byte_end":16266661,"line_start":123,"line_end":123,"column_start":12,"column_end":28},"name":"write_buffer_mut","qualname":"<FramedWrite<T, E>>::write_buffer_mut","value":"fn write_buffer_mut(&mut Self) -> &mut BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the write buffer.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the write buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16266581,"byte_end":16266633,"line_start":122,"line_end":122,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16266948,"byte_end":16266958,"line_start":137,"line_end":137,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16267096,"byte_end":16267106,"line_start":141,"line_end":141,"column_start":8,"column_end":18},"name":"start_send","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, I) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16267227,"byte_end":16267237,"line_start":145,"line_end":145,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":904},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16267375,"byte_end":16267385,"line_start":149,"line_end":149,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<FramedWrite<T, E> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16267667,"byte_end":16267676,"line_start":161,"line_end":161,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FramedWrite<T, D> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":36,"index":96},"children":[],"decl_id":{"krate":36,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16267916,"byte_end":16267919,"line_start":171,"line_end":171,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FramedWrite<T, U> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":917},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","parent":null,"children":[{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":928},{"krate":0,"index":931},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":938},{"krate":0,"index":941},{"krate":0,"index":942},{"krate":0,"index":945},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":957},{"krate":0,"index":958},{"krate":0,"index":961},{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":968},{"krate":0,"index":971},{"krate":0,"index":1214},{"krate":0,"index":1221},{"krate":0,"index":1223},{"krate":0,"index":1225},{"krate":0,"index":974},{"krate":0,"index":1226},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1239},{"krate":0,"index":1241},{"krate":0,"index":1243},{"krate":0,"index":976},{"krate":0,"index":983},{"krate":0,"index":987},{"krate":0,"index":991},{"krate":0,"index":993},{"krate":0,"index":1000},{"krate":0,"index":1021},{"krate":0,"index":1023},{"krate":0,"index":1025},{"krate":0,"index":1027}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"/ Frame a stream of bytes based on a length prefix","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268188,"byte_end":16268240,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268241,"byte_end":16268244,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268245,"byte_end":16268315,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/ frame head that specifies the length of the frame. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268316,"byte_end":16268374,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"/ `length_delimited` module provides utilities for handling the length","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268375,"byte_end":16268447,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ based framing. This allows the consumer to work with entire frames","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268448,"byte_end":16268518,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"/ without having to worry about buffering or other framing logic.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268519,"byte_end":16268586,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268587,"byte_end":16268590,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ # Getting started","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268591,"byte_end":16268612,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268613,"byte_end":16268616,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268617,"byte_end":16268692,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"/ is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268693,"byte_end":16268764,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ return a length delimited codec using default configuration values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268765,"byte_end":16268836,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268837,"byte_end":16268907,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"/ byte stream into a stream of frames.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268908,"byte_end":16268948,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268949,"byte_end":16268952,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268953,"byte_end":16268960,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16268961,"byte_end":16269004,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269005,"byte_end":16269063,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269064,"byte_end":16269067,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269068,"byte_end":16269123,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"/     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269124,"byte_end":16269166,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269167,"byte_end":16269172,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269173,"byte_end":16269225,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269226,"byte_end":16269231,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269232,"byte_end":16269254,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269255,"byte_end":16269262,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269263,"byte_end":16269266,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269267,"byte_end":16269339,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269340,"byte_end":16269411,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"/ payload length:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269412,"byte_end":16269431,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269432,"byte_end":16269435,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269436,"byte_end":16269447,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269448,"byte_end":16269497,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"/ | len: u32 |          frame payload         |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269498,"byte_end":16269547,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ +----------+--------------------------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269548,"byte_end":16269597,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269598,"byte_end":16269605,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269606,"byte_end":16269609,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ Specifically, given the following:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269610,"byte_end":16269648,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269649,"byte_end":16269652,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269653,"byte_end":16269660,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269661,"byte_end":16269704,"line_start":42,"line_end":42,"column_start":1,"column_end":44}},{"value":"/ use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269705,"byte_end":16269763,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269764,"byte_end":16269767,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ use futures::SinkExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269768,"byte_end":16269793,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"/ use bytes::Bytes;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269794,"byte_end":16269815,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269816,"byte_end":16269819,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269820,"byte_end":16269896,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"/ where","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269897,"byte_end":16269906,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"/     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269907,"byte_end":16269949,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"/ {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269950,"byte_end":16269955,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"/     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16269956,"byte_end":16270029,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/     let frame = Bytes::from(\"hello world\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270030,"byte_end":16270077,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270078,"byte_end":16270081,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/     transport.send(frame).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270082,"byte_end":16270119,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"/     Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270120,"byte_end":16270134,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270135,"byte_end":16270140,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270141,"byte_end":16270148,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270149,"byte_end":16270152,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The encoded frame will look like this:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270153,"byte_end":16270195,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270196,"byte_end":16270199,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270200,"byte_end":16270211,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"/ +---- len: u32 ----+---- data ----+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270212,"byte_end":16270251,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"/ | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270252,"byte_end":16270291,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"/ +------------------+--------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270292,"byte_end":16270331,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270332,"byte_end":16270339,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270340,"byte_end":16270343,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ # Decoding","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270344,"byte_end":16270358,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270359,"byte_end":16270362,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270363,"byte_end":16270438,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"/ such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270439,"byte_end":16270512,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"/ entire frame. There are many configuration parameters enabling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270513,"byte_end":16270579,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"/ [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270580,"byte_end":16270649,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"/ examples that will cover the various options at a high level.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270650,"byte_end":16270715,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270716,"byte_end":16270719,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ ## Example 1","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270720,"byte_end":16270736,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270737,"byte_end":16270740,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270741,"byte_end":16270817,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270818,"byte_end":16270859,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270860,"byte_end":16270863,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270864,"byte_end":16270871,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270872,"byte_end":16270903,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270904,"byte_end":16270954,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270955,"byte_end":16270996,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16270997,"byte_end":16271032,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271033,"byte_end":16271081,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271082,"byte_end":16271117,"line_start":87,"line_end":87,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271118,"byte_end":16271166,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0) // Do not strip frame header","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271167,"byte_end":16271216,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271217,"byte_end":16271239,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271240,"byte_end":16271247,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271248,"byte_end":16271270,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271271,"byte_end":16271278,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271279,"byte_end":16271282,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271283,"byte_end":16271331,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271332,"byte_end":16271335,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271336,"byte_end":16271347,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271348,"byte_end":16271400,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271401,"byte_end":16271466,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271467,"byte_end":16271532,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271533,"byte_end":16271598,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271599,"byte_end":16271606,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271607,"byte_end":16271610,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271611,"byte_end":16271687,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"/ of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271688,"byte_end":16271762,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"/ the length field represents the number of bytes that **follows** the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271763,"byte_end":16271835,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"/ length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271836,"byte_end":16271912,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"/ frame head + 11 bytes for the payload.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271913,"byte_end":16271955,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271956,"byte_end":16271959,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ ## Example 2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271960,"byte_end":16271976,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271977,"byte_end":16271980,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16271981,"byte_end":16272056,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"/ frame head in the yielded `BytesMut`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272057,"byte_end":16272098,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272099,"byte_end":16272102,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272103,"byte_end":16272110,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272111,"byte_end":16272142,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272143,"byte_end":16272193,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272194,"byte_end":16272235,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272236,"byte_end":16272271,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272272,"byte_end":16272320,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272321,"byte_end":16272356,"line_start":121,"line_end":121,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(0)   // default value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272357,"byte_end":16272405,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"/     // `num_skip` is not needed, the default is to skip","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272406,"byte_end":16272465,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272466,"byte_end":16272488,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272489,"byte_end":16272496,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272497,"byte_end":16272519,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272520,"byte_end":16272527,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272528,"byte_end":16272531,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272532,"byte_end":16272580,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272581,"byte_end":16272584,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272585,"byte_end":16272596,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"/          INPUT                        DECODED","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272597,"byte_end":16272646,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"/ +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272647,"byte_end":16272701,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"/ | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272702,"byte_end":16272756,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"/ +----------+---------------+     +---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272757,"byte_end":16272811,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272812,"byte_end":16272819,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272820,"byte_end":16272823,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"/ This is similar to the first example, the only difference is that the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272824,"byte_end":16272897,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"/ frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272898,"byte_end":16272965,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272966,"byte_end":16272969,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ ## Example 3","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272970,"byte_end":16272986,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272987,"byte_end":16272990,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16272991,"byte_end":16273067,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"/ frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273068,"byte_end":16273140,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"/ **includes** the frame head length.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273141,"byte_end":16273180,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273181,"byte_end":16273184,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273185,"byte_end":16273192,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273193,"byte_end":16273224,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273225,"byte_end":16273275,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273276,"byte_end":16273317,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273318,"byte_end":16273353,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273354,"byte_end":16273402,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273403,"byte_end":16273438,"line_start":153,"line_end":153,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-2)  // size of head","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273439,"byte_end":16273486,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273487,"byte_end":16273507,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273508,"byte_end":16273530,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273531,"byte_end":16273538,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273539,"byte_end":16273561,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273562,"byte_end":16273569,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273570,"byte_end":16273573,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273574,"byte_end":16273622,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273623,"byte_end":16273626,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273627,"byte_end":16273638,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"/          INPUT                           DECODED","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273639,"byte_end":16273691,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"/ +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273692,"byte_end":16273757,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"/ | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273758,"byte_end":16273823,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"/ +----------+---------------+     +----------+---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273824,"byte_end":16273889,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273890,"byte_end":16273897,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273898,"byte_end":16273901,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ In most cases, the length field represents the length of the payload","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273902,"byte_end":16273974,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"/ only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16273975,"byte_end":16274050,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"/ length field represents the length of the whole frame, including the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274051,"byte_end":16274123,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"/ head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274124,"byte_end":16274200,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"/ the value provided in the frame head to represent the payload length.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274201,"byte_end":16274274,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274275,"byte_end":16274278,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ ## Example 4","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274279,"byte_end":16274295,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274296,"byte_end":16274299,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274300,"byte_end":16274374,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"/ frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274375,"byte_end":16274442,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274443,"byte_end":16274446,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274447,"byte_end":16274454,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274455,"byte_end":16274486,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274487,"byte_end":16274537,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274538,"byte_end":16274579,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274580,"byte_end":16274615,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274616,"byte_end":16274664,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274665,"byte_end":16274696,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(2)  // remaining head","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274697,"byte_end":16274745,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274746,"byte_end":16274766,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274767,"byte_end":16274789,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274790,"byte_end":16274797,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274798,"byte_end":16274820,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274821,"byte_end":16274828,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274829,"byte_end":16274832,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274833,"byte_end":16274881,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274882,"byte_end":16274885,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274886,"byte_end":16274897,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274898,"byte_end":16274924,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274925,"byte_end":16274970,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16274971,"byte_end":16275016,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275017,"byte_end":16275062,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275063,"byte_end":16275066,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"/                  DECODED","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275067,"byte_end":16275095,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"/ +---- len -----+- head -+--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275096,"byte_end":16275141,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"/ | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275142,"byte_end":16275187,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"/ +--------------+--------+---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275188,"byte_end":16275233,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275234,"byte_end":16275241,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275242,"byte_end":16275245,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ A more advanced example that shows a case where there is extra frame","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275246,"byte_end":16275318,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"/ head data between the length field and the payload. In such cases, it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275319,"byte_end":16275395,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"/ usually desirable to include the frame head as part of the yielded","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275396,"byte_end":16275466,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"/ `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275467,"byte_end":16275536,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"/ process the frame head as needed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275537,"byte_end":16275574,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275575,"byte_end":16275578,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"/ The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275579,"byte_end":16275653,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"/ additional head into the frame length calculation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275654,"byte_end":16275708,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275709,"byte_end":16275712,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ ## Example 5","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275713,"byte_end":16275729,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275730,"byte_end":16275733,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275734,"byte_end":16275807,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275808,"byte_end":16275884,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275885,"byte_end":16275959,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"/ included.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275960,"byte_end":16275973,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275974,"byte_end":16275977,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275978,"byte_end":16275985,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16275986,"byte_end":16276017,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276018,"byte_end":16276068,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276069,"byte_end":16276110,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276111,"byte_end":16276146,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276147,"byte_end":16276196,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276197,"byte_end":16276232,"line_start":231,"line_end":231,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(1)  // length of hdr2","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276233,"byte_end":16276281,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"/     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276282,"byte_end":16276326,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276327,"byte_end":16276349,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276350,"byte_end":16276357,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276358,"byte_end":16276380,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276381,"byte_end":16276388,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276389,"byte_end":16276392,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276393,"byte_end":16276441,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276442,"byte_end":16276445,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276446,"byte_end":16276457,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276458,"byte_end":16276484,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276485,"byte_end":16276535,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276536,"byte_end":16276586,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276587,"byte_end":16276637,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276638,"byte_end":16276641,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276642,"byte_end":16276662,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276663,"byte_end":16276693,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276694,"byte_end":16276724,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276725,"byte_end":16276755,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276756,"byte_end":16276763,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276764,"byte_end":16276767,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"/ The length field is situated in the middle of the frame head. In this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276768,"byte_end":16276841,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"/ case, the first byte in the frame head could be a version or some other","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276842,"byte_end":16276917,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"/ identifier that is not needed for processing. On the other hand, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276918,"byte_end":16276990,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"/ second half of the head is needed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16276991,"byte_end":16277029,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277030,"byte_end":16277033,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277034,"byte_end":16277108,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"/ to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277109,"byte_end":16277185,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"/ skip starting at the end of the length field. In this case, it is the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277186,"byte_end":16277259,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"/ second half of the head.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277260,"byte_end":16277288,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277289,"byte_end":16277292,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ ## Example 6","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277293,"byte_end":16277309,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277310,"byte_end":16277313,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"/ The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277314,"byte_end":16277387,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"/ frame head. The first byte and the length field will be omitted from the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277388,"byte_end":16277464,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"/ yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277465,"byte_end":16277539,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"/ included. In this case, the length field **includes** the frame head","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277540,"byte_end":16277612,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"/ length.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277613,"byte_end":16277624,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277625,"byte_end":16277628,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277629,"byte_end":16277636,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277637,"byte_end":16277668,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277669,"byte_end":16277719,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277720,"byte_end":16277761,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277762,"byte_end":16277797,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(1) // length of hdr1","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277798,"byte_end":16277847,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277848,"byte_end":16277883,"line_start":277,"line_end":277,"column_start":1,"column_end":36}},{"value":"/     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277884,"byte_end":16277949,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"/     .num_skip(3)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277950,"byte_end":16277970,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277971,"byte_end":16277993,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16277994,"byte_end":16278001,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278002,"byte_end":16278009,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278010,"byte_end":16278013,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278014,"byte_end":16278062,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278063,"byte_end":16278066,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278067,"byte_end":16278078,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"/                  INPUT","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278079,"byte_end":16278105,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"/ +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278106,"byte_end":16278156,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"/ |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278157,"byte_end":16278207,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"/ +--------+----------+--------+---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278208,"byte_end":16278258,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278259,"byte_end":16278262,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/          DECODED","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278263,"byte_end":16278283,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"/ +- hdr2 -+--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278284,"byte_end":16278314,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"/ |  \\xFE  |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278315,"byte_end":16278345,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"/ +--------+---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278346,"byte_end":16278376,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278377,"byte_end":16278384,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278385,"byte_end":16278388,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ Similar to the example above, the difference is that the length field","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278389,"byte_end":16278462,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"/ represents the length of the entire frame instead of just the payload.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278463,"byte_end":16278537,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"/ The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278538,"byte_end":16278612,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"/ Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278613,"byte_end":16278686,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"/ anywhere because it already is factored into the total frame length that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278687,"byte_end":16278763,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"/ is read from the byte stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278764,"byte_end":16278797,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278798,"byte_end":16278801,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ ## Example 7","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278802,"byte_end":16278818,"line_start":305,"line_end":305,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278819,"byte_end":16278822,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"/ The following will parse a 3 byte length field at offset 0 in a 4 byte","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278823,"byte_end":16278897,"line_start":307,"line_end":307,"column_start":1,"column_end":75}},{"value":"/ frame head, excluding the 4th byte from the yielded `BytesMut`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278898,"byte_end":16278965,"line_start":308,"line_end":308,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278966,"byte_end":16278969,"line_start":309,"line_end":309,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278970,"byte_end":16278977,"line_start":310,"line_end":310,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16278978,"byte_end":16279009,"line_start":311,"line_end":311,"column_start":1,"column_end":32}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279010,"byte_end":16279060,"line_start":312,"line_end":312,"column_start":1,"column_end":51}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279061,"byte_end":16279102,"line_start":313,"line_end":313,"column_start":1,"column_end":42}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279103,"byte_end":16279138,"line_start":314,"line_end":314,"column_start":1,"column_end":36}},{"value":"/     .length_field_offset(0) // default value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279139,"byte_end":16279187,"line_start":315,"line_end":315,"column_start":1,"column_end":49}},{"value":"/     .length_field_length(3)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279188,"byte_end":16279219,"line_start":316,"line_end":316,"column_start":1,"column_end":32}},{"value":"/     .length_adjustment(0)  // default value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279220,"byte_end":16279267,"line_start":317,"line_end":317,"column_start":1,"column_end":48}},{"value":"/     .num_skip(4) // skip the first 4 bytes","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279268,"byte_end":16279314,"line_start":318,"line_end":318,"column_start":1,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279315,"byte_end":16279337,"line_start":319,"line_end":319,"column_start":1,"column_end":23}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279338,"byte_end":16279345,"line_start":320,"line_end":320,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279346,"byte_end":16279368,"line_start":321,"line_end":321,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279369,"byte_end":16279376,"line_start":322,"line_end":322,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279377,"byte_end":16279380,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ The following frame will be decoded as such:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279381,"byte_end":16279429,"line_start":324,"line_end":324,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279430,"byte_end":16279433,"line_start":325,"line_end":325,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279434,"byte_end":16279445,"line_start":326,"line_end":326,"column_start":1,"column_end":12}},{"value":"/                  INPUT                       DECODED","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279446,"byte_end":16279502,"line_start":327,"line_end":327,"column_start":1,"column_end":57}},{"value":"/ +------- len ------+--- Payload ---+    +--- Payload ---+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279503,"byte_end":16279564,"line_start":328,"line_end":328,"column_start":1,"column_end":62}},{"value":"/ | \\x00\\x00\\x0B\\xFF |  Hello world  | => |  Hello world  |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279565,"byte_end":16279626,"line_start":329,"line_end":329,"column_start":1,"column_end":62}},{"value":"/ +------------------+---------------+    +---------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279627,"byte_end":16279688,"line_start":330,"line_end":330,"column_start":1,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279689,"byte_end":16279696,"line_start":331,"line_end":331,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279697,"byte_end":16279700,"line_start":332,"line_end":332,"column_start":1,"column_end":4}},{"value":"/ A simple example where there are unused bytes between the length field","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279701,"byte_end":16279775,"line_start":333,"line_end":333,"column_start":1,"column_end":75}},{"value":"/ and the payload.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279776,"byte_end":16279796,"line_start":334,"line_end":334,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279797,"byte_end":16279800,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"/ # Encoding","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279801,"byte_end":16279815,"line_start":336,"line_end":336,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279816,"byte_end":16279819,"line_start":337,"line_end":337,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279820,"byte_end":16279895,"line_start":338,"line_end":338,"column_start":1,"column_end":76}},{"value":"/ such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279896,"byte_end":16279968,"line_start":339,"line_end":339,"column_start":1,"column_end":73}},{"value":"/ There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16279969,"byte_end":16280037,"line_start":340,"line_end":340,"column_start":1,"column_end":69}},{"value":"/ protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280038,"byte_end":16280114,"line_start":341,"line_end":341,"column_start":1,"column_end":77}},{"value":"/ be written by hand using [`Encoder`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280115,"byte_end":16280156,"line_start":342,"line_end":342,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280157,"byte_end":16280160,"line_start":343,"line_end":343,"column_start":1,"column_end":4}},{"value":"/ Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280161,"byte_end":16280231,"line_start":344,"line_end":344,"column_start":1,"column_end":71}},{"value":"/ configuration:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280232,"byte_end":16280250,"line_start":345,"line_end":345,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280251,"byte_end":16280254,"line_start":346,"line_end":346,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280255,"byte_end":16280262,"line_start":347,"line_end":347,"column_start":1,"column_end":8}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280263,"byte_end":16280295,"line_start":348,"line_end":348,"column_start":1,"column_end":33}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280296,"byte_end":16280346,"line_start":349,"line_end":349,"column_start":1,"column_end":51}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280347,"byte_end":16280391,"line_start":350,"line_end":350,"column_start":1,"column_end":45}},{"value":"/ # let _ =","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280392,"byte_end":16280405,"line_start":351,"line_end":351,"column_start":1,"column_end":14}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280406,"byte_end":16280441,"line_start":352,"line_end":352,"column_start":1,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280442,"byte_end":16280477,"line_start":353,"line_end":353,"column_start":1,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280478,"byte_end":16280501,"line_start":354,"line_end":354,"column_start":1,"column_end":24}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280502,"byte_end":16280509,"line_start":355,"line_end":355,"column_start":1,"column_end":8}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280510,"byte_end":16280532,"line_start":356,"line_end":356,"column_start":1,"column_end":23}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280533,"byte_end":16280540,"line_start":357,"line_end":357,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280541,"byte_end":16280544,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ A payload of `hello world` will be encoded as:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280545,"byte_end":16280595,"line_start":359,"line_end":359,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280596,"byte_end":16280599,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ ```text","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280600,"byte_end":16280611,"line_start":361,"line_end":361,"column_start":1,"column_end":12}},{"value":"/ +- len: u16 -+---- data ----+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280612,"byte_end":16280645,"line_start":362,"line_end":362,"column_start":1,"column_end":34}},{"value":"/ |  \\x00\\x0b  |  hello world |","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280646,"byte_end":16280679,"line_start":363,"line_end":363,"column_start":1,"column_end":34}},{"value":"/ +------------+--------------+","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280680,"byte_end":16280713,"line_start":364,"line_end":364,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280714,"byte_end":16280721,"line_start":365,"line_end":365,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280722,"byte_end":16280725,"line_start":366,"line_end":366,"column_start":1,"column_end":4}},{"value":"/ [`LengthDelimitedCodec::new()`]: method@LengthDelimitedCodec::new","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280726,"byte_end":16280795,"line_start":367,"line_end":367,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]: struct@FramedRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280796,"byte_end":16280833,"line_start":368,"line_end":368,"column_start":1,"column_end":38}},{"value":"/ [`FramedWrite`]: struct@FramedWrite","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280834,"byte_end":16280873,"line_start":369,"line_end":369,"column_start":1,"column_end":40}},{"value":"/ [`AsyncRead`]: trait@tokio::io::AsyncRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280874,"byte_end":16280919,"line_start":370,"line_end":370,"column_start":1,"column_end":46}},{"value":"/ [`AsyncWrite`]: trait@tokio::io::AsyncWrite","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280920,"byte_end":16280967,"line_start":371,"line_end":371,"column_start":1,"column_end":48}},{"value":"/ [`Encoder`]: trait@Encoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280968,"byte_end":16280998,"line_start":372,"line_end":372,"column_start":1,"column_end":31}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16280999,"byte_end":16281032,"line_start":373,"line_end":373,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1214},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16281599,"byte_end":16281606,"line_start":390,"line_end":390,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":1215},{"krate":0,"index":1216},{"krate":0,"index":1217},{"krate":0,"index":1218},{"krate":0,"index":1219},{"krate":0,"index":1220}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16281281,"byte_end":16281336,"line_start":384,"line_end":384,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16281337,"byte_end":16281340,"line_start":385,"line_end":385,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16281341,"byte_end":16281416,"line_start":386,"line_end":386,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16281417,"byte_end":16281497,"line_start":387,"line_end":387,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16281498,"byte_end":16281557,"line_start":388,"line_end":388,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":974},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282277,"byte_end":16282302,"line_start":412,"line_end":412,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":975}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282192,"byte_end":16282265,"line_start":411,"line_end":411,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":1226},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282654,"byte_end":16282674,"line_start":425,"line_end":425,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282323,"byte_end":16282397,"line_start":416,"line_end":416,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282398,"byte_end":16282401,"line_start":417,"line_end":417,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282402,"byte_end":16282481,"line_start":418,"line_end":418,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282482,"byte_end":16282525,"line_start":419,"line_end":419,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282526,"byte_end":16282529,"line_start":420,"line_end":420,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282530,"byte_end":16282583,"line_start":421,"line_end":421,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282584,"byte_end":16282587,"line_start":422,"line_end":422,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282588,"byte_end":16282618,"line_start":423,"line_end":423,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":977},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283018,"byte_end":16283021,"line_start":443,"line_end":443,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282927,"byte_end":16283006,"line_start":442,"line_end":442,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":978},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283248,"byte_end":16283255,"line_start":452,"line_end":452,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283145,"byte_end":16283220,"line_start":450,"line_end":450,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283225,"byte_end":16283236,"line_start":451,"line_end":451,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283477,"byte_end":16283493,"line_start":460,"line_end":460,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283305,"byte_end":16283346,"line_start":456,"line_end":456,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283351,"byte_end":16283354,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283359,"byte_end":16283432,"line_start":458,"line_end":458,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283437,"byte_end":16283465,"line_start":459,"line_end":459,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":980},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283914,"byte_end":16283934,"line_start":470,"line_end":470,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283558,"byte_end":16283592,"line_start":464,"line_end":464,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283597,"byte_end":16283600,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283605,"byte_end":16283675,"line_start":466,"line_end":466,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283680,"byte_end":16283755,"line_start":467,"line_end":467,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283760,"byte_end":16283832,"line_start":468,"line_end":468,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16283837,"byte_end":16283902,"line_start":469,"line_end":469,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":986},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16286339,"byte_end":16286345,"line_start":553,"line_end":553,"column_start":8,"column_end":14},"name":"decode","qualname":"<LengthDelimitedCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> io::Result<Option<BytesMut>>","parent":{"krate":0,"index":512},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":989},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16287219,"byte_end":16287225,"line_start":583,"line_end":583,"column_start":8,"column_end":14},"name":"encode","qualname":"<LengthDelimitedCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, Bytes, &mut BytesMut) -> Result<(), io::Error>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":992},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16288551,"byte_end":16288558,"line_start":625,"line_end":625,"column_start":8,"column_end":15},"name":"default","qualname":"<LengthDelimitedCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":994},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16288723,"byte_end":16288738,"line_start":634,"line_end":634,"column_start":15,"column_end":30},"name":"LengthFieldType","qualname":"::codec::length_delimited::builder::LengthFieldType","value":"LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Types that can be used with `Builder::length_field_type`.\n","sig":null,"attributes":[{"value":"/ Types that can be used with `Builder::length_field_type`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16288647,"byte_end":16288708,"line_start":633,"line_end":633,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1001},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289663,"byte_end":16289666,"line_start":670,"line_end":670,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289117,"byte_end":16289192,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289197,"byte_end":16289208,"line_start":652,"line_end":652,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289213,"byte_end":16289216,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289221,"byte_end":16289235,"line_start":654,"line_end":654,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289240,"byte_end":16289243,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289248,"byte_end":16289255,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289260,"byte_end":16289291,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289296,"byte_end":16289344,"line_start":658,"line_end":658,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289349,"byte_end":16289352,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289357,"byte_end":16289398,"line_start":660,"line_end":660,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289403,"byte_end":16289438,"line_start":661,"line_end":661,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289443,"byte_end":16289474,"line_start":662,"line_end":662,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289479,"byte_end":16289514,"line_start":663,"line_end":663,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289519,"byte_end":16289548,"line_start":664,"line_end":664,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289553,"byte_end":16289573,"line_start":665,"line_end":665,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289578,"byte_end":16289600,"line_start":666,"line_end":666,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289605,"byte_end":16289612,"line_start":667,"line_end":667,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289617,"byte_end":16289639,"line_start":668,"line_end":668,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289644,"byte_end":16289651,"line_start":669,"line_end":669,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1002},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290851,"byte_end":16290861,"line_start":711,"line_end":711,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290330,"byte_end":16290379,"line_start":692,"line_end":692,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290384,"byte_end":16290387,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290392,"byte_end":16290424,"line_start":694,"line_end":694,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290429,"byte_end":16290432,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290437,"byte_end":16290505,"line_start":696,"line_end":696,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290510,"byte_end":16290513,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290518,"byte_end":16290532,"line_start":698,"line_end":698,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290537,"byte_end":16290540,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290545,"byte_end":16290552,"line_start":700,"line_end":700,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290557,"byte_end":16290588,"line_start":701,"line_end":701,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290593,"byte_end":16290641,"line_start":702,"line_end":702,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290646,"byte_end":16290649,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290654,"byte_end":16290695,"line_start":704,"line_end":704,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290700,"byte_end":16290735,"line_start":705,"line_end":705,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290740,"byte_end":16290761,"line_start":706,"line_end":706,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290766,"byte_end":16290788,"line_start":707,"line_end":707,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290793,"byte_end":16290800,"line_start":708,"line_end":708,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290805,"byte_end":16290827,"line_start":709,"line_end":709,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290832,"byte_end":16290839,"line_start":710,"line_end":710,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1003},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291493,"byte_end":16291506,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16290960,"byte_end":16291012,"line_start":716,"line_end":716,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291017,"byte_end":16291020,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291025,"byte_end":16291063,"line_start":718,"line_end":718,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291068,"byte_end":16291071,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291076,"byte_end":16291144,"line_start":720,"line_end":720,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291149,"byte_end":16291152,"line_start":721,"line_end":721,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291157,"byte_end":16291171,"line_start":722,"line_end":722,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291176,"byte_end":16291179,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291184,"byte_end":16291191,"line_start":724,"line_end":724,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291196,"byte_end":16291227,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291232,"byte_end":16291280,"line_start":726,"line_end":726,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291285,"byte_end":16291288,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291293,"byte_end":16291334,"line_start":728,"line_end":728,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291339,"byte_end":16291374,"line_start":729,"line_end":729,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291379,"byte_end":16291403,"line_start":730,"line_end":730,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291408,"byte_end":16291430,"line_start":731,"line_end":731,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291435,"byte_end":16291442,"line_start":732,"line_end":732,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291447,"byte_end":16291469,"line_start":733,"line_end":733,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291474,"byte_end":16291481,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1004},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292139,"byte_end":16292152,"line_start":759,"line_end":759,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291606,"byte_end":16291658,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291663,"byte_end":16291666,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291671,"byte_end":16291709,"line_start":742,"line_end":742,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291714,"byte_end":16291717,"line_start":743,"line_end":743,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291722,"byte_end":16291790,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291795,"byte_end":16291798,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291803,"byte_end":16291817,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291822,"byte_end":16291825,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291830,"byte_end":16291837,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291842,"byte_end":16291873,"line_start":749,"line_end":749,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291878,"byte_end":16291926,"line_start":750,"line_end":750,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291931,"byte_end":16291934,"line_start":751,"line_end":751,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291939,"byte_end":16291980,"line_start":752,"line_end":752,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16291985,"byte_end":16292020,"line_start":753,"line_end":753,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292025,"byte_end":16292049,"line_start":754,"line_end":754,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292054,"byte_end":16292076,"line_start":755,"line_end":755,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292081,"byte_end":16292088,"line_start":756,"line_end":756,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292093,"byte_end":16292115,"line_start":757,"line_end":757,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292120,"byte_end":16292127,"line_start":758,"line_end":758,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1005},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293249,"byte_end":16293265,"line_start":793,"line_end":793,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length in bytes","sig":null,"attributes":[{"value":"/ Sets the max frame length in bytes","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292321,"byte_end":16292359,"line_start":767,"line_end":767,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292364,"byte_end":16292367,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292372,"byte_end":16292444,"line_start":769,"line_end":769,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292449,"byte_end":16292474,"line_start":770,"line_end":770,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292479,"byte_end":16292482,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292487,"byte_end":16292559,"line_start":772,"line_end":772,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292564,"byte_end":16292633,"line_start":773,"line_end":773,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292638,"byte_end":16292711,"line_start":774,"line_end":774,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292716,"byte_end":16292728,"line_start":775,"line_end":775,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292733,"byte_end":16292736,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292741,"byte_end":16292816,"line_start":777,"line_end":777,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292821,"byte_end":16292882,"line_start":778,"line_end":778,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292887,"byte_end":16292890,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292895,"byte_end":16292909,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292914,"byte_end":16292917,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292922,"byte_end":16292929,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292934,"byte_end":16292965,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16292970,"byte_end":16293018,"line_start":784,"line_end":784,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293023,"byte_end":16293026,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293031,"byte_end":16293072,"line_start":786,"line_end":786,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293077,"byte_end":16293112,"line_start":787,"line_end":787,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024 * 1024)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293117,"byte_end":16293159,"line_start":788,"line_end":788,"column_start":5,"column_end":47}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293164,"byte_end":16293186,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293191,"byte_end":16293198,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293203,"byte_end":16293225,"line_start":791,"line_end":791,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293230,"byte_end":16293237,"line_start":792,"line_end":792,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294364,"byte_end":16294381,"line_start":830,"line_end":830,"column_start":12,"column_end":29},"name":"length_field_type","qualname":"<Builder>::length_field_type","value":"fn length_field_type<T>(&mut Self) -> &mut Self where\nT: builder::LengthFieldType","parent":null,"children":[],"decl_id":null,"docs":" Sets the unsigned integer type used to represent the length field.","sig":null,"attributes":[{"value":"/ Sets the unsigned integer type used to represent the length field.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293362,"byte_end":16293432,"line_start":798,"line_end":798,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293437,"byte_end":16293440,"line_start":799,"line_end":799,"column_start":5,"column_end":8}},{"value":"/ The default type is [`u32`]. The max type is [`u64`] (or [`usize`] on","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293445,"byte_end":16293518,"line_start":800,"line_end":800,"column_start":5,"column_end":78}},{"value":"/ 64-bit targets).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293523,"byte_end":16293543,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293548,"byte_end":16293551,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293556,"byte_end":16293570,"line_start":803,"line_end":803,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293575,"byte_end":16293578,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293583,"byte_end":16293590,"line_start":805,"line_end":805,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293595,"byte_end":16293626,"line_start":806,"line_end":806,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293631,"byte_end":16293679,"line_start":807,"line_end":807,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293684,"byte_end":16293687,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293692,"byte_end":16293733,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293738,"byte_end":16293773,"line_start":810,"line_end":810,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u32>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293778,"byte_end":16293813,"line_start":811,"line_end":811,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293818,"byte_end":16293840,"line_start":812,"line_end":812,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293845,"byte_end":16293852,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293857,"byte_end":16293879,"line_start":814,"line_end":814,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293884,"byte_end":16293891,"line_start":815,"line_end":815,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293896,"byte_end":16293899,"line_start":816,"line_end":816,"column_start":5,"column_end":8}},{"value":"/ Unlike [`Builder::length_field_length`], this does not fail at runtime","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293904,"byte_end":16293978,"line_start":817,"line_end":817,"column_start":5,"column_end":79}},{"value":"/ and instead produces a compile error:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16293983,"byte_end":16294024,"line_start":818,"line_end":818,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294029,"byte_end":16294032,"line_start":819,"line_end":819,"column_start":5,"column_end":8}},{"value":"/ ```compile_fail","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294037,"byte_end":16294056,"line_start":820,"line_end":820,"column_start":5,"column_end":24}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294061,"byte_end":16294092,"line_start":821,"line_end":821,"column_start":5,"column_end":36}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294097,"byte_end":16294147,"line_start":822,"line_end":822,"column_start":5,"column_end":55}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294152,"byte_end":16294193,"line_start":823,"line_end":823,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294198,"byte_end":16294233,"line_start":824,"line_end":824,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u128>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294238,"byte_end":16294274,"line_start":825,"line_end":825,"column_start":5,"column_end":41}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294279,"byte_end":16294301,"line_start":826,"line_end":826,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294306,"byte_end":16294313,"line_start":827,"line_end":827,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294318,"byte_end":16294340,"line_start":828,"line_end":828,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294345,"byte_end":16294352,"line_start":829,"line_end":829,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295066,"byte_end":16295085,"line_start":853,"line_end":853,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294502,"byte_end":16294565,"line_start":834,"line_end":834,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294570,"byte_end":16294573,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294578,"byte_end":16294629,"line_start":836,"line_end":836,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294634,"byte_end":16294637,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294642,"byte_end":16294710,"line_start":838,"line_end":838,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294715,"byte_end":16294718,"line_start":839,"line_end":839,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294723,"byte_end":16294737,"line_start":840,"line_end":840,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294742,"byte_end":16294745,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294750,"byte_end":16294757,"line_start":842,"line_end":842,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294762,"byte_end":16294793,"line_start":843,"line_end":843,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294798,"byte_end":16294846,"line_start":844,"line_end":844,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294851,"byte_end":16294854,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294859,"byte_end":16294900,"line_start":846,"line_end":846,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294905,"byte_end":16294940,"line_start":847,"line_end":847,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294945,"byte_end":16294976,"line_start":848,"line_end":848,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16294981,"byte_end":16295003,"line_start":849,"line_end":849,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295008,"byte_end":16295015,"line_start":850,"line_end":850,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295020,"byte_end":16295042,"line_start":851,"line_end":851,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295047,"byte_end":16295054,"line_start":852,"line_end":852,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1009},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295744,"byte_end":16295763,"line_start":876,"line_end":876,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295254,"byte_end":16295320,"line_start":859,"line_end":859,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295325,"byte_end":16295328,"line_start":860,"line_end":860,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295333,"byte_end":16295388,"line_start":861,"line_end":861,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295393,"byte_end":16295396,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295401,"byte_end":16295415,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295420,"byte_end":16295423,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295428,"byte_end":16295435,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295440,"byte_end":16295471,"line_start":866,"line_end":866,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295476,"byte_end":16295524,"line_start":867,"line_end":867,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295529,"byte_end":16295532,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295537,"byte_end":16295578,"line_start":869,"line_end":869,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295583,"byte_end":16295618,"line_start":870,"line_end":870,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295623,"byte_end":16295654,"line_start":871,"line_end":871,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295659,"byte_end":16295681,"line_start":872,"line_end":872,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295686,"byte_end":16295693,"line_start":873,"line_end":873,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295698,"byte_end":16295720,"line_start":874,"line_end":874,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295725,"byte_end":16295732,"line_start":875,"line_end":875,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296317,"byte_end":16296334,"line_start":897,"line_end":897,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295866,"byte_end":16295939,"line_start":881,"line_end":881,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295944,"byte_end":16295962,"line_start":882,"line_end":882,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295967,"byte_end":16295970,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295975,"byte_end":16295989,"line_start":884,"line_end":884,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16295994,"byte_end":16295997,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296002,"byte_end":16296009,"line_start":886,"line_end":886,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296014,"byte_end":16296045,"line_start":887,"line_end":887,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296050,"byte_end":16296098,"line_start":888,"line_end":888,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296103,"byte_end":16296106,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296111,"byte_end":16296152,"line_start":890,"line_end":890,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296157,"byte_end":16296192,"line_start":891,"line_end":891,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296197,"byte_end":16296227,"line_start":892,"line_end":892,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296232,"byte_end":16296254,"line_start":893,"line_end":893,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296259,"byte_end":16296266,"line_start":894,"line_end":894,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296271,"byte_end":16296293,"line_start":895,"line_end":895,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296298,"byte_end":16296305,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296984,"byte_end":16296992,"line_start":921,"line_end":921,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296435,"byte_end":16296498,"line_start":902,"line_end":902,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296503,"byte_end":16296506,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296511,"byte_end":16296572,"line_start":904,"line_end":904,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296577,"byte_end":16296580,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296585,"byte_end":16296639,"line_start":906,"line_end":906,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296644,"byte_end":16296647,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296652,"byte_end":16296666,"line_start":908,"line_end":908,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296671,"byte_end":16296674,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296679,"byte_end":16296686,"line_start":910,"line_end":910,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296691,"byte_end":16296722,"line_start":911,"line_end":911,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296727,"byte_end":16296775,"line_start":912,"line_end":912,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296780,"byte_end":16296783,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296788,"byte_end":16296829,"line_start":914,"line_end":914,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296834,"byte_end":16296869,"line_start":915,"line_end":915,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296874,"byte_end":16296894,"line_start":916,"line_end":916,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296899,"byte_end":16296921,"line_start":917,"line_end":917,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296926,"byte_end":16296933,"line_start":918,"line_end":918,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296938,"byte_end":16296960,"line_start":919,"line_end":919,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16296965,"byte_end":16296972,"line_start":920,"line_end":920,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1012},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297516,"byte_end":16297525,"line_start":941,"line_end":941,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297090,"byte_end":16297153,"line_start":926,"line_end":926,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297158,"byte_end":16297161,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297166,"byte_end":16297180,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297185,"byte_end":16297188,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297193,"byte_end":16297200,"line_start":930,"line_end":930,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297205,"byte_end":16297253,"line_start":931,"line_end":931,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297258,"byte_end":16297279,"line_start":932,"line_end":932,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297284,"byte_end":16297319,"line_start":933,"line_end":933,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297324,"byte_end":16297355,"line_start":934,"line_end":934,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297360,"byte_end":16297395,"line_start":935,"line_end":935,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297400,"byte_end":16297429,"line_start":936,"line_end":936,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297434,"byte_end":16297454,"line_start":937,"line_end":937,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297459,"byte_end":16297480,"line_start":938,"line_end":938,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297485,"byte_end":16297492,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297497,"byte_end":16297504,"line_start":940,"line_end":940,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298185,"byte_end":16298193,"line_start":966,"line_end":966,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297677,"byte_end":16297730,"line_start":948,"line_end":948,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297735,"byte_end":16297738,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297743,"byte_end":16297757,"line_start":950,"line_end":950,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297762,"byte_end":16297765,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297770,"byte_end":16297777,"line_start":952,"line_end":952,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297782,"byte_end":16297813,"line_start":953,"line_end":953,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297818,"byte_end":16297866,"line_start":954,"line_end":954,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297871,"byte_end":16297874,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297879,"byte_end":16297920,"line_start":956,"line_end":956,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297925,"byte_end":16297960,"line_start":957,"line_end":957,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16297965,"byte_end":16297996,"line_start":958,"line_end":958,"column_start":5,"column_end":36}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298001,"byte_end":16298036,"line_start":959,"line_end":959,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298041,"byte_end":16298070,"line_start":960,"line_end":960,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298075,"byte_end":16298095,"line_start":961,"line_end":961,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298100,"byte_end":16298122,"line_start":962,"line_end":962,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298127,"byte_end":16298134,"line_start":963,"line_end":963,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298139,"byte_end":16298161,"line_start":964,"line_end":964,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298166,"byte_end":16298173,"line_start":965,"line_end":965,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298770,"byte_end":16298779,"line_start":987,"line_end":987,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298357,"byte_end":16298411,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298416,"byte_end":16298419,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298424,"byte_end":16298438,"line_start":975,"line_end":975,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298443,"byte_end":16298446,"line_start":976,"line_end":976,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298451,"byte_end":16298458,"line_start":977,"line_end":977,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298463,"byte_end":16298495,"line_start":978,"line_end":978,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298500,"byte_end":16298550,"line_start":979,"line_end":979,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298555,"byte_end":16298599,"line_start":980,"line_end":980,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298604,"byte_end":16298639,"line_start":981,"line_end":981,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298644,"byte_end":16298679,"line_start":982,"line_end":982,"column_start":5,"column_end":40}},{"value":"/     .new_write(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298684,"byte_end":16298707,"line_start":983,"line_end":983,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298712,"byte_end":16298719,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298724,"byte_end":16298746,"line_start":985,"line_end":985,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298751,"byte_end":16298758,"line_start":986,"line_end":986,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299392,"byte_end":16299402,"line_start":1009,"line_end":1009,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298940,"byte_end":16298989,"line_start":994,"line_end":994,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16298994,"byte_end":16298997,"line_start":995,"line_end":995,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299002,"byte_end":16299016,"line_start":996,"line_end":996,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299021,"byte_end":16299024,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299029,"byte_end":16299036,"line_start":998,"line_end":998,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299041,"byte_end":16299086,"line_start":999,"line_end":999,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299091,"byte_end":16299141,"line_start":1000,"line_end":1000,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299146,"byte_end":16299202,"line_start":1001,"line_end":1001,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299207,"byte_end":16299220,"line_start":1002,"line_end":1002,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299225,"byte_end":16299260,"line_start":1003,"line_end":1003,"column_start":5,"column_end":40}},{"value":"/     .length_field_type::<u16>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299265,"byte_end":16299300,"line_start":1004,"line_end":1004,"column_start":5,"column_end":40}},{"value":"/     .new_framed(io);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299305,"byte_end":16299329,"line_start":1005,"line_end":1005,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299334,"byte_end":16299341,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299346,"byte_end":16299368,"line_start":1007,"line_end":1007,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299373,"byte_end":16299380,"line_start":1008,"line_end":1008,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1022},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299902,"byte_end":16299909,"line_start":1028,"line_end":1028,"column_start":8,"column_end":15},"name":"default","qualname":"<Builder as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16300053,"byte_end":16300056,"line_start":1036,"line_end":1036,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16300236,"byte_end":16300239,"line_start":1042,"line_end":1042,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LengthDelimitedCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1244},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16300781,"byte_end":16300791,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":1245},{"krate":0,"index":1246},{"krate":0,"index":1247}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16300538,"byte_end":16300625,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16300626,"byte_end":16300629,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16300630,"byte_end":16300668,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16300669,"byte_end":16300707,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301891,"byte_end":16301894,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301472,"byte_end":16301532,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301537,"byte_end":16301540,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301545,"byte_end":16301555,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301560,"byte_end":16301563,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301568,"byte_end":16301640,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301645,"byte_end":16301718,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301723,"byte_end":16301790,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301795,"byte_end":16301798,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301803,"byte_end":16301879,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1070},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303025,"byte_end":16303044,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302052,"byte_end":16302112,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302117,"byte_end":16302120,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302125,"byte_end":16302188,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302193,"byte_end":16302271,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302276,"byte_end":16302343,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302348,"byte_end":16302420,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302425,"byte_end":16302495,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302500,"byte_end":16302523,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302528,"byte_end":16302531,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302536,"byte_end":16302546,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302551,"byte_end":16302554,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302559,"byte_end":16302634,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302639,"byte_end":16302712,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302717,"byte_end":16302793,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302798,"byte_end":16302871,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302876,"byte_end":16302946,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302951,"byte_end":16302954,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16302959,"byte_end":16303013,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303610,"byte_end":16303620,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303172,"byte_end":16303222,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303227,"byte_end":16303230,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303235,"byte_end":16303242,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303247,"byte_end":16303266,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303271,"byte_end":16303309,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303314,"byte_end":16303317,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303322,"byte_end":16303356,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303361,"byte_end":16303408,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303413,"byte_end":16303420,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303425,"byte_end":16303432,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303437,"byte_end":16303475,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303480,"byte_end":16303483,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303488,"byte_end":16303541,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303546,"byte_end":16303586,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16303591,"byte_end":16303598,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16304086,"byte_end":16304092,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"<LinesCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut) -> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":512},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16306704,"byte_end":16306714,"line_start":166,"line_end":166,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<LinesCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<String>, LinesCodecError>","parent":{"krate":0,"index":512},"children":[],"decl_id":{"krate":0,"index":516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1084},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307473,"byte_end":16307479,"line_start":191,"line_end":191,"column_start":8,"column_end":14},"name":"encode","qualname":"<LinesCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), LinesCodecError>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1086},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307746,"byte_end":16307753,"line_start":201,"line_end":201,"column_start":8,"column_end":15},"name":"default","qualname":"<LinesCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1267},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307946,"byte_end":16307967,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307900,"byte_end":16307941,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1269},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308003,"byte_end":16308005,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":1266},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307973,"byte_end":16307998,"line_start":211,"line_end":211,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1271},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308006,"byte_end":16308015,"line_start":212,"line_end":212,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::lines_codec::LinesCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1269},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1266},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307878,"byte_end":16307893,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"enum LinesCodecError { MaxLineLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1267},{"krate":0,"index":1269}],"decl_id":null,"docs":" An error occurred while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a line.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307795,"byte_end":16307851,"line_start":206,"line_end":206,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308068,"byte_end":16308071,"line_start":216,"line_end":216,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LinesCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1090},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308365,"byte_end":16308369,"line_start":225,"line_end":225,"column_start":8,"column_end":12},"name":"from","qualname":"<LinesCodecError as std::convert::From>::from","value":"fn from(io::Error) -> LinesCodecError","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1274},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309927,"byte_end":16309944,"line_start":41,"line_end":41,"column_start":12,"column_end":29},"name":"AnyDelimiterCodec","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodec","value":"AnyDelimiterCodec {  }","parent":null,"children":[{"krate":0,"index":1275},{"krate":0,"index":1276},{"krate":0,"index":1277},{"krate":0,"index":1278},{"krate":0,"index":1279}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into chunks based on any character in the given delimiter string.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16308741,"byte_end":16308882,"line_start":9,"line_end":9,"column_start":1,"column_end":142}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16308883,"byte_end":16308886,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16308887,"byte_end":16308925,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16308926,"byte_end":16308964,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16308965,"byte_end":16308968,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16308969,"byte_end":16308982,"line_start":14,"line_end":14,"column_start":1,"column_end":14}},{"value":"/ Decode string of bytes containing various different delimiters.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16308983,"byte_end":16309050,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309051,"byte_end":16309054,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309055,"byte_end":16309088,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309089,"byte_end":16309118,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309119,"byte_end":16309122,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309123,"byte_end":16309130,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::codec::{AnyDelimiterCodec, Decoder};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309131,"byte_end":16309187,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ use bytes::{BufMut, BytesMut};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309188,"byte_end":16309222,"line_start":22,"line_end":22,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309223,"byte_end":16309226,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ #","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309227,"byte_end":16309232,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(flavor = \"current_thread\")]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309233,"byte_end":16309280,"line_start":25,"line_end":25,"column_start":1,"column_end":48}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309281,"byte_end":16309334,"line_start":26,"line_end":26,"column_start":1,"column_end":54}},{"value":"/ let mut codec = AnyDelimiterCodec::new(b\",;\\r\\n\".to_vec(),b\";\".to_vec());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309335,"byte_end":16309412,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ let buf = &mut BytesMut::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309413,"byte_end":16309448,"line_start":28,"line_end":28,"column_start":1,"column_end":36}},{"value":"/ buf.reserve(200);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309449,"byte_end":16309470,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/ buf.put_slice(b\"chunk 1,chunk 2;chunk 3\\n\\r\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309471,"byte_end":16309521,"line_start":30,"line_end":30,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(\"chunk 1\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309522,"byte_end":16309585,"line_start":31,"line_end":31,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 2\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309586,"byte_end":16309649,"line_start":32,"line_end":32,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"chunk 3\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309650,"byte_end":16309713,"line_start":33,"line_end":33,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(\"\", codec.decode(buf).unwrap().unwrap());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309714,"byte_end":16309770,"line_start":34,"line_end":34,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(None, codec.decode(buf).unwrap());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309771,"byte_end":16309820,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ # Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309821,"byte_end":16309833,"line_start":36,"line_end":36,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309834,"byte_end":16309841,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309842,"byte_end":16309849,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16309850,"byte_end":16309853,"line_start":39,"line_end":39,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":1138},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311279,"byte_end":16311282,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<AnyDelimiterCodec>::new","value":"fn new(Vec<u8>, Vec<u8>) -> AnyDelimiterCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` for splitting up data into chunks.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` for splitting up data into chunks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16310837,"byte_end":16310905,"line_start":66,"line_end":66,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16310910,"byte_end":16310913,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16310918,"byte_end":16310928,"line_start":68,"line_end":68,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16310933,"byte_end":16310936,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ The returned `AnyDelimiterCodec` will not have an upper bound on the length","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16310941,"byte_end":16311020,"line_start":70,"line_end":70,"column_start":5,"column_end":84}},{"value":"/ of a buffered chunk. See the documentation for [`new_with_max_length`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311025,"byte_end":16311099,"line_start":71,"line_end":71,"column_start":5,"column_end":79}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311104,"byte_end":16311171,"line_start":72,"line_end":72,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311176,"byte_end":16311179,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::AnyDelimiterCodec::new_with_max_length()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311184,"byte_end":16311267,"line_start":74,"line_end":74,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312593,"byte_end":16312612,"line_start":103,"line_end":103,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<AnyDelimiterCodec>::new_with_max_length","value":"fn new_with_max_length(Vec<u8>, Vec<u8>, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","sig":null,"attributes":[{"value":"/ Returns a `AnyDelimiterCodec` with a maximum chunk length limit.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311562,"byte_end":16311630,"line_start":85,"line_end":85,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311635,"byte_end":16311638,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `AnyDelimiterCodec::decode` will return a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311643,"byte_end":16311713,"line_start":87,"line_end":87,"column_start":5,"column_end":75}},{"value":"/ [`AnyDelimiterCodecError`] when a chunk exceeds the length limit. Subsequent calls","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311718,"byte_end":16311804,"line_start":88,"line_end":88,"column_start":5,"column_end":91}},{"value":"/ will discard up to `limit` bytes from that chunk until a delimiter","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311809,"byte_end":16311879,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ character is reached, returning `None` until the delimiter over the limit","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311884,"byte_end":16311961,"line_start":90,"line_end":90,"column_start":5,"column_end":82}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16311966,"byte_end":16312036,"line_start":91,"line_end":91,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312041,"byte_end":16312064,"line_start":92,"line_end":92,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312069,"byte_end":16312072,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312077,"byte_end":16312087,"line_start":94,"line_end":94,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312092,"byte_end":16312095,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `AnyDelimiterCodec` which","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312100,"byte_end":16312182,"line_start":96,"line_end":96,"column_start":5,"column_end":87}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312187,"byte_end":16312260,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ that holds the chunk currently being read is unbounded. An attacker could","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312265,"byte_end":16312342,"line_start":98,"line_end":98,"column_start":5,"column_end":82}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312347,"byte_end":16312420,"line_start":99,"line_end":99,"column_start":5,"column_end":78}},{"value":"/ without any delimiter characters, causing unbounded memory consumption.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312425,"byte_end":16312500,"line_start":100,"line_end":100,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312505,"byte_end":16312508,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ [`AnyDelimiterCodecError`]: crate::codec::AnyDelimiterCodecError","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312513,"byte_end":16312581,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313400,"byte_end":16313410,"line_start":129,"line_end":129,"column_start":12,"column_end":22},"name":"max_length","qualname":"<AnyDelimiterCodec>::max_length","value":"fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum chunk length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum chunk length when decoding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312869,"byte_end":16312920,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312925,"byte_end":16312928,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312933,"byte_end":16312940,"line_start":116,"line_end":116,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312945,"byte_end":16312964,"line_start":117,"line_end":117,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16312969,"byte_end":16313014,"line_start":118,"line_end":118,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313019,"byte_end":16313022,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new(b\",;\\n\".to_vec(), b\";\".to_vec());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313027,"byte_end":16313099,"line_start":120,"line_end":120,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313104,"byte_end":16313151,"line_start":121,"line_end":121,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313156,"byte_end":16313163,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313168,"byte_end":16313175,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::AnyDelimiterCodec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313180,"byte_end":16313225,"line_start":124,"line_end":124,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313230,"byte_end":16313233,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let codec = AnyDelimiterCodec::new_with_max_length(b\",;\\n\".to_vec(), b\";\".to_vec(), 256);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313238,"byte_end":16313331,"line_start":126,"line_end":126,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313336,"byte_end":16313376,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313381,"byte_end":16313388,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1144},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313571,"byte_end":16313577,"line_start":138,"line_end":138,"column_start":8,"column_end":14},"name":"decode","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode","value":"fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":512},"children":[],"decl_id":{"krate":0,"index":515},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16316247,"byte_end":16316257,"line_start":195,"line_end":195,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"<AnyDelimiterCodec as codec::decoder::Decoder>::decode_eof","value":"fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Bytes>, AnyDelimiterCodecError>","parent":{"krate":0,"index":512},"children":[],"decl_id":{"krate":0,"index":516},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16316882,"byte_end":16316888,"line_start":218,"line_end":218,"column_start":8,"column_end":14},"name":"encode","qualname":"<AnyDelimiterCodec as codec::encoder::Encoder>::encode","value":"fn encode(&mut Self, T, &mut BytesMut) -> Result<(), AnyDelimiterCodecError>","parent":{"krate":0,"index":529},"children":[],"decl_id":{"krate":0,"index":532},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317196,"byte_end":16317203,"line_start":229,"line_end":229,"column_start":8,"column_end":15},"name":"default","qualname":"<AnyDelimiterCodec as std::default::Default>::default","value":"fn default() -> Self","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1299},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317506,"byte_end":16317528,"line_start":241,"line_end":241,"column_start":5,"column_end":27},"name":"MaxChunkLengthExceeded","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::MaxChunkLengthExceeded","value":"AnyDelimiterCodecError::MaxChunkLengthExceeded","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":" The maximum chunk length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum chunk length was exceeded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317459,"byte_end":16317501,"line_start":240,"line_end":240,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1301},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317564,"byte_end":16317566,"line_start":243,"line_end":243,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io","value":"AnyDelimiterCodecError::Io(io::Error)","parent":{"krate":0,"index":1298},"children":[],"decl_id":null,"docs":" An IO error occurred.\n","sig":null,"attributes":[{"value":"/ An IO error occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317534,"byte_end":16317559,"line_start":242,"line_end":242,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":1303},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317567,"byte_end":16317576,"line_start":243,"line_end":243,"column_start":8,"column_end":17},"name":"0","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError::Io::0","value":"std::io::Error","parent":{"krate":0,"index":1301},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1298},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317430,"byte_end":16317452,"line_start":239,"line_end":239,"column_start":10,"column_end":32},"name":"AnyDelimiterCodecError","qualname":"::codec::any_delimiter_codec::AnyDelimiterCodecError","value":"enum AnyDelimiterCodecError { MaxChunkLengthExceeded, Io(io::Error), }","parent":null,"children":[{"krate":0,"index":1299},{"krate":0,"index":1301}],"decl_id":null,"docs":" An error occurred while encoding or decoding a chunk.\n","sig":null,"attributes":[{"value":"/ An error occurred while encoding or decoding a chunk.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317346,"byte_end":16317403,"line_start":237,"line_end":237,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317636,"byte_end":16317639,"line_start":247,"line_end":247,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AnyDelimiterCodecError as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317987,"byte_end":16317991,"line_start":258,"line_end":258,"column_start":8,"column_end":12},"name":"from","qualname":"<AnyDelimiterCodecError as std::convert::From>::from","value":"fn from(io::Error) -> AnyDelimiterCodecError","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1306},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","parent":null,"children":[{"krate":0,"index":1307},{"krate":0,"index":1348},{"krate":0,"index":1387},{"krate":0,"index":1445},{"krate":0,"index":1448},{"krate":0,"index":1451},{"krate":0,"index":1454},{"krate":0,"index":1455},{"krate":0,"index":1458}],"decl_id":null,"docs":" Helpers for IO related tasks.","sig":null,"attributes":[{"value":"cfg(feature = \"io\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/cfg.rs","byte_start":6262,"byte_end":6284,"line_start":34,"line_end":34,"column_start":13,"column_end":35}},{"value":"/ Helpers for IO related tasks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318135,"byte_end":16318168,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318169,"byte_end":16318172,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The stream types are often used in combination with hyper or reqwest, as they","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318173,"byte_end":16318254,"line_start":3,"line_end":3,"column_start":1,"column_end":82}},{"value":"/ allow converting between a hyper [`Body`] and [`AsyncRead`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318255,"byte_end":16318319,"line_start":4,"line_end":4,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318320,"byte_end":16318323,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ The [`SyncIoBridge`] type converts from the world of async I/O","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318324,"byte_end":16318390,"line_start":6,"line_end":6,"column_start":1,"column_end":67}},{"value":"/ to synchronous I/O; this may often come up when using synchronous APIs","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318391,"byte_end":16318465,"line_start":7,"line_end":7,"column_start":1,"column_end":75}},{"value":"/ inside [`tokio::task::spawn_blocking`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318466,"byte_end":16318509,"line_start":8,"line_end":8,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318510,"byte_end":16318513,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`Body`]: https://docs.rs/hyper/0.13/hyper/struct.Body.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318514,"byte_end":16318577,"line_start":10,"line_end":10,"column_start":1,"column_end":64}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/mod.rs","byte_start":16318578,"byte_end":16318617,"line_start":11,"line_end":11,"column_start":1,"column_end":40}}]},{"kind":"Function","id":{"krate":0,"index":1330},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319988,"byte_end":16319996,"line_start":44,"line_end":44,"column_start":14,"column_end":22},"name":"read_buf","qualname":"::io::read_buf::read_buf","value":"async fn read_buf<R, B, '_, '_>(&'_ mut R, &'_ mut B) -> /*impl Trait*/ where\nR: AsyncRead + Unpin, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319065,"byte_end":16319143,"line_start":8,"line_end":8,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319144,"byte_end":16319147,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ [`BufMut`]: bytes::BufMut","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319148,"byte_end":16319177,"line_start":10,"line_end":10,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319178,"byte_end":16319181,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319182,"byte_end":16319195,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319196,"byte_end":16319199,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319200,"byte_end":16319207,"line_start":14,"line_end":14,"column_start":1,"column_end":8}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319208,"byte_end":16319241,"line_start":15,"line_end":15,"column_start":1,"column_end":34}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319242,"byte_end":16319273,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319274,"byte_end":16319300,"line_start":17,"line_end":17,"column_start":1,"column_end":27}},{"value":"/ use tokio_util::io::{StreamReader, read_buf};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319301,"byte_end":16319350,"line_start":18,"line_end":18,"column_start":1,"column_end":50}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319351,"byte_end":16319371,"line_start":19,"line_end":19,"column_start":1,"column_end":21}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319372,"byte_end":16319418,"line_start":20,"line_end":20,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319419,"byte_end":16319422,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319423,"byte_end":16319501,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ // ready.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319502,"byte_end":16319515,"line_start":23,"line_end":23,"column_start":1,"column_end":14}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319516,"byte_end":16319620,"line_start":24,"line_end":24,"column_start":1,"column_end":105}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319621,"byte_end":16319624,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319625,"byte_end":16319659,"line_start":26,"line_end":26,"column_start":1,"column_end":35}},{"value":"/ let mut reads = 0;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319660,"byte_end":16319682,"line_start":27,"line_end":27,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319683,"byte_end":16319686,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ loop {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319687,"byte_end":16319697,"line_start":29,"line_end":29,"column_start":1,"column_end":11}},{"value":"/     reads += 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319698,"byte_end":16319717,"line_start":30,"line_end":30,"column_start":1,"column_end":20}},{"value":"/     let n = read_buf(&mut read, &mut buf).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319718,"byte_end":16319771,"line_start":31,"line_end":31,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319772,"byte_end":16319775,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     if n == 0 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319776,"byte_end":16319795,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/         break;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319796,"byte_end":16319814,"line_start":34,"line_end":34,"column_start":1,"column_end":19}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319815,"byte_end":16319824,"line_start":35,"line_end":35,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319825,"byte_end":16319830,"line_start":36,"line_end":36,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319831,"byte_end":16319834,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319835,"byte_end":16319879,"line_start":38,"line_end":38,"column_start":1,"column_end":45}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319880,"byte_end":16319904,"line_start":39,"line_end":39,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319905,"byte_end":16319945,"line_start":40,"line_end":40,"column_start":1,"column_end":41}},{"value":"/ # Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319946,"byte_end":16319958,"line_start":41,"line_end":41,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319959,"byte_end":16319966,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16319967,"byte_end":16319974,"line_start":43,"line_end":43,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1598},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16321882,"byte_end":16321894,"line_start":45,"line_end":45,"column_start":16,"column_end":28},"name":"ReaderStream","qualname":"::io::reader_stream::ReaderStream","value":"ReaderStream {  }","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602}],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] of byte chunks.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322403,"byte_end":16322406,"line_start":63,"line_end":63,"column_start":12,"column_end":15},"name":"new","qualname":"<ReaderStream<R>>::new","value":"fn new(R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322196,"byte_end":16322257,"line_start":58,"line_end":58,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322262,"byte_end":16322298,"line_start":59,"line_end":59,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322303,"byte_end":16322306,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322311,"byte_end":16322350,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322355,"byte_end":16322391,"line_start":62,"line_end":62,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322841,"byte_end":16322854,"line_start":77,"line_end":77,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<ReaderStream<R>>::with_capacity","value":"fn with_capacity(R, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert an [`AsyncRead`] into a [`Stream`] with item type\n `Result<Bytes, std::io::Error>`,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Convert an [`AsyncRead`] into a [`Stream`] with item type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322580,"byte_end":16322641,"line_start":71,"line_end":71,"column_start":5,"column_end":66}},{"value":"/ `Result<Bytes, std::io::Error>`,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322646,"byte_end":16322682,"line_start":72,"line_end":72,"column_start":5,"column_end":41}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322687,"byte_end":16322736,"line_start":73,"line_end":73,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322741,"byte_end":16322744,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322749,"byte_end":16322788,"line_start":75,"line_end":75,"column_start":5,"column_end":44}},{"value":"/ [`Stream`]: futures_core::Stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322793,"byte_end":16322829,"line_start":76,"line_end":76,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16323138,"byte_end":16323147,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ReaderStream<R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":36,"index":96},"children":[],"decl_id":{"krate":36,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1549},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16327664,"byte_end":16327676,"line_start":106,"line_end":106,"column_start":16,"column_end":28},"name":"StreamReader","qualname":"::io::stream_reader::StreamReader","value":"StreamReader {  }","parent":null,"children":[{"krate":0,"index":1552},{"krate":0,"index":1553}],"decl_id":null,"docs":" Convert a [`Stream`] of byte chunks into an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328293,"byte_end":16328296,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<StreamReader<S, B>>::new","value":"fn new(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","sig":null,"attributes":[{"value":"/ Convert a stream of byte chunks into an [`AsyncRead`](tokio::io::AsyncRead).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16327875,"byte_end":16327955,"line_start":119,"line_end":119,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16327960,"byte_end":16327963,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ The item should be a [`Result`] with the ok variant being something that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16327968,"byte_end":16328044,"line_start":121,"line_end":121,"column_start":5,"column_end":81}},{"value":"/ implements the [`Buf`] trait (e.g. `Vec<u8>` or `Bytes`). The error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328049,"byte_end":16328120,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/ should be convertible into an [io error].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328125,"byte_end":16328170,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328175,"byte_end":16328178,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ [`Result`]: std::result::Result","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328183,"byte_end":16328218,"line_start":125,"line_end":125,"column_start":5,"column_end":40}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328223,"byte_end":16328246,"line_start":126,"line_end":126,"column_start":5,"column_end":28}},{"value":"/ [io error]: std::io::Error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328251,"byte_end":16328281,"line_start":127,"line_end":127,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1426},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328825,"byte_end":16328846,"line_start":147,"line_end":147,"column_start":12,"column_end":33},"name":"into_inner_with_chunk","qualname":"<StreamReader<S, B>>::into_inner_with_chunk","value":"fn into_inner_with_chunk(Self) -> (S, Option<B>)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `StreamReader`, returning a Tuple consisting\n of the underlying stream and an Option of the internal buffer,\n which is Some in case the buffer contains elements.\n","sig":null,"attributes":[{"value":"/ Consumes this `StreamReader`, returning a Tuple consisting","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328620,"byte_end":16328682,"line_start":144,"line_end":144,"column_start":5,"column_end":67}},{"value":"/ of the underlying stream and an Option of the internal buffer,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328687,"byte_end":16328753,"line_start":145,"line_end":145,"column_start":5,"column_end":71}},{"value":"/ which is Some in case the buffer contains elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16328758,"byte_end":16328813,"line_start":146,"line_end":146,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329180,"byte_end":16329187,"line_start":160,"line_end":160,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamReader<S, B>>::get_ref","value":"fn get_ref(&Self) -> &S","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a reference to the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329043,"byte_end":16329089,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329094,"byte_end":16329097,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329102,"byte_end":16329168,"line_start":159,"line_end":159,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1431},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329379,"byte_end":16329386,"line_start":167,"line_end":167,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamReader<S, B>>::get_mut","value":"fn get_mut(&mut Self) -> &mut S","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329234,"byte_end":16329288,"line_start":164,"line_end":164,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329293,"byte_end":16329296,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329301,"byte_end":16329367,"line_start":166,"line_end":166,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1432},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329597,"byte_end":16329608,"line_start":174,"line_end":174,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamReader<S, B>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Pin<&mut S>","parent":null,"children":[],"decl_id":null,"docs":" Gets a pinned mutable reference to the underlying stream.","sig":null,"attributes":[{"value":"/ Gets a pinned mutable reference to the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329445,"byte_end":16329506,"line_start":171,"line_end":171,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329511,"byte_end":16329514,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ It is inadvisable to directly read from the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329519,"byte_end":16329585,"line_start":173,"line_end":173,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16330031,"byte_end":16330041,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamReader<S, B>>::into_inner","value":"fn into_inner(Self) -> S","parent":null,"children":[],"decl_id":null,"docs":" Consumes this `BufWriter`, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this `BufWriter`, returning the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329688,"byte_end":16329751,"line_start":178,"line_end":178,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329756,"byte_end":16329759,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that any leftover data in the internal buffer is lost.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329764,"byte_end":16329827,"line_start":180,"line_end":180,"column_start":5,"column_end":68}},{"value":"/ If you additionally want access to the internal buffer use","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329832,"byte_end":16329894,"line_start":181,"line_end":181,"column_start":5,"column_end":67}},{"value":"/ [`into_inner_with_chunk`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329899,"byte_end":16329929,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329934,"byte_end":16329937,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ [`into_inner_with_chunk`]: crate::io::StreamReader::into_inner_with_chunk","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329942,"byte_end":16330019,"line_start":184,"line_end":184,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16330222,"byte_end":16330231,"line_start":196,"line_end":196,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<StreamReader<S, B> as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf)\n-> Poll<io::Result<()>>","parent":{"krate":22,"index":207},"children":[],"decl_id":{"krate":22,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1443},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16330995,"byte_end":16331008,"line_start":224,"line_end":224,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<StreamReader<S, B> as tokio::io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<io::Result<&[u8]>>","parent":{"krate":22,"index":165},"children":[],"decl_id":{"krate":22,"index":166},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16331913,"byte_end":16331920,"line_start":243,"line_end":243,"column_start":8,"column_end":15},"name":"consume","qualname":"<StreamReader<S, B> as tokio::io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":22,"index":165},"children":[],"decl_id":{"krate":22,"index":167},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sync","qualname":"::sync","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":183},{"krate":0,"index":186},{"krate":0,"index":246},{"krate":0,"index":249},{"krate":0,"index":337}],"decl_id":null,"docs":" Synchronization primitives\n","sig":null,"attributes":[{"value":"/ Synchronization primitives","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mod.rs","byte_start":7047,"byte_end":7077,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":1461},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14516,"byte_end":14525,"line_start":6,"line_end":6,"column_start":12,"column_end":21},"name":"DropGuard","qualname":"::sync::cancellation_token::guard::DropGuard","value":"DropGuard {  }","parent":null,"children":[{"krate":0,"index":1462}],"decl_id":null,"docs":" A wrapper for cancellation token which automatically cancels\n it on drop. It is created using `drop_guard` method on the `CancellationToken`.\n","sig":null,"attributes":[{"value":"/ A wrapper for cancellation token which automatically cancels","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14339,"byte_end":14403,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ it on drop. It is created using `drop_guard` method on the `CancellationToken`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14404,"byte_end":14487,"line_start":4,"line_end":4,"column_start":1,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14788,"byte_end":14794,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"disarm","qualname":"<DropGuard>::disarm","value":"fn disarm(Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Returns stored cancellation token and removes this drop guard instance\n (i.e. it will no longer cancel token). Other guards for this token\n are not affected.\n","sig":null,"attributes":[{"value":"/ Returns stored cancellation token and removes this drop guard instance","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14601,"byte_end":14675,"line_start":11,"line_end":11,"column_start":5,"column_end":79}},{"value":"/ (i.e. it will no longer cancel token). Other guards for this token","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14680,"byte_end":14750,"line_start":12,"line_end":12,"column_start":5,"column_end":75}},{"value":"/ are not affected.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14755,"byte_end":14776,"line_start":13,"line_end":13,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14973,"byte_end":14977,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"drop","qualname":"<DropGuard as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":81},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8927,"byte_end":8944,"line_start":54,"line_end":54,"column_start":12,"column_end":29},"name":"CancellationToken","qualname":"::sync::cancellation_token::CancellationToken","value":"CancellationToken {  }","parent":null,"children":[{"krate":0,"index":82}],"decl_id":null,"docs":" A token which can be used to signal a cancellation request to one or more\n tasks.","sig":null,"attributes":[{"value":"/ A token which can be used to signal a cancellation request to one or more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7705,"byte_end":7782,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ tasks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7783,"byte_end":7793,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7794,"byte_end":7797,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Tasks can call [`CancellationToken::cancelled()`] in order to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7798,"byte_end":7863,"line_start":17,"line_end":17,"column_start":1,"column_end":66}},{"value":"/ obtain a Future which will be resolved when cancellation is requested.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7864,"byte_end":7938,"line_start":18,"line_end":18,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7939,"byte_end":7942,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ Cancellation can be requested through the [`CancellationToken::cancel`] method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":7943,"byte_end":8026,"line_start":20,"line_end":20,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8027,"byte_end":8030,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8031,"byte_end":8045,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8046,"byte_end":8049,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ```no_run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8050,"byte_end":8063,"line_start":24,"line_end":24,"column_start":1,"column_end":14}},{"value":"/ use tokio::select;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8064,"byte_end":8086,"line_start":25,"line_end":25,"column_start":1,"column_end":23}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8087,"byte_end":8131,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8132,"byte_end":8135,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8136,"byte_end":8154,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8155,"byte_end":8176,"line_start":29,"line_end":29,"column_start":1,"column_end":22}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8177,"byte_end":8222,"line_start":30,"line_end":30,"column_start":1,"column_end":46}},{"value":"/     let cloned_token = token.clone();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8223,"byte_end":8264,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8265,"byte_end":8268,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8269,"byte_end":8320,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8321,"byte_end":8384,"line_start":34,"line_end":34,"column_start":1,"column_end":64}},{"value":"/         select! {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8385,"byte_end":8406,"line_start":35,"line_end":35,"column_start":1,"column_end":22}},{"value":"/             _ = cloned_token.cancelled() => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8407,"byte_end":8456,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8457,"byte_end":8503,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/                 5","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8504,"byte_end":8525,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/             }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8526,"byte_end":8543,"line_start":39,"line_end":39,"column_start":1,"column_end":18}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8544,"byte_end":8625,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/                 99","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8626,"byte_end":8648,"line_start":41,"line_end":41,"column_start":1,"column_end":23}},{"value":"/             }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8649,"byte_end":8666,"line_start":42,"line_end":42,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8667,"byte_end":8680,"line_start":43,"line_end":43,"column_start":1,"column_end":14}},{"value":"/     });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8681,"byte_end":8692,"line_start":44,"line_end":44,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8693,"byte_end":8696,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8697,"byte_end":8730,"line_start":46,"line_end":46,"column_start":1,"column_end":34}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8731,"byte_end":8806,"line_start":47,"line_end":47,"column_start":1,"column_end":76}},{"value":"/         token.cancel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8807,"byte_end":8834,"line_start":48,"line_end":48,"column_start":1,"column_end":28}},{"value":"/     });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8835,"byte_end":8846,"line_start":49,"line_end":49,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8847,"byte_end":8850,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8851,"byte_end":8901,"line_start":51,"line_end":51,"column_start":1,"column_end":51}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8902,"byte_end":8907,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":8908,"byte_end":8915,"line_start":53,"line_end":53,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1465},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9171,"byte_end":9196,"line_start":62,"line_end":62,"column_start":16,"column_end":41},"name":"WaitForCancellationFuture","qualname":"::sync::cancellation_token::WaitForCancellationFuture","value":"WaitForCancellationFuture {  }","parent":null,"children":[{"krate":0,"index":1467},{"krate":0,"index":1468}],"decl_id":null,"docs":" A Future that is resolved once the corresponding [`CancellationToken`]\n is cancelled.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14093227,"byte_end":14093236,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9422,"byte_end":9425,"line_start":72,"line_end":72,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CancellationToken as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9664,"byte_end":9669,"line_start":80,"line_end":80,"column_start":8,"column_end":13},"name":"clone","qualname":"<CancellationToken as std::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9872,"byte_end":9876,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"drop","qualname":"<CancellationToken as std::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":2,"index":3393},"children":[],"decl_id":{"krate":2,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10001,"byte_end":10008,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"default","qualname":"<CancellationToken as std::default::Default>::default","value":"fn default() -> CancellationToken","parent":{"krate":2,"index":3128},"children":[],"decl_id":{"krate":2,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10180,"byte_end":10183,"line_start":102,"line_end":102,"column_start":12,"column_end":15},"name":"new","qualname":"<CancellationToken>::new","value":"fn new() -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a new CancellationToken in the non-cancelled state.\n","sig":null,"attributes":[{"value":"/ Creates a new CancellationToken in the non-cancelled state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10105,"byte_end":10168,"line_start":101,"line_end":101,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11582,"byte_end":11593,"line_start":146,"line_end":146,"column_start":12,"column_end":23},"name":"child_token","qualname":"<CancellationToken>::child_token","value":"fn child_token(&Self) -> CancellationToken","parent":null,"children":[],"decl_id":null,"docs":" Creates a `CancellationToken` which will get cancelled whenever the\n current token gets cancelled.","sig":null,"attributes":[{"value":"/ Creates a `CancellationToken` which will get cancelled whenever the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10315,"byte_end":10386,"line_start":108,"line_end":108,"column_start":5,"column_end":76}},{"value":"/ current token gets cancelled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10391,"byte_end":10424,"line_start":109,"line_end":109,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10429,"byte_end":10432,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If the current token is already cancelled, the child token will get","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10437,"byte_end":10508,"line_start":111,"line_end":111,"column_start":5,"column_end":76}},{"value":"/ returned in cancelled state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10513,"byte_end":10545,"line_start":112,"line_end":112,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10550,"byte_end":10553,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10558,"byte_end":10572,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10577,"byte_end":10580,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10585,"byte_end":10598,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ use tokio::select;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10603,"byte_end":10625,"line_start":117,"line_end":117,"column_start":5,"column_end":27}},{"value":"/ use tokio_util::sync::CancellationToken;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10630,"byte_end":10674,"line_start":118,"line_end":118,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10679,"byte_end":10682,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10687,"byte_end":10705,"line_start":120,"line_end":120,"column_start":5,"column_end":23}},{"value":"/ async fn main() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10710,"byte_end":10731,"line_start":121,"line_end":121,"column_start":5,"column_end":26}},{"value":"/     let token = CancellationToken::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10736,"byte_end":10781,"line_start":122,"line_end":122,"column_start":5,"column_end":50}},{"value":"/     let child_token = token.child_token();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10786,"byte_end":10832,"line_start":123,"line_end":123,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10837,"byte_end":10840,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/     let join_handle = tokio::spawn(async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10845,"byte_end":10896,"line_start":125,"line_end":125,"column_start":5,"column_end":56}},{"value":"/         // Wait for either cancellation or a very long time","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10901,"byte_end":10964,"line_start":126,"line_end":126,"column_start":5,"column_end":68}},{"value":"/         select! {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10969,"byte_end":10990,"line_start":127,"line_end":127,"column_start":5,"column_end":26}},{"value":"/             _ = child_token.cancelled() => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10995,"byte_end":11043,"line_start":128,"line_end":128,"column_start":5,"column_end":53}},{"value":"/                 // The token was cancelled","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11048,"byte_end":11094,"line_start":129,"line_end":129,"column_start":5,"column_end":51}},{"value":"/                 5","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11099,"byte_end":11120,"line_start":130,"line_end":130,"column_start":5,"column_end":26}},{"value":"/             }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11125,"byte_end":11142,"line_start":131,"line_end":131,"column_start":5,"column_end":22}},{"value":"/             _ = tokio::time::sleep(std::time::Duration::from_secs(9999)) => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11147,"byte_end":11228,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/                 99","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11233,"byte_end":11255,"line_start":133,"line_end":133,"column_start":5,"column_end":27}},{"value":"/             }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11260,"byte_end":11277,"line_start":134,"line_end":134,"column_start":5,"column_end":22}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11282,"byte_end":11295,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/     });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11300,"byte_end":11311,"line_start":136,"line_end":136,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11316,"byte_end":11319,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/     tokio::spawn(async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11324,"byte_end":11357,"line_start":138,"line_end":138,"column_start":5,"column_end":38}},{"value":"/         tokio::time::sleep(std::time::Duration::from_millis(10)).await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11362,"byte_end":11437,"line_start":139,"line_end":139,"column_start":5,"column_end":80}},{"value":"/         token.cancel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11442,"byte_end":11469,"line_start":140,"line_end":140,"column_start":5,"column_end":32}},{"value":"/     });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11474,"byte_end":11485,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11490,"byte_end":11493,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/     assert_eq!(5, join_handle.await.unwrap());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11498,"byte_end":11548,"line_start":143,"line_end":143,"column_start":5,"column_end":55}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11553,"byte_end":11558,"line_start":144,"line_end":144,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11563,"byte_end":11570,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12316,"byte_end":12322,"line_start":162,"line_end":162,"column_start":12,"column_end":18},"name":"cancel","qualname":"<CancellationToken>::cancel","value":"fn cancel(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Cancel the [`CancellationToken`] and all child tokens which had been\n derived from it.","sig":null,"attributes":[{"value":"/ Cancel the [`CancellationToken`] and all child tokens which had been","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11728,"byte_end":11800,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ derived from it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11805,"byte_end":11825,"line_start":153,"line_end":153,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11830,"byte_end":11833,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ This will wake up all tasks which are waiting for cancellation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11838,"byte_end":11905,"line_start":155,"line_end":155,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11910,"byte_end":11913,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ Be aware that cancellation is not an atomic operation. It is possible","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11918,"byte_end":11991,"line_start":157,"line_end":157,"column_start":5,"column_end":78}},{"value":"/ for another thread running in parallel with a call to `cancel` to first","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":11996,"byte_end":12071,"line_start":158,"line_end":158,"column_start":5,"column_end":80}},{"value":"/ receive `true` from `is_cancelled` on one child node, and then receive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12076,"byte_end":12150,"line_start":159,"line_end":159,"column_start":5,"column_end":79}},{"value":"/ `false` from `is_cancelled` on another child node. However, once the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12155,"byte_end":12227,"line_start":160,"line_end":160,"column_start":5,"column_end":77}},{"value":"/ call to `cancel` returns, all child nodes have been fully cancelled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12232,"byte_end":12304,"line_start":161,"line_end":161,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12454,"byte_end":12466,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"is_cancelled","qualname":"<CancellationToken>::is_cancelled","value":"fn is_cancelled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the `CancellationToken` is cancelled.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the `CancellationToken` is cancelled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12383,"byte_end":12442,"line_start":166,"line_end":166,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12825,"byte_end":12834,"line_start":179,"line_end":179,"column_start":12,"column_end":21},"name":"cancelled","qualname":"<CancellationToken>::cancelled","value":"fn cancelled(&Self) -> WaitForCancellationFuture","parent":null,"children":[],"decl_id":null,"docs":" Returns a `Future` that gets fulfilled when cancellation is requested.","sig":null,"attributes":[{"value":"/ Returns a `Future` that gets fulfilled when cancellation is requested.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12540,"byte_end":12614,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12619,"byte_end":12622,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ The future will complete immediately if the token is already cancelled","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12627,"byte_end":12701,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ when this method is called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12706,"byte_end":12737,"line_start":174,"line_end":174,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12742,"byte_end":12745,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Cancel safety","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12750,"byte_end":12769,"line_start":176,"line_end":176,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12774,"byte_end":12777,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ This method is cancel safe.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":12782,"byte_end":12813,"line_start":178,"line_end":178,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13178,"byte_end":13188,"line_start":190,"line_end":190,"column_start":12,"column_end":22},"name":"drop_guard","qualname":"<CancellationToken>::drop_guard","value":"fn drop_guard(Self) -> DropGuard","parent":null,"children":[],"decl_id":null,"docs":" Creates a `DropGuard` for this token.","sig":null,"attributes":[{"value":"/ Creates a `DropGuard` for this token.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13015,"byte_end":13056,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13061,"byte_end":13064,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ Returned guard will cancel this token (and all its children) on drop","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13069,"byte_end":13141,"line_start":188,"line_end":188,"column_start":5,"column_end":77}},{"value":"/ unless disarmed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13146,"byte_end":13166,"line_start":189,"line_end":189,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13375,"byte_end":13378,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<WaitForCancellationFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13595,"byte_end":13599,"line_start":206,"line_end":206,"column_start":8,"column_end":12},"name":"poll","qualname":"<WaitForCancellationFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1502},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29593,"byte_end":29606,"line_start":12,"line_end":12,"column_start":12,"column_end":25},"name":"PollSendError","qualname":"::sync::mpsc::PollSendError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error returned by the `PollSender` when the channel is closed.\n","sig":null,"attributes":[{"value":"/ Error returned by the `PollSender` when the channel is closed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29498,"byte_end":29564,"line_start":10,"line_end":10,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29885,"byte_end":29895,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSendError<T>>::into_inner","value":"fn into_inner(Self) -> Option<T>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the stored value, if any.","sig":null,"attributes":[{"value":"/ Consumes the stored value, if any.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29654,"byte_end":29692,"line_start":15,"line_end":15,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29697,"byte_end":29700,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ If this error was encountered when calling `start_send`/`send_item`, this will be the item","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29705,"byte_end":29799,"line_start":17,"line_end":17,"column_start":5,"column_end":99}},{"value":"/ that the caller attempted to send.  Otherwise, it will be `None`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29804,"byte_end":29873,"line_start":18,"line_end":18,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29992,"byte_end":29995,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSendError<T> as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1524},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30415,"byte_end":30425,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"PollSender","qualname":"::sync::mpsc::PollSender","value":"PollSender {  }","parent":null,"children":[{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528}],"decl_id":null,"docs":" A wrapper around [`mpsc::Sender`] that can be polled.","sig":null,"attributes":[{"value":"/ A wrapper around [`mpsc::Sender`] that can be polled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30277,"byte_end":30334,"line_start":40,"line_end":40,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30335,"byte_end":30338,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ [`mpsc::Sender`]: tokio::sync::mpsc::Sender","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30339,"byte_end":30386,"line_start":42,"line_end":42,"column_start":1,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":160},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31329,"byte_end":31332,"line_start":69,"line_end":69,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSender<T>>::new","value":"fn new(Sender<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `PollSender`.\n","sig":null,"attributes":[{"value":"/ Creates a new `PollSender`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31286,"byte_end":31317,"line_start":68,"line_end":68,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32316,"byte_end":32328,"line_start":94,"line_end":94,"column_start":12,"column_end":24},"name":"poll_reserve","qualname":"<PollSender<T>>::poll_reserve","value":"fn poll_reserve(&mut Self, &mut Context) -> Poll<Result<(), PollSendError<T>>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to prepare the sender to receive a value.","sig":null,"attributes":[{"value":"/ Attempts to prepare the sender to receive a value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31655,"byte_end":31709,"line_start":81,"line_end":81,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31714,"byte_end":31717,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ This method must be called and return `Poll::Ready(Ok(()))` prior to each call to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31722,"byte_end":31807,"line_start":83,"line_end":83,"column_start":5,"column_end":90}},{"value":"/ `send_item`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31812,"byte_end":31828,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31833,"byte_end":31836,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This method returns `Poll::Ready` once the underlying channel is ready to receive a value,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31841,"byte_end":31935,"line_start":86,"line_end":86,"column_start":5,"column_end":99}},{"value":"/ by reserving a slot in the channel for the item to be sent. If this method returns","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31940,"byte_end":32026,"line_start":87,"line_end":87,"column_start":5,"column_end":91}},{"value":"/ `Poll::Pending`, the current task is registered to be notified (via","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32031,"byte_end":32102,"line_start":88,"line_end":88,"column_start":5,"column_end":76}},{"value":"/ `cx.waker().wake_by_ref()`) when `poll_reserve` should be called again.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32107,"byte_end":32182,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32187,"byte_end":32190,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32195,"byte_end":32207,"line_start":91,"line_end":91,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32212,"byte_end":32215,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":32220,"byte_end":32304,"line_start":93,"line_end":93,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34353,"byte_end":34362,"line_start":140,"line_end":140,"column_start":12,"column_end":21},"name":"send_item","qualname":"<PollSender<T>>::send_item","value":"fn send_item(&mut Self, T) -> Result<(), PollSendError<T>>","parent":null,"children":[],"decl_id":null,"docs":" Sends an item to the channel.","sig":null,"attributes":[{"value":"/ Sends an item to the channel.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":33873,"byte_end":33906,"line_start":126,"line_end":126,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":33911,"byte_end":33914,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ Before calling `send_item`, `poll_reserve` must be called with a successful return","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":33919,"byte_end":34005,"line_start":128,"line_end":128,"column_start":5,"column_end":91}},{"value":"/ value of `Poll::Ready(Ok(()))`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34010,"byte_end":34045,"line_start":129,"line_end":129,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34050,"byte_end":34053,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34058,"byte_end":34070,"line_start":131,"line_end":131,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34075,"byte_end":34078,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ If the channel is closed, an error will be returned.  This is a permanent state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34083,"byte_end":34167,"line_start":133,"line_end":133,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34172,"byte_end":34175,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34180,"byte_end":34192,"line_start":135,"line_end":135,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34197,"byte_end":34200,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ If `poll_reserve` was not successfully called prior to calling `send_item`, then this method","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34205,"byte_end":34301,"line_start":137,"line_end":137,"column_start":5,"column_end":101}},{"value":"/ will panic.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34306,"byte_end":34321,"line_start":138,"line_end":138,"column_start":5,"column_end":20}},{"value":"track_caller","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":34326,"byte_end":34341,"line_start":139,"line_end":139,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35381,"byte_end":35390,"line_start":163,"line_end":163,"column_start":12,"column_end":21},"name":"is_closed","qualname":"<PollSender<T>>::is_closed","value":"fn is_closed(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether this sender is been closed.","sig":null,"attributes":[{"value":"/ Checks whether this sender is been closed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35235,"byte_end":35281,"line_start":160,"line_end":160,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35286,"byte_end":35289,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ The underlying channel that this sender was wrapping may still be open.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35294,"byte_end":35369,"line_start":162,"line_end":162,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35712,"byte_end":35719,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<PollSender<T>>::get_ref","value":"fn get_ref(&Self) -> Option<&Sender<T>>","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the `Sender` of the underlying channel.","sig":null,"attributes":[{"value":"/ Gets a reference to the `Sender` of the underlying channel.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35488,"byte_end":35551,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35556,"byte_end":35559,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ If `PollSender` has been closed, `None` is returned. The underlying channel that this sender","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35564,"byte_end":35660,"line_start":169,"line_end":169,"column_start":5,"column_end":101}},{"value":"/ was wrapping may still be open.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35665,"byte_end":35700,"line_start":170,"line_end":170,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36517,"byte_end":36522,"line_start":187,"line_end":187,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSender<T>>::close","value":"fn close(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes this sender.","sig":null,"attributes":[{"value":"/ Closes this sender.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35791,"byte_end":35814,"line_start":175,"line_end":175,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35819,"byte_end":35822,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ No more messages will be able to be sent from this sender, but the underlying channel will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35827,"byte_end":35921,"line_start":177,"line_end":177,"column_start":5,"column_end":99}},{"value":"/ remain open until all senders have dropped, or until the [`Receiver`] closes the channel.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":35926,"byte_end":36019,"line_start":178,"line_end":178,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36024,"byte_end":36027,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ If a slot was previously reserved by calling `poll_reserve`, then a final call can be made","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36032,"byte_end":36126,"line_start":180,"line_end":180,"column_start":5,"column_end":99}},{"value":"/ to `send_item` in order to consume the reserved slot.  After that, no further sends will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36131,"byte_end":36226,"line_start":181,"line_end":181,"column_start":5,"column_end":100}},{"value":"/ possible.  If you do not intend to send another item, you can release the reserved slot back","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36231,"byte_end":36327,"line_start":182,"line_end":182,"column_start":5,"column_end":101}},{"value":"/ to the underlying sender by calling [`abort_send`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36332,"byte_end":36387,"line_start":183,"line_end":183,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36392,"byte_end":36395,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ [`abort_send`]: crate::sync::PollSender::abort_send","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36400,"byte_end":36455,"line_start":185,"line_end":185,"column_start":5,"column_end":60}},{"value":"/ [`Receiver`]: tokio::sync::mpsc::Receiver","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":36460,"byte_end":36505,"line_start":186,"line_end":186,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":167},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37456,"byte_end":37466,"line_start":209,"line_end":209,"column_start":12,"column_end":22},"name":"abort_send","qualname":"<PollSender<T>>::abort_send","value":"fn abort_send(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Aborts the current in-progress send, if any.","sig":null,"attributes":[{"value":"/ Aborts the current in-progress send, if any.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37160,"byte_end":37208,"line_start":204,"line_end":204,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37213,"byte_end":37216,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ Returns `true` if a send was aborted.  If the sender was closed prior to calling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37221,"byte_end":37305,"line_start":206,"line_end":206,"column_start":5,"column_end":89}},{"value":"/ `abort_send`, then the sender will remain in the closed state, otherwise the sender will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37310,"byte_end":37405,"line_start":207,"line_end":207,"column_start":5,"column_end":100}},{"value":"/ ready to attempt another send.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":37410,"byte_end":37444,"line_start":208,"line_end":208,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39104,"byte_end":39109,"line_start":249,"line_end":249,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSender<T> as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSender<T>","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":" Clones this `PollSender`.","sig":null,"attributes":[{"value":"/ Clones this `PollSender`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38957,"byte_end":38986,"line_start":246,"line_end":246,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38991,"byte_end":38994,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ The resulting `PollSender` will have an initial state identical to calling `PollSender::new`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38999,"byte_end":39096,"line_start":248,"line_end":248,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39736,"byte_end":39746,"line_start":268,"line_end":268,"column_start":8,"column_end":18},"name":"poll_ready","qualname":"<PollSender<T> as futures_sink::Sink>::poll_ready","value":"fn poll_ready(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39887,"byte_end":39897,"line_start":272,"line_end":272,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<PollSender<T> as futures_sink::Sink>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":22},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":40020,"byte_end":40030,"line_start":276,"line_end":276,"column_start":8,"column_end":18},"name":"start_send","qualname":"<PollSender<T> as futures_sink::Sink>::start_send","value":"fn start_send(Pin<&mut Self>, T) -> Result<(), Self::Error>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":40151,"byte_end":40161,"line_start":280,"line_end":280,"column_start":8,"column_end":18},"name":"poll_close","qualname":"<PollSender<T> as futures_sink::Sink>::poll_close","value":"fn poll_close(Pin<&mut Self>, &mut Context) -> Poll<Result<(), Self::Error>>","parent":{"krate":21,"index":17},"children":[],"decl_id":{"krate":21,"index":23},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":226},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40684,"byte_end":40697,"line_start":13,"line_end":13,"column_start":12,"column_end":25},"name":"PollSemaphore","qualname":"::sync::poll_semaphore::PollSemaphore","value":"PollSemaphore {  }","parent":null,"children":[{"krate":0,"index":227},{"krate":0,"index":228}],"decl_id":null,"docs":" A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","sig":null,"attributes":[{"value":"/ A wrapper around [`Semaphore`] that provides a `poll_acquire` method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40553,"byte_end":40626,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40627,"byte_end":40630,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ [`Semaphore`]: tokio::sync::Semaphore","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40631,"byte_end":40672,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40900,"byte_end":40903,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<PollSemaphore>::new","value":"fn new(Arc<Semaphore>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PollSemaphore`.\n","sig":null,"attributes":[{"value":"/ Create a new `PollSemaphore`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40855,"byte_end":40888,"line_start":19,"line_end":19,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41067,"byte_end":41072,"line_start":28,"line_end":28,"column_start":12,"column_end":17},"name":"close","qualname":"<PollSemaphore>::close","value":"fn close(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Closes the semaphore.\n","sig":null,"attributes":[{"value":"/ Closes the semaphore.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41030,"byte_end":41055,"line_start":27,"line_end":27,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41178,"byte_end":41189,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"clone_inner","qualname":"<PollSemaphore>::clone_inner","value":"fn clone_inner(&Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Obtain a clone of the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Obtain a clone of the inner semaphore.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41124,"byte_end":41166,"line_start":32,"line_end":32,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41304,"byte_end":41314,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PollSemaphore>::into_inner","value":"fn into_inner(Self) -> Arc<Semaphore>","parent":null,"children":[],"decl_id":null,"docs":" Get back the inner semaphore.\n","sig":null,"attributes":[{"value":"/ Get back the inner semaphore.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41259,"byte_end":41292,"line_start":37,"line_end":37,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":42048,"byte_end":42060,"line_start":55,"line_end":55,"column_start":12,"column_end":24},"name":"poll_acquire","qualname":"<PollSemaphore>::poll_acquire","value":"fn poll_acquire(&mut Self, &mut Context) -> Poll<Option<OwnedSemaphorePermit>>","parent":null,"children":[],"decl_id":null,"docs":" Poll to acquire a permit from the semaphore.","sig":null,"attributes":[{"value":"/ Poll to acquire a permit from the semaphore.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41375,"byte_end":41423,"line_start":42,"line_end":42,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41428,"byte_end":41431,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This can return the following values:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41436,"byte_end":41477,"line_start":44,"line_end":44,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41482,"byte_end":41485,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/  - `Poll::Pending` if a permit is not currently available.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41490,"byte_end":41552,"line_start":46,"line_end":46,"column_start":5,"column_end":67}},{"value":"/  - `Poll::Ready(Some(permit))` if a permit was acquired.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41557,"byte_end":41617,"line_start":47,"line_end":47,"column_start":5,"column_end":65}},{"value":"/  - `Poll::Ready(None)` if the semaphore has been closed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41622,"byte_end":41682,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41687,"byte_end":41690,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ When this method returns `Poll::Pending`, the current task is scheduled","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41695,"byte_end":41770,"line_start":50,"line_end":50,"column_start":5,"column_end":80}},{"value":"/ to receive a wakeup when a permit becomes available, or when the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41775,"byte_end":41843,"line_start":51,"line_end":51,"column_start":5,"column_end":73}},{"value":"/ semaphore is closed. Note that on multiple calls to `poll_acquire`, only","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41848,"byte_end":41924,"line_start":52,"line_end":52,"column_start":5,"column_end":81}},{"value":"/ the `Waker` from the `Context` passed to the most recent call is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":41929,"byte_end":41997,"line_start":53,"line_end":53,"column_start":5,"column_end":73}},{"value":"/ scheduled to receive a wakeup.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":42002,"byte_end":42036,"line_start":54,"line_end":54,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43488,"byte_end":43505,"line_start":92,"line_end":92,"column_start":12,"column_end":29},"name":"available_permits","qualname":"<PollSemaphore>::available_permits","value":"fn available_permits(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current number of available permits.","sig":null,"attributes":[{"value":"/ Returns the current number of available permits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43204,"byte_end":43256,"line_start":86,"line_end":86,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43261,"byte_end":43264,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::available_permits`] method on the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43269,"byte_end":43345,"line_start":88,"line_end":88,"column_start":5,"column_end":81}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43350,"byte_end":43384,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43389,"byte_end":43392,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::available_permits`]: tokio::sync::Semaphore::available_permits","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43397,"byte_end":43476,"line_start":91,"line_end":91,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43965,"byte_end":43976,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"add_permits","qualname":"<PollSemaphore>::add_permits","value":"fn add_permits(&Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds `n` new permits to the semaphore.","sig":null,"attributes":[{"value":"/ Adds `n` new permits to the semaphore.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43578,"byte_end":43620,"line_start":96,"line_end":96,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43625,"byte_end":43628,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ The maximum number of permits is `usize::MAX >> 3`, and this function","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43633,"byte_end":43706,"line_start":98,"line_end":98,"column_start":5,"column_end":78}},{"value":"/ will panic if the limit is exceeded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43711,"byte_end":43751,"line_start":99,"line_end":99,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43756,"byte_end":43759,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to the [`Semaphore::add_permits`] method on the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43764,"byte_end":43834,"line_start":101,"line_end":101,"column_start":5,"column_end":75}},{"value":"/ `tokio::sync::Semaphore` type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43839,"byte_end":43873,"line_start":102,"line_end":102,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43878,"byte_end":43881,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ [`Semaphore::add_permits`]: tokio::sync::Semaphore::add_permits","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":43886,"byte_end":43953,"line_start":104,"line_end":104,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44122,"byte_end":44131,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollSemaphore as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context)\n-> Poll<Option<OwnedSemaphorePermit>>","parent":{"krate":36,"index":96},"children":[],"decl_id":{"krate":36,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44310,"byte_end":44315,"line_start":119,"line_end":119,"column_start":8,"column_end":13},"name":"clone","qualname":"<PollSemaphore as std::clone::Clone>::clone","value":"fn clone(&Self) -> PollSemaphore","parent":{"krate":2,"index":2772},"children":[],"decl_id":{"krate":2,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44441,"byte_end":44444,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollSemaphore as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44666,"byte_end":44672,"line_start":133,"line_end":133,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<PollSemaphore as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &Semaphore","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":282},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45130,"byte_end":45147,"line_start":14,"line_end":14,"column_start":12,"column_end":29},"name":"ReusableBoxFuture","qualname":"::sync::reusable_box::ReusableBoxFuture","value":"ReusableBoxFuture {  }","parent":null,"children":[{"krate":0,"index":285}],"decl_id":null,"docs":" A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","sig":null,"attributes":[{"value":"/ A reusable `Pin<Box<dyn Future<Output = T> + Send + 'a>>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":44925,"byte_end":44987,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":44988,"byte_end":44991,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type lets you replace the future stored in the box without","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":44992,"byte_end":45059,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ reallocating when the size and alignment permits this.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45060,"byte_end":45118,"line_start":13,"line_end":13,"column_start":1,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45343,"byte_end":45346,"line_start":20,"line_end":20,"column_start":12,"column_end":15},"name":"new","qualname":"<ReusableBoxFuture>::new","value":"fn new<F>(F) -> Self where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a new `ReusableBoxFuture<T>` containing the provided future.\n","sig":null,"attributes":[{"value":"/ Create a new `ReusableBoxFuture<T>` containing the provided future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45260,"byte_end":45331,"line_start":19,"line_end":19,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45716,"byte_end":45719,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"set","qualname":"<ReusableBoxFuture>::set","value":"fn set<F>(&mut Self, F) where F: Future<Output = T> + Send + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45501,"byte_end":45553,"line_start":29,"line_end":29,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45558,"byte_end":45561,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ This reallocates if and only if the layout of the provided future is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45566,"byte_end":45638,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ different from the layout of the currently stored future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45643,"byte_end":45704,"line_start":32,"line_end":32,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":46157,"byte_end":46164,"line_start":47,"line_end":47,"column_start":12,"column_end":19},"name":"try_set","qualname":"<ReusableBoxFuture>::try_set","value":"fn try_set<F>(&mut Self, F) -> Result<(), F> where F: Future<Output = T> +\nSend + 'a","parent":null,"children":[],"decl_id":null,"docs":" Replace the future currently stored in this box.","sig":null,"attributes":[{"value":"/ Replace the future currently stored in this box.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45916,"byte_end":45968,"line_start":42,"line_end":42,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45973,"byte_end":45976,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function never reallocates, but returns an error if the provided","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45981,"byte_end":46054,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ future has a different size or alignment from the currently stored","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":46059,"byte_end":46129,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":46134,"byte_end":46145,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47231,"byte_end":47238,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"get_pin","qualname":"<ReusableBoxFuture>::get_pin","value":"fn get_pin(&mut Self) -> Pin<&mut dyn Future<Output = T> + Send>","parent":null,"children":[],"decl_id":null,"docs":" Get a pinned reference to the underlying future.\n","sig":null,"attributes":[{"value":"/ Get a pinned reference to the underlying future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47167,"byte_end":47219,"line_start":71,"line_end":71,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47391,"byte_end":47395,"line_start":77,"line_end":77,"column_start":12,"column_end":16},"name":"poll","qualname":"<ReusableBoxFuture>::poll","value":"fn poll(&mut Self, &mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47336,"byte_end":47379,"line_start":76,"line_end":76,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47606,"byte_end":47610,"line_start":86,"line_end":86,"column_start":8,"column_end":12},"name":"poll","qualname":"<ReusableBoxFuture as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":" Poll the future stored inside this box.\n","sig":null,"attributes":[{"value":"/ Poll the future stored inside this box.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47555,"byte_end":47598,"line_start":85,"line_end":85,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":48022,"byte_end":48025,"line_start":97,"line_end":97,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ReusableBoxFuture as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":340},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"either","qualname":"::either","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":342},{"krate":0,"index":345},{"krate":0,"index":348},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":355},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":362},{"krate":0,"index":365},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":1532},{"krate":0,"index":1541},{"krate":0,"index":1545},{"krate":0,"index":377},{"krate":0,"index":378},{"krate":0,"index":384},{"krate":0,"index":388},{"krate":0,"index":393},{"krate":0,"index":398},{"krate":0,"index":404}],"decl_id":null,"docs":" Module defining an Either type.\n","sig":null,"attributes":[{"value":"/ Module defining an Either type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50246,"byte_end":50281,"line_start":1,"line_end":1,"column_start":1,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":1535},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52228,"byte_end":52232,"line_start":65,"line_end":65,"column_start":5,"column_end":9},"name":"Left","qualname":"::either::Either::Left","value":"Either::Left(L)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1537},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52233,"byte_end":52234,"line_start":65,"line_end":65,"column_start":10,"column_end":11},"name":"0","qualname":"::either::Either::Left::0","value":"L","parent":{"krate":0,"index":1535},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":1538},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52241,"byte_end":52246,"line_start":66,"line_end":66,"column_start":5,"column_end":10},"name":"Right","qualname":"::either::Either::Right","value":"Either::Right(R)","parent":{"krate":0,"index":1532},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1540},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52247,"byte_end":52248,"line_start":66,"line_end":66,"column_start":11,"column_end":12},"name":"0","qualname":"::either::Either::Right::0","value":"R","parent":{"krate":0,"index":1538},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":1532},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52209,"byte_end":52215,"line_start":64,"line_end":64,"column_start":10,"column_end":16},"name":"Either","qualname":"::either::Either","value":"enum Either<L, R> { Left(L), Right(R), }","parent":null,"children":[{"krate":0,"index":1535},{"krate":0,"index":1538}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50458,"byte_end":50564,"line_start":10,"line_end":10,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50565,"byte_end":50568,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This type implements common asynchronous traits such as [`Future`] and those in Tokio.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50569,"byte_end":50659,"line_start":12,"line_end":12,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50660,"byte_end":50663,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ [`Future`]: std::future::Future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50664,"byte_end":50699,"line_start":14,"line_end":14,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50700,"byte_end":50703,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50704,"byte_end":50717,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50718,"byte_end":50721,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The following code will not work:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50722,"byte_end":50759,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50760,"byte_end":50763,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```compile_fail","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50764,"byte_end":50783,"line_start":20,"line_end":20,"column_start":1,"column_end":20}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50784,"byte_end":50826,"line_start":21,"line_end":21,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50827,"byte_end":50877,"line_start":22,"line_end":22,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50878,"byte_end":50929,"line_start":23,"line_end":23,"column_start":1,"column_end":52}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50930,"byte_end":50948,"line_start":24,"line_end":24,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50949,"byte_end":50970,"line_start":25,"line_end":25,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":50971,"byte_end":51013,"line_start":26,"line_end":26,"column_start":1,"column_end":43}},{"value":"/         some_async_function()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51014,"byte_end":51047,"line_start":27,"line_end":27,"column_start":1,"column_end":34}},{"value":"/     } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51048,"byte_end":51064,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/         other_async_function() // <- Will print: \"`if` and `else` have incompatible types\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51065,"byte_end":51159,"line_start":29,"line_end":29,"column_start":1,"column_end":95}},{"value":"/     };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51160,"byte_end":51170,"line_start":30,"line_end":30,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51171,"byte_end":51174,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/     println!(\"Result is {}\", result.await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51175,"byte_end":51222,"line_start":32,"line_end":32,"column_start":1,"column_end":48}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51223,"byte_end":51228,"line_start":33,"line_end":33,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51229,"byte_end":51236,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51237,"byte_end":51240,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51441,"byte_end":51444,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ When the output type is the same, we can wrap each future in `Either` to avoid the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51445,"byte_end":51531,"line_start":40,"line_end":40,"column_start":1,"column_end":87}},{"value":"/ issue:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51532,"byte_end":51542,"line_start":41,"line_end":41,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51543,"byte_end":51546,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51547,"byte_end":51554,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"/ use tokio_util::either::Either;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51555,"byte_end":51590,"line_start":44,"line_end":44,"column_start":1,"column_end":36}},{"value":"/ # fn some_condition() -> bool { true }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51591,"byte_end":51633,"line_start":45,"line_end":45,"column_start":1,"column_end":43}},{"value":"/ # async fn some_async_function() -> u32 { 10 }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51634,"byte_end":51684,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ # async fn other_async_function() -> u32 { 20 }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51685,"byte_end":51736,"line_start":47,"line_end":47,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51737,"byte_end":51740,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51741,"byte_end":51759,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/ async fn main() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51760,"byte_end":51781,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     let result = if some_condition() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51782,"byte_end":51824,"line_start":51,"line_end":51,"column_start":1,"column_end":43}},{"value":"/         Either::Left(some_async_function())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51825,"byte_end":51872,"line_start":52,"line_end":52,"column_start":1,"column_end":48}},{"value":"/     } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51873,"byte_end":51889,"line_start":53,"line_end":53,"column_start":1,"column_end":17}},{"value":"/         Either::Right(other_async_function())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51890,"byte_end":51939,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/     };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51940,"byte_end":51950,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51951,"byte_end":51954,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/     let value = result.await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51955,"byte_end":51988,"line_start":57,"line_end":57,"column_start":1,"column_end":34}},{"value":"/     println!(\"Result is {}\", value);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":51989,"byte_end":52029,"line_start":58,"line_end":58,"column_start":1,"column_end":41}},{"value":"/     # assert_eq!(value, 10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52030,"byte_end":52062,"line_start":59,"line_end":59,"column_start":1,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52063,"byte_end":52068,"line_start":60,"line_end":60,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52069,"byte_end":52076,"line_start":61,"line_end":61,"column_start":1,"column_end":8}},{"value":"allow(missing_docs)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52077,"byte_end":52099,"line_start":62,"line_end":62,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":383},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52956,"byte_end":52960,"line_start":90,"line_end":90,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<L, R> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":2,"index":13328},"children":[],"decl_id":{"krate":2,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53165,"byte_end":53174,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"poll_read","qualname":"<Either<L, R> as tokio::io::AsyncRead>::poll_read","value":"fn poll_read(Pin<&mut Self>, &mut Context, &mut ReadBuf) -> Poll<Result<()>>","parent":{"krate":22,"index":207},"children":[],"decl_id":{"krate":22,"index":208},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53450,"byte_end":53463,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"poll_fill_buf","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::poll_fill_buf","value":"fn poll_fill_buf(Pin<&mut Self>, &mut Context) -> Poll<Result<&[u8]>>","parent":{"krate":22,"index":165},"children":[],"decl_id":{"krate":22,"index":166},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53594,"byte_end":53601,"line_start":118,"line_end":118,"column_start":8,"column_end":15},"name":"consume","qualname":"<Either<L, R> as tokio::io::AsyncBufRead>::consume","value":"fn consume(Pin<&mut Self>, usize)","parent":{"krate":22,"index":165},"children":[],"decl_id":{"krate":22,"index":167},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53778,"byte_end":53788,"line_start":128,"line_end":128,"column_start":8,"column_end":18},"name":"start_seek","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::start_seek","value":"fn start_seek(Pin<&mut Self>, SeekFrom) -> Result<()>","parent":{"krate":22,"index":246},"children":[],"decl_id":{"krate":22,"index":247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53911,"byte_end":53924,"line_start":132,"line_end":132,"column_start":8,"column_end":21},"name":"poll_complete","qualname":"<Either<L, R> as tokio::io::AsyncSeek>::poll_complete","value":"fn poll_complete(Pin<&mut Self>, &mut Context) -> Poll<Result<u64>>","parent":{"krate":22,"index":246},"children":[],"decl_id":{"krate":22,"index":248},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54140,"byte_end":54150,"line_start":142,"line_end":142,"column_start":8,"column_end":18},"name":"poll_write","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_write","value":"fn poll_write(Pin<&mut Self>, &mut Context, &[u8]) -> Poll<Result<usize>>","parent":{"krate":22,"index":286},"children":[],"decl_id":{"krate":22,"index":287},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54295,"byte_end":54305,"line_start":146,"line_end":146,"column_start":8,"column_end":18},"name":"poll_flush","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_flush","value":"fn poll_flush(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":286},"children":[],"decl_id":{"krate":22,"index":288},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54441,"byte_end":54454,"line_start":150,"line_end":150,"column_start":8,"column_end":21},"name":"poll_shutdown","qualname":"<Either<L, R> as tokio::io::AsyncWrite>::poll_shutdown","value":"fn poll_shutdown(Pin<&mut Self>, &mut Context) -> Poll<tokio::io::Result<()>>","parent":{"krate":22,"index":286},"children":[],"decl_id":{"krate":22,"index":289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54776,"byte_end":54785,"line_start":162,"line_end":162,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<L, R> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":36,"index":96},"children":[],"decl_id":{"krate":36,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":450},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2457,"byte_end":2470,"line_start":108,"line_end":108,"column_start":12,"column_end":25},"name":"poll_read_buf","qualname":"::util::poll_read_buf","value":"fn poll_read_buf<T, B>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where T: AsyncRead, B: BufMut","parent":null,"children":[],"decl_id":null,"docs":" Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","sig":null,"attributes":[{"value":"/ Try to read data from an `AsyncRead` into an implementer of the [`BufMut`] trait.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1228,"byte_end":1313,"line_start":69,"line_end":69,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1318,"byte_end":1321,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ [`BufMut`]: bytes::Buf","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1326,"byte_end":1352,"line_start":71,"line_end":71,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1357,"byte_end":1360,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1365,"byte_end":1378,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1383,"byte_end":1386,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1391,"byte_end":1398,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use bytes::{Bytes, BytesMut};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1403,"byte_end":1436,"line_start":76,"line_end":76,"column_start":5,"column_end":38}},{"value":"/ use tokio_stream as stream;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1441,"byte_end":1472,"line_start":77,"line_end":77,"column_start":5,"column_end":36}},{"value":"/ use tokio::io::Result;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1477,"byte_end":1503,"line_start":78,"line_end":78,"column_start":5,"column_end":31}},{"value":"/ use tokio_util::io::{StreamReader, poll_read_buf};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1508,"byte_end":1562,"line_start":79,"line_end":79,"column_start":5,"column_end":59}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1567,"byte_end":1600,"line_start":80,"line_end":80,"column_start":5,"column_end":38}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1605,"byte_end":1627,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ # #[tokio::main]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1632,"byte_end":1652,"line_start":82,"line_end":82,"column_start":5,"column_end":25}},{"value":"/ # async fn main() -> std::io::Result<()> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1657,"byte_end":1703,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1708,"byte_end":1711,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ // Create a reader from an iterator. This particular reader will always be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1716,"byte_end":1794,"line_start":85,"line_end":85,"column_start":5,"column_end":83}},{"value":"/ // ready.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1799,"byte_end":1812,"line_start":86,"line_end":86,"column_start":5,"column_end":18}},{"value":"/ let mut read = StreamReader::new(stream::iter(vec![Result::Ok(Bytes::from_static(&[0, 1, 2, 3]))]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1817,"byte_end":1921,"line_start":87,"line_end":87,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1926,"byte_end":1929,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut buf = BytesMut::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1934,"byte_end":1968,"line_start":89,"line_end":89,"column_start":5,"column_end":39}},{"value":"/ let mut reads = 0;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":1973,"byte_end":1995,"line_start":90,"line_end":90,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2000,"byte_end":2003,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2008,"byte_end":2018,"line_start":92,"line_end":92,"column_start":5,"column_end":15}},{"value":"/     reads += 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2023,"byte_end":2042,"line_start":93,"line_end":93,"column_start":5,"column_end":24}},{"value":"/     let n = poll_fn(|cx| poll_read_buf(Pin::new(&mut read), cx, &mut buf)).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2047,"byte_end":2133,"line_start":94,"line_end":94,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2138,"byte_end":2141,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/     if n == 0 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2146,"byte_end":2165,"line_start":96,"line_end":96,"column_start":5,"column_end":24}},{"value":"/         break;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2170,"byte_end":2188,"line_start":97,"line_end":97,"column_start":5,"column_end":23}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2193,"byte_end":2202,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2207,"byte_end":2212,"line_start":99,"line_end":99,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2217,"byte_end":2220,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ // one or more reads might be necessary.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2225,"byte_end":2269,"line_start":101,"line_end":101,"column_start":5,"column_end":49}},{"value":"/ assert!(reads >= 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2274,"byte_end":2298,"line_start":102,"line_end":102,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(&buf[..], &[0, 1, 2, 3]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2303,"byte_end":2343,"line_start":103,"line_end":103,"column_start":5,"column_end":45}},{"value":"/ # Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2348,"byte_end":2360,"line_start":104,"line_end":104,"column_start":5,"column_end":17}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2365,"byte_end":2372,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":2377,"byte_end":2384,"line_start":106,"line_end":106,"column_start":5,"column_end":12}}]},{"kind":"Function","id":{"krate":0,"index":453},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4912,"byte_end":4926,"line_start":182,"line_end":182,"column_start":12,"column_end":26},"name":"poll_write_buf","qualname":"::util::poll_write_buf","value":"fn poll_write_buf<T, B>(Pin<&mut T>, &mut Context, &mut B)\n-> Poll<io::Result<usize>> where T: AsyncWrite, B: Buf","parent":null,"children":[],"decl_id":null,"docs":" Try to write data from an implementer of the [`Buf`] trait to an\n [`AsyncWrite`], advancing the buffer's internal cursor.","sig":null,"attributes":[{"value":"/ Try to write data from an implementer of the [`Buf`] trait to an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3540,"byte_end":3608,"line_start":141,"line_end":141,"column_start":5,"column_end":73}},{"value":"/ [`AsyncWrite`], advancing the buffer's internal cursor.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3613,"byte_end":3672,"line_start":142,"line_end":142,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3677,"byte_end":3680,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function will use [vectored writes] when the [`AsyncWrite`] supports","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3685,"byte_end":3762,"line_start":144,"line_end":144,"column_start":5,"column_end":82}},{"value":"/ vectored writes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3767,"byte_end":3787,"line_start":145,"line_end":145,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3792,"byte_end":3795,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3800,"byte_end":3814,"line_start":147,"line_end":147,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3819,"byte_end":3822,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ [`File`] implements [`AsyncWrite`] and [`Cursor<&[u8]>`] implements","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3827,"byte_end":3898,"line_start":149,"line_end":149,"column_start":5,"column_end":76}},{"value":"/ [`Buf`]:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3903,"byte_end":3915,"line_start":150,"line_end":150,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3920,"byte_end":3923,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3928,"byte_end":3941,"line_start":152,"line_end":152,"column_start":5,"column_end":18}},{"value":"/ use tokio_util::io::poll_write_buf;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3946,"byte_end":3985,"line_start":153,"line_end":153,"column_start":5,"column_end":44}},{"value":"/ use tokio::io;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":3990,"byte_end":4008,"line_start":154,"line_end":154,"column_start":5,"column_end":23}},{"value":"/ use tokio::fs::File;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4013,"byte_end":4037,"line_start":155,"line_end":155,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4042,"byte_end":4045,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ use bytes::Buf;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4050,"byte_end":4069,"line_start":157,"line_end":157,"column_start":5,"column_end":24}},{"value":"/ use std::io::Cursor;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4074,"byte_end":4098,"line_start":158,"line_end":158,"column_start":5,"column_end":29}},{"value":"/ use std::pin::Pin;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4103,"byte_end":4125,"line_start":159,"line_end":159,"column_start":5,"column_end":27}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4130,"byte_end":4163,"line_start":160,"line_end":160,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4168,"byte_end":4171,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ #[tokio::main]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4176,"byte_end":4194,"line_start":162,"line_end":162,"column_start":5,"column_end":23}},{"value":"/ async fn main() -> io::Result<()> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4199,"byte_end":4238,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/     let mut file = File::create(\"foo.txt\").await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4243,"byte_end":4297,"line_start":164,"line_end":164,"column_start":5,"column_end":59}},{"value":"/     let mut buf = Cursor::new(b\"data to write\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4302,"byte_end":4354,"line_start":165,"line_end":165,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4359,"byte_end":4362,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/     // Loop until the entire contents of the buffer are written to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4367,"byte_end":4437,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/     // the file.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4442,"byte_end":4462,"line_start":168,"line_end":168,"column_start":5,"column_end":25}},{"value":"/     while buf.has_remaining() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4467,"byte_end":4502,"line_start":169,"line_end":169,"column_start":5,"column_end":40}},{"value":"/         poll_fn(|cx| poll_write_buf(Pin::new(&mut file), cx, &mut buf)).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4507,"byte_end":4590,"line_start":170,"line_end":170,"column_start":5,"column_end":88}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4595,"byte_end":4604,"line_start":171,"line_end":171,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4609,"byte_end":4612,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/     Ok(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4617,"byte_end":4631,"line_start":173,"line_end":173,"column_start":5,"column_end":19}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4636,"byte_end":4641,"line_start":174,"line_end":174,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4646,"byte_end":4653,"line_start":175,"line_end":175,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4658,"byte_end":4661,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ [`Buf`]: bytes::Buf","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4666,"byte_end":4689,"line_start":177,"line_end":177,"column_start":5,"column_end":28}},{"value":"/ [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4694,"byte_end":4735,"line_start":178,"line_end":178,"column_start":5,"column_end":46}},{"value":"/ [`File`]: tokio::fs::File","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4740,"byte_end":4769,"line_start":179,"line_end":179,"column_start":5,"column_end":34}},{"value":"/ [vectored writes]: tokio::io::AsyncWrite::poll_write_vectored","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":4774,"byte_end":4839,"line_start":180,"line_end":180,"column_start":5,"column_end":70}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220890,"byte_end":16220900,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16221051,"byte_end":16221061,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16221388,"byte_end":16221398,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":487},{"krate":0,"index":488}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16221622,"byte_end":16221632,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":490},{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16231868,"byte_end":16231877,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":593}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232109,"byte_end":16232119,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232270,"byte_end":16232279,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232634,"byte_end":16232644,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232890,"byte_end":16232898,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":601}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232995,"byte_end":16233003,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":603}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16233114,"byte_end":16233122,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":605}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16233222,"byte_end":16233230,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":607}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16233340,"byte_end":16233350,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":612},{"krate":0,"index":613}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16241637,"byte_end":16241647,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":632}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244482,"byte_end":16244488,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":704},{"krate":0,"index":705}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248344,"byte_end":16248350,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":715},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":721},{"krate":0,"index":722},{"krate":0,"index":723},{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254741,"byte_end":16254747,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16255063,"byte_end":16255069,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":734},{"krate":0,"index":735},{"krate":0,"index":736},{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16255784,"byte_end":16255790,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256830,"byte_end":16256841,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":746}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16257768,"byte_end":16257778,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":797},{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258707,"byte_end":16258717,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":802},{"krate":0,"index":803},{"krate":0,"index":804},{"krate":0,"index":805},{"krate":0,"index":806},{"krate":0,"index":807},{"krate":0,"index":808},{"krate":0,"index":811},{"krate":0,"index":812},{"krate":0,"index":813}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261547,"byte_end":16261557,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261870,"byte_end":16261880,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16262606,"byte_end":16262616,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":831}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16263595,"byte_end":16263606,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":880}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16263962,"byte_end":16263973,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885},{"krate":0,"index":886},{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16266818,"byte_end":16266829,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16267593,"byte_end":16267604,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":908},{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16267845,"byte_end":16267856,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282900,"byte_end":16282920,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979},{"krate":0,"index":980},{"krate":0,"index":981},{"krate":0,"index":982}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16286254,"byte_end":16286274,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16287160,"byte_end":16287180,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16288521,"byte_end":16288541,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":992}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289103,"byte_end":16289110,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1001},{"krate":0,"index":1002},{"krate":0,"index":1003},{"krate":0,"index":1004},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1008},{"krate":0,"index":1009},{"krate":0,"index":1010},{"krate":0,"index":1011},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1017},{"krate":0,"index":1019},{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299885,"byte_end":16299892,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1022}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16300018,"byte_end":16300043,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1024}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16300201,"byte_end":16300226,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1026}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16300361,"byte_end":16300386,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301455,"byte_end":16301465,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1070},{"krate":0,"index":1071}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16304007,"byte_end":16304017,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1080}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307393,"byte_end":16307403,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1083},{"krate":0,"index":1084}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307726,"byte_end":16307736,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1086}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308043,"byte_end":16308058,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308340,"byte_end":16308355,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1090}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308472,"byte_end":16308487,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16310813,"byte_end":16310830,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1138},{"krate":0,"index":1139},{"krate":0,"index":1140}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313479,"byte_end":16313496,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1142},{"krate":0,"index":1143},{"krate":0,"index":1144},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16316788,"byte_end":16316805,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1150},{"krate":0,"index":1151}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317169,"byte_end":16317186,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317604,"byte_end":16317626,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1155}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317955,"byte_end":16317977,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1157}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16318108,"byte_end":16318130,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16320225,"byte_end":16320234,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322174,"byte_end":16322186,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1378},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16323073,"byte_end":16323085,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1382},{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16327767,"byte_end":16327779,"line_start":113,"line_end":113,"column_start":15,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329018,"byte_end":16329030,"line_start":156,"line_end":156,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1430},{"krate":0,"index":1431},{"krate":0,"index":1432},{"krate":0,"index":1433}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16330111,"byte_end":16330123,"line_start":190,"line_end":190,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1438}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16330884,"byte_end":16330896,"line_start":218,"line_end":218,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1443},{"krate":0,"index":1444}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14585,"byte_end":14594,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14954,"byte_end":14963,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/tree_node.rs","byte_start":17413,"byte_end":17421,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":39},{"krate":0,"index":40}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9395,"byte_end":9412,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9637,"byte_end":9654,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":86}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9845,"byte_end":9862,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9974,"byte_end":9991,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10081,"byte_end":10098,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13336,"byte_end":13361,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":100}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13533,"byte_end":13558,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":103},{"krate":0,"index":104}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29631,"byte_end":29644,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29966,"byte_end":29979,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30139,"byte_end":30152,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31266,"byte_end":31276,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38937,"byte_end":38947,"line_start":245,"line_end":245,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39677,"byte_end":39687,"line_start":265,"line_end":265,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40835,"byte_end":40848,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44060,"byte_end":44073,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44287,"byte_end":44300,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":241}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44418,"byte_end":44431,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44643,"byte_end":44656,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45229,"byte_end":45246,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":293},{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47502,"byte_end":47519,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47936,"byte_end":47953,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47988,"byte_end":48005,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49393,"byte_end":49403,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49691,"byte_end":49701,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":50099,"byte_end":50106,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":335},{"krate":0,"index":336}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52852,"byte_end":52858,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":382},{"krate":0,"index":383}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53101,"byte_end":53107,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":387}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53380,"byte_end":53386,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53714,"byte_end":53720,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54074,"byte_end":54080,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54632,"byte_end":54638,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":407},{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":647,"byte_end":652,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":459}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/mod.rs","byte_start":16219302,"byte_end":16219318,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":917}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":804,"byte_end":806,"line_start":42,"line_end":42,"column_start":13,"column_end":15},"ref_id":{"krate":0,"index":1306}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":904,"byte_end":908,"line_start":54,"line_end":54,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/lib.rs","byte_start":919,"byte_end":925,"line_start":56,"line_end":56,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":340}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16220890,"byte_end":16220900,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1166},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16221051,"byte_end":16221061,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16221388,"byte_end":16221398,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/bytes_codec.rs","byte_start":16221622,"byte_end":16221632,"line_start":78,"line_end":78,"column_start":28,"column_end":38},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1166},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16231868,"byte_end":16231877,"line_start":48,"line_end":48,"column_start":18,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232109,"byte_end":16232119,"line_start":59,"line_end":59,"column_start":18,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232270,"byte_end":16232279,"line_start":67,"line_end":67,"column_start":25,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1190},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232634,"byte_end":16232644,"line_start":83,"line_end":83,"column_start":25,"column_end":35},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":590},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232890,"byte_end":16232898,"line_start":94,"line_end":94,"column_start":28,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2747}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16232995,"byte_end":16233003,"line_start":99,"line_end":99,"column_start":31,"column_end":39},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16233114,"byte_end":16233122,"line_start":104,"line_end":104,"column_start":29,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2747}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16233222,"byte_end":16233230,"line_start":109,"line_end":109,"column_start":32,"column_end":40},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":1197},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16233340,"byte_end":16233350,"line_start":114,"line_end":114,"column_start":26,"column_end":36},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2053},"to":{"krate":36,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_impl.rs","byte_start":16241637,"byte_end":16241647,"line_start":249,"line_end":249,"column_start":30,"column_end":40},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":2053},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16244482,"byte_end":16244488,"line_start":33,"line_end":33,"column_start":12,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16248344,"byte_end":16248350,"line_start":118,"line_end":118,"column_start":12,"column_end":18},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":1724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16254741,"byte_end":16254747,"line_start":283,"line_end":283,"column_start":23,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":1724},"to":{"krate":36,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16255063,"byte_end":16255069,"line_start":296,"line_end":296,"column_start":27,"column_end":33},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":1724},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16255784,"byte_end":16255790,"line_start":321,"line_end":321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":1724},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed.rs","byte_start":16256830,"byte_end":16256841,"line_start":359,"line_end":359,"column_start":12,"column_end":23},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":1202},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16257768,"byte_end":16257778,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":1683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16258707,"byte_end":16258717,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":1683},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261547,"byte_end":16261557,"line_start":149,"line_end":149,"column_start":23,"column_end":33},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":1683},"to":{"krate":36,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16261870,"byte_end":16261880,"line_start":162,"line_end":162,"column_start":27,"column_end":37},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":1683},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_read.rs","byte_start":16262606,"byte_end":16262616,"line_start":185,"line_end":185,"column_start":27,"column_end":37},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":1683},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16263595,"byte_end":16263606,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":1642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16263962,"byte_end":16263973,"line_start":41,"line_end":41,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":1642},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16266818,"byte_end":16266829,"line_start":129,"line_end":129,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":1642},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16267593,"byte_end":16267604,"line_start":155,"line_end":155,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":1642},"to":{"krate":36,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/framed_write.rs","byte_start":16267845,"byte_end":16267856,"line_start":166,"line_end":166,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":1642},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16282900,"byte_end":16282920,"line_start":441,"line_end":441,"column_start":6,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":1226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16286254,"byte_end":16286274,"line_start":549,"line_end":549,"column_start":18,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16287160,"byte_end":16287180,"line_start":580,"line_end":580,"column_start":25,"column_end":45},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":1226},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16288521,"byte_end":16288541,"line_start":624,"line_end":624,"column_start":18,"column_end":38},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":1226},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16289103,"byte_end":16289110,"line_start":650,"line_end":650,"column_start":6,"column_end":13},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":1214},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16299885,"byte_end":16299892,"line_start":1027,"line_end":1027,"column_start":18,"column_end":25},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":1214},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16300018,"byte_end":16300043,"line_start":1035,"line_end":1035,"column_start":21,"column_end":46},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":974},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16300201,"byte_end":16300226,"line_start":1041,"line_end":1041,"column_start":23,"column_end":48},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":974},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/length_delimited.rs","byte_start":16300361,"byte_end":16300386,"line_start":1047,"line_end":1047,"column_start":19,"column_end":44},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":974},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16301455,"byte_end":16301465,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":1244},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16304007,"byte_end":16304017,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307393,"byte_end":16307403,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":1244},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16307726,"byte_end":16307736,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":1244},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308043,"byte_end":16308058,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308340,"byte_end":16308355,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":1266},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/lines_codec.rs","byte_start":16308472,"byte_end":16308487,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":1266},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16310813,"byte_end":16310830,"line_start":65,"line_end":65,"column_start":6,"column_end":23},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":1274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16313479,"byte_end":16313496,"line_start":134,"line_end":134,"column_start":18,"column_end":35},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":1274},"to":{"krate":0,"index":512}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16316788,"byte_end":16316805,"line_start":212,"line_end":212,"column_start":24,"column_end":41},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":1274},"to":{"krate":0,"index":529}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317169,"byte_end":16317186,"line_start":228,"line_end":228,"column_start":18,"column_end":35},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1274},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317604,"byte_end":16317626,"line_start":246,"line_end":246,"column_start":23,"column_end":45},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16317955,"byte_end":16317977,"line_start":257,"line_end":257,"column_start":26,"column_end":48},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1298},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/codec/any_delimiter_codec.rs","byte_start":16318108,"byte_end":16318130,"line_start":263,"line_end":263,"column_start":28,"column_end":50},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":1298},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/read_buf.rs","byte_start":16320225,"byte_end":16320234,"line_start":53,"line_end":53,"column_start":31,"column_end":40},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":1335},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16322174,"byte_end":16322186,"line_start":57,"line_end":57,"column_start":20,"column_end":32},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":1598},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/reader_stream.rs","byte_start":16323073,"byte_end":16323085,"line_start":86,"line_end":86,"column_start":31,"column_end":43},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":1598},"to":{"krate":36,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16327767,"byte_end":16327779,"line_start":113,"line_end":113,"column_start":15,"column_end":27},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":1549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16329018,"byte_end":16329030,"line_start":156,"line_end":156,"column_start":12,"column_end":24},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1549},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16330111,"byte_end":16330123,"line_start":190,"line_end":190,"column_start":29,"column_end":41},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1549},"to":{"krate":22,"index":207}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/io/stream_reader.rs","byte_start":16330884,"byte_end":16330896,"line_start":218,"line_end":218,"column_start":32,"column_end":44},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1549},"to":{"krate":22,"index":165}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14585,"byte_end":14594,"line_start":10,"line_end":10,"column_start":6,"column_end":15},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1461},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/guard.rs","byte_start":14954,"byte_end":14963,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1461},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token/tree_node.rs","byte_start":17413,"byte_end":17421,"line_start":50,"line_end":50,"column_start":6,"column_end":14},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":35},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9395,"byte_end":9412,"line_start":71,"line_end":71,"column_start":27,"column_end":44},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9637,"byte_end":9654,"line_start":79,"line_end":79,"column_start":16,"column_end":33},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9845,"byte_end":9862,"line_start":88,"line_end":88,"column_start":15,"column_end":32},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":9974,"byte_end":9991,"line_start":94,"line_end":94,"column_start":18,"column_end":35},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":81},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":10081,"byte_end":10098,"line_start":100,"line_end":100,"column_start":6,"column_end":23},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":81},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13336,"byte_end":13361,"line_start":197,"line_end":197,"column_start":31,"column_end":56},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/cancellation_token.rs","byte_start":13533,"byte_end":13558,"line_start":203,"line_end":203,"column_start":21,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":1465},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29631,"byte_end":29644,"line_start":14,"line_end":14,"column_start":9,"column_end":22},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":1502},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":29966,"byte_end":29979,"line_start":24,"line_end":24,"column_start":26,"column_end":39},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":1502},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":30139,"byte_end":30152,"line_start":30,"line_end":30,"column_start":43,"column_end":56},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":1502},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":31266,"byte_end":31276,"line_start":67,"line_end":67,"column_start":25,"column_end":35},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1524},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":38937,"byte_end":38947,"line_start":245,"line_end":245,"column_start":19,"column_end":29},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1524},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/mpsc.rs","byte_start":39677,"byte_end":39687,"line_start":265,"line_end":265,"column_start":37,"column_end":47},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1524},"to":{"krate":21,"index":17}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":40835,"byte_end":40848,"line_start":18,"line_end":18,"column_start":6,"column_end":19},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":226},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44060,"byte_end":44073,"line_start":110,"line_end":110,"column_start":17,"column_end":30},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":226},"to":{"krate":36,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44287,"byte_end":44300,"line_start":118,"line_end":118,"column_start":16,"column_end":29},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44418,"byte_end":44431,"line_start":124,"line_end":124,"column_start":21,"column_end":34},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/poll_semaphore.rs","byte_start":44643,"byte_end":44656,"line_start":132,"line_end":132,"column_start":27,"column_end":40},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":226},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":45229,"byte_end":45246,"line_start":18,"line_end":18,"column_start":13,"column_end":30},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":282},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47502,"byte_end":47519,"line_start":82,"line_end":82,"column_start":20,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47936,"byte_end":47953,"line_start":94,"line_end":94,"column_start":25,"column_end":42},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":3162}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":47988,"byte_end":48005,"line_start":96,"line_end":96,"column_start":24,"column_end":41},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":282},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49393,"byte_end":49403,"line_start":141,"line_end":141,"column_start":27,"column_end":37},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":316},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":49691,"byte_end":49701,"line_start":153,"line_end":153,"column_start":36,"column_end":46},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":316},"to":{"krate":2,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/sync/reusable_box.rs","byte_start":50099,"byte_end":50106,"line_start":165,"line_end":165,"column_start":20,"column_end":27},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":329},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":52852,"byte_end":52858,"line_start":83,"line_end":83,"column_start":26,"column_end":32},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1532},"to":{"krate":2,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53101,"byte_end":53107,"line_start":95,"line_end":95,"column_start":26,"column_end":32},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1532},"to":{"krate":22,"index":207}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53380,"byte_end":53386,"line_start":109,"line_end":109,"column_start":29,"column_end":35},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1532},"to":{"krate":22,"index":165}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":53714,"byte_end":53720,"line_start":123,"line_end":123,"column_start":26,"column_end":32},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1532},"to":{"krate":22,"index":246}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54074,"byte_end":54080,"line_start":137,"line_end":137,"column_start":27,"column_end":33},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1532},"to":{"krate":22,"index":286}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-util-0.7.4/src/either.rs","byte_start":54632,"byte_end":54638,"line_start":155,"line_end":155,"column_start":45,"column_end":51},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1532},"to":{"krate":36,"index":96}}]}