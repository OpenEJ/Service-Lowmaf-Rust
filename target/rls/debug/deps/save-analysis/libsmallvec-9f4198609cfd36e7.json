{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0","program":"/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","smallvec","--edition=2018","/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=9f4198609cfd36e7","-C","extra-filename=-9f4198609cfd36e7","--out-dir","/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","-L","dependency=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libsmallvec-9f4198609cfd36e7.rmeta"},"prelude":{"crate_id":{"name":"smallvec","disambiguator":[12545130721221692768,0]},"crate_root":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src","external_crates":[{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}}],"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":301,"byte_end":66294,"line_start":7,"line_end":2132,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":301,"byte_end":66294,"line_start":7,"line_end":2132,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":49},{"krate":0,"index":52},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":65},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":78},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":85},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90},{"krate":0,"index":93},{"krate":0,"index":399},{"krate":0,"index":404},{"krate":0,"index":96},{"krate":0,"index":98},{"krate":0,"index":100},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":107},{"krate":0,"index":114},{"krate":0,"index":118},{"krate":0,"index":121},{"krate":0,"index":124},{"krate":0,"index":131},{"krate":0,"index":136},{"krate":0,"index":140},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":155},{"krate":0,"index":164},{"krate":0,"index":166},{"krate":0,"index":168},{"krate":0,"index":172},{"krate":0,"index":241},{"krate":0,"index":246},{"krate":0,"index":250},{"krate":0,"index":254},{"krate":0,"index":257},{"krate":0,"index":260},{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":284},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":295},{"krate":0,"index":299},{"krate":0,"index":302},{"krate":0,"index":305},{"krate":0,"index":308},{"krate":0,"index":312},{"krate":0,"index":316},{"krate":0,"index":318},{"krate":0,"index":321},{"krate":0,"index":324},{"krate":0,"index":328},{"krate":0,"index":330},{"krate":0,"index":335},{"krate":0,"index":338},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":349},{"krate":0,"index":352},{"krate":0,"index":354},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":365},{"krate":0,"index":371},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":384},{"krate":0,"index":389},{"krate":0,"index":392},{"krate":0,"index":406},{"krate":0,"index":411},{"krate":0,"index":416},{"krate":0,"index":421},{"krate":0,"index":426},{"krate":0,"index":431},{"krate":0,"index":436},{"krate":0,"index":441},{"krate":0,"index":446},{"krate":0,"index":451},{"krate":0,"index":456},{"krate":0,"index":461},{"krate":0,"index":466},{"krate":0,"index":471},{"krate":0,"index":476},{"krate":0,"index":481},{"krate":0,"index":486},{"krate":0,"index":491},{"krate":0,"index":496},{"krate":0,"index":501},{"krate":0,"index":506},{"krate":0,"index":511},{"krate":0,"index":516},{"krate":0,"index":521},{"krate":0,"index":526},{"krate":0,"index":531},{"krate":0,"index":536},{"krate":0,"index":541},{"krate":0,"index":546},{"krate":0,"index":551},{"krate":0,"index":556},{"krate":0,"index":561},{"krate":0,"index":566},{"krate":0,"index":571},{"krate":0,"index":576},{"krate":0,"index":581},{"krate":0,"index":586},{"krate":0,"index":591},{"krate":0,"index":596},{"krate":0,"index":601},{"krate":0,"index":606},{"krate":0,"index":611},{"krate":0,"index":616},{"krate":0,"index":621},{"krate":0,"index":626},{"krate":0,"index":631},{"krate":0,"index":636},{"krate":0,"index":641},{"krate":0,"index":646},{"krate":0,"index":651},{"krate":0,"index":656},{"krate":0,"index":661},{"krate":0,"index":666},{"krate":0,"index":393},{"krate":0,"index":396}],"decl_id":null,"docs":" Small vectors in various sizes. These store a certain number of elements inline, and fall back\n to the heap for larger allocations.  This can be a useful optimization for improving cache\n locality and reducing allocator traffic for workloads that fit within the inline buffer.","sig":null,"attributes":[{"value":"/ Small vectors in various sizes. These store a certain number of elements inline, and fall back","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":301,"byte_end":399,"line_start":7,"line_end":7,"column_start":1,"column_end":99}},{"value":"/ to the heap for larger allocations.  This can be a useful optimization for improving cache","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":400,"byte_end":494,"line_start":8,"line_end":8,"column_start":1,"column_end":95}},{"value":"/ locality and reducing allocator traffic for workloads that fit within the inline buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":495,"byte_end":587,"line_start":9,"line_end":9,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":588,"byte_end":591,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ## `no_std` support","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":592,"byte_end":615,"line_start":11,"line_end":11,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":616,"byte_end":619,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ By default, `smallvec` does not depend on `std`.  However, the optional","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":620,"byte_end":695,"line_start":13,"line_end":13,"column_start":1,"column_end":76}},{"value":"/ `write` feature implements the `std::io::Write` trait for vectors of `u8`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":696,"byte_end":774,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ When this feature is enabled, `smallvec` depends on `std`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":775,"byte_end":837,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":838,"byte_end":841,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ ## Optional features","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":842,"byte_end":866,"line_start":17,"line_end":17,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":867,"byte_end":870,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ### `serde`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":871,"byte_end":886,"line_start":19,"line_end":19,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":887,"byte_end":890,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ When this optional dependency is enabled, `SmallVec` implements the `serde::Serialize` and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":891,"byte_end":985,"line_start":21,"line_end":21,"column_start":1,"column_end":95}},{"value":"/ `serde::Deserialize` traits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":986,"byte_end":1018,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1019,"byte_end":1022,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ ### `write`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1023,"byte_end":1038,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1039,"byte_end":1042,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled, `SmallVec<[u8; _]>` implements the `std::io::Write` trait.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1043,"byte_end":1135,"line_start":26,"line_end":26,"column_start":1,"column_end":93}},{"value":"/ This feature is not compatible with `#![no_std]` programs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1136,"byte_end":1198,"line_start":27,"line_end":27,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1199,"byte_end":1202,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ### `union`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1203,"byte_end":1218,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1219,"byte_end":1222,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ **This feature requires Rust 1.49.**","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1223,"byte_end":1263,"line_start":31,"line_end":31,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1264,"byte_end":1267,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ When the `union` feature is enabled `smallvec` will track its state (inline or spilled)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1268,"byte_end":1359,"line_start":33,"line_end":33,"column_start":1,"column_end":92}},{"value":"/ without the use of an enum tag, reducing the size of the `smallvec` by one machine word.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1360,"byte_end":1452,"line_start":34,"line_end":34,"column_start":1,"column_end":93}},{"value":"/ This means that there is potentially no space overhead compared to `Vec`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1453,"byte_end":1530,"line_start":35,"line_end":35,"column_start":1,"column_end":78}},{"value":"/ Note that `smallvec` can still be larger than `Vec` if the inline buffer is larger than two","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1531,"byte_end":1626,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ machine words.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1627,"byte_end":1645,"line_start":37,"line_end":37,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1646,"byte_end":1649,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ To use this feature add `features = [\"union\"]` in the `smallvec` section of Cargo.toml.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1650,"byte_end":1741,"line_start":39,"line_end":39,"column_start":1,"column_end":92}},{"value":"/ Note that this feature requires Rust 1.49.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1742,"byte_end":1788,"line_start":40,"line_end":40,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1789,"byte_end":1792,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#55149](https://github.com/rust-lang/rust/issues/55149)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1793,"byte_end":1883,"line_start":42,"line_end":42,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1884,"byte_end":1887,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ ### `const_generics`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1888,"byte_end":1912,"line_start":44,"line_end":44,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1913,"byte_end":1916,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ **This feature requires Rust 1.51.**","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1917,"byte_end":1957,"line_start":46,"line_end":46,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1958,"byte_end":1961,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled, `SmallVec` works with any arrays of any size, not just a fixed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":1962,"byte_end":2058,"line_start":48,"line_end":48,"column_start":1,"column_end":97}},{"value":"/ list of sizes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2059,"byte_end":2077,"line_start":49,"line_end":49,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2078,"byte_end":2081,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ### `const_new`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2082,"byte_end":2101,"line_start":51,"line_end":51,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2102,"byte_end":2105,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ **This feature requires Rust 1.51.**","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2106,"byte_end":2146,"line_start":53,"line_end":53,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2147,"byte_end":2150,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This feature exposes the functions [`SmallVec::new_const`], [`SmallVec::from_const`], and [`smallvec_inline`] which enables the `SmallVec` to be initialized from a const context.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2151,"byte_end":2333,"line_start":55,"line_end":55,"column_start":1,"column_end":183}},{"value":"/ For details, see the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2334,"byte_end":2358,"line_start":56,"line_end":56,"column_start":1,"column_end":25}},{"value":"/ [Rust Reference](https://doc.rust-lang.org/reference/const_eval.html#const-functions).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2359,"byte_end":2449,"line_start":57,"line_end":57,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2450,"byte_end":2453,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ### `specialization`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2454,"byte_end":2478,"line_start":59,"line_end":59,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2479,"byte_end":2482,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ **This feature is unstable and requires a nightly build of the Rust toolchain.**","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2483,"byte_end":2567,"line_start":61,"line_end":61,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2568,"byte_end":2571,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ When this feature is enabled, `SmallVec::from(slice)` has improved performance for slices","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2572,"byte_end":2665,"line_start":63,"line_end":63,"column_start":1,"column_end":94}},{"value":"/ of `Copy` types.  (Without this feature, you can use `SmallVec::from_slice` to get optimal","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2666,"byte_end":2760,"line_start":64,"line_end":64,"column_start":1,"column_end":95}},{"value":"/ performance for `Copy` types.)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2761,"byte_end":2795,"line_start":65,"line_end":65,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2796,"byte_end":2799,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#31844](https://github.com/rust-lang/rust/issues/31844)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2800,"byte_end":2890,"line_start":67,"line_end":67,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2891,"byte_end":2894,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ ### `may_dangle`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2895,"byte_end":2915,"line_start":69,"line_end":69,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2916,"byte_end":2919,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ **This feature is unstable and requires a nightly build of the Rust toolchain.**","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":2920,"byte_end":3004,"line_start":71,"line_end":71,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":3005,"byte_end":3008,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This feature makes the Rust compiler less strict about use of vectors that contain borrowed","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":3009,"byte_end":3104,"line_start":73,"line_end":73,"column_start":1,"column_end":96}},{"value":"/ references. For details, see the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":3105,"byte_end":3141,"line_start":74,"line_end":74,"column_start":1,"column_end":37}},{"value":"/ [Rustonomicon](https://doc.rust-lang.org/1.42.0/nomicon/dropck.html#an-escape-hatch).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":3142,"byte_end":3231,"line_start":75,"line_end":75,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":3232,"byte_end":3235,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ Tracking issue: [rust-lang/rust#34761](https://github.com/rust-lang/rust/issues/34761)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":3236,"byte_end":3326,"line_start":77,"line_end":77,"column_start":1,"column_end":91}},{"value":"no_std","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":3328,"byte_end":3338,"line_start":79,"line_end":79,"column_start":1,"column_end":11}},{"value":"deny(missing_docs)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":3738,"byte_end":3760,"line_start":89,"line_end":89,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":90},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8927,"byte_end":8942,"line_start":269,"line_end":269,"column_start":11,"column_end":26},"name":"ExtendFromSlice","qualname":"::ExtendFromSlice","value":"ExtendFromSlice<T>","parent":null,"children":[{"krate":0,"index":92}],"decl_id":null,"docs":" Trait to be implemented by a collection that can be extended from a slice","sig":null,"attributes":[{"value":"/ Trait to be implemented by a collection that can be extended from a slice","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8390,"byte_end":8467,"line_start":248,"line_end":248,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8468,"byte_end":8471,"line_start":249,"line_end":249,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8472,"byte_end":8486,"line_start":250,"line_end":250,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8487,"byte_end":8490,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8491,"byte_end":8502,"line_start":252,"line_end":252,"column_start":1,"column_end":12}},{"value":"/ use smallvec::{ExtendFromSlice, SmallVec};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8503,"byte_end":8549,"line_start":253,"line_end":253,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8550,"byte_end":8553,"line_start":254,"line_end":254,"column_start":1,"column_end":4}},{"value":"/ fn initialize<V: ExtendFromSlice<u8>>(v: &mut V) {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8554,"byte_end":8608,"line_start":255,"line_end":255,"column_start":1,"column_end":55}},{"value":"/     v.extend_from_slice(b\"Test!\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8609,"byte_end":8647,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8648,"byte_end":8653,"line_start":257,"line_end":257,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8654,"byte_end":8657,"line_start":258,"line_end":258,"column_start":1,"column_end":4}},{"value":"/ let mut vec = Vec::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8658,"byte_end":8687,"line_start":259,"line_end":259,"column_start":1,"column_end":30}},{"value":"/ initialize(&mut vec);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8688,"byte_end":8713,"line_start":260,"line_end":260,"column_start":1,"column_end":26}},{"value":"/ assert_eq!(&vec, b\"Test!\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8714,"byte_end":8745,"line_start":261,"line_end":261,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8746,"byte_end":8749,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ let mut small_vec = SmallVec::<[u8; 8]>::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8750,"byte_end":8801,"line_start":263,"line_end":263,"column_start":1,"column_end":52}},{"value":"/ initialize(&mut small_vec);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8802,"byte_end":8833,"line_start":264,"line_end":264,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(&small_vec as &[_], b\"Test!\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8834,"byte_end":8879,"line_start":265,"line_end":265,"column_start":1,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8880,"byte_end":8887,"line_start":266,"line_end":266,"column_start":1,"column_end":8}},{"value":"deprecated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8903,"byte_end":8916,"line_start":268,"line_end":268,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9017,"byte_end":9034,"line_start":271,"line_end":271,"column_start":8,"column_end":25},"name":"extend_from_slice","qualname":"::ExtendFromSlice::extend_from_slice","value":"fn extend_from_slice(&mut Self, &[T])","parent":{"krate":0,"index":90},"children":[],"decl_id":null,"docs":" Extends a collection from a slice of its element type\n","sig":null,"attributes":[{"value":"/ Extends a collection from a slice of its element type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":8952,"byte_end":9009,"line_start":270,"line_end":270,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9138,"byte_end":9155,"line_start":276,"line_end":276,"column_start":8,"column_end":25},"name":"extend_from_slice","qualname":"<Vec<T> as ExtendFromSlice>::extend_from_slice","value":"fn extend_from_slice(&mut Self, &[T])","parent":{"krate":0,"index":90},"children":[],"decl_id":{"krate":0,"index":92},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":400},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9409,"byte_end":9425,"line_start":285,"line_end":285,"column_start":5,"column_end":21},"name":"CapacityOverflow","qualname":"::CollectionAllocErr::CapacityOverflow","value":"CollectionAllocErr::CapacityOverflow","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" Overflow `usize::MAX` or other error during size computation\n","sig":null,"attributes":[{"value":"/ Overflow `usize::MAX` or other error during size computation","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9340,"byte_end":9404,"line_start":284,"line_end":284,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":402},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9469,"byte_end":9477,"line_start":287,"line_end":287,"column_start":5,"column_end":13},"name":"AllocErr","qualname":"::CollectionAllocErr::AllocErr","value":"CollectionAllocErr::AllocErr { layout }","parent":{"krate":0,"index":399},"children":[],"decl_id":null,"docs":" The allocator return an error\n","sig":null,"attributes":[{"value":"/ The allocator return an error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9431,"byte_end":9464,"line_start":286,"line_end":286,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":403},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9544,"byte_end":9550,"line_start":289,"line_end":289,"column_start":9,"column_end":15},"name":"layout","qualname":"::CollectionAllocErr::AllocErr::layout","value":"core::alloc::Layout","parent":{"krate":0,"index":402},"children":[],"decl_id":null,"docs":" The layout that was passed to the allocator\n","sig":null,"attributes":[{"value":"/ The layout that was passed to the allocator","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9488,"byte_end":9535,"line_start":288,"line_end":288,"column_start":9,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":399},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9315,"byte_end":9333,"line_start":283,"line_end":283,"column_start":10,"column_end":28},"name":"CollectionAllocErr","qualname":"::CollectionAllocErr","value":"enum CollectionAllocErr {\n    CapacityOverflow,\n    AllocErr {\n            layout: Layout,\n        },\n}","parent":null,"children":[{"krate":0,"index":400},{"krate":0,"index":402}],"decl_id":null,"docs":" Error type for APIs with fallible heap allocation\n","sig":null,"attributes":[{"value":"/ Error type for APIs with fallible heap allocation","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9235,"byte_end":9288,"line_start":281,"line_end":281,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9620,"byte_end":9623,"line_start":294,"line_end":294,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CollectionAllocErr as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9907},"children":[],"decl_id":{"krate":1,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9809,"byte_end":9813,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"from","qualname":"<CollectionAllocErr as core::convert::From>::from","value":"fn from(LayoutErr) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":107},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11052,"byte_end":11057,"line_start":335,"line_end":335,"column_start":12,"column_end":17},"name":"Drain","qualname":"::Drain","value":"Drain {  }","parent":null,"children":[{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113}],"decl_id":null,"docs":" An iterator that removes the items from a `SmallVec` and yields them by value.","sig":null,"attributes":[{"value":"/ An iterator that removes the items from a `SmallVec` and yields them by value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":10865,"byte_end":10947,"line_start":330,"line_end":330,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":10948,"byte_end":10951,"line_start":331,"line_end":331,"column_start":1,"column_end":4}},{"value":"/ Returned from [`SmallVec::drain`][1].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":10952,"byte_end":10993,"line_start":332,"line_end":332,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":10994,"byte_end":10997,"line_start":333,"line_end":333,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.SmallVec.html#method.drain","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":10998,"byte_end":11040,"line_start":334,"line_end":334,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":117},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11285,"byte_end":11288,"line_start":346,"line_end":346,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Drain as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":128},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11635,"byte_end":11639,"line_start":358,"line_end":358,"column_start":8,"column_end":12},"name":"next","qualname":"<Drain as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<T::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11618,"byte_end":11627,"line_start":357,"line_end":357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":130},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11800,"byte_end":11809,"line_start":365,"line_end":365,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Drain as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11783,"byte_end":11792,"line_start":364,"line_end":364,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11968,"byte_end":11977,"line_start":372,"line_end":372,"column_start":8,"column_end":17},"name":"next_back","qualname":"<Drain as core::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<T::Item>","parent":{"krate":1,"index":8035},"children":[],"decl_id":{"krate":1,"index":8036},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11951,"byte_end":11960,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":12201,"byte_end":12204,"line_start":381,"line_end":381,"column_start":8,"column_end":11},"name":"len","qualname":"<Drain as core::iter::ExactSizeIterator>::len","value":"fn len(&Self) -> usize","parent":{"krate":1,"index":8060},"children":[],"decl_id":{"krate":1,"index":8061},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":12184,"byte_end":12193,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":12365,"byte_end":12369,"line_start":389,"line_end":389,"column_start":8,"column_end":12},"name":"drop","qualname":"<Drain as core::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":1,"index":3393},"children":[],"decl_id":{"krate":1,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":168},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17538,"byte_end":17546,"line_start":555,"line_end":555,"column_start":12,"column_end":20},"name":"SmallVec","qualname":"::SmallVec","value":"SmallVec {  }","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171}],"decl_id":null,"docs":" A `Vec`-like container that can store a small number of elements inline.","sig":null,"attributes":[{"value":"/ A `Vec`-like container that can store a small number of elements inline.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16445,"byte_end":16521,"line_start":529,"line_end":529,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16522,"byte_end":16525,"line_start":530,"line_end":530,"column_start":1,"column_end":4}},{"value":"/ `SmallVec` acts like a vector, but can store a limited amount of data inline within the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16526,"byte_end":16617,"line_start":531,"line_end":531,"column_start":1,"column_end":92}},{"value":"/ `SmallVec` struct rather than in a separate allocation.  If the data exceeds this limit, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16618,"byte_end":16714,"line_start":532,"line_end":532,"column_start":1,"column_end":97}},{"value":"/ `SmallVec` will \"spill\" its data onto the heap, allocating a new buffer to hold it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16715,"byte_end":16802,"line_start":533,"line_end":533,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16803,"byte_end":16806,"line_start":534,"line_end":534,"column_start":1,"column_end":4}},{"value":"/ The amount of data that a `SmallVec` can store inline depends on its backing store. The backing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16807,"byte_end":16906,"line_start":535,"line_end":535,"column_start":1,"column_end":100}},{"value":"/ store can be any type that implements the `Array` trait; usually it is a small fixed-sized","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16907,"byte_end":17001,"line_start":536,"line_end":536,"column_start":1,"column_end":95}},{"value":"/ array.  For example a `SmallVec<[u64; 8]>` can hold up to eight 64-bit integers inline.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17002,"byte_end":17093,"line_start":537,"line_end":537,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17094,"byte_end":17097,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ ## Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17098,"byte_end":17112,"line_start":539,"line_end":539,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17113,"byte_end":17116,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17117,"byte_end":17128,"line_start":541,"line_end":541,"column_start":1,"column_end":12}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17129,"byte_end":17156,"line_start":542,"line_end":542,"column_start":1,"column_end":28}},{"value":"/ let mut v = SmallVec::<[u8; 4]>::new(); // initialize an empty vector","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17157,"byte_end":17230,"line_start":543,"line_end":543,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17231,"byte_end":17234,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ // The vector can hold up to 4 items without spilling onto the heap.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17235,"byte_end":17307,"line_start":545,"line_end":545,"column_start":1,"column_end":73}},{"value":"/ v.extend(0..4);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17308,"byte_end":17327,"line_start":546,"line_end":546,"column_start":1,"column_end":20}},{"value":"/ assert_eq!(v.len(), 4);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17328,"byte_end":17355,"line_start":547,"line_end":547,"column_start":1,"column_end":28}},{"value":"/ assert!(!v.spilled());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17356,"byte_end":17382,"line_start":548,"line_end":548,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17383,"byte_end":17386,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ // Pushing another element will force the buffer to spill:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17387,"byte_end":17449,"line_start":550,"line_end":550,"column_start":1,"column_end":63}},{"value":"/ v.push(4);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17450,"byte_end":17464,"line_start":551,"line_end":551,"column_start":1,"column_end":15}},{"value":"/ assert_eq!(v.len(), 5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17465,"byte_end":17492,"line_start":552,"line_end":552,"column_start":1,"column_end":28}},{"value":"/ assert!(v.spilled());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17493,"byte_end":17518,"line_start":553,"line_end":553,"column_start":1,"column_end":26}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":17519,"byte_end":17526,"line_start":554,"line_end":554,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18083,"byte_end":18086,"line_start":566,"line_end":566,"column_start":12,"column_end":15},"name":"new","qualname":"<SmallVec<A>>::new","value":"fn new() -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector\n","sig":null,"attributes":[{"value":"/ Construct an empty vector","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18028,"byte_end":18057,"line_start":564,"line_end":564,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18062,"byte_end":18071,"line_start":565,"line_end":565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19001,"byte_end":19014,"line_start":593,"line_end":593,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<SmallVec<A>>::with_capacity","value":"fn with_capacity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an empty vector with enough capacity pre-allocated to store at least `n`\n elements.","sig":null,"attributes":[{"value":"/ Construct an empty vector with enough capacity pre-allocated to store at least `n`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18561,"byte_end":18647,"line_start":579,"line_end":579,"column_start":5,"column_end":91}},{"value":"/ elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18652,"byte_end":18665,"line_start":580,"line_end":580,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18670,"byte_end":18673,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Will create a heap allocation only if `n` is larger than the inline capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18678,"byte_end":18759,"line_start":582,"line_end":582,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18764,"byte_end":18767,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18772,"byte_end":18779,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::SmallVec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18784,"byte_end":18813,"line_start":585,"line_end":585,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18818,"byte_end":18821,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ let v: SmallVec<[u8; 3]> = SmallVec::with_capacity(100);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18826,"byte_end":18886,"line_start":587,"line_end":587,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18891,"byte_end":18894,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ assert!(v.is_empty());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18899,"byte_end":18925,"line_start":589,"line_end":589,"column_start":5,"column_end":31}},{"value":"/ assert!(v.capacity() >= 100);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18930,"byte_end":18963,"line_start":590,"line_end":590,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18968,"byte_end":18975,"line_start":591,"line_end":591,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18980,"byte_end":18989,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19548,"byte_end":19556,"line_start":612,"line_end":612,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<SmallVec<A>>::from_vec","value":"fn from_vec(Vec<A::Item>) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new `SmallVec` from a `Vec<A::Item>`.","sig":null,"attributes":[{"value":"/ Construct a new `SmallVec` from a `Vec<A::Item>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19121,"byte_end":19174,"line_start":599,"line_end":599,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19179,"byte_end":19182,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ Elements will be copied to the inline buffer if vec.capacity() <= Self::inline_capacity().","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19187,"byte_end":19281,"line_start":601,"line_end":601,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19286,"byte_end":19289,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19294,"byte_end":19305,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19310,"byte_end":19337,"line_start":604,"line_end":604,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19342,"byte_end":19345,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![1, 2, 3, 4, 5];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19350,"byte_end":19384,"line_start":606,"line_end":606,"column_start":5,"column_end":39}},{"value":"/ let small_vec: SmallVec<[_; 3]> = SmallVec::from_vec(vec);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19389,"byte_end":19451,"line_start":607,"line_end":607,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19456,"byte_end":19459,"line_start":608,"line_end":608,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19464,"byte_end":19510,"line_start":609,"line_end":609,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19515,"byte_end":19522,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":19527,"byte_end":19536,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20652,"byte_end":20660,"line_start":648,"line_end":648,"column_start":12,"column_end":20},"name":"from_buf","qualname":"<SmallVec<A>>::from_buf","value":"fn from_buf(A) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20304,"byte_end":20368,"line_start":636,"line_end":636,"column_start":5,"column_end":69}},{"value":"/ copying elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20373,"byte_end":20394,"line_start":637,"line_end":637,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20399,"byte_end":20402,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20407,"byte_end":20418,"line_start":639,"line_end":639,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20423,"byte_end":20450,"line_start":640,"line_end":640,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20455,"byte_end":20458,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20463,"byte_end":20493,"line_start":642,"line_end":642,"column_start":5,"column_end":35}},{"value":"/ let small_vec: SmallVec<_> = SmallVec::from_buf(buf);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20498,"byte_end":20555,"line_start":643,"line_end":643,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20560,"byte_end":20563,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20568,"byte_end":20614,"line_start":645,"line_end":645,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20619,"byte_end":20626,"line_start":646,"line_end":646,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20631,"byte_end":20640,"line_start":647,"line_end":647,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21275,"byte_end":21291,"line_start":668,"line_end":668,"column_start":12,"column_end":28},"name":"from_buf_and_len","qualname":"<SmallVec<A>>::from_buf_and_len","value":"fn from_buf_and_len(A, usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements. Also sets the length, which must be less or\n equal to the size of `buf`.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20827,"byte_end":20891,"line_start":655,"line_end":655,"column_start":5,"column_end":69}},{"value":"/ copying elements. Also sets the length, which must be less or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20896,"byte_end":20961,"line_start":656,"line_end":656,"column_start":5,"column_end":70}},{"value":"/ equal to the size of `buf`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":20966,"byte_end":20997,"line_start":657,"line_end":657,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21002,"byte_end":21005,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21010,"byte_end":21021,"line_start":659,"line_end":659,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21026,"byte_end":21053,"line_start":660,"line_end":660,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21058,"byte_end":21061,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5, 0, 0, 0];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21066,"byte_end":21105,"line_start":662,"line_end":662,"column_start":5,"column_end":44}},{"value":"/ let small_vec: SmallVec<_> = SmallVec::from_buf_and_len(buf, 5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21110,"byte_end":21178,"line_start":663,"line_end":663,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21183,"byte_end":21186,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21191,"byte_end":21237,"line_start":665,"line_end":665,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21242,"byte_end":21249,"line_start":666,"line_end":666,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21254,"byte_end":21263,"line_start":667,"line_end":667,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":179},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":22020,"byte_end":22046,"line_start":689,"line_end":689,"column_start":19,"column_end":45},"name":"from_buf_and_len_unchecked","qualname":"<SmallVec<A>>::from_buf_and_len_unchecked","value":"unsafe fn from_buf_and_len_unchecked(MaybeUninit<A>, usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new `SmallVec` on the stack from an `A` without\n copying elements. Also sets the length. The user is responsible\n for ensuring that `len <= A::size()`.","sig":null,"attributes":[{"value":"/ Constructs a new `SmallVec` on the stack from an `A` without","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21459,"byte_end":21523,"line_start":673,"line_end":673,"column_start":5,"column_end":69}},{"value":"/ copying elements. Also sets the length. The user is responsible","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21528,"byte_end":21595,"line_start":674,"line_end":674,"column_start":5,"column_end":72}},{"value":"/ for ensuring that `len <= A::size()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21600,"byte_end":21641,"line_start":675,"line_end":675,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21646,"byte_end":21649,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21654,"byte_end":21665,"line_start":677,"line_end":677,"column_start":5,"column_end":16}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21670,"byte_end":21697,"line_start":678,"line_end":678,"column_start":5,"column_end":32}},{"value":"/ use std::mem::MaybeUninit;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21702,"byte_end":21732,"line_start":679,"line_end":679,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21737,"byte_end":21740,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ let buf = [1, 2, 3, 4, 5, 0, 0, 0];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21745,"byte_end":21784,"line_start":681,"line_end":681,"column_start":5,"column_end":44}},{"value":"/ let small_vec: SmallVec<_> = unsafe {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21789,"byte_end":21830,"line_start":682,"line_end":682,"column_start":5,"column_end":46}},{"value":"/     SmallVec::from_buf_and_len_unchecked(MaybeUninit::new(buf), 5)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21835,"byte_end":21905,"line_start":683,"line_end":683,"column_start":5,"column_end":75}},{"value":"/ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21910,"byte_end":21916,"line_start":684,"line_end":684,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21921,"byte_end":21924,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(&*small_vec, &[1, 2, 3, 4, 5]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21929,"byte_end":21975,"line_start":686,"line_end":686,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21980,"byte_end":21987,"line_start":687,"line_end":687,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":21992,"byte_end":22001,"line_start":688,"line_end":688,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":180},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":22470,"byte_end":22477,"line_start":701,"line_end":701,"column_start":19,"column_end":26},"name":"set_len","qualname":"<SmallVec<A>>::set_len","value":"unsafe fn set_len(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets the length of a vector.","sig":null,"attributes":[{"value":"/ Sets the length of a vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":22214,"byte_end":22246,"line_start":696,"line_end":696,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":22251,"byte_end":22254,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ This will explicitly set the size of the vector, without actually","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":22259,"byte_end":22328,"line_start":698,"line_end":698,"column_start":5,"column_end":74}},{"value":"/ modifying its buffers, so it is up to the caller to ensure that the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":22333,"byte_end":22404,"line_start":699,"line_end":699,"column_start":5,"column_end":76}},{"value":"/ vector is actually the specified size.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":22409,"byte_end":22451,"line_start":700,"line_end":700,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":182},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23579,"byte_end":23590,"line_start":728,"line_end":728,"column_start":12,"column_end":23},"name":"inline_size","qualname":"<SmallVec<A>>::inline_size","value":"fn inline_size(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The maximum number of elements this vector can hold inline\n","sig":null,"attributes":[{"value":"/ The maximum number of elements this vector can hold inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23491,"byte_end":23553,"line_start":726,"line_end":726,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23558,"byte_end":23567,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":183},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23725,"byte_end":23728,"line_start":734,"line_end":734,"column_start":12,"column_end":15},"name":"len","qualname":"<SmallVec<A>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements stored in the vector\n","sig":null,"attributes":[{"value":"/ The number of elements stored in the vector","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23652,"byte_end":23699,"line_start":732,"line_end":732,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23704,"byte_end":23713,"line_start":733,"line_end":733,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23849,"byte_end":23857,"line_start":740,"line_end":740,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SmallVec<A>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the vector is empty\n","sig":null,"attributes":[{"value":"/ Returns `true` if the vector is empty","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23782,"byte_end":23823,"line_start":738,"line_end":738,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23828,"byte_end":23837,"line_start":739,"line_end":739,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":185},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":24000,"byte_end":24008,"line_start":746,"line_end":746,"column_start":12,"column_end":20},"name":"capacity","qualname":"<SmallVec<A>>::capacity","value":"fn capacity(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of items the vector can hold without reallocating\n","sig":null,"attributes":[{"value":"/ The number of items the vector can hold without reallocating","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23910,"byte_end":23974,"line_start":744,"line_end":744,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":23979,"byte_end":23988,"line_start":745,"line_end":745,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":188},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25189,"byte_end":25196,"line_start":783,"line_end":783,"column_start":12,"column_end":19},"name":"spilled","qualname":"<SmallVec<A>>::spilled","value":"fn spilled(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the data has spilled into a separate heap-allocated buffer.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the data has spilled into a separate heap-allocated buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25082,"byte_end":25163,"line_start":781,"line_end":781,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25168,"byte_end":25177,"line_start":782,"line_end":782,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25832,"byte_end":25837,"line_start":800,"line_end":800,"column_start":12,"column_end":17},"name":"drain","qualname":"<SmallVec<A>>::drain","value":"fn drain<R>(&mut Self, R) -> Drain<, A> where R: RangeBounds<usize>","parent":null,"children":[],"decl_id":null,"docs":" Creates a draining iterator that removes the specified range in the vector\n and yields the removed items.","sig":null,"attributes":[{"value":"/ Creates a draining iterator that removes the specified range in the vector","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25273,"byte_end":25351,"line_start":787,"line_end":787,"column_start":5,"column_end":83}},{"value":"/ and yields the removed items.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25356,"byte_end":25389,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25394,"byte_end":25397,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ Note 1: The element range is removed even if the iterator is only","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25402,"byte_end":25471,"line_start":790,"line_end":790,"column_start":5,"column_end":74}},{"value":"/ partially consumed or not consumed at all.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25476,"byte_end":25522,"line_start":791,"line_end":791,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25527,"byte_end":25530,"line_start":792,"line_end":792,"column_start":5,"column_end":8}},{"value":"/ Note 2: It is unspecified how many elements are removed from the vector","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25535,"byte_end":25610,"line_start":793,"line_end":793,"column_start":5,"column_end":80}},{"value":"/ if the `Drain` value is leaked.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25615,"byte_end":25650,"line_start":794,"line_end":794,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25655,"byte_end":25658,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25663,"byte_end":25675,"line_start":796,"line_end":796,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25680,"byte_end":25683,"line_start":797,"line_end":797,"column_start":5,"column_end":8}},{"value":"/ Panics if the starting point is greater than the end point or if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25688,"byte_end":25756,"line_start":798,"line_end":798,"column_start":5,"column_end":73}},{"value":"/ the end point is greater than the length of the vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":25761,"byte_end":25820,"line_start":799,"line_end":799,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":26981,"byte_end":26985,"line_start":838,"line_end":838,"column_start":12,"column_end":16},"name":"push","qualname":"<SmallVec<A>>::push","value":"fn push(&mut Self, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Append an item to the vector.\n","sig":null,"attributes":[{"value":"/ Append an item to the vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":26922,"byte_end":26955,"line_start":836,"line_end":836,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":26960,"byte_end":26969,"line_start":837,"line_end":837,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":27505,"byte_end":27508,"line_start":854,"line_end":854,"column_start":12,"column_end":15},"name":"pop","qualname":"<SmallVec<A>>::pop","value":"fn pop(&mut Self) -> Option<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Remove an item from the end of the vector and return it, or None if empty.\n","sig":null,"attributes":[{"value":"/ Remove an item from the end of the vector and return it, or None if empty.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":27401,"byte_end":27479,"line_start":852,"line_end":852,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":27484,"byte_end":27493,"line_start":853,"line_end":853,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28248,"byte_end":28254,"line_start":878,"line_end":878,"column_start":12,"column_end":18},"name":"append","qualname":"<SmallVec<A>>::append","value":"fn append<B>(&mut Self, &mut SmallVec<B>) where B: Array<Item = A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Moves all the elements of `other` into `self`, leaving `other` empty.","sig":null,"attributes":[{"value":"/ Moves all the elements of `other` into `self`, leaving `other` empty.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":27835,"byte_end":27908,"line_start":866,"line_end":866,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":27913,"byte_end":27916,"line_start":867,"line_end":867,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":27921,"byte_end":27934,"line_start":868,"line_end":868,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":27939,"byte_end":27942,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":27947,"byte_end":27954,"line_start":870,"line_end":870,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::{SmallVec, smallvec};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":27959,"byte_end":28000,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ let mut v0: SmallVec<[u8; 16]> = smallvec![1, 2, 3];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28005,"byte_end":28061,"line_start":872,"line_end":872,"column_start":5,"column_end":61}},{"value":"/ let mut v1: SmallVec<[u8; 32]> = smallvec![4, 5, 6];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28066,"byte_end":28122,"line_start":873,"line_end":873,"column_start":5,"column_end":61}},{"value":"/ v0.append(&mut v1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28127,"byte_end":28150,"line_start":874,"line_end":874,"column_start":5,"column_end":28}},{"value":"/ assert_eq!(*v0, [1, 2, 3, 4, 5, 6]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28155,"byte_end":28195,"line_start":875,"line_end":875,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*v1, []);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28200,"byte_end":28224,"line_start":876,"line_end":876,"column_start":5,"column_end":29}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28229,"byte_end":28236,"line_start":877,"line_end":877,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28600,"byte_end":28604,"line_start":889,"line_end":889,"column_start":12,"column_end":16},"name":"grow","qualname":"<SmallVec<A>>::grow","value":"fn grow(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Re-allocate to set the capacity to `max(new_cap, inline_size())`.","sig":null,"attributes":[{"value":"/ Re-allocate to set the capacity to `max(new_cap, inline_size())`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28392,"byte_end":28461,"line_start":885,"line_end":885,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28466,"byte_end":28469,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_cap` is less than the vector's length","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28474,"byte_end":28530,"line_start":887,"line_end":887,"column_start":5,"column_end":61}},{"value":"/ or if the capacity computation overflows `usize`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28535,"byte_end":28588,"line_start":888,"line_end":888,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28838,"byte_end":28846,"line_start":896,"line_end":896,"column_start":12,"column_end":20},"name":"try_grow","qualname":"<SmallVec<A>>::try_grow","value":"fn try_grow(&mut Self, usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Re-allocate to set the capacity to `max(new_cap, inline_size())`.","sig":null,"attributes":[{"value":"/ Re-allocate to set the capacity to `max(new_cap, inline_size())`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28688,"byte_end":28757,"line_start":893,"line_end":893,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28762,"byte_end":28765,"line_start":894,"line_end":894,"column_start":5,"column_end":8}},{"value":"/ Panics if `new_cap` is less than the vector's length","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":28770,"byte_end":28826,"line_start":895,"line_end":895,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":30856,"byte_end":30863,"line_start":943,"line_end":943,"column_start":12,"column_end":19},"name":"reserve","qualname":"<SmallVec<A>>::reserve","value":"fn reserve(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":30621,"byte_end":30688,"line_start":937,"line_end":937,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":30693,"byte_end":30696,"line_start":938,"line_end":938,"column_start":5,"column_end":8}},{"value":"/ May reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":30701,"byte_end":30760,"line_start":939,"line_end":939,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":30765,"byte_end":30768,"line_start":940,"line_end":940,"column_start":5,"column_end":8}},{"value":"/ Panics if the capacity computation overflows `usize`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":30773,"byte_end":30830,"line_start":941,"line_end":941,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":30835,"byte_end":30844,"line_start":942,"line_end":942,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":199},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":31107,"byte_end":31118,"line_start":950,"line_end":950,"column_start":12,"column_end":23},"name":"try_reserve","qualname":"<SmallVec<A>>::try_reserve","value":"fn try_reserve(&mut Self, usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Reserve capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":30956,"byte_end":31023,"line_start":947,"line_end":947,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":31028,"byte_end":31031,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ May reserve more space to avoid frequent reallocations.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":31036,"byte_end":31095,"line_start":949,"line_end":949,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":31845,"byte_end":31858,"line_start":968,"line_end":968,"column_start":12,"column_end":25},"name":"reserve_exact","qualname":"<SmallVec<A>>::reserve_exact","value":"fn reserve_exact(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Reserve the minimum capacity for `additional` more elements to be inserted.","sig":null,"attributes":[{"value":"/ Reserve the minimum capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":31692,"byte_end":31771,"line_start":965,"line_end":965,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":31776,"byte_end":31779,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ Panics if the new capacity overflows `usize`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":31784,"byte_end":31833,"line_start":967,"line_end":967,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":32048,"byte_end":32065,"line_start":973,"line_end":973,"column_start":12,"column_end":29},"name":"try_reserve_exact","qualname":"<SmallVec<A>>::try_reserve_exact","value":"fn try_reserve_exact(&mut Self, usize) -> Result<(), CollectionAllocErr>","parent":null,"children":[],"decl_id":null,"docs":" Reserve the minimum capacity for `additional` more elements to be inserted.\n","sig":null,"attributes":[{"value":"/ Reserve the minimum capacity for `additional` more elements to be inserted.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":31957,"byte_end":32036,"line_start":972,"line_end":972,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":32612,"byte_end":32625,"line_start":988,"line_end":988,"column_start":12,"column_end":25},"name":"shrink_to_fit","qualname":"<SmallVec<A>>::shrink_to_fit","value":"fn shrink_to_fit(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Shrink the capacity of the vector as much as possible.","sig":null,"attributes":[{"value":"/ Shrink the capacity of the vector as much as possible.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":32422,"byte_end":32480,"line_start":984,"line_end":984,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":32485,"byte_end":32488,"line_start":985,"line_end":985,"column_start":5,"column_end":8}},{"value":"/ When possible, this will move data from an external heap buffer to the vector's inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":32493,"byte_end":32583,"line_start":986,"line_end":986,"column_start":5,"column_end":95}},{"value":"/ storage.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":32588,"byte_end":32600,"line_start":987,"line_end":987,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33520,"byte_end":33528,"line_start":1013,"line_end":1013,"column_start":12,"column_end":20},"name":"truncate","qualname":"<SmallVec<A>>::truncate","value":"fn truncate(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Shorten the vector, keeping the first `len` elements and dropping the rest.","sig":null,"attributes":[{"value":"/ Shorten the vector, keeping the first `len` elements and dropping the rest.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33183,"byte_end":33262,"line_start":1006,"line_end":1006,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33267,"byte_end":33270,"line_start":1007,"line_end":1007,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than or equal to the vector's current length, this has no","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33275,"byte_end":33356,"line_start":1008,"line_end":1008,"column_start":5,"column_end":86}},{"value":"/ effect.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33361,"byte_end":33372,"line_start":1009,"line_end":1009,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33377,"byte_end":33380,"line_start":1010,"line_end":1010,"column_start":5,"column_end":8}},{"value":"/ This does not re-allocate.  If you want the vector's capacity to shrink, call","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33385,"byte_end":33466,"line_start":1011,"line_end":1011,"column_start":5,"column_end":86}},{"value":"/ `shrink_to_fit` after truncating.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33471,"byte_end":33508,"line_start":1012,"line_end":1012,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33941,"byte_end":33949,"line_start":1027,"line_end":1027,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<SmallVec<A>>::as_slice","value":"fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33839,"byte_end":33889,"line_start":1024,"line_end":1024,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33894,"byte_end":33897,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&s[..]`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33902,"byte_end":33929,"line_start":1026,"line_end":1026,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34103,"byte_end":34115,"line_start":1034,"line_end":1034,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<SmallVec<A>>::as_mut_slice","value":"fn as_mut_slice(&mut Self) -> &mut [A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice of the entire vector.","sig":null,"attributes":[{"value":"/ Extracts a mutable slice of the entire vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":33997,"byte_end":34047,"line_start":1031,"line_end":1031,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34052,"byte_end":34055,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ Equivalent to `&mut s[..]`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34060,"byte_end":34091,"line_start":1033,"line_end":1033,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34390,"byte_end":34401,"line_start":1044,"line_end":1044,"column_start":12,"column_end":23},"name":"swap_remove","qualname":"<SmallVec<A>>::swap_remove","value":"fn swap_remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove the element at position `index`, replacing it with the last element.","sig":null,"attributes":[{"value":"/ Remove the element at position `index`, replacing it with the last element.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34171,"byte_end":34250,"line_start":1038,"line_end":1038,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34255,"byte_end":34258,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ This does not preserve ordering, but is O(1).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34263,"byte_end":34312,"line_start":1040,"line_end":1040,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34317,"byte_end":34320,"line_start":1041,"line_end":1041,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34325,"byte_end":34364,"line_start":1042,"line_end":1042,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34369,"byte_end":34378,"line_start":1043,"line_end":1043,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34668,"byte_end":34673,"line_start":1053,"line_end":1053,"column_start":12,"column_end":17},"name":"clear","qualname":"<SmallVec<A>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Remove all elements from the vector.\n","sig":null,"attributes":[{"value":"/ Remove all elements from the vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34602,"byte_end":34642,"line_start":1051,"line_end":1051,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34647,"byte_end":34656,"line_start":1052,"line_end":1052,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34894,"byte_end":34900,"line_start":1061,"line_end":1061,"column_start":12,"column_end":18},"name":"remove","qualname":"<SmallVec<A>>::remove","value":"fn remove(&mut Self, usize) -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Remove and return the element at position `index`, shifting all elements after it to the\n left.","sig":null,"attributes":[{"value":"/ Remove and return the element at position `index`, shifting all elements after it to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34724,"byte_end":34816,"line_start":1057,"line_end":1057,"column_start":5,"column_end":97}},{"value":"/ left.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34821,"byte_end":34830,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34835,"byte_end":34838,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ Panics if `index` is out of bounds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":34843,"byte_end":34882,"line_start":1060,"line_end":1060,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":35421,"byte_end":35427,"line_start":1077,"line_end":1077,"column_start":12,"column_end":18},"name":"insert","qualname":"<SmallVec<A>>::insert","value":"fn insert(&mut Self, usize, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Insert an element at position `index`, shifting all elements after it to the right.","sig":null,"attributes":[{"value":"/ Insert an element at position `index`, shifting all elements after it to the right.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":35281,"byte_end":35368,"line_start":1074,"line_end":1074,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":35373,"byte_end":35376,"line_start":1075,"line_end":1075,"column_start":5,"column_end":8}},{"value":"/ Panics if `index > len`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":35381,"byte_end":35409,"line_start":1076,"line_end":1076,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":36102,"byte_end":36113,"line_start":1098,"line_end":1098,"column_start":12,"column_end":23},"name":"insert_many","qualname":"<SmallVec<A>>::insert_many","value":"fn insert_many<I>(&mut Self, usize, I) where I: IntoIterator<Item = A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Insert multiple elements at position `index`, shifting all following elements toward the\n back.\n","sig":null,"attributes":[{"value":"/ Insert multiple elements at position `index`, shifting all following elements toward the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":35984,"byte_end":36076,"line_start":1096,"line_end":1096,"column_start":5,"column_end":97}},{"value":"/ back.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":36081,"byte_end":36090,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39167,"byte_end":39175,"line_start":1184,"line_end":1184,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<SmallVec<A>>::into_vec","value":"fn into_vec(Self) -> Vec<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto\n the heap.\n","sig":null,"attributes":[{"value":"/ Convert a SmallVec to a Vec, without reallocating if the SmallVec has already spilled onto","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39043,"byte_end":39137,"line_start":1182,"line_end":1182,"column_start":5,"column_end":99}},{"value":"/ the heap.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39142,"byte_end":39155,"line_start":1183,"line_end":1183,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39713,"byte_end":39729,"line_start":1201,"line_end":1201,"column_start":12,"column_end":28},"name":"into_boxed_slice","qualname":"<SmallVec<A>>::into_boxed_slice","value":"fn into_boxed_slice(Self) -> Box<[A::Item]>","parent":null,"children":[],"decl_id":null,"docs":" Converts a `SmallVec` into a `Box<[T]>` without reallocating if the `SmallVec` has already spilled\n onto the heap.","sig":null,"attributes":[{"value":"/ Converts a `SmallVec` into a `Box<[T]>` without reallocating if the `SmallVec` has already spilled","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39514,"byte_end":39616,"line_start":1197,"line_end":1197,"column_start":5,"column_end":107}},{"value":"/ onto the heap.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39621,"byte_end":39639,"line_start":1198,"line_end":1198,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39644,"byte_end":39647,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ Note that this will drop any excess capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39652,"byte_end":39701,"line_start":1200,"line_end":1200,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":40113,"byte_end":40123,"line_start":1209,"line_end":1209,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SmallVec<A>>::into_inner","value":"fn into_inner(Self) -> Result<A, Self>","parent":null,"children":[],"decl_id":null,"docs":" Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.","sig":null,"attributes":[{"value":"/ Convert the SmallVec into an `A` if possible. Otherwise return `Err(Self)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39810,"byte_end":39889,"line_start":1205,"line_end":1205,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39894,"byte_end":39897,"line_start":1206,"line_end":1206,"column_start":5,"column_end":8}},{"value":"/ This method returns `Err(Self)` if the SmallVec is too short (and the `A` contains uninitialized elements),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":39902,"byte_end":40013,"line_start":1207,"line_end":1207,"column_start":5,"column_end":116}},{"value":"/ or if the SmallVec is too long (and all the elements were spilled to the heap).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":40018,"byte_end":40101,"line_start":1208,"line_end":1208,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":40751,"byte_end":40757,"line_start":1227,"line_end":1227,"column_start":12,"column_end":18},"name":"retain","qualname":"<SmallVec<A>>::retain","value":"fn retain<F>(&mut Self, F) where F: FnMut(&mut A::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":40495,"byte_end":40552,"line_start":1222,"line_end":1222,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":40557,"byte_end":40560,"line_start":1223,"line_end":1223,"column_start":5,"column_end":8}},{"value":"/ In other words, remove all elements `e` such that `f(&e)` returns `false`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":40565,"byte_end":40643,"line_start":1224,"line_end":1224,"column_start":5,"column_end":83}},{"value":"/ This method operates in place and preserves the order of the retained","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":40648,"byte_end":40721,"line_start":1225,"line_end":1225,"column_start":5,"column_end":78}},{"value":"/ elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":40726,"byte_end":40739,"line_start":1226,"line_end":1226,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41370,"byte_end":41380,"line_start":1245,"line_end":1245,"column_start":12,"column_end":22},"name":"retain_mut","qualname":"<SmallVec<A>>::retain_mut","value":"fn retain_mut<F>(&mut Self, F) where F: FnMut(&mut A::Item) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Retains only the elements specified by the predicate.","sig":null,"attributes":[{"value":"/ Retains only the elements specified by the predicate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41094,"byte_end":41151,"line_start":1240,"line_end":1240,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41156,"byte_end":41159,"line_start":1241,"line_end":1241,"column_start":5,"column_end":8}},{"value":"/ This method is identical in behaviour to [`retain`]; it is included only","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41164,"byte_end":41240,"line_start":1242,"line_end":1242,"column_start":5,"column_end":81}},{"value":"/ to maintain api-compatability with `std::Vec`, where the methods are","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41245,"byte_end":41317,"line_start":1243,"line_end":1243,"column_start":5,"column_end":77}},{"value":"/ separate for historical reasons.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41322,"byte_end":41358,"line_start":1244,"line_end":1244,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41521,"byte_end":41526,"line_start":1250,"line_end":1250,"column_start":12,"column_end":17},"name":"dedup","qualname":"<SmallVec<A>>::dedup","value":"fn dedup(&mut Self) where A::Item: PartialEq<A::Item>","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive duplicate elements.\n","sig":null,"attributes":[{"value":"/ Removes consecutive duplicate elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41466,"byte_end":41509,"line_start":1249,"line_end":1249,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41729,"byte_end":41737,"line_start":1258,"line_end":1258,"column_start":12,"column_end":20},"name":"dedup_by","qualname":"<SmallVec<A>>::dedup_by","value":"fn dedup_by<F>(&mut Self, F) where F: FnMut(&mut A::Item, &mut A::Item) ->\nbool","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive duplicate elements using the given equality relation.\n","sig":null,"attributes":[{"value":"/ Removes consecutive duplicate elements using the given equality relation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":41640,"byte_end":41717,"line_start":1257,"line_end":1257,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":42641,"byte_end":42653,"line_start":1290,"line_end":1290,"column_start":12,"column_end":24},"name":"dedup_by_key","qualname":"<SmallVec<A>>::dedup_by_key","value":"fn dedup_by_key<F, K>(&mut Self, F) where F: FnMut(&mut A::Item) -> K,\nK: PartialEq<K>","parent":null,"children":[],"decl_id":null,"docs":" Removes consecutive elements that map to the same key.\n","sig":null,"attributes":[{"value":"/ Removes consecutive elements that map to the same key.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":42571,"byte_end":42629,"line_start":1289,"line_end":1289,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44023,"byte_end":44034,"line_start":1323,"line_end":1323,"column_start":12,"column_end":23},"name":"resize_with","qualname":"<SmallVec<A>>::resize_with","value":"fn resize_with<F>(&mut Self, usize, F) where F: FnMut() -> A::Item","parent":null,"children":[],"decl_id":null,"docs":" Resizes the `SmallVec` in-place so that `len` is equal to `new_len`.","sig":null,"attributes":[{"value":"/ Resizes the `SmallVec` in-place so that `len` is equal to `new_len`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":42820,"byte_end":42892,"line_start":1298,"line_end":1298,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":42897,"byte_end":42900,"line_start":1299,"line_end":1299,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is greater than `len`, the `SmallVec` is extended by the difference, with each","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":42905,"byte_end":43000,"line_start":1300,"line_end":1300,"column_start":5,"column_end":100}},{"value":"/ additional slot filled with the result of calling the closure `f`. The return values from `f`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43005,"byte_end":43102,"line_start":1301,"line_end":1301,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43185,"byte_end":43188,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ If `new_len` is less than `len`, the `SmallVec` is simply truncated.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43193,"byte_end":43265,"line_start":1304,"line_end":1304,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43270,"byte_end":43273,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ This method uses a closure to create new values on every push. If you'd rather `Clone` a given","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43278,"byte_end":43376,"line_start":1306,"line_end":1306,"column_start":5,"column_end":103}},{"value":"/ value, use `resize`. If you want to use the `Default` trait to generate values, you can pass","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43381,"byte_end":43477,"line_start":1307,"line_end":1307,"column_start":5,"column_end":101}},{"value":"/ `Default::default()` as the second argument.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43482,"byte_end":43530,"line_start":1308,"line_end":1308,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43535,"byte_end":43538,"line_start":1309,"line_end":1309,"column_start":5,"column_end":8}},{"value":"/ Added for std::vec::Vec compatibility (added in Rust 1.33.0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43543,"byte_end":43607,"line_start":1310,"line_end":1310,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43612,"byte_end":43615,"line_start":1311,"line_end":1311,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43620,"byte_end":43627,"line_start":1312,"line_end":1312,"column_start":5,"column_end":12}},{"value":"/ # use smallvec::{smallvec, SmallVec};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43632,"byte_end":43673,"line_start":1313,"line_end":1313,"column_start":5,"column_end":46}},{"value":"/ let mut vec : SmallVec<[_; 4]> = smallvec![1, 2, 3];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43678,"byte_end":43734,"line_start":1314,"line_end":1314,"column_start":5,"column_end":61}},{"value":"/ vec.resize_with(5, Default::default);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43739,"byte_end":43780,"line_start":1315,"line_end":1315,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&*vec, &[1, 2, 3, 0, 0]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43785,"byte_end":43825,"line_start":1316,"line_end":1316,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43830,"byte_end":43833,"line_start":1317,"line_end":1317,"column_start":5,"column_end":8}},{"value":"/ let mut vec : SmallVec<[_; 4]> = smallvec![];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43838,"byte_end":43887,"line_start":1318,"line_end":1318,"column_start":5,"column_end":54}},{"value":"/ let mut p = 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43892,"byte_end":43910,"line_start":1319,"line_end":1319,"column_start":5,"column_end":23}},{"value":"/ vec.resize_with(4, || { p *= 2; p });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43915,"byte_end":43956,"line_start":1320,"line_end":1320,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(&*vec, &[2, 4, 8, 16]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":43961,"byte_end":43999,"line_start":1321,"line_end":1321,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44004,"byte_end":44011,"line_start":1322,"line_end":1322,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47186,"byte_end":47200,"line_start":1409,"line_end":1409,"column_start":19,"column_end":33},"name":"from_raw_parts","qualname":"<SmallVec<A>>::from_raw_parts","value":"unsafe fn from_raw_parts(*mut A::Item, usize, usize) -> SmallVec<A>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SmallVec` directly from the raw components of another\n `SmallVec`.","sig":null,"attributes":[{"value":"/ Creates a `SmallVec` directly from the raw components of another","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44474,"byte_end":44542,"line_start":1340,"line_end":1340,"column_start":5,"column_end":73}},{"value":"/ `SmallVec`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44547,"byte_end":44562,"line_start":1341,"line_end":1341,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44567,"byte_end":44570,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44575,"byte_end":44587,"line_start":1343,"line_end":1343,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44592,"byte_end":44595,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ This is highly unsafe, due to the number of invariants that aren't","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44600,"byte_end":44670,"line_start":1345,"line_end":1345,"column_start":5,"column_end":75}},{"value":"/ checked:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44675,"byte_end":44687,"line_start":1346,"line_end":1346,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44692,"byte_end":44695,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ * `ptr` needs to have been previously allocated via `SmallVec` for its","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44700,"byte_end":44774,"line_start":1348,"line_end":1348,"column_start":5,"column_end":79}},{"value":"/   spilled storage (at least, it's highly likely to be incorrect if it","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44779,"byte_end":44852,"line_start":1349,"line_end":1349,"column_start":5,"column_end":78}},{"value":"/   wasn't).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44857,"byte_end":44871,"line_start":1350,"line_end":1350,"column_start":5,"column_end":19}},{"value":"/ * `ptr`'s `A::Item` type needs to be the same size and alignment that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44876,"byte_end":44949,"line_start":1351,"line_end":1351,"column_start":5,"column_end":78}},{"value":"/   it was allocated with","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44954,"byte_end":44981,"line_start":1352,"line_end":1352,"column_start":5,"column_end":32}},{"value":"/ * `length` needs to be less than or equal to `capacity`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":44986,"byte_end":45046,"line_start":1353,"line_end":1353,"column_start":5,"column_end":65}},{"value":"/ * `capacity` needs to be the capacity that the pointer was allocated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45051,"byte_end":45123,"line_start":1354,"line_end":1354,"column_start":5,"column_end":77}},{"value":"/   with.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45128,"byte_end":45139,"line_start":1355,"line_end":1355,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45144,"byte_end":45147,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ Violating these may cause problems like corrupting the allocator's","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45152,"byte_end":45222,"line_start":1357,"line_end":1357,"column_start":5,"column_end":75}},{"value":"/ internal data structures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45227,"byte_end":45256,"line_start":1358,"line_end":1358,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45261,"byte_end":45264,"line_start":1359,"line_end":1359,"column_start":5,"column_end":8}},{"value":"/ Additionally, `capacity` must be greater than the amount of inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45269,"byte_end":45339,"line_start":1360,"line_end":1360,"column_start":5,"column_end":75}},{"value":"/ storage `A` has; that is, the new `SmallVec` must need to spill over","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45344,"byte_end":45416,"line_start":1361,"line_end":1361,"column_start":5,"column_end":77}},{"value":"/ into heap allocated storage. This condition is asserted against.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45421,"byte_end":45489,"line_start":1362,"line_end":1362,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45494,"byte_end":45497,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ The ownership of `ptr` is effectively transferred to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45502,"byte_end":45562,"line_start":1364,"line_end":1364,"column_start":5,"column_end":65}},{"value":"/ `SmallVec` which may then deallocate, reallocate or change the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45567,"byte_end":45633,"line_start":1365,"line_end":1365,"column_start":5,"column_end":71}},{"value":"/ contents of memory pointed to by the pointer at will. Ensure","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45638,"byte_end":45702,"line_start":1366,"line_end":1366,"column_start":5,"column_end":69}},{"value":"/ that nothing else uses the pointer after calling this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45707,"byte_end":45764,"line_start":1367,"line_end":1367,"column_start":5,"column_end":62}},{"value":"/ function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45769,"byte_end":45782,"line_start":1368,"line_end":1368,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45787,"byte_end":45790,"line_start":1369,"line_end":1369,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45795,"byte_end":45809,"line_start":1370,"line_end":1370,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45814,"byte_end":45817,"line_start":1371,"line_end":1371,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45822,"byte_end":45829,"line_start":1372,"line_end":1372,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate smallvec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45834,"byte_end":45875,"line_start":1373,"line_end":1373,"column_start":5,"column_end":46}},{"value":"/ # use smallvec::SmallVec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45880,"byte_end":45909,"line_start":1374,"line_end":1374,"column_start":5,"column_end":34}},{"value":"/ use std::mem;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45914,"byte_end":45931,"line_start":1375,"line_end":1375,"column_start":5,"column_end":22}},{"value":"/ use std::ptr;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45936,"byte_end":45953,"line_start":1376,"line_end":1376,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45958,"byte_end":45961,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ fn main() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45966,"byte_end":45981,"line_start":1378,"line_end":1378,"column_start":5,"column_end":20}},{"value":"/     let mut v: SmallVec<[_; 1]> = smallvec![1, 2, 3];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":45986,"byte_end":46043,"line_start":1379,"line_end":1379,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46048,"byte_end":46051,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/     // Pull out the important parts of `v`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46056,"byte_end":46103,"line_start":1381,"line_end":1381,"column_start":5,"column_end":52}},{"value":"/     let p = v.as_mut_ptr();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46108,"byte_end":46139,"line_start":1382,"line_end":1382,"column_start":5,"column_end":36}},{"value":"/     let len = v.len();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46144,"byte_end":46170,"line_start":1383,"line_end":1383,"column_start":5,"column_end":31}},{"value":"/     let cap = v.capacity();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46175,"byte_end":46206,"line_start":1384,"line_end":1384,"column_start":5,"column_end":36}},{"value":"/     let spilled = v.spilled();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46211,"byte_end":46245,"line_start":1385,"line_end":1385,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46250,"byte_end":46253,"line_start":1386,"line_end":1386,"column_start":5,"column_end":8}},{"value":"/     unsafe {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46258,"byte_end":46274,"line_start":1387,"line_end":1387,"column_start":5,"column_end":21}},{"value":"/         // Forget all about `v`. The heap allocation that stored the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46279,"byte_end":46351,"line_start":1388,"line_end":1388,"column_start":5,"column_end":77}},{"value":"/         // three values won't be deallocated.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46356,"byte_end":46405,"line_start":1389,"line_end":1389,"column_start":5,"column_end":54}},{"value":"/         mem::forget(v);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46410,"byte_end":46437,"line_start":1390,"line_end":1390,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46442,"byte_end":46445,"line_start":1391,"line_end":1391,"column_start":5,"column_end":8}},{"value":"/         // Overwrite memory with [4, 5, 6].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46450,"byte_end":46497,"line_start":1392,"line_end":1392,"column_start":5,"column_end":52}},{"value":"/         //","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46502,"byte_end":46516,"line_start":1393,"line_end":1393,"column_start":5,"column_end":19}},{"value":"/         // This is only safe if `spilled` is true! Otherwise, we are","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46521,"byte_end":46593,"line_start":1394,"line_end":1394,"column_start":5,"column_end":77}},{"value":"/         // writing into the old `SmallVec`'s inline storage on the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46598,"byte_end":46668,"line_start":1395,"line_end":1395,"column_start":5,"column_end":75}},{"value":"/         // stack.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46673,"byte_end":46694,"line_start":1396,"line_end":1396,"column_start":5,"column_end":26}},{"value":"/         assert!(spilled);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46699,"byte_end":46728,"line_start":1397,"line_end":1397,"column_start":5,"column_end":34}},{"value":"/         for i in 0..len {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46733,"byte_end":46762,"line_start":1398,"line_end":1398,"column_start":5,"column_end":34}},{"value":"/             ptr::write(p.add(i), 4 + i);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46767,"byte_end":46811,"line_start":1399,"line_end":1399,"column_start":5,"column_end":49}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46816,"byte_end":46829,"line_start":1400,"line_end":1400,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46834,"byte_end":46837,"line_start":1401,"line_end":1401,"column_start":5,"column_end":8}},{"value":"/         // Put everything back together into a SmallVec with a different","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46842,"byte_end":46918,"line_start":1402,"line_end":1402,"column_start":5,"column_end":81}},{"value":"/         // amount of inline storage, but which is still less than `cap`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":46923,"byte_end":46999,"line_start":1403,"line_end":1403,"column_start":5,"column_end":81}},{"value":"/         let rebuilt = SmallVec::<[_; 2]>::from_raw_parts(p, len, cap);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47004,"byte_end":47078,"line_start":1404,"line_end":1404,"column_start":5,"column_end":79}},{"value":"/         assert_eq!(&*rebuilt, &[4, 5, 6]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47083,"byte_end":47129,"line_start":1405,"line_end":1405,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47134,"byte_end":47143,"line_start":1406,"line_end":1406,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47148,"byte_end":47153,"line_start":1407,"line_end":1407,"column_start":5,"column_end":10}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47158,"byte_end":47167,"line_start":1408,"line_end":1408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47501,"byte_end":47507,"line_start":1418,"line_end":1418,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<SmallVec<A>>::as_ptr","value":"fn as_ptr(&Self) -> *const A::Item","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw pointer to the vector's buffer.\n","sig":null,"attributes":[{"value":"/ Returns a raw pointer to the vector's buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47440,"byte_end":47489,"line_start":1417,"line_end":1417,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47863,"byte_end":47873,"line_start":1426,"line_end":1426,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<SmallVec<A>>::as_mut_ptr","value":"fn as_mut_ptr(&mut Self) -> *mut A::Item","parent":null,"children":[],"decl_id":null,"docs":" Returns a raw mutable pointer to the vector's buffer.\n","sig":null,"attributes":[{"value":"/ Returns a raw mutable pointer to the vector's buffer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":47794,"byte_end":47851,"line_start":1425,"line_end":1425,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":48392,"byte_end":48402,"line_start":1441,"line_end":1441,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<SmallVec<A>>::from_slice","value":"fn from_slice(&[A::Item]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Copy the elements from a slice into a new `SmallVec`.","sig":null,"attributes":[{"value":"/ Copy the elements from a slice into a new `SmallVec`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":48226,"byte_end":48283,"line_start":1438,"line_end":1438,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":48288,"byte_end":48291,"line_start":1439,"line_end":1439,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `SmallVec::from(slice)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":48296,"byte_end":48380,"line_start":1440,"line_end":1440,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":49458,"byte_end":49475,"line_start":1471,"line_end":1471,"column_start":12,"column_end":29},"name":"insert_from_slice","qualname":"<SmallVec<A>>::insert_from_slice","value":"fn insert_from_slice(&mut Self, usize, &[A::Item])","parent":null,"children":[],"decl_id":null,"docs":" Copy elements from a slice into the vector at position `index`, shifting any following\n elements toward the back.","sig":null,"attributes":[{"value":"/ Copy elements from a slice into the vector at position `index`, shifting any following","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":49240,"byte_end":49330,"line_start":1467,"line_end":1467,"column_start":5,"column_end":95}},{"value":"/ elements toward the back.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":49335,"byte_end":49364,"line_start":1468,"line_end":1468,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":49369,"byte_end":49372,"line_start":1469,"line_end":1469,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `insert`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":49377,"byte_end":49446,"line_start":1470,"line_end":1470,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50098,"byte_end":50115,"line_start":1490,"line_end":1490,"column_start":12,"column_end":29},"name":"extend_from_slice","qualname":"<SmallVec<A>>::extend_from_slice","value":"fn extend_from_slice(&mut Self, &[A::Item])","parent":null,"children":[],"decl_id":null,"docs":" Copy elements from a slice and append them to the vector.","sig":null,"attributes":[{"value":"/ Copy elements from a slice and append them to the vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":49929,"byte_end":49990,"line_start":1486,"line_end":1486,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":49995,"byte_end":49998,"line_start":1487,"line_end":1487,"column_start":5,"column_end":8}},{"value":"/ For slices of `Copy` types, this is more efficient than `extend`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50003,"byte_end":50072,"line_start":1488,"line_end":1488,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50077,"byte_end":50086,"line_start":1489,"line_end":1489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50583,"byte_end":50589,"line_start":1506,"line_end":1506,"column_start":12,"column_end":18},"name":"resize","qualname":"<SmallVec<A>>::resize","value":"fn resize(&mut Self, usize, A::Item)","parent":null,"children":[],"decl_id":null,"docs":" Resizes the vector so that its length is equal to `len`.","sig":null,"attributes":[{"value":"/ Resizes the vector so that its length is equal to `len`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50290,"byte_end":50350,"line_start":1500,"line_end":1500,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50355,"byte_end":50358,"line_start":1501,"line_end":1501,"column_start":5,"column_end":8}},{"value":"/ If `len` is less than the current length, the vector simply truncated.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50363,"byte_end":50437,"line_start":1502,"line_end":1502,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50442,"byte_end":50445,"line_start":1503,"line_end":1503,"column_start":5,"column_end":8}},{"value":"/ If `len` is greater than the current length, `value` is appended to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50450,"byte_end":50525,"line_start":1504,"line_end":1504,"column_start":5,"column_end":80}},{"value":"/ vector until its length equals `len`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50530,"byte_end":50571,"line_start":1505,"line_end":1505,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51065,"byte_end":51074,"line_start":1523,"line_end":1523,"column_start":12,"column_end":21},"name":"from_elem","qualname":"<SmallVec<A>>::from_elem","value":"fn from_elem(A::Item, usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a `SmallVec` with `n` copies of `elem`.\n ```\n use smallvec::SmallVec;","sig":null,"attributes":[{"value":"/ Creates a `SmallVec` with `n` copies of `elem`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50823,"byte_end":50874,"line_start":1516,"line_end":1516,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50879,"byte_end":50886,"line_start":1517,"line_end":1517,"column_start":5,"column_end":12}},{"value":"/ use smallvec::SmallVec;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50891,"byte_end":50918,"line_start":1518,"line_end":1518,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50923,"byte_end":50926,"line_start":1519,"line_end":1519,"column_start":5,"column_end":8}},{"value":"/ let v = SmallVec::<[char; 128]>::from_elem('d', 2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50931,"byte_end":50986,"line_start":1520,"line_end":1520,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(v, SmallVec::from_buf(['d', 'd']));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50991,"byte_end":51041,"line_start":1521,"line_end":1521,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51046,"byte_end":51053,"line_start":1522,"line_end":1522,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51694,"byte_end":51699,"line_start":1545,"line_end":1545,"column_start":8,"column_end":13},"name":"deref","qualname":"<SmallVec<A> as core::ops::Deref>::deref","value":"fn deref(&Self) -> &[A::Item]","parent":{"krate":1,"index":3369},"children":[],"decl_id":{"krate":1,"index":3371},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51677,"byte_end":51686,"line_start":1544,"line_end":1544,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51918,"byte_end":51927,"line_start":1555,"line_end":1555,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<SmallVec<A> as core::ops::DerefMut>::deref_mut","value":"fn deref_mut(&mut Self) -> &mut [A::Item]","parent":{"krate":1,"index":3382},"children":[],"decl_id":{"krate":1,"index":3383},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51901,"byte_end":51910,"line_start":1554,"line_end":1554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52170,"byte_end":52176,"line_start":1565,"line_end":1565,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<SmallVec<A> as core::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &[A::Item]","parent":{"krate":1,"index":3047},"children":[],"decl_id":{"krate":1,"index":3049},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52153,"byte_end":52162,"line_start":1564,"line_end":1564,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52293,"byte_end":52299,"line_start":1572,"line_end":1572,"column_start":8,"column_end":14},"name":"as_mut","qualname":"<SmallVec<A> as core::convert::AsMut>::as_mut","value":"fn as_mut(&mut Self) -> &mut [A::Item]","parent":{"krate":1,"index":3050},"children":[],"decl_id":{"krate":1,"index":3052},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52276,"byte_end":52285,"line_start":1571,"line_end":1571,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52425,"byte_end":52431,"line_start":1579,"line_end":1579,"column_start":8,"column_end":14},"name":"borrow","qualname":"<SmallVec<A> as core::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &[A::Item]","parent":{"krate":1,"index":2747},"children":[],"decl_id":{"krate":1,"index":2749},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52408,"byte_end":52417,"line_start":1578,"line_end":1578,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52552,"byte_end":52562,"line_start":1586,"line_end":1586,"column_start":8,"column_end":18},"name":"borrow_mut","qualname":"<SmallVec<A> as core::borrow::BorrowMut>::borrow_mut","value":"fn borrow_mut(&mut Self) -> &mut [A::Item]","parent":{"krate":1,"index":2750},"children":[],"decl_id":{"krate":1,"index":2752},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52535,"byte_end":52544,"line_start":1585,"line_end":1585,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55256,"byte_end":55260,"line_start":1701,"line_end":1701,"column_start":8,"column_end":12},"name":"from","qualname":"<SmallVec<A> as core::convert::From>::from","value":"fn from(&'a [A::Item]) -> SmallVec<A>","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[{"value":"cfg(not(feature = \"specialization\"))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55195,"byte_end":55234,"line_start":1699,"line_end":1699,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55239,"byte_end":55248,"line_start":1700,"line_end":1700,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55568,"byte_end":55572,"line_start":1714,"line_end":1714,"column_start":8,"column_end":12},"name":"from","qualname":"<SmallVec<A> as core::convert::From>::from","value":"fn from(Vec<A::Item>) -> SmallVec<A>","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55551,"byte_end":55560,"line_start":1713,"line_end":1713,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55712,"byte_end":55716,"line_start":1721,"line_end":1721,"column_start":8,"column_end":12},"name":"from","qualname":"<SmallVec<A> as core::convert::From>::from","value":"fn from(A) -> SmallVec<A>","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55695,"byte_end":55704,"line_start":1720,"line_end":1720,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55897,"byte_end":55902,"line_start":1729,"line_end":1729,"column_start":8,"column_end":13},"name":"index","qualname":"<SmallVec<A> as core::ops::Index>::index","value":"fn index(&Self, I) -> &I::Output","parent":{"krate":1,"index":3454},"children":[],"decl_id":{"krate":1,"index":3457},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56053,"byte_end":56062,"line_start":1735,"line_end":1735,"column_start":8,"column_end":17},"name":"index_mut","qualname":"<SmallVec<A> as core::ops::IndexMut>::index_mut","value":"fn index_mut(&mut Self, I) -> &mut I::Output","parent":{"krate":1,"index":3458},"children":[],"decl_id":{"krate":1,"index":3460},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":290},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56258,"byte_end":56275,"line_start":1745,"line_end":1745,"column_start":8,"column_end":25},"name":"extend_from_slice","qualname":"<SmallVec<A> as ExtendFromSlice>::extend_from_slice","value":"fn extend_from_slice(&mut Self, &[A::Item])","parent":{"krate":0,"index":90},"children":[],"decl_id":{"krate":0,"index":92},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56442,"byte_end":56451,"line_start":1752,"line_end":1752,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SmallVec<A> as core::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> SmallVec<A> where I: IntoIterator<Item = A::Item>","parent":{"krate":1,"index":7987},"children":[],"decl_id":{"krate":1,"index":7989},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56425,"byte_end":56434,"line_start":1751,"line_end":1751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56655,"byte_end":56661,"line_start":1760,"line_end":1760,"column_start":8,"column_end":14},"name":"extend","qualname":"<SmallVec<A> as core::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = A::Item>","parent":{"krate":1,"index":8000},"children":[],"decl_id":{"krate":1,"index":8002},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":301},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":57426,"byte_end":57429,"line_start":1788,"line_end":1788,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SmallVec<A> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":57606,"byte_end":57613,"line_start":1795,"line_end":1795,"column_start":8,"column_end":15},"name":"default","qualname":"<SmallVec<A> as core::default::Default>::default","value":"fn default() -> SmallVec<A>","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":57589,"byte_end":57598,"line_start":1794,"line_end":1794,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":58129,"byte_end":58133,"line_start":1816,"line_end":1816,"column_start":8,"column_end":12},"name":"drop","qualname":"<SmallVec<A> as core::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":1,"index":3393},"children":[],"decl_id":{"krate":1,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":58500,"byte_end":58505,"line_start":1833,"line_end":1833,"column_start":8,"column_end":13},"name":"clone","qualname":"<SmallVec<A> as core::clone::Clone>::clone","value":"fn clone(&Self) -> SmallVec<A>","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2773},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":58483,"byte_end":58492,"line_start":1832,"line_end":1832,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":58584,"byte_end":58594,"line_start":1837,"line_end":1837,"column_start":8,"column_end":18},"name":"clone_from","qualname":"<SmallVec<A> as core::clone::Clone>::clone_from","value":"fn clone_from(&mut Self, &Self)","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2774},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59209,"byte_end":59211,"line_start":1858,"line_end":1858,"column_start":8,"column_end":10},"name":"eq","qualname":"<SmallVec<A> as core::cmp::PartialEq>::eq","value":"fn eq(&Self, &SmallVec<B>) -> bool","parent":{"krate":1,"index":2802},"children":[],"decl_id":{"krate":1,"index":2804},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59192,"byte_end":59201,"line_start":1857,"line_end":1857,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59441,"byte_end":59452,"line_start":1870,"line_end":1870,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<SmallVec<A> as core::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &SmallVec<A>) -> Option<cmp::Ordering>","parent":{"krate":1,"index":2848},"children":[],"decl_id":{"krate":1,"index":2850},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59424,"byte_end":59433,"line_start":1869,"line_end":1869,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59650,"byte_end":59653,"line_start":1880,"line_end":1880,"column_start":8,"column_end":11},"name":"cmp","qualname":"<SmallVec<A> as core::cmp::Ord>::cmp","value":"fn cmp(&Self, &SmallVec<A>) -> cmp::Ordering","parent":{"krate":1,"index":2838},"children":[],"decl_id":{"krate":1,"index":2839},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59633,"byte_end":59642,"line_start":1879,"line_end":1879,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":326},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59816,"byte_end":59820,"line_start":1889,"line_end":1889,"column_start":8,"column_end":12},"name":"hash","qualname":"<SmallVec<A> as core::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":1,"index":10113},"children":[],"decl_id":{"krate":1,"index":10114},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":330},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60147,"byte_end":60155,"line_start":1901,"line_end":1901,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":334}],"decl_id":null,"docs":" An iterator that consumes a `SmallVec` and yields its items by value.","sig":null,"attributes":[{"value":"/ An iterator that consumes a `SmallVec` and yields its items by value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59961,"byte_end":60034,"line_start":1896,"line_end":1896,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60035,"byte_end":60038,"line_start":1897,"line_end":1897,"column_start":1,"column_end":4}},{"value":"/ Returned from [`SmallVec::into_iter`][1].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60039,"byte_end":60084,"line_start":1898,"line_end":1898,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60085,"byte_end":60088,"line_start":1899,"line_end":1899,"column_start":1,"column_end":4}},{"value":"/ [1]: struct.SmallVec.html#method.into_iter","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60089,"byte_end":60135,"line_start":1900,"line_end":1900,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60312,"byte_end":60315,"line_start":1911,"line_end":1911,"column_start":8,"column_end":11},"name":"fmt","qualname":"<IntoIter<A> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60524,"byte_end":60529,"line_start":1920,"line_end":1920,"column_start":8,"column_end":13},"name":"clone","qualname":"<IntoIter<A> as core::clone::Clone>::clone","value":"fn clone(&Self) -> IntoIter<A>","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":343},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60660,"byte_end":60664,"line_start":1926,"line_end":1926,"column_start":8,"column_end":12},"name":"drop","qualname":"<IntoIter<A> as core::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":1,"index":3393},"children":[],"decl_id":{"krate":1,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":347},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60801,"byte_end":60805,"line_start":1935,"line_end":1935,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<A> as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<A::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60784,"byte_end":60793,"line_start":1934,"line_end":1934,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":348},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61127,"byte_end":61136,"line_start":1948,"line_end":1948,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<A> as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61110,"byte_end":61119,"line_start":1947,"line_end":1947,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61326,"byte_end":61335,"line_start":1956,"line_end":1956,"column_start":8,"column_end":17},"name":"next_back","qualname":"<IntoIter<A> as core::iter::DoubleEndedIterator>::next_back","value":"fn next_back(&mut Self) -> Option<A::Item>","parent":{"krate":1,"index":8035},"children":[],"decl_id":{"krate":1,"index":8036},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61309,"byte_end":61318,"line_start":1955,"line_end":1955,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61797,"byte_end":61805,"line_start":1973,"line_end":1973,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<IntoIter<A>>::as_slice","value":"fn as_slice(&Self) -> &[A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a slice.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61725,"byte_end":61785,"line_start":1972,"line_end":1972,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":62053,"byte_end":62065,"line_start":1979,"line_end":1979,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<IntoIter<A>>::as_mut_slice","value":"fn as_mut_slice(&mut Self) -> &mut [A::Item]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a mutable slice.\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a mutable slice.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61973,"byte_end":62041,"line_start":1978,"line_end":1978,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":364},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":62358,"byte_end":62367,"line_start":1988,"line_end":1988,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<SmallVec<A> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":7991},"children":[],"decl_id":{"krate":1,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":370},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":62844,"byte_end":62853,"line_start":2005,"line_end":2005,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a SmallVec<A> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":7991},"children":[],"decl_id":{"krate":1,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63056,"byte_end":63065,"line_start":2013,"line_end":2013,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut SmallVec<A> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":7991},"children":[],"decl_id":{"krate":1,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":377},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63205,"byte_end":63210,"line_start":2019,"line_end":2019,"column_start":18,"column_end":23},"name":"Array","qualname":"::Array","value":"Array","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"decl_id":null,"docs":" Types that can be used as the backing store for a SmallVec\n","sig":null,"attributes":[{"value":"/ Types that can be used as the backing store for a SmallVec","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63125,"byte_end":63187,"line_start":2018,"line_end":2018,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":378},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63264,"byte_end":63268,"line_start":2021,"line_end":2021,"column_start":10,"column_end":14},"name":"Item","qualname":"::Array::Item","value":"type Item;","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" The type of the array's elements.\n","sig":null,"attributes":[{"value":"/ The type of the array's elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63217,"byte_end":63254,"line_start":2020,"line_end":2020,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":379},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63333,"byte_end":63337,"line_start":2023,"line_end":2023,"column_start":8,"column_end":12},"name":"size","qualname":"::Array::size","value":"fn size() -> usize","parent":{"krate":0,"index":377},"children":[],"decl_id":null,"docs":" Returns the number of items the array can hold.\n","sig":null,"attributes":[{"value":"/ Returns the number of items the array can hold.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63274,"byte_end":63325,"line_start":2022,"line_end":2022,"column_start":5,"column_end":56}}]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":66008,"byte_end":66018,"line_start":2119,"line_end":2119,"column_start":11,"column_end":21},"name":"ToSmallVec","qualname":"::ToSmallVec","value":"ToSmallVec<A>","parent":null,"children":[{"krate":0,"index":395}],"decl_id":null,"docs":" Convenience trait for constructing a `SmallVec`\n","sig":null,"attributes":[{"value":"/ Convenience trait for constructing a `SmallVec`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":65946,"byte_end":65997,"line_start":2118,"line_end":2118,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":66087,"byte_end":66098,"line_start":2121,"line_end":2121,"column_start":8,"column_end":19},"name":"to_smallvec","qualname":"::ToSmallVec::to_smallvec","value":"fn to_smallvec(&Self) -> SmallVec<A>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Construct a new `SmallVec` from a slice.\n","sig":null,"attributes":[{"value":"/ Construct a new `SmallVec` from a slice.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":66035,"byte_end":66079,"line_start":2120,"line_end":2120,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":66216,"byte_end":66227,"line_start":2129,"line_end":2129,"column_start":8,"column_end":19},"name":"to_smallvec","qualname":"<[A::Item] as ToSmallVec>::to_smallvec","value":"fn to_smallvec(&Self) -> SmallVec<A>","parent":{"krate":0,"index":393},"children":[],"decl_id":{"krate":0,"index":395},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":66199,"byte_end":66208,"line_start":2128,"line_end":2128,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9122,"byte_end":9125,"line_start":275,"line_end":275,"column_start":39,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9592,"byte_end":9610,"line_start":293,"line_end":293,"column_start":23,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9781,"byte_end":9799,"line_start":300,"line_end":300,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11232,"byte_end":11237,"line_start":342,"line_end":342,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11461,"byte_end":11466,"line_start":351,"line_end":351,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11519,"byte_end":11524,"line_start":352,"line_end":352,"column_start":43,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11573,"byte_end":11578,"line_start":354,"line_end":354,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11932,"byte_end":11937,"line_start":370,"line_end":370,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":12165,"byte_end":12170,"line_start":379,"line_end":379,"column_start":42,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":12293,"byte_end":12298,"line_start":386,"line_end":386,"column_start":38,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":12343,"byte_end":12348,"line_start":388,"line_end":388,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":15062,"byte_end":15074,"line_start":480,"line_end":480,"column_start":16,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16368,"byte_end":16380,"line_start":526,"line_end":526,"column_start":39,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16425,"byte_end":16437,"line_start":527,"line_end":527,"column_start":39,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18010,"byte_end":18018,"line_start":563,"line_end":563,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178},{"krate":0,"index":179},{"krate":0,"index":180},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":226},{"krate":0,"index":228},{"krate":0,"index":230},{"krate":0,"index":232},{"krate":0,"index":236},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":38704,"byte_end":38715,"line_start":1169,"line_end":1169,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":48183,"byte_end":48191,"line_start":1434,"line_end":1434,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50246,"byte_end":50254,"line_start":1496,"line_end":1496,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":248},{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51630,"byte_end":51638,"line_start":1542,"line_end":1542,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51883,"byte_end":51891,"line_start":1553,"line_end":1553,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":256}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52135,"byte_end":52143,"line_start":1563,"line_end":1563,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52258,"byte_end":52266,"line_start":1570,"line_end":1570,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52390,"byte_end":52398,"line_start":1577,"line_end":1577,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52517,"byte_end":52525,"line_start":1584,"line_end":1584,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":268}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55151,"byte_end":55159,"line_start":1695,"line_end":1695,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":272}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55533,"byte_end":55541,"line_start":1712,"line_end":1712,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":275}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55677,"byte_end":55685,"line_start":1719,"line_end":1719,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":278}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55846,"byte_end":55854,"line_start":1726,"line_end":1726,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":282},{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56032,"byte_end":56040,"line_start":1734,"line_end":1734,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56212,"byte_end":56220,"line_start":1741,"line_end":1741,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":290}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56407,"byte_end":56415,"line_start":1750,"line_end":1750,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56634,"byte_end":56642,"line_start":1759,"line_end":1759,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":57374,"byte_end":57382,"line_start":1784,"line_end":1784,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":301}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":57571,"byte_end":57579,"line_start":1793,"line_end":1793,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":304}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":58108,"byte_end":58116,"line_start":1815,"line_end":1815,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":58439,"byte_end":58447,"line_start":1828,"line_end":1828,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59135,"byte_end":59143,"line_start":1853,"line_end":1853,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59311,"byte_end":59319,"line_start":1863,"line_end":1863,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59375,"byte_end":59383,"line_start":1865,"line_end":1865,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59591,"byte_end":59599,"line_start":1875,"line_end":1875,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":323}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59770,"byte_end":59778,"line_start":1885,"line_end":1885,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59925,"byte_end":59933,"line_start":1894,"line_end":1894,"column_start":32,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60260,"byte_end":60268,"line_start":1907,"line_end":1907,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60477,"byte_end":60485,"line_start":1916,"line_end":1916,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":340}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60639,"byte_end":60647,"line_start":1925,"line_end":1925,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":343}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60740,"byte_end":60748,"line_start":1931,"line_end":1931,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":346},{"krate":0,"index":347},{"krate":0,"index":348}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61291,"byte_end":61299,"line_start":1954,"line_end":1954,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":351}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61628,"byte_end":61636,"line_start":1968,"line_end":1968,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61676,"byte_end":61684,"line_start":1969,"line_end":1969,"column_start":34,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61707,"byte_end":61715,"line_start":1971,"line_end":1971,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":62279,"byte_end":62287,"line_start":1985,"line_end":1985,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63581,"byte_end":63593,"line_start":2034,"line_end":2034,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63944,"byte_end":63956,"line_start":2054,"line_end":2054,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9122,"byte_end":9125,"line_start":275,"line_end":275,"column_start":39,"column_end":42},"kind":{"Impl":{"id":0}},"from":{"krate":4,"index":7429},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9592,"byte_end":9610,"line_start":293,"line_end":293,"column_start":23,"column_end":41},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":399},"to":{"krate":1,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":9781,"byte_end":9799,"line_start":300,"line_end":300,"column_start":26,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":399},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11232,"byte_end":11237,"line_start":342,"line_end":342,"column_start":40,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11461,"byte_end":11466,"line_start":351,"line_end":351,"column_start":43,"column_end":48},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":3162}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11519,"byte_end":11524,"line_start":352,"line_end":352,"column_start":43,"column_end":48},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11573,"byte_end":11578,"line_start":354,"line_end":354,"column_start":38,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":11932,"byte_end":11937,"line_start":370,"line_end":370,"column_start":49,"column_end":54},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":8035}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":12165,"byte_end":12170,"line_start":379,"line_end":379,"column_start":42,"column_end":47},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":12293,"byte_end":12298,"line_start":386,"line_end":386,"column_start":38,"column_end":43},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":8461}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":12343,"byte_end":12348,"line_start":388,"line_end":388,"column_start":34,"column_end":39},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":107},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":15062,"byte_end":15074,"line_start":480,"line_end":480,"column_start":16,"column_end":28},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16368,"byte_end":16380,"line_start":526,"line_end":526,"column_start":39,"column_end":51},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":16425,"byte_end":16437,"line_start":527,"line_end":527,"column_start":39,"column_end":51},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":147},"to":{"krate":1,"index":3162}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":18010,"byte_end":18018,"line_start":563,"line_end":563,"column_start":16,"column_end":24},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":38704,"byte_end":38715,"line_start":1169,"line_end":1169,"column_start":26,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":213},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":48183,"byte_end":48191,"line_start":1434,"line_end":1434,"column_start":16,"column_end":24},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":50246,"byte_end":50254,"line_start":1496,"line_end":1496,"column_start":16,"column_end":24},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51630,"byte_end":51638,"line_start":1542,"line_end":1542,"column_start":31,"column_end":39},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3369}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":51883,"byte_end":51891,"line_start":1553,"line_end":1553,"column_start":34,"column_end":42},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3382}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52135,"byte_end":52143,"line_start":1563,"line_end":1563,"column_start":37,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3047}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52258,"byte_end":52266,"line_start":1570,"line_end":1570,"column_start":37,"column_end":45},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3050}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52390,"byte_end":52398,"line_start":1577,"line_end":1577,"column_start":38,"column_end":46},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2747}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":52517,"byte_end":52525,"line_start":1584,"line_end":1584,"column_start":41,"column_end":49},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2750}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55151,"byte_end":55159,"line_start":1695,"line_end":1695,"column_start":44,"column_end":52},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55533,"byte_end":55541,"line_start":1712,"line_end":1712,"column_start":39,"column_end":47},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55677,"byte_end":55685,"line_start":1719,"line_end":1719,"column_start":28,"column_end":36},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":55846,"byte_end":55854,"line_start":1726,"line_end":1726,"column_start":60,"column_end":68},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3454}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56032,"byte_end":56040,"line_start":1734,"line_end":1734,"column_start":63,"column_end":71},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3458}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56212,"byte_end":56220,"line_start":1741,"line_end":1741,"column_start":45,"column_end":53},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":168},"to":{"krate":0,"index":90}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56407,"byte_end":56415,"line_start":1750,"line_end":1750,"column_start":42,"column_end":50},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":7987}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":56634,"byte_end":56642,"line_start":1759,"line_end":1759,"column_start":36,"column_end":44},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":8000}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":57374,"byte_end":57382,"line_start":1784,"line_end":1784,"column_start":31,"column_end":39},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":57571,"byte_end":57579,"line_start":1793,"line_end":1793,"column_start":28,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":58108,"byte_end":58116,"line_start":1815,"line_end":1815,"column_start":25,"column_end":33},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":58439,"byte_end":58447,"line_start":1828,"line_end":1828,"column_start":26,"column_end":34},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59135,"byte_end":59143,"line_start":1853,"line_end":1853,"column_start":53,"column_end":61},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59311,"byte_end":59319,"line_start":1863,"line_end":1863,"column_start":23,"column_end":31},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59375,"byte_end":59383,"line_start":1865,"line_end":1865,"column_start":31,"column_end":39},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59591,"byte_end":59599,"line_start":1875,"line_end":1875,"column_start":24,"column_end":32},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":2838}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59770,"byte_end":59778,"line_start":1885,"line_end":1885,"column_start":25,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":10113}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":59925,"byte_end":59933,"line_start":1894,"line_end":1894,"column_start":32,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60260,"byte_end":60268,"line_start":1907,"line_end":1907,"column_start":31,"column_end":39},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60477,"byte_end":60485,"line_start":1916,"line_end":1916,"column_start":34,"column_end":42},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60639,"byte_end":60647,"line_start":1925,"line_end":1925,"column_start":25,"column_end":33},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":60740,"byte_end":60748,"line_start":1931,"line_end":1931,"column_start":29,"column_end":37},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61291,"byte_end":61299,"line_start":1954,"line_end":1954,"column_start":40,"column_end":48},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":8035}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61628,"byte_end":61636,"line_start":1968,"line_end":1968,"column_start":38,"column_end":46},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61676,"byte_end":61684,"line_start":1969,"line_end":1969,"column_start":34,"column_end":42},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":330},"to":{"krate":1,"index":8461}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":61707,"byte_end":61715,"line_start":1971,"line_end":1971,"column_start":16,"column_end":24},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":330},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":62279,"byte_end":62287,"line_start":1985,"line_end":1985,"column_start":33,"column_end":41},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":168},"to":{"krate":1,"index":7991}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63581,"byte_end":63593,"line_start":2034,"line_end":2034,"column_start":10,"column_end":22},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":380},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/smallvec-1.10.0/src/lib.rs","byte_start":63944,"byte_end":63956,"line_start":2054,"line_end":2054,"column_start":19,"column_end":31},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":3393}}]}