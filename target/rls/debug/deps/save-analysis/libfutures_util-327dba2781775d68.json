{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25","program":"/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_util","--edition=2018","/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=327dba2781775d68","-C","extra-filename=-327dba2781775d68","--out-dir","/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","-L","dependency=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","--extern","futures_core=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_core-bf2e7f64aaea6921.rmeta","--extern","futures_task=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_task-7cd9446316994adb.rmeta","--extern","pin_project_lite=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libpin_project_lite-e742030a2f16f4a6.rmeta","--extern","pin_utils=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libpin_utils-adc13652dabc4345.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_util-327dba2781775d68.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[8392577202879089122,0]},"crate_root":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src","external_crates":[{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":5,"id":{"name":"futures_core","disambiguator":[2889476389752248248,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":6,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":7,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":8,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":10,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":11,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":12,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":13,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":14,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":15,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":16,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":17,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":18,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":19,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":20,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","num":21,"id":{"name":"pin_utils","disambiguator":[14779779622709215863,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","num":22,"id":{"name":"futures_task","disambiguator":[10040432833625291285,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","num":23,"id":{"name":"pin_project_lite","disambiguator":[13349260882500549000,0]}}],"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18}},"imports":[{"kind":"Use","ref_id":{"krate":5,"index":169},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":861,"byte_end":866,"line_start":29,"line_end":29,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":887,"byte_end":894,"line_start":30,"line_end":30,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13328},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12041,"byte_end":12047,"line_start":13,"line_end":13,"column_start":23,"column_end":29},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":5,"index":21},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12107,"byte_end":12116,"line_start":16,"line_end":16,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":5,"index":24},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12118,"byte_end":12132,"line_start":16,"line_end":16,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":5,"index":27},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12166,"byte_end":12177,"line_start":17,"line_end":17,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":5,"index":44},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12179,"byte_end":12188,"line_start":17,"line_end":17,"column_start":45,"column_end":54},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12214,"byte_end":12223,"line_start":18,"line_end":18,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12225,"byte_end":12239,"line_start":18,"line_end":18,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12241,"byte_end":12256,"line_start":18,"line_end":18,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6636},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16330,"byte_end":16334,"line_start":46,"line_end":46,"column_start":15,"column_end":19},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":43}},{"kind":"Use","ref_id":{"krate":0,"index":6727},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12371,"byte_end":12378,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6636},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12380,"byte_end":12384,"line_start":24,"line_end":24,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":239},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12386,"byte_end":12395,"line_start":24,"line_end":24,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7070},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12397,"byte_end":12404,"line_start":24,"line_end":24,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6885},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12406,"byte_end":12416,"line_start":24,"line_end":24,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6825},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12418,"byte_end":12421,"line_start":24,"line_end":24,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6935},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12423,"byte_end":12430,"line_start":24,"line_end":24,"column_start":57,"column_end":64},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7130},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12432,"byte_end":12442,"line_start":24,"line_end":24,"column_start":66,"column_end":76},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6997},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12444,"byte_end":12448,"line_start":24,"line_end":24,"column_start":78,"column_end":82},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7178},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12450,"byte_end":12459,"line_start":24,"line_end":24,"column_start":84,"column_end":93},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":6775},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12555,"byte_end":12568,"line_start":28,"line_end":28,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7224},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":47492,"byte_end":47502,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":300}},{"kind":"Use","ref_id":{"krate":0,"index":7529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12898,"byte_end":12905,"line_start":43,"line_end":43,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7676},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12907,"byte_end":12914,"line_start":43,"line_end":43,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7859},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12916,"byte_end":12926,"line_start":43,"line_end":43,"column_start":23,"column_end":33},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7798},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12928,"byte_end":12937,"line_start":43,"line_end":43,"column_start":35,"column_end":44},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7224},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12939,"byte_end":12949,"line_start":43,"line_end":43,"column_start":46,"column_end":56},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7981},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12951,"byte_end":12957,"line_start":43,"line_end":43,"column_start":58,"column_end":64},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7920},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12959,"byte_end":12964,"line_start":43,"line_end":43,"column_start":66,"column_end":71},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8043},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12966,"byte_end":12977,"line_start":43,"line_end":43,"column_start":73,"column_end":84},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7737},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12979,"byte_end":12985,"line_start":43,"line_end":43,"column_start":86,"column_end":92},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7603},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12991,"byte_end":12997,"line_start":44,"line_end":44,"column_start":5,"column_end":11},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7357},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":12999,"byte_end":13009,"line_start":44,"line_end":44,"column_start":13,"column_end":23},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":7478},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13011,"byte_end":13027,"line_start":44,"line_end":44,"column_start":25,"column_end":41},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13029,"byte_end":13041,"line_start":44,"line_end":44,"column_start":43,"column_end":55},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8116},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13043,"byte_end":13055,"line_start":44,"line_end":44,"column_start":57,"column_end":69},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":603},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13227,"byte_end":13231,"line_start":54,"line_end":54,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8174},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13233,"byte_end":13237,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":649},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13278,"byte_end":13285,"line_start":57,"line_end":57,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8180},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13287,"byte_end":13294,"line_start":57,"line_end":57,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":696},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13341,"byte_end":13351,"line_start":60,"line_end":60,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8186},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13353,"byte_end":13362,"line_start":60,"line_end":60,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":748},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13417,"byte_end":13431,"line_start":63,"line_end":63,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8199},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13433,"byte_end":13445,"line_start":63,"line_end":63,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8212},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13483,"byte_end":13495,"line_start":66,"line_end":66,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":830},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13535,"byte_end":13542,"line_start":69,"line_end":69,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":825},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13544,"byte_end":13550,"line_start":69,"line_end":69,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":889},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13605,"byte_end":13619,"line_start":72,"line_end":72,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8251},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13621,"byte_end":13634,"line_start":72,"line_end":72,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":936},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13671,"byte_end":13674,"line_start":75,"line_end":75,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":933},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13676,"byte_end":13678,"line_start":75,"line_end":75,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":931},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13680,"byte_end":13685,"line_start":75,"line_end":75,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8290},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13687,"byte_end":13692,"line_start":75,"line_end":75,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":987},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13727,"byte_end":13731,"line_start":78,"line_end":78,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":990},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13733,"byte_end":13738,"line_start":78,"line_end":78,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":994},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13740,"byte_end":13745,"line_start":78,"line_end":78,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":999},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13747,"byte_end":13752,"line_start":78,"line_end":78,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8392},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13754,"byte_end":13758,"line_start":78,"line_end":78,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8437},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13760,"byte_end":13765,"line_start":78,"line_end":78,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8494},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13767,"byte_end":13772,"line_start":78,"line_end":78,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8563},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13774,"byte_end":13779,"line_start":78,"line_end":78,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1093},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13874,"byte_end":13882,"line_start":83,"line_end":83,"column_start":26,"column_end":34},"alias_span":null,"name":"join_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1080},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13884,"byte_end":13891,"line_start":83,"line_end":83,"column_start":36,"column_end":43},"alias_span":null,"name":"JoinAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1142},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13930,"byte_end":13936,"line_start":86,"line_end":86,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8644},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":13938,"byte_end":13944,"line_start":86,"line_end":86,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1192},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14043,"byte_end":14053,"line_start":91,"line_end":91,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8652},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14055,"byte_end":14064,"line_start":91,"line_end":91,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1248},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14112,"byte_end":14120,"line_start":95,"line_end":95,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1251},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14122,"byte_end":14131,"line_start":95,"line_end":95,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1255},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14133,"byte_end":14142,"line_start":95,"line_end":95,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1260},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14144,"byte_end":14153,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8728},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14155,"byte_end":14162,"line_start":95,"line_end":95,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8773},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14164,"byte_end":14172,"line_start":95,"line_end":95,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8830},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14174,"byte_end":14182,"line_start":95,"line_end":95,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8899},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14184,"byte_end":14192,"line_start":95,"line_end":95,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1370},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14297,"byte_end":14309,"line_start":101,"line_end":101,"column_start":30,"column_end":42},"alias_span":null,"name":"try_join_all","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1358},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14311,"byte_end":14321,"line_start":101,"line_end":101,"column_start":44,"column_end":54},"alias_span":null,"name":"TryJoinAll","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1416},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14368,"byte_end":14378,"line_start":104,"line_end":104,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8980},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14380,"byte_end":14389,"line_start":104,"line_end":104,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1466},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14486,"byte_end":14495,"line_start":109,"line_end":109,"column_start":27,"column_end":36},"alias_span":null,"name":"select_ok","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8988},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14497,"byte_end":14505,"line_start":109,"line_end":109,"column_start":38,"column_end":46},"alias_span":null,"name":"SelectOk","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":8994},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14543,"byte_end":14549,"line_start":112,"line_end":112,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":13021},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14716,"byte_end":14727,"line_start":119,"line_end":119,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":13017},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14729,"byte_end":14746,"line_start":119,"line_end":119,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":12974},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14748,"byte_end":14757,"line_start":119,"line_end":119,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":13032},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":13033},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14759,"byte_end":14766,"line_start":119,"line_end":119,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":0,"index":1565},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":14849,"byte_end":14858,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":15}},{"kind":"Use","ref_id":{"krate":1,"index":13328},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10673,"byte_end":10679,"line_start":296,"line_end":296,"column_start":25,"column_end":31},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":239},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10681,"byte_end":10690,"line_start":296,"line_end":296,"column_start":33,"column_end":42},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":44},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10692,"byte_end":10701,"line_start":296,"line_end":296,"column_start":44,"column_end":53},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":506},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10703,"byte_end":10715,"line_start":296,"line_end":296,"column_start":55,"column_end":67},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":90},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136411,"byte_end":136420,"line_start":13,"line_end":13,"column_start":32,"column_end":41},"alias_span":null,"name":"BoxStream","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":5,"index":93},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136422,"byte_end":136436,"line_start":13,"line_end":13,"column_start":43,"column_end":57},"alias_span":null,"name":"LocalBoxStream","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":5,"index":110},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136470,"byte_end":136481,"line_start":14,"line_end":14,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":5,"index":96},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136483,"byte_end":136489,"line_start":14,"line_end":14,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":5,"index":127},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136491,"byte_end":136500,"line_start":14,"line_end":14,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9011},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140806,"byte_end":140811,"line_start":29,"line_end":29,"column_start":22,"column_end":27},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9060},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":140926,"byte_end":140933,"line_start":33,"line_end":33,"column_start":24,"column_end":31},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9109},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141044,"byte_end":141049,"line_start":37,"line_end":37,"column_start":22,"column_end":27},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9171},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141162,"byte_end":141168,"line_start":41,"line_end":41,"column_start":23,"column_end":29},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9248},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141395,"byte_end":141400,"line_start":49,"line_end":49,"column_start":22,"column_end":27},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9288},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141519,"byte_end":141528,"line_start":53,"line_end":53,"column_start":26,"column_end":35},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9332},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141641,"byte_end":141647,"line_start":57,"line_end":57,"column_start":23,"column_end":29},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9397},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141768,"byte_end":141777,"line_start":61,"line_end":61,"column_start":27,"column_end":36},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9566},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142165,"byte_end":142169,"line_start":75,"line_end":75,"column_start":21,"column_end":25},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9757},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142883,"byte_end":142890,"line_start":100,"line_end":100,"column_start":25,"column_end":32},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9814},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":142999,"byte_end":143003,"line_start":104,"line_end":104,"column_start":21,"column_end":25},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9858},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143126,"byte_end":143138,"line_start":108,"line_end":108,"column_start":28,"column_end":40},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9933},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143501,"byte_end":143504,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10065},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143887,"byte_end":143891,"line_start":130,"line_end":130,"column_start":21,"column_end":25},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10073},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144024,"byte_end":144038,"line_start":134,"line_end":134,"column_start":33,"column_end":47},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10207},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144148,"byte_end":144154,"line_start":138,"line_end":138,"column_start":22,"column_end":28},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10256},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144156,"byte_end":144164,"line_start":138,"line_end":138,"column_start":30,"column_end":38},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10125},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144166,"byte_end":144170,"line_start":138,"line_end":138,"column_start":40,"column_end":44},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10166},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144172,"byte_end":144179,"line_start":138,"line_end":138,"column_start":46,"column_end":53},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10081},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144181,"byte_end":144189,"line_start":138,"line_end":138,"column_start":55,"column_end":63},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10305},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144299,"byte_end":144303,"line_start":142,"line_end":142,"column_start":21,"column_end":25},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10349},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144424,"byte_end":144433,"line_start":146,"line_end":146,"column_start":27,"column_end":36},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10418},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144542,"byte_end":144546,"line_start":150,"line_end":150,"column_start":21,"column_end":25},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10462},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144667,"byte_end":144676,"line_start":154,"line_end":154,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10531},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144797,"byte_end":144806,"line_start":158,"line_end":158,"column_start":27,"column_end":36},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10588},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":144915,"byte_end":144919,"line_start":162,"line_end":162,"column_start":21,"column_end":25},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10649},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145026,"byte_end":145029,"line_start":166,"line_end":166,"column_start":20,"column_end":23},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10706},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145194,"byte_end":145200,"line_start":172,"line_end":172,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10754},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145377,"byte_end":145388,"line_start":178,"line_end":178,"column_start":29,"column_end":40},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10802},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145497,"byte_end":145501,"line_start":182,"line_end":182,"column_start":21,"column_end":25},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10871},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":145756,"byte_end":145771,"line_start":190,"line_end":190,"column_start":33,"column_end":48},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":10916},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146010,"byte_end":146018,"line_start":198,"line_end":198,"column_start":25,"column_end":33},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":11144},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146960,"byte_end":146977,"line_start":225,"line_end":225,"column_start":36,"column_end":53},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1617}},{"kind":"Use","ref_id":{"krate":0,"index":9011},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136616,"byte_end":136621,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9060},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136623,"byte_end":136630,"line_start":21,"line_end":21,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9171},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136632,"byte_end":136638,"line_start":21,"line_end":21,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9248},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136640,"byte_end":136645,"line_start":21,"line_end":21,"column_start":29,"column_end":34},"alias_span":null,"name":"Cycle","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9288},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136647,"byte_end":136656,"line_start":21,"line_end":21,"column_start":36,"column_end":45},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9332},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136658,"byte_end":136664,"line_start":21,"line_end":21,"column_start":47,"column_end":53},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9397},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136666,"byte_end":136675,"line_start":21,"line_end":21,"column_start":55,"column_end":64},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9986},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136677,"byte_end":136684,"line_start":21,"line_end":21,"column_start":66,"column_end":73},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9513},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136686,"byte_end":136693,"line_start":21,"line_end":21,"column_start":75,"column_end":82},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9566},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136695,"byte_end":136699,"line_start":21,"line_end":21,"column_start":84,"column_end":88},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9757},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136701,"byte_end":136708,"line_start":21,"line_end":21,"column_start":90,"column_end":97},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9814},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136714,"byte_end":136718,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9867},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136720,"byte_end":136727,"line_start":22,"line_end":22,"column_start":11,"column_end":18},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9933},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136729,"byte_end":136732,"line_start":22,"line_end":22,"column_start":20,"column_end":23},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10065},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136734,"byte_end":136738,"line_start":22,"line_end":22,"column_start":25,"column_end":29},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10207},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136740,"byte_end":136746,"line_start":22,"line_end":22,"column_start":31,"column_end":37},"alias_span":null,"name":"NextIf","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10256},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136748,"byte_end":136756,"line_start":22,"line_end":22,"column_start":39,"column_end":47},"alias_span":null,"name":"NextIfEq","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10125},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136758,"byte_end":136762,"line_start":22,"line_end":22,"column_start":49,"column_end":53},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10166},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136764,"byte_end":136771,"line_start":22,"line_end":22,"column_start":55,"column_end":62},"alias_span":null,"name":"PeekMut","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10081},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136773,"byte_end":136781,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10802},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136783,"byte_end":136787,"line_start":22,"line_end":22,"column_start":74,"column_end":78},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10073},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136789,"byte_end":136803,"line_start":22,"line_end":22,"column_start":80,"column_end":94},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10305},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136809,"byte_end":136813,"line_start":23,"line_end":23,"column_start":5,"column_end":9},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10349},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136815,"byte_end":136824,"line_start":23,"line_end":23,"column_start":11,"column_end":20},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":3566},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136826,"byte_end":136835,"line_start":23,"line_end":23,"column_start":22,"column_end":31},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9858},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136837,"byte_end":136849,"line_start":23,"line_end":23,"column_start":33,"column_end":45},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10418},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136851,"byte_end":136855,"line_start":23,"line_end":23,"column_start":47,"column_end":51},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10531},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136857,"byte_end":136866,"line_start":23,"line_end":23,"column_start":53,"column_end":62},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10462},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136868,"byte_end":136877,"line_start":23,"line_end":23,"column_start":64,"column_end":73},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10588},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136879,"byte_end":136883,"line_start":23,"line_end":23,"column_start":75,"column_end":79},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":9109},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136885,"byte_end":136890,"line_start":23,"line_end":23,"column_start":81,"column_end":86},"alias_span":null,"name":"Unzip","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10649},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136892,"byte_end":136895,"line_start":23,"line_end":23,"column_start":88,"column_end":91},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10706},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137009,"byte_end":137015,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"alias_span":null,"name":"Chunks","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10754},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137066,"byte_end":137077,"line_start":33,"line_end":33,"column_start":23,"column_end":34},"alias_span":null,"name":"ReadyChunks","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10871},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137269,"byte_end":137284,"line_start":41,"line_end":41,"column_start":24,"column_end":39},"alias_span":null,"name":"BufferUnordered","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":10916},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137286,"byte_end":137294,"line_start":41,"line_end":41,"column_start":41,"column_end":49},"alias_span":null,"name":"Buffered","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11144},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137296,"byte_end":137313,"line_start":41,"line_end":41,"column_start":51,"column_end":68},"alias_span":null,"name":"ForEachConcurrent","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11205},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":309640,"byte_end":309647,"line_start":26,"line_end":26,"column_start":25,"column_end":32},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":11473},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":310642,"byte_end":310652,"line_start":51,"line_end":51,"column_start":28,"column_end":38},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":11651},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":311332,"byte_end":311338,"line_start":69,"line_end":69,"column_start":24,"column_end":30},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":11712},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":311455,"byte_end":311462,"line_start":73,"line_end":73,"column_start":25,"column_end":32},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":11720},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":311587,"byte_end":311597,"line_start":77,"line_end":77,"column_start":29,"column_end":39},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":11777},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":311718,"byte_end":311727,"line_start":81,"line_end":81,"column_start":27,"column_end":36},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":11842},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":311856,"byte_end":311868,"line_start":85,"line_end":85,"column_start":31,"column_end":43},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":11903},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":311991,"byte_end":312001,"line_start":89,"line_end":89,"column_start":28,"column_end":38},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":11947},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":312124,"byte_end":312134,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":11996},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":312255,"byte_end":312264,"line_start":97,"line_end":97,"column_start":27,"column_end":36},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12036},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":312438,"byte_end":312447,"line_start":103,"line_end":103,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12084},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":312449,"byte_end":312463,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12085},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":312449,"byte_end":312463,"line_start":103,"line_end":103,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12105},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":312581,"byte_end":312588,"line_start":107,"line_end":107,"column_start":25,"column_end":32},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":4492},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":312710,"byte_end":312720,"line_start":111,"line_end":111,"column_start":28,"column_end":38},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12174},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":312722,"byte_end":312731,"line_start":111,"line_end":111,"column_start":40,"column_end":49},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12231},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":312861,"byte_end":312873,"line_start":115,"line_end":115,"column_start":31,"column_end":43},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12300},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":313002,"byte_end":313014,"line_start":119,"line_end":119,"column_start":31,"column_end":43},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12369},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":313277,"byte_end":313295,"line_start":127,"line_end":127,"column_start":37,"column_end":55},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12417},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":313542,"byte_end":313553,"line_start":135,"line_end":135,"column_start":29,"column_end":40},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":12465},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":313822,"byte_end":313842,"line_start":143,"line_end":143,"column_start":40,"column_end":60},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":3771}},{"kind":"Use","ref_id":{"krate":0,"index":4492},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137562,"byte_end":137572,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11205},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137574,"byte_end":137581,"line_start":51,"line_end":51,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11269},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137583,"byte_end":137590,"line_start":51,"line_end":51,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11407},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137592,"byte_end":137602,"line_start":51,"line_end":51,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11338},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137604,"byte_end":137613,"line_start":51,"line_end":51,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11473},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137615,"byte_end":137625,"line_start":51,"line_end":51,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11585},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137627,"byte_end":137633,"line_start":51,"line_end":51,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11516},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137635,"byte_end":137640,"line_start":51,"line_end":51,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11651},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137642,"byte_end":137648,"line_start":51,"line_end":51,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11947},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137654,"byte_end":137664,"line_start":52,"line_end":52,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11996},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137666,"byte_end":137675,"line_start":52,"line_end":52,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11777},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137677,"byte_end":137686,"line_start":52,"line_end":52,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11842},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137688,"byte_end":137700,"line_start":52,"line_end":52,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11903},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137702,"byte_end":137712,"line_start":52,"line_end":52,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12105},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137714,"byte_end":137721,"line_start":52,"line_end":52,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11720},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137723,"byte_end":137733,"line_start":52,"line_end":52,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":11712},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137735,"byte_end":137742,"line_start":52,"line_end":52,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12231},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137748,"byte_end":137760,"line_start":53,"line_end":53,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":4807},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137762,"byte_end":137774,"line_start":53,"line_end":53,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12300},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137776,"byte_end":137788,"line_start":53,"line_end":53,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12174},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":137790,"byte_end":137799,"line_start":53,"line_end":53,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12369},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138028,"byte_end":138046,"line_start":63,"line_end":63,"column_start":28,"column_end":46},"alias_span":null,"name":"TryBufferUnordered","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12417},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138048,"byte_end":138059,"line_start":63,"line_end":63,"column_start":48,"column_end":59},"alias_span":null,"name":"TryBuffered","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12465},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138061,"byte_end":138081,"line_start":63,"line_end":63,"column_start":61,"column_end":81},"alias_span":null,"name":"TryForEachConcurrent","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12036},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138138,"byte_end":138147,"line_start":66,"line_end":66,"column_start":28,"column_end":37},"alias_span":null,"name":"TryChunks","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12084},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138149,"byte_end":138163,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12085},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138149,"byte_end":138163,"line_start":66,"line_end":66,"column_start":39,"column_end":53},"alias_span":null,"name":"TryChunksError","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":4960},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138220,"byte_end":138224,"line_start":71,"line_end":71,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12526},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138226,"byte_end":138230,"line_start":71,"line_end":71,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":4995},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138269,"byte_end":138275,"line_start":74,"line_end":74,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12535},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138277,"byte_end":138283,"line_start":74,"line_end":74,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5048},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138332,"byte_end":138343,"line_start":77,"line_end":77,"column_start":29,"column_end":40},"alias_span":null,"name":"repeat_with","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12544},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138345,"byte_end":138355,"line_start":77,"line_end":77,"column_start":42,"column_end":52},"alias_span":null,"name":"RepeatWith","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5082},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138392,"byte_end":138397,"line_start":80,"line_end":80,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12553},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138399,"byte_end":138404,"line_start":80,"line_end":80,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5134},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138439,"byte_end":138443,"line_start":83,"line_end":83,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12559},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138445,"byte_end":138449,"line_start":83,"line_end":83,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5178},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138490,"byte_end":138497,"line_start":86,"line_end":86,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12595},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138499,"byte_end":138506,"line_start":86,"line_end":86,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5228},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138547,"byte_end":138554,"line_start":89,"line_end":89,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5220},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138556,"byte_end":138562,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5269},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138617,"byte_end":138631,"line_start":92,"line_end":92,"column_start":32,"column_end":46},"alias_span":null,"name":"poll_immediate","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12601},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138633,"byte_end":138646,"line_start":92,"line_end":92,"column_start":48,"column_end":61},"alias_span":null,"name":"PollImmediate","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5312},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138685,"byte_end":138691,"line_start":95,"line_end":95,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12640},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138693,"byte_end":138699,"line_start":95,"line_end":95,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5383},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138766,"byte_end":138786,"line_start":98,"line_end":98,"column_start":38,"column_end":58},"alias_span":null,"name":"select_with_strategy","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12685},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138788,"byte_end":138796,"line_start":98,"line_end":98,"column_start":60,"column_end":68},"alias_span":null,"name":"PollNext","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12704},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138798,"byte_end":138816,"line_start":98,"line_end":98,"column_start":70,"column_end":88},"alias_span":null,"name":"SelectWithStrategy","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5472},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138855,"byte_end":138861,"line_start":101,"line_end":101,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12777},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":138863,"byte_end":138869,"line_start":101,"line_end":101,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":5572},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139047,"byte_end":139061,"line_start":108,"line_end":108,"column_start":32,"column_end":46},"alias_span":null,"name":"FuturesOrdered","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12909},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434718,"byte_end":434726,"line_start":26,"line_end":26,"column_start":22,"column_end":30},"alias_span":null,"name":"IntoIter","value":"","parent":{"krate":0,"index":5614}},{"kind":"Use","ref_id":{"krate":0,"index":12900},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434728,"byte_end":434732,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5614}},{"kind":"Use","ref_id":{"krate":0,"index":12901},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434728,"byte_end":434732,"line_start":26,"line_end":26,"column_start":32,"column_end":36},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":5614}},{"kind":"Use","ref_id":{"krate":0,"index":12880},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434734,"byte_end":434741,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5614}},{"kind":"Use","ref_id":{"krate":0,"index":12881},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434734,"byte_end":434741,"line_start":26,"line_end":26,"column_start":38,"column_end":45},"alias_span":null,"name":"IterMut","value":"","parent":{"krate":0,"index":5614}},{"kind":"Use","ref_id":{"krate":0,"index":12870},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434743,"byte_end":434753,"line_start":26,"line_end":26,"column_start":47,"column_end":57},"alias_span":null,"name":"IterPinMut","value":"","parent":{"krate":0,"index":5614}},{"kind":"Use","ref_id":{"krate":0,"index":12889},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434755,"byte_end":434765,"line_start":26,"line_end":26,"column_start":59,"column_end":69},"alias_span":null,"name":"IterPinRef","value":"","parent":{"krate":0,"index":5614}},{"kind":"Use","ref_id":{"krate":0,"index":5935},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139261,"byte_end":139277,"line_start":116,"line_end":116,"column_start":34,"column_end":50},"alias_span":null,"name":"FuturesUnordered","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":6095},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139464,"byte_end":139474,"line_start":124,"line_end":124,"column_start":28,"column_end":38},"alias_span":null,"name":"select_all","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12916},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139476,"byte_end":139485,"line_start":124,"line_end":124,"column_start":40,"column_end":49},"alias_span":null,"name":"SelectAll","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":13021},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139653,"byte_end":139664,"line_start":131,"line_end":131,"column_start":28,"column_end":39},"alias_span":null,"name":"AbortHandle","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":13017},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139666,"byte_end":139683,"line_start":131,"line_end":131,"column_start":41,"column_end":58},"alias_span":null,"name":"AbortRegistration","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":12974},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139685,"byte_end":139694,"line_start":131,"line_end":131,"column_start":60,"column_end":69},"alias_span":null,"name":"Abortable","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":13032},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139696,"byte_end":139703,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":13033},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139696,"byte_end":139703,"line_start":131,"line_end":131,"column_start":71,"column_end":78},"alias_span":null,"name":"Aborted","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":0,"index":6166},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139786,"byte_end":139795,"line_start":134,"line_end":134,"column_start":20,"column_end":29},"alias_span":null,"name":"abortable","value":"","parent":{"krate":0,"index":1599}},{"kind":"Use","ref_id":{"krate":5,"index":96},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10777,"byte_end":10783,"line_start":300,"line_end":300,"column_start":25,"column_end":31},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3566},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10785,"byte_end":10794,"line_start":300,"line_end":300,"column_start":33,"column_end":42},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":127},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10796,"byte_end":10805,"line_start":300,"line_end":300,"column_start":44,"column_end":53},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4807},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10807,"byte_end":10819,"line_start":300,"line_end":300,"column_start":55,"column_end":67},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13630},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483519,"byte_end":483526,"line_start":14,"line_end":14,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":1,"index":49788},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483528,"byte_end":483532,"line_start":14,"line_end":14,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":1,"index":49824},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483534,"byte_end":483542,"line_start":14,"line_end":14,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":1,"index":49833},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483544,"byte_end":483558,"line_start":14,"line_end":14,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":1,"index":13640},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483560,"byte_end":483565,"line_start":14,"line_end":14,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":237},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483592,"byte_end":483601,"line_start":16,"line_end":16,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":203},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483603,"byte_end":483617,"line_start":16,"line_end":16,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":19},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483619,"byte_end":483629,"line_start":16,"line_end":16,"column_start":51,"column_end":61},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":16},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483631,"byte_end":483636,"line_start":16,"line_end":16,"column_start":63,"column_end":68},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":22},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483638,"byte_end":483648,"line_start":16,"line_end":16,"column_start":70,"column_end":80},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":258},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483650,"byte_end":483665,"line_start":16,"line_end":16,"column_start":82,"column_end":97},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":378},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483691,"byte_end":483701,"line_start":18,"line_end":18,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":379},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483725,"byte_end":483739,"line_start":19,"line_end":19,"column_start":23,"column_end":37},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":94},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483825,"byte_end":483832,"line_start":23,"line_end":23,"column_start":23,"column_end":30},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":122},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483918,"byte_end":483923,"line_start":27,"line_end":27,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":170},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":484010,"byte_end":484019,"line_start":31,"line_end":31,"column_start":24,"column_end":33},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":22,"index":407},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":484021,"byte_end":484029,"line_start":31,"line_end":31,"column_start":35,"column_end":43},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":5,"index":194},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":484108,"byte_end":484119,"line_start":34,"line_end":34,"column_start":41,"column_end":52},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":0,"index":6289},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":484155,"byte_end":484168,"line_start":37,"line_end":37,"column_start":23,"column_end":36},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":6200}},{"kind":"Use","ref_id":{"krate":0,"index":6286},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":484170,"byte_end":484178,"line_start":37,"line_end":37,"column_start":38,"column_end":46},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":6200}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":11572,"line_start":1,"line_end":337,"column_start":1,"column_end":18},"name":"","qualname":"::","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":8},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1590},{"krate":0,"index":1593},{"krate":0,"index":1596},{"krate":0,"index":1599},{"krate":0,"index":6187},{"krate":0,"index":6188},{"krate":0,"index":6191},{"krate":0,"index":6194},{"krate":0,"index":6197},{"krate":0,"index":6200},{"krate":0,"index":6299},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6363},{"krate":0,"index":6577}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"/ Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"/ and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":234,"byte_end":240,"line_start":5,"line_end":5,"column_start":35,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nsingle_use_lifetimes, unreachable_pub)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":243,"byte_end":375,"line_start":6,"line_end":12,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":15},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":33},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":40},{"krate":0,"index":43},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":276},{"krate":0,"index":279},{"krate":0,"index":282},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":291},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":565},{"krate":0,"index":568},{"krate":0,"index":571},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":580},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":619},{"krate":0,"index":622},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":709},{"krate":0,"index":710},{"krate":0,"index":713},{"krate":0,"index":716},{"krate":0,"index":761},{"krate":0,"index":762},{"krate":0,"index":765},{"krate":0,"index":768},{"krate":0,"index":802},{"krate":0,"index":805},{"krate":0,"index":841},{"krate":0,"index":842},{"krate":0,"index":845},{"krate":0,"index":848},{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":898},{"krate":0,"index":939},{"krate":0,"index":940},{"krate":0,"index":943},{"krate":0,"index":946},{"krate":0,"index":949},{"krate":0,"index":952},{"krate":0,"index":1005},{"krate":0,"index":1006},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1015},{"krate":0,"index":1018},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1027},{"krate":0,"index":1030},{"krate":0,"index":1104},{"krate":0,"index":1105},{"krate":0,"index":1108},{"krate":0,"index":1111},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1158},{"krate":0,"index":1161},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1210},{"krate":0,"index":1213},{"krate":0,"index":1266},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1279},{"krate":0,"index":1282},{"krate":0,"index":1285},{"krate":0,"index":1288},{"krate":0,"index":1291},{"krate":0,"index":1381},{"krate":0,"index":1382},{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1428},{"krate":0,"index":1431},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1481},{"krate":0,"index":1484},{"krate":0,"index":1545},{"krate":0,"index":1548},{"krate":0,"index":1567},{"krate":0,"index":1568},{"krate":0,"index":1571},{"krate":0,"index":1574},{"krate":0,"index":1577},{"krate":0,"index":1578},{"krate":0,"index":1580},{"krate":0,"index":1583}],"decl_id":null,"docs":" Asynchronous values.","sig":null,"attributes":[{"value":"/ Asynchronous values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11574,"byte_end":11598,"line_start":1,"line_end":1,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11599,"byte_end":11602,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11603,"byte_end":11628,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11629,"byte_end":11632,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Future`] trait.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11633,"byte_end":11660,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/ - The [`FutureExt`] and [`TryFutureExt`] trait, which provides adapters for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11661,"byte_end":11740,"line_start":6,"line_end":6,"column_start":1,"column_end":80}},{"value":"/   chaining and composing futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11741,"byte_end":11778,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/ - Top-level future combinators like [`lazy`](lazy()) which creates a future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11779,"byte_end":11858,"line_start":8,"line_end":8,"column_start":1,"column_end":80}},{"value":"/   from a closure that defines its return value, and [`ready`](ready()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11859,"byte_end":11934,"line_start":9,"line_end":9,"column_start":1,"column_end":76}},{"value":"/   which constructs a future with an immediate defined value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/mod.rs","byte_start":11935,"byte_end":11999,"line_start":10,"line_end":10,"column_start":1,"column_end":65}}]},{"kind":"StructVariant","id":{"krate":0,"index":6592},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35381,"byte_end":35386,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First { f }","parent":{"krate":0,"index":6589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6593},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35396,"byte_end":35397,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::future::flatten::Flatten::First::f","value":"Fut1","parent":{"krate":0,"index":6592},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6594},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35415,"byte_end":35421,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second { f }","parent":{"krate":0,"index":6589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6595},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35431,"byte_end":35432,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::future::flatten::Flatten::Second::f","value":"Fut2","parent":{"krate":0,"index":6594},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6596},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35450,"byte_end":35455,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":6589},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6589},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35351,"byte_end":35358,"line_start":13,"line_end":13,"column_start":14,"column_end":21},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"enum Flatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":6592},{"krate":0,"index":6594},{"krate":0,"index":6596}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35703,"byte_end":35716,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35987,"byte_end":35991,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":150},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36716,"byte_end":36729,"line_start":69,"line_end":69,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<Fut, Fut::Output> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":154},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36996,"byte_end":37005,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<Fut, Fut::Output> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6636},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39812,"byte_end":39816,"line_start":11,"line_end":11,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":6638}],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41635,"byte_end":41645,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"fn terminated() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40013,"byte_end":40081,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40086,"byte_end":40089,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40094,"byte_end":40162,"line_start":26,"line_end":26,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40167,"byte_end":40212,"line_start":27,"line_end":27,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40217,"byte_end":40220,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40225,"byte_end":40239,"line_start":29,"line_end":29,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40244,"byte_end":40247,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40252,"byte_end":40259,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40264,"byte_end":40305,"line_start":32,"line_end":32,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40310,"byte_end":40341,"line_start":33,"line_end":33,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40346,"byte_end":40402,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40407,"byte_end":40431,"line_start":35,"line_end":35,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40436,"byte_end":40471,"line_start":36,"line_end":36,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40476,"byte_end":40501,"line_start":37,"line_end":37,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40506,"byte_end":40509,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40514,"byte_end":40563,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40568,"byte_end":40571,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40576,"byte_end":40618,"line_start":41,"line_end":41,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40623,"byte_end":40662,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40667,"byte_end":40706,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40711,"byte_end":40728,"line_start":44,"line_end":44,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40733,"byte_end":40736,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40741,"byte_end":40811,"line_start":46,"line_end":46,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40816,"byte_end":40855,"line_start":47,"line_end":47,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40860,"byte_end":40901,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40906,"byte_end":40932,"line_start":49,"line_end":49,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40937,"byte_end":40940,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40945,"byte_end":40955,"line_start":51,"line_end":51,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40960,"byte_end":40977,"line_start":52,"line_end":52,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":40982,"byte_end":41016,"line_start":53,"line_end":53,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41021,"byte_end":41068,"line_start":54,"line_end":54,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41073,"byte_end":41122,"line_start":55,"line_end":55,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41127,"byte_end":41189,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41194,"byte_end":41218,"line_start":57,"line_end":57,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41223,"byte_end":41266,"line_start":58,"line_end":58,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41271,"byte_end":41328,"line_start":59,"line_end":59,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41333,"byte_end":41408,"line_start":60,"line_end":60,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41413,"byte_end":41443,"line_start":61,"line_end":61,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41448,"byte_end":41465,"line_start":62,"line_end":62,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41470,"byte_end":41484,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41489,"byte_end":41573,"line_start":64,"line_end":64,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41578,"byte_end":41587,"line_start":65,"line_end":65,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41592,"byte_end":41597,"line_start":66,"line_end":66,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41602,"byte_end":41611,"line_start":67,"line_end":67,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41616,"byte_end":41623,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":187},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41749,"byte_end":41762,"line_start":75,"line_end":75,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41898,"byte_end":41902,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fuse<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Fut::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":6675},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42703,"byte_end":42713,"line_start":16,"line_end":16,"column_start":9,"column_end":19},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":6672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6676},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42747,"byte_end":42753,"line_start":18,"line_end":18,"column_start":13,"column_end":19},"name":"future","qualname":"::future::future::map::Map::Incomplete::future","value":"Fut","parent":{"krate":0,"index":6675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":6677},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42772,"byte_end":42773,"line_start":19,"line_end":19,"column_start":13,"column_end":14},"name":"f","qualname":"::future::future::map::Map::Incomplete::f","value":"F","parent":{"krate":0,"index":6675},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":6678},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42797,"byte_end":42805,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":6672},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":6672},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42681,"byte_end":42684,"line_start":15,"line_end":15,"column_start":14,"column_end":17},"name":"Map","qualname":"::future::future::map::Map","value":"enum Map<Fut, F> {\n    Incomplete {\n            future: Fut,\n            f: F,\n        },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":6675},{"krate":0,"index":6678}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14003079,"byte_end":14003088,"line_start":659,"line_end":659,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43086,"byte_end":43099,"line_start":37,"line_end":37,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43373,"byte_end":43377,"line_start":52,"line_end":52,"column_start":8,"column_end":12},"name":"poll","qualname":"<Map<Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6727},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":15807,"byte_end":15814,"line_start":31,"line_end":31,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":6729}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6775},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16065,"byte_end":16078,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":6777}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6825},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16418,"byte_end":16421,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6828}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6885},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16628,"byte_end":16638,"line_start":57,"line_end":57,"column_start":5,"column_end":15},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":6887}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6935},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":16844,"byte_end":16851,"line_start":64,"line_end":64,"column_start":5,"column_end":12},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":6938}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6997},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17044,"byte_end":17048,"line_start":71,"line_end":71,"column_start":5,"column_end":9},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":7001}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7070},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17293,"byte_end":17300,"line_start":78,"line_end":78,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":7073}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7130},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17541,"byte_end":17551,"line_start":85,"line_end":85,"column_start":5,"column_end":15},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":7132}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7178},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":17764,"byte_end":17773,"line_start":92,"line_end":92,"column_start":5,"column_end":14},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":7180}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":239},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18755,"byte_end":18764,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":250},{"krate":0,"index":252},{"krate":0,"index":253},{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18656,"byte_end":18730,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18731,"byte_end":18744,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19596,"byte_end":19599,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18779,"byte_end":18854,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18859,"byte_end":18882,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18887,"byte_end":18890,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18895,"byte_end":18969,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18974,"byte_end":19045,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19050,"byte_end":19112,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19117,"byte_end":19120,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19125,"byte_end":19196,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19201,"byte_end":19272,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19277,"byte_end":19298,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19303,"byte_end":19306,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19311,"byte_end":19325,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19330,"byte_end":19333,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19338,"byte_end":19345,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19350,"byte_end":19391,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19396,"byte_end":19431,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19436,"byte_end":19439,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19444,"byte_end":19473,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19478,"byte_end":19521,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19526,"byte_end":19562,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19567,"byte_end":19576,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19581,"byte_end":19588,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19996,"byte_end":20004,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19769,"byte_end":19844,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19849,"byte_end":19872,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19877,"byte_end":19880,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19885,"byte_end":19963,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":19968,"byte_end":19988,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":245},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21016,"byte_end":21020,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnOnce(Self::Output)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20163,"byte_end":20239,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20244,"byte_end":20287,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20292,"byte_end":20295,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20300,"byte_end":20371,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20376,"byte_end":20450,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20455,"byte_end":20471,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20476,"byte_end":20479,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20484,"byte_end":20559,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20564,"byte_end":20575,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20580,"byte_end":20583,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20588,"byte_end":20659,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20664,"byte_end":20690,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20695,"byte_end":20698,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20703,"byte_end":20717,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20722,"byte_end":20725,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20730,"byte_end":20737,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20742,"byte_end":20783,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20788,"byte_end":20823,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20828,"byte_end":20831,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20836,"byte_end":20870,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20875,"byte_end":20940,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20945,"byte_end":20982,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":20987,"byte_end":20996,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21001,"byte_end":21008,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21890,"byte_end":21901,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21232,"byte_end":21307,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21312,"byte_end":21333,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21338,"byte_end":21341,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21346,"byte_end":21426,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21431,"byte_end":21503,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21508,"byte_end":21511,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21516,"byte_end":21530,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21535,"byte_end":21538,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21543,"byte_end":21550,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21555,"byte_end":21596,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21601,"byte_end":21636,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21641,"byte_end":21644,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21649,"byte_end":21663,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21668,"byte_end":21696,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21701,"byte_end":21737,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21742,"byte_end":21754,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21759,"byte_end":21797,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21802,"byte_end":21808,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21813,"byte_end":21816,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21821,"byte_end":21856,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21861,"byte_end":21870,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":21875,"byte_end":21882,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22740,"byte_end":22752,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22081,"byte_end":22157,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22162,"byte_end":22183,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22188,"byte_end":22191,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22196,"byte_end":22275,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22280,"byte_end":22352,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22357,"byte_end":22360,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22365,"byte_end":22379,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22384,"byte_end":22387,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22392,"byte_end":22399,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22404,"byte_end":22445,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22450,"byte_end":22485,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22490,"byte_end":22493,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22498,"byte_end":22512,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22517,"byte_end":22545,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22550,"byte_end":22586,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22591,"byte_end":22603,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22608,"byte_end":22646,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22651,"byte_end":22657,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22662,"byte_end":22665,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22670,"byte_end":22706,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22711,"byte_end":22720,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22725,"byte_end":22732,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23531,"byte_end":23542,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22933,"byte_end":22986,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22991,"byte_end":22994,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":22999,"byte_end":23073,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23078,"byte_end":23141,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23146,"byte_end":23149,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23154,"byte_end":23168,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23173,"byte_end":23176,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23181,"byte_end":23188,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23193,"byte_end":23234,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23239,"byte_end":23274,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23279,"byte_end":23314,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23319,"byte_end":23322,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23327,"byte_end":23357,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23362,"byte_end":23400,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23405,"byte_end":23456,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23461,"byte_end":23497,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23502,"byte_end":23511,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23516,"byte_end":23523,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24407,"byte_end":24414,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23681,"byte_end":23745,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23750,"byte_end":23786,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23791,"byte_end":23794,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23799,"byte_end":23868,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23873,"byte_end":23910,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23915,"byte_end":23918,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23923,"byte_end":23983,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23988,"byte_end":23991,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":23996,"byte_end":24067,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24072,"byte_end":24098,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24103,"byte_end":24106,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24111,"byte_end":24125,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24130,"byte_end":24133,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24138,"byte_end":24145,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24150,"byte_end":24191,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24196,"byte_end":24231,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24236,"byte_end":24239,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24244,"byte_end":24290,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24295,"byte_end":24336,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24341,"byte_end":24373,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24378,"byte_end":24387,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24392,"byte_end":24399,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25519,"byte_end":25533,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24628,"byte_end":24703,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24708,"byte_end":24731,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24736,"byte_end":24739,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24744,"byte_end":24816,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24821,"byte_end":24894,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24899,"byte_end":24913,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24918,"byte_end":24921,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":24926,"byte_end":24996,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25001,"byte_end":25019,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25024,"byte_end":25027,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25032,"byte_end":25046,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25051,"byte_end":25054,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25059,"byte_end":25066,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25071,"byte_end":25112,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25117,"byte_end":25152,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25157,"byte_end":25200,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25205,"byte_end":25208,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25213,"byte_end":25253,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25258,"byte_end":25324,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25329,"byte_end":25332,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25337,"byte_end":25390,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25395,"byte_end":25441,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25446,"byte_end":25485,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25490,"byte_end":25499,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25504,"byte_end":25511,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26621,"byte_end":26625,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25726,"byte_end":25799,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25804,"byte_end":25870,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25875,"byte_end":25893,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25898,"byte_end":25901,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25906,"byte_end":25973,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":25978,"byte_end":26043,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26048,"byte_end":26120,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26125,"byte_end":26199,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26204,"byte_end":26230,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26235,"byte_end":26238,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26243,"byte_end":26314,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26319,"byte_end":26394,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26399,"byte_end":26453,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26458,"byte_end":26461,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26466,"byte_end":26540,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26545,"byte_end":26613,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":256},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27465,"byte_end":27472,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output) ->\n(), Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26771,"byte_end":26837,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26842,"byte_end":26845,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26850,"byte_end":26925,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":26930,"byte_end":27003,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27008,"byte_end":27077,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27082,"byte_end":27132,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27137,"byte_end":27140,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27145,"byte_end":27159,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27164,"byte_end":27167,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27172,"byte_end":27179,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27184,"byte_end":27225,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27230,"byte_end":27265,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27270,"byte_end":27273,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27278,"byte_end":27307,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27312,"byte_end":27390,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27395,"byte_end":27431,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27436,"byte_end":27445,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":27450,"byte_end":27457,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31942,"byte_end":31947,"line_start":518,"line_end":518,"column_start":8,"column_end":13},"name":"boxed","qualname":"::future::future::FutureExt::boxed","value":"fn boxed<'a>(Self) -> BoxFuture where Self: Sized + Send + 'a","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31713,"byte_end":31754,"line_start":513,"line_end":513,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31759,"byte_end":31762,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31767,"byte_end":31842,"line_start":515,"line_end":515,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31847,"byte_end":31904,"line_start":516,"line_end":516,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":31909,"byte_end":31934,"line_start":517,"line_end":517,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32407,"byte_end":32418,"line_start":532,"line_end":532,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::future::future::FutureExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxFuture where Self: Sized + 'a","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Wrap the future in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the future in a Box, pinning it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32106,"byte_end":32147,"line_start":525,"line_end":525,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32152,"byte_end":32155,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32160,"byte_end":32219,"line_start":527,"line_end":527,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32224,"byte_end":32227,"line_start":528,"line_end":528,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32232,"byte_end":32307,"line_start":529,"line_end":529,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32312,"byte_end":32369,"line_start":530,"line_end":530,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32374,"byte_end":32399,"line_start":531,"line_end":531,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32708,"byte_end":32718,"line_start":541,"line_end":541,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32575,"byte_end":32624,"line_start":539,"line_end":539,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32629,"byte_end":32700,"line_start":540,"line_end":540,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33003,"byte_end":33014,"line_start":550,"line_end":550,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32867,"byte_end":32916,"line_start":548,"line_end":548,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":32921,"byte_end":32995,"line_start":549,"line_end":549,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33245,"byte_end":33255,"line_start":558,"line_end":558,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where Self: Unpin","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33168,"byte_end":33237,"line_start":557,"line_end":557,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34651,"byte_end":34663,"line_start":596,"line_end":596,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":239},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33391,"byte_end":33463,"line_start":565,"line_end":565,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33468,"byte_end":33531,"line_start":566,"line_end":566,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33536,"byte_end":33539,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33544,"byte_end":33610,"line_start":568,"line_end":568,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33615,"byte_end":33618,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33623,"byte_end":33696,"line_start":570,"line_end":570,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33701,"byte_end":33770,"line_start":571,"line_end":571,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33775,"byte_end":33845,"line_start":572,"line_end":572,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33850,"byte_end":33853,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33858,"byte_end":33872,"line_start":574,"line_end":574,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33877,"byte_end":33880,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33885,"byte_end":33892,"line_start":576,"line_end":576,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33897,"byte_end":33927,"line_start":577,"line_end":577,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33932,"byte_end":33982,"line_start":578,"line_end":578,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":33987,"byte_end":34026,"line_start":579,"line_end":579,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34031,"byte_end":34082,"line_start":580,"line_end":580,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34087,"byte_end":34090,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34095,"byte_end":34155,"line_start":582,"line_end":582,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34160,"byte_end":34212,"line_start":583,"line_end":583,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34217,"byte_end":34224,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34229,"byte_end":34232,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34237,"byte_end":34306,"line_start":586,"line_end":586,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34311,"byte_end":34384,"line_start":587,"line_end":587,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34389,"byte_end":34421,"line_start":588,"line_end":588,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34426,"byte_end":34429,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34434,"byte_end":34441,"line_start":590,"line_end":590,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34446,"byte_end":34493,"line_start":591,"line_end":591,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34498,"byte_end":34537,"line_start":592,"line_end":592,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34542,"byte_end":34545,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34550,"byte_end":34631,"line_start":594,"line_end":594,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":34636,"byte_end":34643,"line_start":595,"line_end":595,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":7224},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66151,"byte_end":66161,"line_start":10,"line_end":10,"column_start":16,"column_end":26},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"IntoFuture {  }","parent":null,"children":[{"krate":0,"index":7226}],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66410,"byte_end":66423,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoFuture<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66605,"byte_end":66609,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"poll","qualname":"<IntoFuture<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66588,"byte_end":66597,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"StructVariant","id":{"krate":0,"index":7263},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67135,"byte_end":67140,"line_start":14,"line_end":14,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First { f }","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7264},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67150,"byte_end":67151,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::First::f","value":"Fut1","parent":{"krate":0,"index":7263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7265},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67169,"byte_end":67175,"line_start":15,"line_end":15,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second { f }","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7266},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67185,"byte_end":67186,"line_start":15,"line_end":15,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten::TryFlatten::Second::f","value":"Fut2","parent":{"krate":0,"index":7265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7267},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67204,"byte_end":67209,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":7260},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7260},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67102,"byte_end":67112,"line_start":13,"line_end":13,"column_start":14,"column_end":24},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"enum TryFlatten<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":7263},{"krate":0,"index":7265},{"krate":0,"index":7267}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67481,"byte_end":67494,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67801,"byte_end":67805,"line_start":46,"line_end":46,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":458},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68697,"byte_end":68710,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":69015,"byte_end":69024,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<Fut, Fut::Ok> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7310},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72078,"byte_end":72083,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First { f }","parent":{"krate":0,"index":7307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7311},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72093,"byte_end":72094,"line_start":11,"line_end":11,"column_start":24,"column_end":25},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First::f","value":"Fut1","parent":{"krate":0,"index":7310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":7312},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72112,"byte_end":72118,"line_start":12,"line_end":12,"column_start":9,"column_end":15},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second { f }","parent":{"krate":0,"index":7307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":7313},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72128,"byte_end":72129,"line_start":12,"line_end":12,"column_start":25,"column_end":26},"name":"f","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second::f","value":"Fut2","parent":{"krate":0,"index":7312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":7314},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72147,"byte_end":72152,"line_start":13,"line_end":13,"column_start":9,"column_end":14},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":7307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":7307},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72042,"byte_end":72055,"line_start":10,"line_end":10,"column_start":14,"column_end":27},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"enum TryFlattenErr<Fut1, Fut2> {\n    First {\n            f: Fut1,\n        },\n    Second {\n            f: Fut2,\n        },\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":7310},{"krate":0,"index":7312},{"krate":0,"index":7314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72430,"byte_end":72443,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":500},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72756,"byte_end":72760,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFlattenErr<Fut, Fut::Error> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7357},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":44838,"byte_end":44848,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7360}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7418},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":45096,"byte_end":45109,"line_start":39,"line_end":39,"column_start":5,"column_end":18},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":7421}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7478},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":45377,"byte_end":45393,"line_start":46,"line_end":46,"column_start":5,"column_end":21},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":7480}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":45981,"byte_end":45988,"line_start":63,"line_end":63,"column_start":5,"column_end":12},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":7533}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7603},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":46228,"byte_end":46234,"line_start":70,"line_end":70,"column_start":5,"column_end":11},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7607}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7676},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":46484,"byte_end":46491,"line_start":77,"line_end":77,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":7679}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7737},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":46699,"byte_end":46705,"line_start":84,"line_end":84,"column_start":5,"column_end":11},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":7740}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7798},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":46924,"byte_end":46933,"line_start":91,"line_end":91,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":7801}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7859},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":47205,"byte_end":47215,"line_start":98,"line_end":98,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":7862}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7920},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":47588,"byte_end":47593,"line_start":108,"line_end":108,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":7923}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":7981},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":47834,"byte_end":47840,"line_start":115,"line_end":115,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":7984}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8043},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48097,"byte_end":48108,"line_start":122,"line_end":122,"column_start":5,"column_end":16},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":8047}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8116},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48392,"byte_end":48404,"line_start":129,"line_end":129,"column_start":5,"column_end":17},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":8119}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Trait","id":{"krate":0,"index":506},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48694,"byte_end":48706,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":507},{"krate":0,"index":510},{"krate":0,"index":514},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48630,"byte_end":48683,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":507},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51466,"byte_end":51472,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50094,"byte_end":50152,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50157,"byte_end":50160,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50165,"byte_end":50240,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50245,"byte_end":50315,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50320,"byte_end":50393,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50398,"byte_end":50427,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50432,"byte_end":50435,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50440,"byte_end":50515,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50520,"byte_end":50595,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50600,"byte_end":50647,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50652,"byte_end":50655,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50660,"byte_end":50735,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50740,"byte_end":50766,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50771,"byte_end":50774,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50779,"byte_end":50793,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50798,"byte_end":50801,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50806,"byte_end":50813,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50818,"byte_end":50856,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50861,"byte_end":50864,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50869,"byte_end":50910,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50915,"byte_end":50960,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":50965,"byte_end":51007,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51012,"byte_end":51048,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51053,"byte_end":51062,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51067,"byte_end":51074,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51079,"byte_end":51082,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51087,"byte_end":51159,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51164,"byte_end":51175,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51180,"byte_end":51183,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51188,"byte_end":51195,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51200,"byte_end":51238,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51243,"byte_end":51246,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51251,"byte_end":51292,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51297,"byte_end":51343,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51348,"byte_end":51390,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51395,"byte_end":51432,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51437,"byte_end":51446,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51451,"byte_end":51458,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53031,"byte_end":53045,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51663,"byte_end":51780,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51785,"byte_end":51788,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51793,"byte_end":51915,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51920,"byte_end":51970,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51975,"byte_end":51978,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":51983,"byte_end":52058,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52063,"byte_end":52138,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52143,"byte_end":52190,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52195,"byte_end":52198,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52203,"byte_end":52278,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52283,"byte_end":52358,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52363,"byte_end":52410,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52415,"byte_end":52418,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52423,"byte_end":52498,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52503,"byte_end":52529,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52534,"byte_end":52537,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52542,"byte_end":52556,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52561,"byte_end":52564,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52569,"byte_end":52576,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52581,"byte_end":52619,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52624,"byte_end":52627,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52632,"byte_end":52673,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52678,"byte_end":52723,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52728,"byte_end":52789,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52794,"byte_end":52826,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52831,"byte_end":52834,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52839,"byte_end":52885,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52890,"byte_end":52951,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52956,"byte_end":52989,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":52994,"byte_end":53003,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53008,"byte_end":53015,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53020,"byte_end":53023,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":514},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54802,"byte_end":54809,"line_start":308,"line_end":308,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error) ->\nE, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53279,"byte_end":53335,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53340,"byte_end":53343,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53348,"byte_end":53422,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53427,"byte_end":53488,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53493,"byte_end":53563,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53568,"byte_end":53643,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53648,"byte_end":53683,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53688,"byte_end":53691,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53696,"byte_end":53771,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53776,"byte_end":53851,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53856,"byte_end":53903,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53908,"byte_end":53911,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53916,"byte_end":53991,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":53996,"byte_end":54022,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54027,"byte_end":54030,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54035,"byte_end":54049,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54054,"byte_end":54057,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54062,"byte_end":54069,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54074,"byte_end":54112,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54117,"byte_end":54120,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54125,"byte_end":54166,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54171,"byte_end":54217,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54222,"byte_end":54265,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54270,"byte_end":54307,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54312,"byte_end":54321,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54326,"byte_end":54333,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54338,"byte_end":54341,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54346,"byte_end":54419,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54424,"byte_end":54438,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54443,"byte_end":54446,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54451,"byte_end":54458,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54463,"byte_end":54501,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54506,"byte_end":54509,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54514,"byte_end":54555,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54560,"byte_end":54605,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54610,"byte_end":54653,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54658,"byte_end":54694,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54699,"byte_end":54708,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54713,"byte_end":54720,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54725,"byte_end":54728,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54733,"byte_end":54759,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":54764,"byte_end":54794,"line_start":307,"line_end":307,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55973,"byte_end":55981,"line_start":341,"line_end":341,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55002,"byte_end":55072,"line_start":316,"line_end":316,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55077,"byte_end":55126,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55131,"byte_end":55134,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55139,"byte_end":55202,"line_start":319,"line_end":319,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55207,"byte_end":55275,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55280,"byte_end":55353,"line_start":321,"line_end":321,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55358,"byte_end":55434,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55439,"byte_end":55484,"line_start":323,"line_end":323,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55489,"byte_end":55492,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55497,"byte_end":55572,"line_start":325,"line_end":325,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55577,"byte_end":55603,"line_start":326,"line_end":326,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55608,"byte_end":55611,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55616,"byte_end":55630,"line_start":328,"line_end":328,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55635,"byte_end":55638,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55643,"byte_end":55650,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55655,"byte_end":55693,"line_start":331,"line_end":331,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55698,"byte_end":55701,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55706,"byte_end":55747,"line_start":333,"line_end":333,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55752,"byte_end":55803,"line_start":334,"line_end":334,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55808,"byte_end":55865,"line_start":335,"line_end":335,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55870,"byte_end":55879,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55884,"byte_end":55891,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55896,"byte_end":55899,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ [`join!`]: crate::join","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55904,"byte_end":55930,"line_start":339,"line_end":339,"column_start":5,"column_end":31}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":55935,"byte_end":55965,"line_start":340,"line_end":340,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":519},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56277,"byte_end":56284,"line_start":351,"line_end":351,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized, Self::Ok: Into<U>","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56157,"byte_end":56215,"line_start":349,"line_end":349,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56220,"byte_end":56269,"line_start":350,"line_end":350,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":521},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57839,"byte_end":57847,"line_start":395,"line_end":395,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56458,"byte_end":56527,"line_start":359,"line_end":359,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56532,"byte_end":56606,"line_start":360,"line_end":360,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56611,"byte_end":56614,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56619,"byte_end":56694,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56699,"byte_end":56769,"line_start":363,"line_end":363,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56774,"byte_end":56839,"line_start":364,"line_end":364,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56844,"byte_end":56910,"line_start":365,"line_end":365,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56915,"byte_end":56949,"line_start":366,"line_end":366,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56954,"byte_end":56957,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":56962,"byte_end":57037,"line_start":368,"line_end":368,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57042,"byte_end":57068,"line_start":369,"line_end":369,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57073,"byte_end":57076,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57081,"byte_end":57095,"line_start":371,"line_end":371,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57100,"byte_end":57103,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57108,"byte_end":57115,"line_start":373,"line_end":373,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57120,"byte_end":57158,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57163,"byte_end":57166,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57171,"byte_end":57212,"line_start":376,"line_end":376,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57217,"byte_end":57262,"line_start":377,"line_end":377,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57267,"byte_end":57342,"line_start":378,"line_end":378,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57347,"byte_end":57383,"line_start":379,"line_end":379,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57388,"byte_end":57397,"line_start":380,"line_end":380,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57402,"byte_end":57409,"line_start":381,"line_end":381,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57414,"byte_end":57417,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57422,"byte_end":57498,"line_start":383,"line_end":383,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57503,"byte_end":57514,"line_start":384,"line_end":384,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57519,"byte_end":57522,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57527,"byte_end":57534,"line_start":386,"line_end":386,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57539,"byte_end":57577,"line_start":387,"line_end":387,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57582,"byte_end":57585,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57590,"byte_end":57631,"line_start":389,"line_end":389,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57636,"byte_end":57682,"line_start":390,"line_end":390,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57687,"byte_end":57763,"line_start":391,"line_end":391,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57768,"byte_end":57805,"line_start":392,"line_end":392,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57810,"byte_end":57819,"line_start":393,"line_end":393,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":57824,"byte_end":57831,"line_start":394,"line_end":394,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":524},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59468,"byte_end":59475,"line_start":440,"line_end":440,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58101,"byte_end":58166,"line_start":404,"line_end":404,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58171,"byte_end":58243,"line_start":405,"line_end":405,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58248,"byte_end":58251,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58256,"byte_end":58331,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58336,"byte_end":58406,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58411,"byte_end":58476,"line_start":409,"line_end":409,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58481,"byte_end":58557,"line_start":410,"line_end":410,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58562,"byte_end":58580,"line_start":411,"line_end":411,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58585,"byte_end":58588,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58593,"byte_end":58668,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58673,"byte_end":58699,"line_start":414,"line_end":414,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58704,"byte_end":58707,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58712,"byte_end":58726,"line_start":416,"line_end":416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58731,"byte_end":58734,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58739,"byte_end":58746,"line_start":418,"line_end":418,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58751,"byte_end":58789,"line_start":419,"line_end":419,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58794,"byte_end":58797,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58802,"byte_end":58843,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58848,"byte_end":58894,"line_start":422,"line_end":422,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58899,"byte_end":58974,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":58979,"byte_end":59016,"line_start":424,"line_end":424,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59021,"byte_end":59030,"line_start":425,"line_end":425,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59035,"byte_end":59042,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59047,"byte_end":59050,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59055,"byte_end":59128,"line_start":428,"line_end":428,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59133,"byte_end":59147,"line_start":429,"line_end":429,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59152,"byte_end":59155,"line_start":430,"line_end":430,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59160,"byte_end":59167,"line_start":431,"line_end":431,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59172,"byte_end":59210,"line_start":432,"line_end":432,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59215,"byte_end":59218,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59223,"byte_end":59264,"line_start":434,"line_end":434,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59269,"byte_end":59314,"line_start":435,"line_end":435,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59319,"byte_end":59393,"line_start":436,"line_end":436,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59398,"byte_end":59434,"line_start":437,"line_end":437,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59439,"byte_end":59448,"line_start":438,"line_end":438,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59453,"byte_end":59460,"line_start":439,"line_end":439,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":527},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60451,"byte_end":60461,"line_start":467,"line_end":467,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok) ->\n(), Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59724,"byte_end":59797,"line_start":449,"line_end":449,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59802,"byte_end":59805,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59810,"byte_end":59885,"line_start":451,"line_end":451,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59890,"byte_end":59963,"line_start":452,"line_end":452,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":59968,"byte_end":60037,"line_start":453,"line_end":453,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60042,"byte_end":60095,"line_start":454,"line_end":454,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60100,"byte_end":60103,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60108,"byte_end":60122,"line_start":456,"line_end":456,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60127,"byte_end":60130,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60135,"byte_end":60142,"line_start":458,"line_end":458,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60147,"byte_end":60188,"line_start":459,"line_end":459,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60193,"byte_end":60231,"line_start":460,"line_end":460,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60236,"byte_end":60239,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60244,"byte_end":60286,"line_start":462,"line_end":462,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60291,"byte_end":60372,"line_start":463,"line_end":463,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60377,"byte_end":60417,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60422,"byte_end":60431,"line_start":465,"line_end":465,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60436,"byte_end":60443,"line_start":466,"line_end":466,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61387,"byte_end":61398,"line_start":493,"line_end":493,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60660,"byte_end":60731,"line_start":475,"line_end":475,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60736,"byte_end":60739,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60744,"byte_end":60819,"line_start":477,"line_end":477,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60824,"byte_end":60897,"line_start":478,"line_end":478,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60902,"byte_end":60971,"line_start":479,"line_end":479,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":60976,"byte_end":61030,"line_start":480,"line_end":480,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61035,"byte_end":61038,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61043,"byte_end":61057,"line_start":482,"line_end":482,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61062,"byte_end":61065,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61070,"byte_end":61077,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61082,"byte_end":61123,"line_start":485,"line_end":485,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61128,"byte_end":61166,"line_start":486,"line_end":486,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61171,"byte_end":61174,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61179,"byte_end":61222,"line_start":488,"line_end":488,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61227,"byte_end":61307,"line_start":489,"line_end":489,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61312,"byte_end":61353,"line_start":490,"line_end":490,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61358,"byte_end":61367,"line_start":491,"line_end":491,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61372,"byte_end":61379,"line_start":492,"line_end":492,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":531},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61783,"byte_end":61794,"line_start":505,"line_end":505,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61602,"byte_end":61677,"line_start":501,"line_end":501,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61682,"byte_end":61711,"line_start":502,"line_end":502,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61716,"byte_end":61719,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":61724,"byte_end":61775,"line_start":504,"line_end":504,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62973,"byte_end":62991,"line_start":538,"line_end":538,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62029,"byte_end":62104,"line_start":513,"line_end":513,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62109,"byte_end":62132,"line_start":514,"line_end":514,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62137,"byte_end":62140,"line_start":515,"line_end":515,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62145,"byte_end":62217,"line_start":516,"line_end":516,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62222,"byte_end":62295,"line_start":517,"line_end":517,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62300,"byte_end":62314,"line_start":518,"line_end":518,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62319,"byte_end":62322,"line_start":519,"line_end":519,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62327,"byte_end":62397,"line_start":520,"line_end":520,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62402,"byte_end":62420,"line_start":521,"line_end":521,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62425,"byte_end":62428,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62433,"byte_end":62447,"line_start":523,"line_end":523,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62452,"byte_end":62455,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62460,"byte_end":62467,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62472,"byte_end":62513,"line_start":526,"line_end":526,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62518,"byte_end":62556,"line_start":527,"line_end":527,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62561,"byte_end":62607,"line_start":528,"line_end":528,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62612,"byte_end":62615,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62620,"byte_end":62680,"line_start":530,"line_end":530,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62685,"byte_end":62764,"line_start":531,"line_end":531,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62769,"byte_end":62772,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62777,"byte_end":62834,"line_start":533,"line_end":533,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62839,"byte_end":62891,"line_start":534,"line_end":534,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62896,"byte_end":62939,"line_start":535,"line_end":535,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62944,"byte_end":62953,"line_start":536,"line_end":536,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":62958,"byte_end":62965,"line_start":537,"line_end":537,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":533},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64082,"byte_end":64096,"line_start":570,"line_end":570,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Unwraps this future's output, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's output, producing a future with this future's","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63251,"byte_end":63322,"line_start":548,"line_end":548,"column_start":5,"column_end":76}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63327,"byte_end":63364,"line_start":549,"line_end":549,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63369,"byte_end":63418,"line_start":550,"line_end":550,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63423,"byte_end":63426,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63431,"byte_end":63500,"line_start":552,"line_end":552,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63505,"byte_end":63578,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63583,"byte_end":63653,"line_start":554,"line_end":554,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63658,"byte_end":63676,"line_start":555,"line_end":555,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63681,"byte_end":63684,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63689,"byte_end":63757,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63762,"byte_end":63765,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63770,"byte_end":63784,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63789,"byte_end":63792,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63797,"byte_end":63804,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63809,"byte_end":63847,"line_start":562,"line_end":562,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63852,"byte_end":63855,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63860,"byte_end":63901,"line_start":564,"line_end":564,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63906,"byte_end":63958,"line_start":565,"line_end":565,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":63963,"byte_end":64010,"line_start":566,"line_end":566,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64015,"byte_end":64048,"line_start":567,"line_end":567,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64053,"byte_end":64062,"line_start":568,"line_end":568,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64067,"byte_end":64074,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":535},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65351,"byte_end":65362,"line_start":610,"line_end":610,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64650,"byte_end":64703,"line_start":589,"line_end":589,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64708,"byte_end":64744,"line_start":590,"line_end":590,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64749,"byte_end":64752,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64757,"byte_end":64806,"line_start":592,"line_end":592,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64811,"byte_end":64878,"line_start":593,"line_end":593,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64883,"byte_end":64896,"line_start":594,"line_end":594,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64901,"byte_end":64904,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64909,"byte_end":64923,"line_start":596,"line_end":596,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64928,"byte_end":64931,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64936,"byte_end":64943,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":64948,"byte_end":65007,"line_start":599,"line_end":599,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65012,"byte_end":65015,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65020,"byte_end":65039,"line_start":601,"line_end":601,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65044,"byte_end":65062,"line_start":602,"line_end":602,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65067,"byte_end":65139,"line_start":603,"line_end":603,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65144,"byte_end":65176,"line_start":604,"line_end":604,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65181,"byte_end":65188,"line_start":605,"line_end":605,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65193,"byte_end":65269,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65274,"byte_end":65277,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65282,"byte_end":65331,"line_start":608,"line_end":608,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65336,"byte_end":65343,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65621,"byte_end":65635,"line_start":619,"line_end":619,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":506},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65518,"byte_end":65591,"line_start":617,"line_end":617,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":65596,"byte_end":65613,"line_start":618,"line_end":618,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8174},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73804,"byte_end":73808,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":8176}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73670,"byte_end":73707,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73725,"byte_end":73792,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":603},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74350,"byte_end":74354,"line_start":35,"line_end":35,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73913,"byte_end":73981,"line_start":16,"line_end":16,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73982,"byte_end":73985,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73986,"byte_end":74049,"line_start":18,"line_end":18,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74050,"byte_end":74053,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74054,"byte_end":74068,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74069,"byte_end":74072,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74073,"byte_end":74080,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74081,"byte_end":74122,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74123,"byte_end":74147,"line_start":24,"line_end":24,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74148,"byte_end":74151,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74152,"byte_end":74184,"line_start":26,"line_end":26,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74185,"byte_end":74212,"line_start":27,"line_end":27,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74213,"byte_end":74216,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74217,"byte_end":74254,"line_start":29,"line_end":29,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74255,"byte_end":74279,"line_start":30,"line_end":30,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74280,"byte_end":74287,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74288,"byte_end":74324,"line_start":32,"line_end":32,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74325,"byte_end":74334,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74335,"byte_end":74342,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74562,"byte_end":74575,"line_start":46,"line_end":46,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Lazy<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74732,"byte_end":74736,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"poll","qualname":"<Lazy<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<R>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8180},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75181,"byte_end":75188,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":8182}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75042,"byte_end":75084,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75102,"byte_end":75169,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":648},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75276,"byte_end":75289,"line_start":15,"line_end":15,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":649},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75749,"byte_end":75756,"line_start":37,"line_end":37,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75329,"byte_end":75409,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75410,"byte_end":75423,"line_start":21,"line_end":21,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75424,"byte_end":75427,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75428,"byte_end":75490,"line_start":23,"line_end":23,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75491,"byte_end":75494,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75495,"byte_end":75509,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75510,"byte_end":75513,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75514,"byte_end":75527,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75528,"byte_end":75569,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75570,"byte_end":75594,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75595,"byte_end":75598,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75599,"byte_end":75634,"line_start":31,"line_end":31,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75635,"byte_end":75661,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75662,"byte_end":75681,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75682,"byte_end":75691,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75692,"byte_end":75699,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":654},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75908,"byte_end":75912,"line_start":44,"line_end":44,"column_start":8,"column_end":12},"name":"poll","qualname":"<Pending<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":659},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76071,"byte_end":76076,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as core::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8188},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76528,"byte_end":76534,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":8186},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76493,"byte_end":76523,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":8190},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76548,"byte_end":76551,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::maybe_done::MaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":8188},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8191},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76601,"byte_end":76605,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":8186},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76558,"byte_end":76596,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8193},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76606,"byte_end":76617,"line_start":18,"line_end":18,"column_start":10,"column_end":21},"name":"0","qualname":"::future::maybe_done::MaybeDone::Done::0","value":"<Fut as futures_core::Future>::Output","parent":{"krate":0,"index":8191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8194},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76767,"byte_end":76771,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":8186},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76624,"byte_end":76690,"line_start":19,"line_end":19,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76695,"byte_end":76762,"line_start":20,"line_end":20,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":8186},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76464,"byte_end":76473,"line_start":14,"line_end":14,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"enum MaybeDone<Fut> where Fut: Future {\n    Future(Fut),\n    Done(Fut::Output),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":8188},{"krate":0,"index":8191},{"krate":0,"index":8194}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"/ A future that may have completed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76342,"byte_end":76379,"line_start":10,"line_end":10,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76380,"byte_end":76383,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`maybe_done()`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76384,"byte_end":76437,"line_start":12,"line_end":12,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":696},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77292,"byte_end":77302,"line_start":43,"line_end":43,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"fn maybe_done<Fut>(Fut) -> MaybeDone<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76831,"byte_end":76868,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76869,"byte_end":76872,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76873,"byte_end":76887,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76888,"byte_end":76891,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76892,"byte_end":76899,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76900,"byte_end":76941,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76942,"byte_end":76966,"line_start":32,"line_end":32,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76967,"byte_end":76992,"line_start":33,"line_end":33,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76993,"byte_end":76996,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76997,"byte_end":77046,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77047,"byte_end":77068,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77069,"byte_end":77121,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77122,"byte_end":77157,"line_start":38,"line_end":38,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77158,"byte_end":77213,"line_start":39,"line_end":39,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77214,"byte_end":77266,"line_start":40,"line_end":40,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77267,"byte_end":77276,"line_start":41,"line_end":41,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77277,"byte_end":77284,"line_start":42,"line_end":42,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77743,"byte_end":77753,"line_start":53,"line_end":53,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77445,"byte_end":77530,"line_start":48,"line_end":48,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77535,"byte_end":77606,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77611,"byte_end":77684,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77689,"byte_end":77717,"line_start":51,"line_end":51,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77722,"byte_end":77731,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78101,"byte_end":78112,"line_start":65,"line_end":65,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77981,"byte_end":78047,"line_start":62,"line_end":62,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78052,"byte_end":78075,"line_start":63,"line_end":63,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78080,"byte_end":78089,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78555,"byte_end":78568,"line_start":80,"line_end":80,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<MaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78788,"byte_end":78792,"line_start":91,"line_end":91,"column_start":8,"column_end":12},"name":"poll","qualname":"<MaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8201},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79737,"byte_end":79743,"line_start":16,"line_end":16,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":8199},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79702,"byte_end":79732,"line_start":15,"line_end":15,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":8203},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79757,"byte_end":79760,"line_start":16,"line_end":16,"column_start":25,"column_end":28},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Future::0","value":"Fut","parent":{"krate":0,"index":8201},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8204},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79810,"byte_end":79814,"line_start":18,"line_end":18,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":8199},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79767,"byte_end":79805,"line_start":17,"line_end":17,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":8206},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79815,"byte_end":79822,"line_start":18,"line_end":18,"column_start":10,"column_end":17},"name":"0","qualname":"::future::try_maybe_done::TryMaybeDone::Done::0","value":"<Fut as futures_core::TryFuture>::Ok","parent":{"krate":0,"index":8204},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8207},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80022,"byte_end":80026,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":8199},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79829,"byte_end":79898,"line_start":19,"line_end":19,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79903,"byte_end":79973,"line_start":20,"line_end":20,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79978,"byte_end":80017,"line_start":21,"line_end":21,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":8199},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79667,"byte_end":79679,"line_start":14,"line_end":14,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"enum TryMaybeDone<Fut> where Fut: TryFuture {\n    Future(Fut),\n    Done(Fut::Ok),\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":8201},{"krate":0,"index":8204},{"krate":0,"index":8207}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"/ A future that may have completed with an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79527,"byte_end":79578,"line_start":10,"line_end":10,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79579,"byte_end":79582,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is created by the [`try_maybe_done()`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":79583,"byte_end":79640,"line_start":12,"line_end":12,"column_start":1,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":748},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80140,"byte_end":80154,"line_start":28,"line_end":28,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"fn try_maybe_done<Fut>(Fut) -> TryMaybeDone<Fut> where Fut: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80092,"byte_end":80132,"line_start":27,"line_end":27,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80641,"byte_end":80651,"line_start":38,"line_end":38,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80332,"byte_end":80417,"line_start":33,"line_end":33,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80422,"byte_end":80493,"line_start":34,"line_end":34,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80498,"byte_end":80582,"line_start":35,"line_end":35,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80587,"byte_end":80615,"line_start":36,"line_end":36,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80620,"byte_end":80629,"line_start":37,"line_end":37,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81001,"byte_end":81012,"line_start":50,"line_end":50,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80878,"byte_end":80947,"line_start":47,"line_end":47,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80952,"byte_end":80975,"line_start":48,"line_end":48,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80980,"byte_end":80989,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":756},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81460,"byte_end":81473,"line_start":65,"line_end":65,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryMaybeDone<Fut> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":760},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81719,"byte_end":81723,"line_start":76,"line_end":76,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryMaybeDone<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8212},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83223,"byte_end":83235,"line_start":28,"line_end":28,"column_start":16,"column_end":28},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"OptionFuture {  }","parent":null,"children":[{"krate":0,"index":8214}],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":791},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83336,"byte_end":83343,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"default","qualname":"<OptionFuture<F> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":795},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83484,"byte_end":83488,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<OptionFuture<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":798},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83772,"byte_end":83785,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OptionFuture<F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":801},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83971,"byte_end":83975,"line_start":61,"line_end":61,"column_start":8,"column_end":12},"name":"from","qualname":"<OptionFuture<T> as core::convert::From>::from","value":"fn from(Option<T>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":825},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84353,"byte_end":84359,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":827}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84233,"byte_end":84273,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84274,"byte_end":84341,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":830},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84946,"byte_end":84953,"line_start":36,"line_end":36,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84410,"byte_end":84481,"line_start":17,"line_end":17,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84482,"byte_end":84485,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84486,"byte_end":84552,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84553,"byte_end":84556,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84557,"byte_end":84571,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84572,"byte_end":84575,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84576,"byte_end":84583,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84584,"byte_end":84625,"line_start":24,"line_end":24,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84626,"byte_end":84659,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84660,"byte_end":84699,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84700,"byte_end":84703,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84704,"byte_end":84761,"line_start":28,"line_end":28,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84762,"byte_end":84805,"line_start":29,"line_end":29,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84806,"byte_end":84811,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84812,"byte_end":84815,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84816,"byte_end":84857,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84858,"byte_end":84920,"line_start":33,"line_end":33,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84921,"byte_end":84930,"line_start":34,"line_end":34,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84931,"byte_end":84938,"line_start":35,"line_end":35,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":835},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85115,"byte_end":85118,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":840},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85334,"byte_end":85338,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollFn<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8251},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":85887,"byte_end":85900,"line_start":13,"line_end":13,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::future::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":8253}],"decl_id":null,"docs":" Future for the [`poll_immediate`](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86081,"byte_end":86085,"line_start":26,"line_end":26,"column_start":8,"column_end":12},"name":"poll","qualname":"<PollImmediate<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86064,"byte_end":86073,"line_start":25,"line_end":25,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86583,"byte_end":86596,"line_start":41,"line_end":41,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":887},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":87675,"byte_end":87684,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":889},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89308,"byte_end":89322,"line_start":124,"line_end":124,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::future::poll_immediate::poll_immediate","value":"fn poll_immediate<F>(F) -> PollImmediate<F> where F: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with an Option of a value.\n Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with an Option of a value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88120,"byte_end":88193,"line_start":89,"line_end":89,"column_start":1,"column_end":74}},{"value":"/ Specifically this means that [poll](core::future::Future::poll()) always returns [Poll::Ready](core::task::Poll::Ready).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88194,"byte_end":88318,"line_start":90,"line_end":90,"column_start":1,"column_end":125}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88319,"byte_end":88322,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ # Caution","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88323,"byte_end":88336,"line_start":92,"line_end":92,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88337,"byte_end":88340,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ When consuming the future by this function, note the following:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88341,"byte_end":88408,"line_start":94,"line_end":94,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88409,"byte_end":88412,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ - This function does not guarantee that the future will run to completion, so it is generally incompatible with passing the non-cancellation-safe future by value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88413,"byte_end":88579,"line_start":96,"line_end":96,"column_start":1,"column_end":167}},{"value":"/ - Even if the future is cancellation-safe, creating and dropping new futures frequently may lead to performance problems.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88580,"byte_end":88705,"line_start":97,"line_end":97,"column_start":1,"column_end":126}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88706,"byte_end":88709,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88710,"byte_end":88724,"line_start":99,"line_end":99,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88725,"byte_end":88728,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88729,"byte_end":88736,"line_start":101,"line_end":101,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88737,"byte_end":88778,"line_start":102,"line_end":102,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88779,"byte_end":88803,"line_start":103,"line_end":103,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88804,"byte_end":88807,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ let r = future::poll_immediate(async { 1_u32 });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88808,"byte_end":88860,"line_start":105,"line_end":105,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(r.await, Some(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88861,"byte_end":88894,"line_start":106,"line_end":106,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88895,"byte_end":88898,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let p = future::poll_immediate(future::pending::<i32>());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88899,"byte_end":88960,"line_start":108,"line_end":108,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(p.await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88961,"byte_end":88991,"line_start":109,"line_end":109,"column_start":1,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":88992,"byte_end":89001,"line_start":110,"line_end":110,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89002,"byte_end":89009,"line_start":111,"line_end":111,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89010,"byte_end":89013,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ ### Reusing a future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89014,"byte_end":89038,"line_start":113,"line_end":113,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89039,"byte_end":89042,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89043,"byte_end":89050,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89051,"byte_end":89092,"line_start":116,"line_end":116,"column_start":1,"column_end":42}},{"value":"/ use futures::{future, pin_mut};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89093,"byte_end":89128,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ let f = async {futures::pending!(); 42_u8};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89129,"byte_end":89176,"line_start":118,"line_end":118,"column_start":1,"column_end":48}},{"value":"/ pin_mut!(f);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89177,"byte_end":89193,"line_start":119,"line_end":119,"column_start":1,"column_end":17}},{"value":"/ assert_eq!(None, future::poll_immediate(&mut f).await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89194,"byte_end":89253,"line_start":120,"line_end":120,"column_start":1,"column_end":60}},{"value":"/ assert_eq!(42, f.await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89254,"byte_end":89282,"line_start":121,"line_end":121,"column_start":1,"column_end":29}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89283,"byte_end":89292,"line_start":122,"line_end":122,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":89293,"byte_end":89300,"line_start":123,"line_end":123,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8290},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89745,"byte_end":89750,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89594,"byte_end":89641,"line_start":6,"line_end":6,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89666,"byte_end":89733,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89873,"byte_end":89883,"line_start":14,"line_end":14,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89790,"byte_end":89847,"line_start":12,"line_end":12,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89852,"byte_end":89861,"line_start":13,"line_end":13,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90014,"byte_end":90027,"line_start":22,"line_end":22,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Ready<T> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90152,"byte_end":90156,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Ready<T> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90135,"byte_end":90144,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":931},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90549,"byte_end":90554,"line_start":48,"line_end":48,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90303,"byte_end":90363,"line_start":36,"line_end":36,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90364,"byte_end":90367,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90368,"byte_end":90382,"line_start":38,"line_end":38,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90383,"byte_end":90386,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90387,"byte_end":90394,"line_start":40,"line_end":40,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90395,"byte_end":90436,"line_start":41,"line_end":41,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90437,"byte_end":90461,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90462,"byte_end":90465,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90466,"byte_end":90495,"line_start":44,"line_end":44,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90496,"byte_end":90523,"line_start":45,"line_end":45,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90524,"byte_end":90533,"line_start":46,"line_end":46,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90534,"byte_end":90541,"line_start":47,"line_end":47,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":933},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90889,"byte_end":90891,"line_start":64,"line_end":64,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90623,"byte_end":90690,"line_start":52,"line_end":52,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90691,"byte_end":90694,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90695,"byte_end":90709,"line_start":54,"line_end":54,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90710,"byte_end":90713,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90714,"byte_end":90721,"line_start":56,"line_end":56,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90722,"byte_end":90763,"line_start":57,"line_end":57,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90764,"byte_end":90788,"line_start":58,"line_end":58,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90789,"byte_end":90792,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90793,"byte_end":90831,"line_start":60,"line_end":60,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90832,"byte_end":90863,"line_start":61,"line_end":61,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90864,"byte_end":90873,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90874,"byte_end":90881,"line_start":63,"line_end":63,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":936},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91222,"byte_end":91225,"line_start":80,"line_end":80,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90955,"byte_end":91021,"line_start":68,"line_end":68,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91022,"byte_end":91025,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91026,"byte_end":91040,"line_start":70,"line_end":70,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91041,"byte_end":91044,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91045,"byte_end":91052,"line_start":72,"line_end":72,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91053,"byte_end":91094,"line_start":73,"line_end":73,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91095,"byte_end":91119,"line_start":74,"line_end":74,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91120,"byte_end":91123,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91124,"byte_end":91163,"line_start":76,"line_end":76,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91164,"byte_end":91196,"line_start":77,"line_end":77,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91197,"byte_end":91206,"line_start":78,"line_end":78,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":91207,"byte_end":91214,"line_start":79,"line_end":79,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8392},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93511,"byte_end":93515,"line_start":78,"line_end":78,"column_start":6,"column_end":10},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":8395},{"krate":0,"index":8396}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8437},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93581,"byte_end":93586,"line_start":81,"line_end":81,"column_start":6,"column_end":11},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":8441},{"krate":0,"index":8442},{"krate":0,"index":8443}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8494},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93658,"byte_end":93663,"line_start":84,"line_end":84,"column_start":6,"column_end":11},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":8499},{"krate":0,"index":8500},{"krate":0,"index":8501},{"krate":0,"index":8502}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8563},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93741,"byte_end":93746,"line_start":87,"line_end":87,"column_start":6,"column_end":11},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":8569},{"krate":0,"index":8570},{"krate":0,"index":8571},{"krate":0,"index":8572},{"krate":0,"index":8573}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":987},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94361,"byte_end":94365,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93784,"byte_end":93855,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93856,"byte_end":93859,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93860,"byte_end":93931,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":93932,"byte_end":94007,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94008,"byte_end":94011,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94012,"byte_end":94081,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94082,"byte_end":94108,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94109,"byte_end":94112,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94113,"byte_end":94127,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94128,"byte_end":94131,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94132,"byte_end":94139,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94140,"byte_end":94181,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94182,"byte_end":94206,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94207,"byte_end":94210,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94211,"byte_end":94235,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94236,"byte_end":94260,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94261,"byte_end":94295,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94296,"byte_end":94299,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94300,"byte_end":94335,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94336,"byte_end":94345,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94346,"byte_end":94353,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":990},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94911,"byte_end":94916,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3> where\nFut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94572,"byte_end":94624,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94625,"byte_end":94628,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94629,"byte_end":94643,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94644,"byte_end":94647,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94648,"byte_end":94655,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94656,"byte_end":94697,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94698,"byte_end":94722,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94723,"byte_end":94726,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94727,"byte_end":94751,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94752,"byte_end":94776,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94777,"byte_end":94801,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94802,"byte_end":94841,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94842,"byte_end":94845,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94846,"byte_end":94885,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94886,"byte_end":94895,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":94896,"byte_end":94903,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":994},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95578,"byte_end":95583,"line_start":167,"line_end":167,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95208,"byte_end":95260,"line_start":150,"line_end":150,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95261,"byte_end":95264,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95265,"byte_end":95279,"line_start":152,"line_end":152,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95280,"byte_end":95283,"line_start":153,"line_end":153,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95284,"byte_end":95291,"line_start":154,"line_end":154,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95292,"byte_end":95333,"line_start":155,"line_end":155,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95334,"byte_end":95358,"line_start":156,"line_end":156,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95359,"byte_end":95362,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95363,"byte_end":95387,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95388,"byte_end":95412,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95413,"byte_end":95437,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95438,"byte_end":95462,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95463,"byte_end":95505,"line_start":162,"line_end":162,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95506,"byte_end":95509,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95510,"byte_end":95552,"line_start":164,"line_end":164,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95553,"byte_end":95562,"line_start":165,"line_end":165,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95563,"byte_end":95570,"line_start":166,"line_end":166,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":999},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96348,"byte_end":96353,"line_start":201,"line_end":201,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":95947,"byte_end":95999,"line_start":183,"line_end":183,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96000,"byte_end":96003,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96004,"byte_end":96018,"line_start":185,"line_end":185,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96019,"byte_end":96022,"line_start":186,"line_end":186,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96023,"byte_end":96030,"line_start":187,"line_end":187,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96031,"byte_end":96072,"line_start":188,"line_end":188,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96073,"byte_end":96097,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96098,"byte_end":96101,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96102,"byte_end":96126,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96127,"byte_end":96151,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96152,"byte_end":96176,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96177,"byte_end":96201,"line_start":194,"line_end":194,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96202,"byte_end":96226,"line_start":195,"line_end":195,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96227,"byte_end":96272,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96273,"byte_end":96276,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96277,"byte_end":96322,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96323,"byte_end":96332,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join.rs","byte_start":96333,"byte_end":96340,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1080},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":97724,"byte_end":97731,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"JoinAll","qualname":"::future::join_all::JoinAll","value":"JoinAll {  }","parent":null,"children":[{"krate":0,"index":1082}],"decl_id":null,"docs":" Future for the [`join_all`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":97603,"byte_end":97670,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ Future for the [`join_all`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":97671,"byte_end":97712,"line_start":26,"line_end":26,"column_start":1,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1092},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98182,"byte_end":98185,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fmt","qualname":"<JoinAll<F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1093},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99826,"byte_end":99834,"line_start":102,"line_end":102,"column_start":8,"column_end":16},"name":"join_all","qualname":"::future::join_all::join_all","value":"fn join_all<I>(I) -> JoinAll<I::Item> where I: IntoIterator, I::Item: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents a collection of the outputs of the futures\n given.","sig":null,"attributes":[{"value":"/ Creates a future which represents a collection of the outputs of the futures","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98540,"byte_end":98620,"line_start":66,"line_end":66,"column_start":1,"column_end":81}},{"value":"/ given.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98621,"byte_end":98631,"line_start":67,"line_end":67,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98632,"byte_end":98635,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98636,"byte_end":98715,"line_start":69,"line_end":69,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98716,"byte_end":98796,"line_start":70,"line_end":70,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98797,"byte_end":98815,"line_start":71,"line_end":71,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98816,"byte_end":98819,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98820,"byte_end":98897,"line_start":73,"line_end":73,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98898,"byte_end":98955,"line_start":74,"line_end":74,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98956,"byte_end":98959,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"/ # See Also","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98960,"byte_end":98974,"line_start":76,"line_end":76,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98975,"byte_end":98978,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ `join_all` will switch to the more powerful [`FuturesOrdered`] for performance","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98979,"byte_end":99061,"line_start":78,"line_end":78,"column_start":1,"column_end":83}},{"value":"/ reasons if the number of futures is large. You may want to look into using it or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99062,"byte_end":99146,"line_start":79,"line_end":79,"column_start":1,"column_end":85}},{"value":"/ it's counterpart [`FuturesUnordered`][crate::stream::FuturesUnordered] directly.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99147,"byte_end":99231,"line_start":80,"line_end":80,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99232,"byte_end":99235,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Some examples for additional functionality provided by these are:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99236,"byte_end":99305,"line_start":82,"line_end":82,"column_start":1,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99306,"byte_end":99309,"line_start":83,"line_end":83,"column_start":1,"column_end":4}},{"value":"/  * Adding new futures to the set even after it has been started.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99310,"byte_end":99378,"line_start":84,"line_end":84,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99379,"byte_end":99382,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/  * Only polling the specific futures that have been woken. In cases where","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99383,"byte_end":99460,"line_start":86,"line_end":86,"column_start":1,"column_end":78}},{"value":"/    you have a lot of futures this will result in much more efficient polling.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99461,"byte_end":99542,"line_start":87,"line_end":87,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99543,"byte_end":99546,"line_start":88,"line_end":88,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99547,"byte_end":99561,"line_start":89,"line_end":89,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99562,"byte_end":99565,"line_start":90,"line_end":90,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99566,"byte_end":99573,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99574,"byte_end":99615,"line_start":92,"line_end":92,"column_start":1,"column_end":42}},{"value":"/ use futures::future::join_all;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99616,"byte_end":99650,"line_start":93,"line_end":93,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99651,"byte_end":99654,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ async fn foo(i: u32) -> u32 { i }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99655,"byte_end":99692,"line_start":95,"line_end":95,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99693,"byte_end":99696,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![foo(1), foo(2), foo(3)];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99697,"byte_end":99744,"line_start":97,"line_end":97,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99745,"byte_end":99748,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(join_all(futures).await, [1, 2, 3]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99749,"byte_end":99800,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99801,"byte_end":99810,"line_start":100,"line_end":100,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":99811,"byte_end":99818,"line_start":101,"line_end":101,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1098},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":100731,"byte_end":100735,"line_start":136,"line_end":136,"column_start":8,"column_end":12},"name":"poll","qualname":"<JoinAll<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1102},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":101670,"byte_end":101679,"line_start":163,"line_end":163,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<JoinAll<F> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":1,"index":7987},"children":[],"decl_id":{"krate":1,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8644},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102073,"byte_end":102079,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":8647}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":101935,"byte_end":101976,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":101977,"byte_end":102044,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1142},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104343,"byte_end":104349,"line_start":84,"line_end":84,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102170,"byte_end":102240,"line_start":16,"line_end":16,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102241,"byte_end":102244,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102245,"byte_end":102323,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102324,"byte_end":102400,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102401,"byte_end":102473,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102474,"byte_end":102477,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102478,"byte_end":102550,"line_start":22,"line_end":22,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102551,"byte_end":102579,"line_start":23,"line_end":23,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102580,"byte_end":102583,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102584,"byte_end":102651,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102652,"byte_end":102716,"line_start":26,"line_end":26,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102717,"byte_end":102767,"line_start":27,"line_end":27,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102768,"byte_end":102771,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102772,"byte_end":102786,"line_start":29,"line_end":29,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102787,"byte_end":102790,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102791,"byte_end":102811,"line_start":31,"line_end":31,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102812,"byte_end":102815,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102816,"byte_end":102823,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102824,"byte_end":102865,"line_start":34,"line_end":34,"column_start":1,"column_end":42}},{"value":"/ use futures::{","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102866,"byte_end":102884,"line_start":35,"line_end":35,"column_start":1,"column_end":19}},{"value":"/     pin_mut,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102885,"byte_end":102901,"line_start":36,"line_end":36,"column_start":1,"column_end":17}},{"value":"/     future::Either,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102902,"byte_end":102925,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/     future::self,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102926,"byte_end":102947,"line_start":38,"line_end":38,"column_start":1,"column_end":22}},{"value":"/ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102948,"byte_end":102954,"line_start":39,"line_end":39,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102955,"byte_end":102958,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102959,"byte_end":103050,"line_start":41,"line_end":41,"column_start":1,"column_end":92}},{"value":"/ let future1 = async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103051,"byte_end":103076,"line_start":42,"line_end":42,"column_start":1,"column_end":26}},{"value":"/     future::pending::<()>().await; // will never finish","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103077,"byte_end":103136,"line_start":43,"line_end":43,"column_start":1,"column_end":60}},{"value":"/     1","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103137,"byte_end":103146,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103147,"byte_end":103153,"line_start":45,"line_end":45,"column_start":1,"column_end":7}},{"value":"/ let future2 = async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103154,"byte_end":103179,"line_start":46,"line_end":46,"column_start":1,"column_end":26}},{"value":"/     future::ready(2).await","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103180,"byte_end":103210,"line_start":47,"line_end":47,"column_start":1,"column_end":31}},{"value":"/ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103211,"byte_end":103217,"line_start":48,"line_end":48,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103218,"byte_end":103221,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103222,"byte_end":103268,"line_start":50,"line_end":50,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103269,"byte_end":103291,"line_start":51,"line_end":51,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103292,"byte_end":103314,"line_start":52,"line_end":52,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103315,"byte_end":103318,"line_start":53,"line_end":53,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103319,"byte_end":103381,"line_start":54,"line_end":54,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1,  // `value1` is resolved from `future1`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103382,"byte_end":103466,"line_start":55,"line_end":55,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future2`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103467,"byte_end":103540,"line_start":56,"line_end":56,"column_start":1,"column_end":74}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103541,"byte_end":103625,"line_start":57,"line_end":57,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103626,"byte_end":103699,"line_start":58,"line_end":58,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103700,"byte_end":103706,"line_start":59,"line_end":59,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103707,"byte_end":103710,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103711,"byte_end":103735,"line_start":61,"line_end":61,"column_start":1,"column_end":25}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103736,"byte_end":103745,"line_start":62,"line_end":62,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103746,"byte_end":103753,"line_start":63,"line_end":63,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103754,"byte_end":103757,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103758,"byte_end":103784,"line_start":65,"line_end":65,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103785,"byte_end":103788,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103789,"byte_end":103796,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103797,"byte_end":103856,"line_start":68,"line_end":68,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103857,"byte_end":103860,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103861,"byte_end":103914,"line_start":70,"line_end":70,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103915,"byte_end":103918,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103919,"byte_end":103994,"line_start":72,"line_end":72,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":103995,"byte_end":104027,"line_start":73,"line_end":73,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104028,"byte_end":104060,"line_start":74,"line_end":74,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104061,"byte_end":104066,"line_start":75,"line_end":75,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104067,"byte_end":104111,"line_start":76,"line_end":76,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104112,"byte_end":104138,"line_start":77,"line_end":77,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104139,"byte_end":104216,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104217,"byte_end":104296,"line_start":79,"line_end":79,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104297,"byte_end":104310,"line_start":80,"line_end":80,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104311,"byte_end":104321,"line_start":81,"line_end":81,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104322,"byte_end":104327,"line_start":82,"line_end":82,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104328,"byte_end":104335,"line_start":83,"line_end":83,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104728,"byte_end":104732,"line_start":101,"line_end":101,"column_start":8,"column_end":12},"name":"poll","qualname":"<Select<A, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":105297,"byte_end":105310,"line_start":122,"line_end":122,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8652},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":105724,"byte_end":105733,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SelectAll","qualname":"::future::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":8654}],"decl_id":null,"docs":" Future for the [`select_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_all`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":105584,"byte_end":105627,"line_start":10,"line_end":10,"column_start":1,"column_end":44}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":105645,"byte_end":105712,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1192},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106513,"byte_end":106523,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"select_all","qualname":"::future::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Future + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select over a list of futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":105811,"byte_end":105877,"line_start":19,"line_end":19,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":105878,"byte_end":105881,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready. Upon","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":105882,"byte_end":105962,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ completion the item resolved will be returned, along with the index of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":105963,"byte_end":106041,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ future that was ready and the list of all the remaining futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106042,"byte_end":106110,"line_start":23,"line_end":23,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106111,"byte_end":106114,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ There are no guarantees provided on the order of the list with the remaining","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106115,"byte_end":106195,"line_start":25,"line_end":25,"column_start":1,"column_end":81}},{"value":"/ futures. They might be swapped around, reversed, or completely random.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106196,"byte_end":106270,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106271,"byte_end":106274,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106275,"byte_end":106352,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106353,"byte_end":106410,"line_start":29,"line_end":29,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106411,"byte_end":106414,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106415,"byte_end":106427,"line_start":31,"line_end":31,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106428,"byte_end":106431,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106432,"byte_end":106505,"line_start":33,"line_end":33,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1196},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106904,"byte_end":106914,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectAll<Fut>>::into_inner","value":"fn into_inner(Self) -> Vec<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying futures.\n","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106829,"byte_end":106892,"line_start":45,"line_end":45,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1200},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":107075,"byte_end":107079,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectAll<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1204},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":107688,"byte_end":107697,"line_start":71,"line_end":71,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<Fut> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":1,"index":7987},"children":[],"decl_id":{"krate":1,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8728},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":110660,"byte_end":110667,"line_start":94,"line_end":94,"column_start":6,"column_end":13},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":8731},{"krate":0,"index":8732}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8773},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":110737,"byte_end":110745,"line_start":97,"line_end":97,"column_start":6,"column_end":14},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":8777},{"krate":0,"index":8778},{"krate":0,"index":8779}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8830},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":110821,"byte_end":110829,"line_start":100,"line_end":100,"column_start":6,"column_end":14},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":8835},{"krate":0,"index":8836},{"krate":0,"index":8837},{"krate":0,"index":8838}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":8899},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":110911,"byte_end":110919,"line_start":103,"line_end":103,"column_start":6,"column_end":14},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":8905},{"krate":0,"index":8906},{"krate":0,"index":8907},{"krate":0,"index":8908},{"krate":0,"index":8909}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":1248},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112192,"byte_end":112200,"line_start":148,"line_end":148,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":110957,"byte_end":111030,"line_start":106,"line_end":106,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111031,"byte_end":111063,"line_start":107,"line_end":107,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111064,"byte_end":111067,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111068,"byte_end":111139,"line_start":109,"line_end":109,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111140,"byte_end":111216,"line_start":110,"line_end":110,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccessful, it will complete with the first error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111217,"byte_end":111289,"line_start":111,"line_end":111,"column_start":1,"column_end":73}},{"value":"/ encountered.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111290,"byte_end":111306,"line_start":112,"line_end":112,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111307,"byte_end":111310,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111311,"byte_end":111380,"line_start":114,"line_end":114,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111381,"byte_end":111407,"line_start":115,"line_end":115,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111408,"byte_end":111411,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111412,"byte_end":111426,"line_start":117,"line_end":117,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111427,"byte_end":111430,"line_start":118,"line_end":118,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111431,"byte_end":111507,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111508,"byte_end":111544,"line_start":120,"line_end":120,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111545,"byte_end":111548,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111549,"byte_end":111556,"line_start":122,"line_end":122,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111557,"byte_end":111598,"line_start":123,"line_end":123,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111599,"byte_end":111623,"line_start":124,"line_end":124,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111624,"byte_end":111627,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111628,"byte_end":111673,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111674,"byte_end":111719,"line_start":127,"line_end":127,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111720,"byte_end":111758,"line_start":128,"line_end":128,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111759,"byte_end":111762,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111763,"byte_end":111802,"line_start":130,"line_end":130,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111803,"byte_end":111812,"line_start":131,"line_end":131,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111813,"byte_end":111820,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111821,"byte_end":111824,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111825,"byte_end":111895,"line_start":134,"line_end":134,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111896,"byte_end":111911,"line_start":135,"line_end":135,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111912,"byte_end":111915,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111916,"byte_end":111923,"line_start":137,"line_end":137,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111924,"byte_end":111965,"line_start":138,"line_end":138,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111966,"byte_end":111990,"line_start":139,"line_end":139,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111991,"byte_end":111994,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":111995,"byte_end":112040,"line_start":141,"line_end":141,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112041,"byte_end":112087,"line_start":142,"line_end":142,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112088,"byte_end":112126,"line_start":143,"line_end":143,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112127,"byte_end":112130,"line_start":144,"line_end":144,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112131,"byte_end":112166,"line_start":145,"line_end":145,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112167,"byte_end":112176,"line_start":146,"line_end":146,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112177,"byte_end":112184,"line_start":147,"line_end":147,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1251},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112856,"byte_end":112865,"line_start":172,"line_end":172,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> TryJoin3<Fut1, Fut2, Fut3>\nwhere Fut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>,\nFut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112438,"byte_end":112498,"line_start":156,"line_end":156,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112499,"byte_end":112502,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112503,"byte_end":112517,"line_start":158,"line_end":158,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112518,"byte_end":112521,"line_start":159,"line_end":159,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112522,"byte_end":112529,"line_start":160,"line_end":160,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112530,"byte_end":112571,"line_start":161,"line_end":161,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112572,"byte_end":112596,"line_start":162,"line_end":162,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112597,"byte_end":112600,"line_start":163,"line_end":163,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112601,"byte_end":112646,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112647,"byte_end":112692,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112693,"byte_end":112738,"line_start":166,"line_end":166,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112739,"byte_end":112782,"line_start":167,"line_end":167,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112783,"byte_end":112786,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112787,"byte_end":112830,"line_start":169,"line_end":169,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112831,"byte_end":112840,"line_start":170,"line_end":170,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":112841,"byte_end":112848,"line_start":171,"line_end":171,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1255},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113693,"byte_end":113702,"line_start":204,"line_end":204,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113223,"byte_end":113283,"line_start":187,"line_end":187,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113284,"byte_end":113287,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113288,"byte_end":113302,"line_start":189,"line_end":189,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113303,"byte_end":113306,"line_start":190,"line_end":190,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113307,"byte_end":113314,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113315,"byte_end":113356,"line_start":192,"line_end":192,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113357,"byte_end":113381,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113382,"byte_end":113385,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113386,"byte_end":113431,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113432,"byte_end":113477,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113478,"byte_end":113523,"line_start":197,"line_end":197,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113524,"byte_end":113569,"line_start":198,"line_end":198,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113570,"byte_end":113616,"line_start":199,"line_end":199,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113617,"byte_end":113620,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113621,"byte_end":113667,"line_start":201,"line_end":201,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113668,"byte_end":113677,"line_start":202,"line_end":202,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":113678,"byte_end":113685,"line_start":203,"line_end":203,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":1260},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114674,"byte_end":114683,"line_start":239,"line_end":239,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114152,"byte_end":114212,"line_start":221,"line_end":221,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114213,"byte_end":114216,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114217,"byte_end":114231,"line_start":223,"line_end":223,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114232,"byte_end":114235,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114236,"byte_end":114243,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114244,"byte_end":114285,"line_start":226,"line_end":226,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114286,"byte_end":114310,"line_start":227,"line_end":227,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114311,"byte_end":114314,"line_start":228,"line_end":228,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114315,"byte_end":114360,"line_start":229,"line_end":229,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114361,"byte_end":114406,"line_start":230,"line_end":230,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114407,"byte_end":114452,"line_start":231,"line_end":231,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114453,"byte_end":114498,"line_start":232,"line_end":232,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114499,"byte_end":114544,"line_start":233,"line_end":233,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114545,"byte_end":114594,"line_start":234,"line_end":234,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114595,"byte_end":114598,"line_start":235,"line_end":235,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114599,"byte_end":114648,"line_start":236,"line_end":236,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114649,"byte_end":114658,"line_start":237,"line_end":237,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join.rs","byte_start":114659,"byte_end":114666,"line_start":238,"line_end":238,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":1358},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":115932,"byte_end":115942,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"TryJoinAll","qualname":"::future::try_join_all::TryJoinAll","value":"TryJoinAll {  }","parent":null,"children":[{"krate":0,"index":1360}],"decl_id":null,"docs":" Future for the [`try_join_all`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_join_all`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":115807,"byte_end":115852,"line_start":25,"line_end":25,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":115853,"byte_end":115920,"line_start":26,"line_end":26,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":116414,"byte_end":116417,"line_start":54,"line_end":54,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryJoinAll<F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1370},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":118030,"byte_end":118042,"line_start":103,"line_end":103,"column_start":8,"column_end":20},"name":"try_join_all","qualname":"::future::try_join_all::try_join_all","value":"fn try_join_all<I>(I) -> TryJoinAll<I::Item> where I: IntoIterator,\nI::Item: TryFuture","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which represents either a collection of the results of the\n futures given or an error.","sig":null,"attributes":[{"value":"/ Creates a future which represents either a collection of the results of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":116781,"byte_end":116860,"line_start":65,"line_end":65,"column_start":1,"column_end":80}},{"value":"/ futures given or an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":116861,"byte_end":116891,"line_start":66,"line_end":66,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":116892,"byte_end":116895,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"/ The returned future will drive execution for all of its underlying futures,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":116896,"byte_end":116975,"line_start":68,"line_end":68,"column_start":1,"column_end":80}},{"value":"/ collecting the results into a destination `Vec<T>` in the same order as they","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":116976,"byte_end":117056,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ were provided.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117057,"byte_end":117075,"line_start":70,"line_end":70,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117076,"byte_end":117079,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ If any future returns an error then all other futures will be canceled and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117080,"byte_end":117158,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ an error will be returned immediately. If all futures complete successfully,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117159,"byte_end":117239,"line_start":73,"line_end":73,"column_start":1,"column_end":81}},{"value":"/ however, then the returned future will succeed with a `Vec` of all the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117240,"byte_end":117314,"line_start":74,"line_end":74,"column_start":1,"column_end":75}},{"value":"/ successful results.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117315,"byte_end":117338,"line_start":75,"line_end":75,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117339,"byte_end":117342,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117343,"byte_end":117420,"line_start":77,"line_end":77,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117421,"byte_end":117478,"line_start":78,"line_end":78,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117479,"byte_end":117482,"line_start":79,"line_end":79,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117483,"byte_end":117497,"line_start":80,"line_end":80,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117498,"byte_end":117501,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117502,"byte_end":117509,"line_start":82,"line_end":82,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117510,"byte_end":117551,"line_start":83,"line_end":83,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, try_join_all};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117552,"byte_end":117598,"line_start":84,"line_end":84,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117599,"byte_end":117602,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117603,"byte_end":117626,"line_start":86,"line_end":86,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117627,"byte_end":117661,"line_start":87,"line_end":87,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(2),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117662,"byte_end":117696,"line_start":88,"line_end":88,"column_start":1,"column_end":35}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117697,"byte_end":117731,"line_start":89,"line_end":89,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117732,"byte_end":117738,"line_start":90,"line_end":90,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117739,"byte_end":117742,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Ok(vec![1, 2, 3]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117743,"byte_end":117806,"line_start":92,"line_end":92,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117807,"byte_end":117810,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ let futures = vec![","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117811,"byte_end":117834,"line_start":94,"line_end":94,"column_start":1,"column_end":24}},{"value":"/     future::ok::<u32, u32>(1),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117835,"byte_end":117869,"line_start":95,"line_end":95,"column_start":1,"column_end":35}},{"value":"/     future::err::<u32, u32>(2),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117870,"byte_end":117905,"line_start":96,"line_end":96,"column_start":1,"column_end":36}},{"value":"/     future::ok::<u32, u32>(3),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117906,"byte_end":117940,"line_start":97,"line_end":97,"column_start":1,"column_end":35}},{"value":"/ ];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117941,"byte_end":117947,"line_start":98,"line_end":98,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117948,"byte_end":117951,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(try_join_all(futures).await, Err(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":117952,"byte_end":118004,"line_start":100,"line_end":100,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":118005,"byte_end":118014,"line_start":101,"line_end":101,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":118015,"byte_end":118022,"line_start":102,"line_end":102,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":119162,"byte_end":119166,"line_start":142,"line_end":142,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryJoinAll<F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":120695,"byte_end":120704,"line_start":183,"line_end":183,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<TryJoinAll<F> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = F>","parent":{"krate":1,"index":7987},"children":[],"decl_id":{"krate":1,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8980},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121081,"byte_end":121090,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":8983}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":120939,"byte_end":120984,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":120985,"byte_end":121052,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1416},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122675,"byte_end":122685,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121184,"byte_end":121254,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121255,"byte_end":121258,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121259,"byte_end":121337,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121338,"byte_end":121414,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121415,"byte_end":121487,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121488,"byte_end":121491,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121492,"byte_end":121564,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121565,"byte_end":121593,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121594,"byte_end":121597,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121598,"byte_end":121665,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121666,"byte_end":121737,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121738,"byte_end":121788,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121789,"byte_end":121792,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121793,"byte_end":121807,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121808,"byte_end":121811,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121812,"byte_end":121819,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121820,"byte_end":121904,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121905,"byte_end":121908,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121909,"byte_end":121966,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121967,"byte_end":121970,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121971,"byte_end":122053,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122054,"byte_end":122111,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122112,"byte_end":122169,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122170,"byte_end":122196,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122197,"byte_end":122202,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122203,"byte_end":122298,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122299,"byte_end":122322,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122323,"byte_end":122403,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122404,"byte_end":122485,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122486,"byte_end":122556,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122557,"byte_end":122628,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122629,"byte_end":122642,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122643,"byte_end":122653,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122654,"byte_end":122659,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":122660,"byte_end":122667,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1423},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":123214,"byte_end":123218,"line_start":69,"line_end":69,"column_start":8,"column_end":12},"name":"poll","qualname":"<TrySelect<A, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8988},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124316,"byte_end":124324,"line_start":13,"line_end":13,"column_start":12,"column_end":20},"name":"SelectOk","qualname":"::future::select_ok::SelectOk","value":"SelectOk {  }","parent":null,"children":[{"krate":0,"index":8990}],"decl_id":null,"docs":" Future for the [`select_ok`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_ok`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124177,"byte_end":124219,"line_start":10,"line_end":10,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124237,"byte_end":124304,"line_start":12,"line_end":12,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":1466},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":125046,"byte_end":125055,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"select_ok","qualname":"::future::select_ok::select_ok","value":"fn select_ok<I>(I) -> SelectOk<I::Item> where I: IntoIterator,\nI::Item: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future which will select the first successful future over a list of futures.","sig":null,"attributes":[{"value":"/ Creates a new future which will select the first successful future over a list of futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124401,"byte_end":124495,"line_start":19,"line_end":19,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124496,"byte_end":124499,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ The returned future will wait for any future within `iter` to be ready and Ok. Unlike","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124500,"byte_end":124589,"line_start":21,"line_end":21,"column_start":1,"column_end":90}},{"value":"/ `select_all`, this will only return the first successful completion, or the last","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124590,"byte_end":124674,"line_start":22,"line_end":22,"column_start":1,"column_end":85}},{"value":"/ failure. This is useful in contexts where any success is desired and failures","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124675,"byte_end":124756,"line_start":23,"line_end":23,"column_start":1,"column_end":82}},{"value":"/ are ignored, unless all the futures fail.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124757,"byte_end":124802,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124803,"byte_end":124806,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/  This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124807,"byte_end":124885,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124886,"byte_end":124943,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124944,"byte_end":124947,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124948,"byte_end":124960,"line_start":29,"line_end":29,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124961,"byte_end":124964,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ This function will panic if the iterator specified contains no items.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124965,"byte_end":125038,"line_start":31,"line_end":31,"column_start":1,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":125552,"byte_end":125556,"line_start":48,"line_end":48,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectOk<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":126916,"byte_end":126925,"line_start":82,"line_end":82,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectOk<Fut> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":1,"index":7987},"children":[],"decl_id":{"krate":1,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":8997},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127783,"byte_end":127787,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":8994},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127750,"byte_end":127778,"line_start":29,"line_end":29,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":8999},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127801,"byte_end":127802,"line_start":30,"line_end":30,"column_start":23,"column_end":24},"name":"0","qualname":"::future::either::Either::Left::0","value":"A","parent":{"krate":0,"index":8997},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":9000},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127843,"byte_end":127848,"line_start":32,"line_end":32,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":8994},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127809,"byte_end":127838,"line_start":31,"line_end":31,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":9002},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127862,"byte_end":127863,"line_start":32,"line_end":32,"column_start":24,"column_end":25},"name":"0","qualname":"::future::either::Either::Right::0","value":"B","parent":{"krate":0,"index":9000},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":8994},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127731,"byte_end":127737,"line_start":28,"line_end":28,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"enum Either<A, B> { Left(A), Right(B), }","parent":null,"children":[{"krate":0,"index":8997},{"krate":0,"index":9000}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single type.","sig":null,"attributes":[{"value":"/ Combines two different futures, streams, or sinks having the same associated types into a single type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127208,"byte_end":127314,"line_start":8,"line_end":8,"column_start":1,"column_end":107}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127315,"byte_end":127318,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This is useful when conditionally choosing between two distinct future types:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127319,"byte_end":127400,"line_start":10,"line_end":10,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127401,"byte_end":127404,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127405,"byte_end":127416,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ use futures::future::Either;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127417,"byte_end":127449,"line_start":13,"line_end":13,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127450,"byte_end":127453,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127454,"byte_end":127495,"line_start":15,"line_end":15,"column_start":1,"column_end":42}},{"value":"/ let cond = true;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127496,"byte_end":127516,"line_start":16,"line_end":16,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127517,"byte_end":127520,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ let fut = if cond {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127521,"byte_end":127544,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/     Either::Left(async move { 12 })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127545,"byte_end":127584,"line_start":19,"line_end":19,"column_start":1,"column_end":40}},{"value":"/ } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127585,"byte_end":127597,"line_start":20,"line_end":20,"column_start":1,"column_end":13}},{"value":"/     Either::Right(async move { 44 })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127598,"byte_end":127638,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127639,"byte_end":127645,"line_start":22,"line_end":22,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127646,"byte_end":127649,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(fut.await, 12);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127650,"byte_end":127680,"line_start":24,"line_end":24,"column_start":1,"column_end":31}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127681,"byte_end":127689,"line_start":25,"line_end":25,"column_start":1,"column_end":9}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127690,"byte_end":127697,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128402,"byte_end":128414,"line_start":50,"line_end":50,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128254,"byte_end":128312,"line_start":47,"line_end":47,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128317,"byte_end":128320,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128325,"byte_end":128390,"line_start":49,"line_end":49,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128794,"byte_end":128807,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128645,"byte_end":128703,"line_start":59,"line_end":59,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128708,"byte_end":128711,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128716,"byte_end":128782,"line_start":61,"line_end":61,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129095,"byte_end":129105,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129022,"byte_end":129083,"line_start":71,"line_end":71,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129358,"byte_end":129362,"line_start":87,"line_end":87,"column_start":8,"column_end":12},"name":"poll","qualname":"<Either<A, B> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129683,"byte_end":129696,"line_start":100,"line_end":100,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129977,"byte_end":129986,"line_start":115,"line_end":115,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Either<A, B> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":130213,"byte_end":130222,"line_start":122,"line_end":122,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Either<A, B> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":130502,"byte_end":130515,"line_start":135,"line_end":135,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Either<A, B> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1565},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":135709,"byte_end":135718,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::future::abortable::abortable","value":"fn abortable<Fut>(Fut) -> (Abortable<Fut>, AbortHandle) where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":135339,"byte_end":135426,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":135427,"byte_end":135430,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":135431,"byte_end":135507,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":135508,"byte_end":135561,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":135562,"byte_end":135565,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":135566,"byte_end":135643,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/abortable.rs","byte_start":135644,"byte_end":135701,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":1599},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","parent":null,"children":[{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1604},{"krate":0,"index":1607},{"krate":0,"index":1608},{"krate":0,"index":1611},{"krate":0,"index":1614},{"krate":0,"index":1617},{"krate":0,"index":3658},{"krate":0,"index":3659},{"krate":0,"index":3662},{"krate":0,"index":3665},{"krate":0,"index":3668},{"krate":0,"index":3671},{"krate":0,"index":3674},{"krate":0,"index":3677},{"krate":0,"index":3680},{"krate":0,"index":3683},{"krate":0,"index":3686},{"krate":0,"index":3689},{"krate":0,"index":3692},{"krate":0,"index":3695},{"krate":0,"index":3698},{"krate":0,"index":3701},{"krate":0,"index":3704},{"krate":0,"index":3707},{"krate":0,"index":3710},{"krate":0,"index":3713},{"krate":0,"index":3716},{"krate":0,"index":3719},{"krate":0,"index":3722},{"krate":0,"index":3725},{"krate":0,"index":3728},{"krate":0,"index":3731},{"krate":0,"index":3734},{"krate":0,"index":3737},{"krate":0,"index":3740},{"krate":0,"index":3743},{"krate":0,"index":3746},{"krate":0,"index":3749},{"krate":0,"index":3752},{"krate":0,"index":3755},{"krate":0,"index":3758},{"krate":0,"index":3761},{"krate":0,"index":3762},{"krate":0,"index":3765},{"krate":0,"index":3768},{"krate":0,"index":3771},{"krate":0,"index":4860},{"krate":0,"index":4861},{"krate":0,"index":4864},{"krate":0,"index":4867},{"krate":0,"index":4870},{"krate":0,"index":4873},{"krate":0,"index":4876},{"krate":0,"index":4879},{"krate":0,"index":4882},{"krate":0,"index":4885},{"krate":0,"index":4888},{"krate":0,"index":4891},{"krate":0,"index":4894},{"krate":0,"index":4897},{"krate":0,"index":4900},{"krate":0,"index":4903},{"krate":0,"index":4906},{"krate":0,"index":4909},{"krate":0,"index":4912},{"krate":0,"index":4915},{"krate":0,"index":4918},{"krate":0,"index":4921},{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4928},{"krate":0,"index":4931},{"krate":0,"index":4934},{"krate":0,"index":4935},{"krate":0,"index":4938},{"krate":0,"index":4939},{"krate":0,"index":4941},{"krate":0,"index":4967},{"krate":0,"index":4968},{"krate":0,"index":4971},{"krate":0,"index":4974},{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5011},{"krate":0,"index":5014},{"krate":0,"index":5051},{"krate":0,"index":5052},{"krate":0,"index":5055},{"krate":0,"index":5058},{"krate":0,"index":5097},{"krate":0,"index":5098},{"krate":0,"index":5101},{"krate":0,"index":5104},{"krate":0,"index":5147},{"krate":0,"index":5148},{"krate":0,"index":5151},{"krate":0,"index":5154},{"krate":0,"index":5193},{"krate":0,"index":5194},{"krate":0,"index":5197},{"krate":0,"index":5200},{"krate":0,"index":5236},{"krate":0,"index":5237},{"krate":0,"index":5240},{"krate":0,"index":5243},{"krate":0,"index":5271},{"krate":0,"index":5272},{"krate":0,"index":5275},{"krate":0,"index":5278},{"krate":0,"index":5332},{"krate":0,"index":5333},{"krate":0,"index":5336},{"krate":0,"index":5339},{"krate":0,"index":5426},{"krate":0,"index":5427},{"krate":0,"index":5430},{"krate":0,"index":5433},{"krate":0,"index":5436},{"krate":0,"index":5495},{"krate":0,"index":5496},{"krate":0,"index":5499},{"krate":0,"index":5502},{"krate":0,"index":5611},{"krate":0,"index":5614},{"krate":0,"index":6020},{"krate":0,"index":6023},{"krate":0,"index":6145},{"krate":0,"index":6146},{"krate":0,"index":6149},{"krate":0,"index":6152},{"krate":0,"index":6168},{"krate":0,"index":6169},{"krate":0,"index":6172},{"krate":0,"index":6175},{"krate":0,"index":6178},{"krate":0,"index":6179},{"krate":0,"index":6181},{"krate":0,"index":6184}],"decl_id":null,"docs":" Asynchronous streams.","sig":null,"attributes":[{"value":"/ Asynchronous streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":135970,"byte_end":135995,"line_start":1,"line_end":1,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":135996,"byte_end":135999,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136000,"byte_end":136025,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136026,"byte_end":136029,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - The [`Stream`] trait, for objects that can asynchronously produce a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136030,"byte_end":136103,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/   sequence of values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136104,"byte_end":136129,"line_start":6,"line_end":6,"column_start":1,"column_end":26}},{"value":"/ - The [`StreamExt`] and [`TryStreamExt`] trait, which provides adapters for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136130,"byte_end":136209,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/   chaining and composing streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136210,"byte_end":136247,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/ - Top-level stream constructors like [`iter`](iter()) which creates a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136248,"byte_end":136321,"line_start":9,"line_end":9,"column_start":1,"column_end":74}},{"value":"/   stream from an iterator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":136322,"byte_end":136352,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":9011},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":198039,"byte_end":198044,"line_start":11,"line_end":11,"column_start":16,"column_end":21},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":9014},{"krate":0,"index":9015}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1700},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":198555,"byte_end":198568,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chain<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1705},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":198792,"byte_end":198801,"line_start":47,"line_end":47,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chain<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1706},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":199191,"byte_end":199200,"line_start":58,"line_end":58,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chain<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9060},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":200169,"byte_end":200176,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":9063},{"krate":0,"index":9064}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1752},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":200617,"byte_end":200630,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Collect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1757},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":200819,"byte_end":200823,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"poll","qualname":"<Collect<St, C> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<C>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9109},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":201587,"byte_end":201592,"line_start":13,"line_end":13,"column_start":16,"column_end":21},"name":"Unzip","qualname":"::stream::stream::unzip::Unzip","value":"Unzip {  }","parent":null,"children":[{"krate":0,"index":9113},{"krate":0,"index":9114},{"krate":0,"index":9115}],"decl_id":null,"docs":" Future for the [`unzip`](super::StreamExt::unzip) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":202241,"byte_end":202254,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unzip<St, FromA, FromB> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":202526,"byte_end":202530,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"poll","qualname":"<Unzip<St, FromA, FromB> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<(FromA, FromB)>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9171},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":203380,"byte_end":203386,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":9173},{"krate":0,"index":9174}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1856},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":203865,"byte_end":203869,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<Concat<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":204555,"byte_end":204568,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Concat<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9211},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205058,"byte_end":205063,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Count","qualname":"::stream::stream::count::Count","value":"Count {  }","parent":null,"children":[{"krate":0,"index":9213},{"krate":0,"index":9214}],"decl_id":null,"docs":" Future for the [`count`](super::StreamExt::count) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1899},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205204,"byte_end":205207,"line_start":23,"line_end":23,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Count<St> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1905},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205541,"byte_end":205554,"line_start":35,"line_end":35,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Count<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1909},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205690,"byte_end":205694,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<Count<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9248},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":206373,"byte_end":206378,"line_start":12,"line_end":12,"column_start":16,"column_end":21},"name":"Cycle","qualname":"::stream::stream::cycle::Cycle","value":"Cycle {  }","parent":null,"children":[{"krate":0,"index":9250},{"krate":0,"index":9251}],"decl_id":null,"docs":" Stream for the [`cycle`](super::StreamExt::cycle) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":206693,"byte_end":206702,"line_start":34,"line_end":34,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Cycle<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1947},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":207069,"byte_end":207078,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Cycle<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":207420,"byte_end":207433,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Cycle<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9288},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208025,"byte_end":208034,"line_start":13,"line_end":13,"column_start":16,"column_end":25},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":9290},{"krate":0,"index":9291}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208342,"byte_end":208355,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Enumerate<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1987},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208505,"byte_end":208514,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Enumerate<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1988},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208914,"byte_end":208923,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Enumerate<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9332},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":209666,"byte_end":209672,"line_start":15,"line_end":15,"column_start":16,"column_end":22},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":9336},{"krate":0,"index":9337},{"krate":0,"index":9338},{"krate":0,"index":9339}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2029},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":210006,"byte_end":210009,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Filter<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2040},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":210832,"byte_end":210845,"line_start":62,"line_end":62,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Filter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2047},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":211207,"byte_end":211216,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2048},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":211946,"byte_end":211955,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Filter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9397},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":213059,"byte_end":213068,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":9401},{"krate":0,"index":9402},{"krate":0,"index":9403}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2089},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":213296,"byte_end":213299,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FilterMap<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2100},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":213943,"byte_end":213956,"line_start":56,"line_end":56,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2107},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":214225,"byte_end":214234,"line_start":69,"line_end":69,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2108},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":215022,"byte_end":215031,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9458},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":216067,"byte_end":216074,"line_start":13,"line_end":13,"column_start":16,"column_end":23},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9461},{"krate":0,"index":9462}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2142},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":216436,"byte_end":216449,"line_start":34,"line_end":34,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Flatten<St, St::Item> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2146},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":216675,"byte_end":216684,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Flatten<St, St::Item> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9513},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":141876,"byte_end":141883,"line_start":67,"line_end":67,"column_start":5,"column_end":12},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":9515}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9566},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":217891,"byte_end":217895,"line_start":12,"line_end":12,"column_start":16,"column_end":20},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":9571},{"krate":0,"index":9572},{"krate":0,"index":9573},{"krate":0,"index":9574}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2182},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218171,"byte_end":218174,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Fold<St, Fut, T, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2194},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218815,"byte_end":218828,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2201},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":219076,"byte_end":219080,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<Fold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9635},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":220352,"byte_end":220355,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Any","qualname":"::stream::stream::any::Any","value":"Any {  }","parent":null,"children":[{"krate":0,"index":9639},{"krate":0,"index":9640},{"krate":0,"index":9641},{"krate":0,"index":9642}],"decl_id":null,"docs":" Future for the [`any`](super::StreamExt::any) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2239},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":220605,"byte_end":220608,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Any<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":221232,"byte_end":221245,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Any<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":221489,"byte_end":221493,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<Any<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<bool>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9696},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":222928,"byte_end":222931,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"All","qualname":"::stream::stream::all::All","value":"All {  }","parent":null,"children":[{"krate":0,"index":9700},{"krate":0,"index":9701},{"krate":0,"index":9702},{"krate":0,"index":9703}],"decl_id":null,"docs":" Future for the [`all`](super::StreamExt::all) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2293},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223181,"byte_end":223184,"line_start":27,"line_end":27,"column_start":8,"column_end":11},"name":"fmt","qualname":"<All<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223807,"byte_end":223820,"line_start":53,"line_end":53,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<All<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2309},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":224064,"byte_end":224068,"line_start":66,"line_end":66,"column_start":8,"column_end":12},"name":"poll","qualname":"<All<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<bool>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9757},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":225530,"byte_end":225537,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":9761},{"krate":0,"index":9762},{"krate":0,"index":9763}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2351},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":225762,"byte_end":225765,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEach<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2361},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":226341,"byte_end":226354,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEach<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2367},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":226605,"byte_end":226609,"line_start":64,"line_end":64,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9814},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":227494,"byte_end":227498,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":9816},{"krate":0,"index":9817}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":227950,"byte_end":227957,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":227681,"byte_end":227743,"line_start":25,"line_end":25,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":227748,"byte_end":227751,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":227756,"byte_end":227824,"line_start":27,"line_end":27,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":227829,"byte_end":227895,"line_start":28,"line_end":28,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":227900,"byte_end":227938,"line_start":29,"line_end":29,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":228096,"byte_end":228109,"line_start":38,"line_end":38,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Fuse<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":228224,"byte_end":228233,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Fuse<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<S::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2406},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":228577,"byte_end":228586,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Fuse<S> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9858},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229316,"byte_end":229328,"line_start":11,"line_end":11,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":9860}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229146,"byte_end":229219,"line_start":8,"line_end":8,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229237,"byte_end":229304,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2440},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229891,"byte_end":229898,"line_start":27,"line_end":27,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229499,"byte_end":229572,"line_start":20,"line_end":20,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229577,"byte_end":229594,"line_start":21,"line_end":21,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229599,"byte_end":229602,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229607,"byte_end":229688,"line_start":23,"line_end":23,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229693,"byte_end":229775,"line_start":24,"line_end":24,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229780,"byte_end":229859,"line_start":25,"line_end":25,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229864,"byte_end":229879,"line_start":26,"line_end":26,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230509,"byte_end":230516,"line_start":41,"line_end":41,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229963,"byte_end":230030,"line_start":31,"line_end":31,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230035,"byte_end":230066,"line_start":32,"line_end":32,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230071,"byte_end":230074,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230079,"byte_end":230152,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230157,"byte_end":230212,"line_start":35,"line_end":35,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230217,"byte_end":230220,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230225,"byte_end":230306,"line_start":37,"line_end":37,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230311,"byte_end":230393,"line_start":38,"line_end":38,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230398,"byte_end":230477,"line_start":39,"line_end":39,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230482,"byte_end":230497,"line_start":40,"line_end":40,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2442},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231142,"byte_end":231153,"line_start":55,"line_end":55,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230589,"byte_end":230663,"line_start":45,"line_end":45,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230668,"byte_end":230699,"line_start":46,"line_end":46,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230704,"byte_end":230707,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230712,"byte_end":230785,"line_start":48,"line_end":48,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230790,"byte_end":230845,"line_start":49,"line_end":49,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230850,"byte_end":230853,"line_start":50,"line_end":50,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230858,"byte_end":230939,"line_start":51,"line_end":51,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":230944,"byte_end":231026,"line_start":52,"line_end":52,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231031,"byte_end":231110,"line_start":53,"line_end":53,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231115,"byte_end":231130,"line_start":54,"line_end":54,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2443},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231786,"byte_end":231796,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231266,"byte_end":231328,"line_start":59,"line_end":59,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231333,"byte_end":231336,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231341,"byte_end":231413,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231418,"byte_end":231489,"line_start":62,"line_end":62,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231494,"byte_end":231497,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231502,"byte_end":231583,"line_start":64,"line_end":64,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231588,"byte_end":231670,"line_start":65,"line_end":65,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231675,"byte_end":231754,"line_start":66,"line_end":66,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231759,"byte_end":231774,"line_start":67,"line_end":67,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231915,"byte_end":231928,"line_start":74,"line_end":74,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<StreamFuture<St> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":232090,"byte_end":232094,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"poll","qualname":"<StreamFuture<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9867},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143223,"byte_end":143230,"line_start":112,"line_end":112,"column_start":5,"column_end":12},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":9870}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":9933},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":232820,"byte_end":232823,"line_start":15,"line_end":15,"column_start":16,"column_end":19},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":9936},{"krate":0,"index":9937}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":232964,"byte_end":232967,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Map<St, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":233354,"byte_end":233367,"line_start":44,"line_end":44,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Map<St, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":233548,"byte_end":233557,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Map<St, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":233800,"byte_end":233809,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Map<St, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":9986},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":143591,"byte_end":143598,"line_start":123,"line_end":123,"column_start":5,"column_end":12},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":9990}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":10065},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234483,"byte_end":234487,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":10068}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234327,"byte_end":234386,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234404,"byte_end":234471,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234800,"byte_end":234813,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Next as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2546},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234980,"byte_end":234984,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<Next as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10073},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235495,"byte_end":235509,"line_start":12,"line_end":12,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":10076}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235311,"byte_end":235386,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235387,"byte_end":235398,"line_start":9,"line_end":9,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235416,"byte_end":235483,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235773,"byte_end":235786,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectNextSome as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235960,"byte_end":235964,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<SelectNextSome as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10081},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237100,"byte_end":237108,"line_start":22,"line_end":22,"column_start":16,"column_end":24},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":10083},{"krate":0,"index":10084}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237541,"byte_end":237545,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a reference to the next item","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237393,"byte_end":237459,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237464,"byte_end":237529,"line_start":37,"line_end":37,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237870,"byte_end":237879,"line_start":46,"line_end":46,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237632,"byte_end":237694,"line_start":42,"line_end":42,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237699,"byte_end":237702,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237707,"byte_end":237780,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237785,"byte_end":237858,"line_start":45,"line_end":45,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239194,"byte_end":239202,"line_start":86,"line_end":86,"column_start":12,"column_end":20},"name":"peek_mut","qualname":"<Peekable<St>>::peek_mut","value":"fn peek_mut(Pin<&mut Self>) -> PeekMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a future which retrieves a mutable reference to the next item\n in the stream, or `None` if the underlying stream terminates.","sig":null,"attributes":[{"value":"/ Produces a future which retrieves a mutable reference to the next item","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238315,"byte_end":238389,"line_start":60,"line_end":60,"column_start":5,"column_end":79}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238394,"byte_end":238459,"line_start":61,"line_end":61,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238464,"byte_end":238467,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238472,"byte_end":238486,"line_start":63,"line_end":63,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238491,"byte_end":238494,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238499,"byte_end":238506,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238511,"byte_end":238552,"line_start":66,"line_end":66,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238557,"byte_end":238600,"line_start":67,"line_end":67,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238605,"byte_end":238630,"line_start":68,"line_end":68,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238635,"byte_end":238638,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![1, 2, 3]).peekable();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238643,"byte_end":238699,"line_start":70,"line_end":70,"column_start":5,"column_end":61}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238704,"byte_end":238725,"line_start":71,"line_end":71,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238730,"byte_end":238733,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.as_mut().peek_mut().await, Some(&mut 1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238738,"byte_end":238801,"line_start":73,"line_end":73,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(stream.as_mut().next().await, Some(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238806,"byte_end":238860,"line_start":74,"line_end":74,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238865,"byte_end":238868,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ // Peek into the stream and modify the value which will be returned next","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238873,"byte_end":238949,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ if let Some(p) = stream.as_mut().peek_mut().await {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":238954,"byte_end":239009,"line_start":77,"line_end":77,"column_start":5,"column_end":60}},{"value":"/     if *p == 2 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239014,"byte_end":239034,"line_start":78,"line_end":78,"column_start":5,"column_end":25}},{"value":"/         *p = 5;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239039,"byte_end":239058,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239063,"byte_end":239072,"line_start":80,"line_end":80,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239077,"byte_end":239082,"line_start":81,"line_end":81,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239087,"byte_end":239090,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.collect::<Vec<_>>().await, vec![5, 3]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239095,"byte_end":239156,"line_start":83,"line_end":83,"column_start":5,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239161,"byte_end":239170,"line_start":84,"line_end":84,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239175,"byte_end":239182,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239377,"byte_end":239390,"line_start":91,"line_end":91,"column_start":12,"column_end":25},"name":"poll_peek_mut","qualname":"<Peekable<St>>::poll_peek_mut","value":"fn poll_peek_mut(Pin<&mut Self>, &mut Context) -> Poll<Option<&mut St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a mutable reference to the next item in the stream.\n","sig":null,"attributes":[{"value":"/ Peek retrieves a mutable reference to the next item in the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239295,"byte_end":239365,"line_start":90,"line_end":90,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241381,"byte_end":241388,"line_start":149,"line_end":149,"column_start":12,"column_end":19},"name":"next_if","qualname":"<Peekable<St>>::next_if","value":"fn next_if<F>(Pin<&mut Self>, F) -> NextIf<, St, F> where F: FnOnce(&St::Item)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next value of this\n stream if a condition is true.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next value of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239853,"byte_end":239926,"line_start":108,"line_end":108,"column_start":5,"column_end":78}},{"value":"/ stream if a condition is true.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239931,"byte_end":239965,"line_start":109,"line_end":109,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239970,"byte_end":239973,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ If `func` returns `true` for the next value of this stream, consume and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":239978,"byte_end":240053,"line_start":111,"line_end":111,"column_start":5,"column_end":80}},{"value":"/ return it. Otherwise, return `None`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240058,"byte_end":240098,"line_start":112,"line_end":112,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240103,"byte_end":240106,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240111,"byte_end":240125,"line_start":114,"line_end":114,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240130,"byte_end":240133,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240138,"byte_end":240178,"line_start":116,"line_end":116,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240183,"byte_end":240186,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240191,"byte_end":240198,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240203,"byte_end":240244,"line_start":119,"line_end":119,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240249,"byte_end":240292,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240297,"byte_end":240322,"line_start":121,"line_end":121,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240327,"byte_end":240330,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240335,"byte_end":240382,"line_start":123,"line_end":123,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240387,"byte_end":240408,"line_start":124,"line_end":124,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240413,"byte_end":240466,"line_start":125,"line_end":125,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, Some(0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240471,"byte_end":240539,"line_start":126,"line_end":126,"column_start":5,"column_end":73}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240544,"byte_end":240617,"line_start":127,"line_end":127,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if(|&x| x == 0).await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240622,"byte_end":240687,"line_start":128,"line_end":128,"column_start":5,"column_end":70}},{"value":"/ // `next_if` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240692,"byte_end":240776,"line_start":129,"line_end":129,"column_start":5,"column_end":89}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240781,"byte_end":240826,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240831,"byte_end":240840,"line_start":131,"line_end":131,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240845,"byte_end":240852,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240857,"byte_end":240860,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Consume any number less than 10.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240865,"byte_end":240901,"line_start":134,"line_end":134,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240906,"byte_end":240909,"line_start":135,"line_end":135,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240914,"byte_end":240921,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240926,"byte_end":240967,"line_start":137,"line_end":137,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":240972,"byte_end":241015,"line_start":138,"line_end":138,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241020,"byte_end":241045,"line_start":139,"line_end":139,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241050,"byte_end":241053,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..20).peekable();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241058,"byte_end":241106,"line_start":141,"line_end":141,"column_start":5,"column_end":53}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241111,"byte_end":241132,"line_start":142,"line_end":142,"column_start":5,"column_end":26}},{"value":"/ // Consume all numbers less than 10","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241137,"byte_end":241176,"line_start":143,"line_end":143,"column_start":5,"column_end":44}},{"value":"/ while stream.as_mut().next_if(|&x| x < 10).await.is_some() {}","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241181,"byte_end":241246,"line_start":144,"line_end":144,"column_start":5,"column_end":70}},{"value":"/ // The next value returned will be 10","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241251,"byte_end":241292,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(stream.next().await, Some(10));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241297,"byte_end":241343,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241348,"byte_end":241357,"line_start":147,"line_end":147,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241362,"byte_end":241369,"line_start":148,"line_end":148,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242412,"byte_end":242422,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"next_if_eq","qualname":"<Peekable<St>>::next_if_eq","value":"fn next_if_eq<'a, T>(Pin<&'a mut Self>, &'a T) -> NextIfEq where T: ?Sized,\nSt::Item: PartialEq<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which will consume and return the next item if it is\n equal to `expected`.","sig":null,"attributes":[{"value":"/ Creates a future which will consume and return the next item if it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241554,"byte_end":241627,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ equal to `expected`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241632,"byte_end":241656,"line_start":157,"line_end":157,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241661,"byte_end":241664,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241669,"byte_end":241682,"line_start":159,"line_end":159,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241687,"byte_end":241690,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ Consume a number if it's equal to 0.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241695,"byte_end":241735,"line_start":161,"line_end":161,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241740,"byte_end":241743,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241748,"byte_end":241755,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241760,"byte_end":241801,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241806,"byte_end":241849,"line_start":165,"line_end":165,"column_start":5,"column_end":48}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241854,"byte_end":241879,"line_start":166,"line_end":166,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241884,"byte_end":241887,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(0..5).peekable();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241892,"byte_end":241939,"line_start":168,"line_end":168,"column_start":5,"column_end":52}},{"value":"/ pin_mut!(stream);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241944,"byte_end":241965,"line_start":169,"line_end":169,"column_start":5,"column_end":26}},{"value":"/ // The first item of the stream is 0; consume it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":241970,"byte_end":242023,"line_start":170,"line_end":170,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, Some(0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242028,"byte_end":242090,"line_start":171,"line_end":171,"column_start":5,"column_end":67}},{"value":"/ // The next item returned is now 1, so `consume` will return `false`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242095,"byte_end":242168,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.as_mut().next_if_eq(&0).await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242173,"byte_end":242232,"line_start":173,"line_end":173,"column_start":5,"column_end":64}},{"value":"/ // `next_if_eq` saves the value of the next item if it was not equal to `expected`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242237,"byte_end":242324,"line_start":174,"line_end":174,"column_start":5,"column_end":92}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242329,"byte_end":242374,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242379,"byte_end":242388,"line_start":176,"line_end":176,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242393,"byte_end":242400,"line_start":177,"line_end":177,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242751,"byte_end":242764,"line_start":190,"line_end":190,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peekable<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242926,"byte_end":242935,"line_start":198,"line_end":198,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Peekable<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2657},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":243196,"byte_end":243205,"line_start":206,"line_end":206,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Peekable<S> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10125},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":243933,"byte_end":243937,"line_start":232,"line_end":232,"column_start":16,"column_end":20},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":10128}],"decl_id":null,"docs":" Future for the [`Peekable::peek`](self::Peekable::peek) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244122,"byte_end":244125,"line_start":242,"line_end":242,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Peek as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2663},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244310,"byte_end":244323,"line_start":248,"line_end":248,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Peek as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2668},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244488,"byte_end":244492,"line_start":259,"line_end":259,"column_start":8,"column_end":12},"name":"poll","qualname":"<Peek as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10166},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244995,"byte_end":245002,"line_start":274,"line_end":274,"column_start":16,"column_end":23},"name":"PeekMut","qualname":"::stream::stream::peek::PeekMut","value":"PeekMut {  }","parent":null,"children":[{"krate":0,"index":10169}],"decl_id":null,"docs":" Future for the [`Peekable::peek_mut`](self::Peekable::peek_mut) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":245190,"byte_end":245193,"line_start":284,"line_end":284,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PeekMut as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2674},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":245384,"byte_end":245397,"line_start":290,"line_end":290,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PeekMut as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":245569,"byte_end":245573,"line_start":301,"line_end":301,"column_start":8,"column_end":12},"name":"poll","qualname":"<PeekMut as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10207},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246085,"byte_end":246091,"line_start":316,"line_end":316,"column_start":16,"column_end":22},"name":"NextIf","qualname":"::stream::stream::peek::NextIf","value":"NextIf {  }","parent":null,"children":[{"krate":0,"index":10211}],"decl_id":null,"docs":" Future for the [`Peekable::next_if`](self::Peekable::next_if) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2683},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246292,"byte_end":246295,"line_start":326,"line_end":326,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIf as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2689},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246664,"byte_end":246677,"line_start":337,"line_end":337,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIf as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2695},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246976,"byte_end":246980,"line_start":350,"line_end":350,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIf as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10256},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":247955,"byte_end":247963,"line_start":375,"line_end":375,"column_start":16,"column_end":24},"name":"NextIfEq","qualname":"::stream::stream::peek::NextIfEq","value":"NextIfEq {  }","parent":null,"children":[{"krate":0,"index":10260}],"decl_id":null,"docs":" Future for the [`Peekable::next_if_eq`](self::Peekable::next_if_eq) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2699},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":248209,"byte_end":248212,"line_start":387,"line_end":387,"column_start":8,"column_end":11},"name":"fmt","qualname":"<NextIfEq as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2704},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":248526,"byte_end":248539,"line_start":400,"line_end":400,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<NextIfEq as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2709},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":248755,"byte_end":248759,"line_start":413,"line_end":413,"column_start":8,"column_end":12},"name":"poll","qualname":"<NextIfEq as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10305},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":249580,"byte_end":249584,"line_start":13,"line_end":13,"column_start":16,"column_end":20},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":10307},{"krate":0,"index":10308}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2766},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":249891,"byte_end":249904,"line_start":29,"line_end":29,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Skip<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":250040,"byte_end":250049,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Skip<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2771},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":250442,"byte_end":250451,"line_start":51,"line_end":51,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Skip<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10349},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":251347,"byte_end":251356,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":10353},{"krate":0,"index":10354},{"krate":0,"index":10355},{"krate":0,"index":10356},{"krate":0,"index":10357}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2810},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":251709,"byte_end":251712,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SkipWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2820},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":252514,"byte_end":252527,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2826},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":252793,"byte_end":252802,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2827},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":253663,"byte_end":253672,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<SkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10418},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":254853,"byte_end":254857,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":10420},{"krate":0,"index":10421}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":255195,"byte_end":255204,"line_start":35,"line_end":35,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Take<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2865},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":255650,"byte_end":255659,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Take<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":256122,"byte_end":256135,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Take<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10462},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":256866,"byte_end":256875,"line_start":14,"line_end":14,"column_start":16,"column_end":25},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":10466},{"krate":0,"index":10467},{"krate":0,"index":10468},{"krate":0,"index":10469},{"krate":0,"index":10470}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2906},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":257217,"byte_end":257220,"line_start":31,"line_end":31,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2917},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":258033,"byte_end":258042,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2918},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":258940,"byte_end":258949,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2923},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":259532,"byte_end":259545,"line_start":110,"line_end":110,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10531},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":260348,"byte_end":260357,"line_start":16,"line_end":16,"column_start":16,"column_end":25},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":10534},{"krate":0,"index":10535},{"krate":0,"index":10536},{"krate":0,"index":10537}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":2960},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":260922,"byte_end":260925,"line_start":36,"line_end":36,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TakeUntil<St, Fut> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2965},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261641,"byte_end":261652,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261341,"byte_end":261395,"line_start":52,"line_end":52,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261400,"byte_end":261494,"line_start":53,"line_end":53,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261499,"byte_end":261562,"line_start":54,"line_end":54,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261567,"byte_end":261629,"line_start":55,"line_end":55,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":2966},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262936,"byte_end":262947,"line_start":100,"line_end":100,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261789,"byte_end":261854,"line_start":64,"line_end":64,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261859,"byte_end":261916,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261921,"byte_end":261924,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261929,"byte_end":261994,"line_start":67,"line_end":67,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261999,"byte_end":262059,"line_start":68,"line_end":68,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262064,"byte_end":262067,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resolved yet,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262072,"byte_end":262140,"line_start":70,"line_end":70,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262145,"byte_end":262188,"line_start":71,"line_end":71,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262193,"byte_end":262196,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262201,"byte_end":262215,"line_start":73,"line_end":73,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262220,"byte_end":262223,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262228,"byte_end":262235,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262240,"byte_end":262281,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262286,"byte_end":262310,"line_start":77,"line_end":77,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262315,"byte_end":262358,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262363,"byte_end":262391,"line_start":79,"line_end":79,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262396,"byte_end":262399,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262404,"byte_end":262442,"line_start":81,"line_end":81,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262447,"byte_end":262450,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262455,"byte_end":262473,"line_start":83,"line_end":83,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262478,"byte_end":262520,"line_start":84,"line_end":84,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262525,"byte_end":262540,"line_start":85,"line_end":85,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262545,"byte_end":262564,"line_start":86,"line_end":86,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262569,"byte_end":262594,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262599,"byte_end":262615,"line_start":88,"line_end":88,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262620,"byte_end":262653,"line_start":89,"line_end":89,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262658,"byte_end":262667,"line_start":90,"line_end":90,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262672,"byte_end":262679,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262684,"byte_end":262687,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262692,"byte_end":262741,"line_start":93,"line_end":93,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262746,"byte_end":262800,"line_start":94,"line_end":94,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262805,"byte_end":262808,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262813,"byte_end":262860,"line_start":96,"line_end":96,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262865,"byte_end":262898,"line_start":97,"line_end":97,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262903,"byte_end":262912,"line_start":98,"line_end":98,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":262917,"byte_end":262924,"line_start":99,"line_end":99,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2967},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":263123,"byte_end":263133,"line_start":106,"line_end":106,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":263026,"byte_end":263087,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":263092,"byte_end":263111,"line_start":105,"line_end":105,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":2972},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":263320,"byte_end":263329,"line_start":118,"line_end":118,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2973},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":264076,"byte_end":264085,"line_start":141,"line_end":141,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TakeUntil<St, Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2977},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":264334,"byte_end":264347,"line_start":155,"line_end":155,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TakeUntil<St, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10588},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265065,"byte_end":265069,"line_start":14,"line_end":14,"column_start":16,"column_end":20},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":10592},{"krate":0,"index":10593},{"krate":0,"index":10594}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265291,"byte_end":265294,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Then<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3025},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265824,"byte_end":265837,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Then<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3031},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":266079,"byte_end":266088,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Then<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3032},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":266646,"byte_end":266655,"line_start":80,"line_end":80,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Then<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10649},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":267602,"byte_end":267605,"line_start":12,"line_end":12,"column_start":16,"column_end":19},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":10652},{"krate":0,"index":10653},{"krate":0,"index":10654},{"krate":0,"index":10655}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268123,"byte_end":268130,"line_start":29,"line_end":29,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268015,"byte_end":268089,"line_start":27,"line_end":27,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268094,"byte_end":268111,"line_start":28,"line_end":28,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268486,"byte_end":268493,"line_start":38,"line_end":38,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268224,"byte_end":268292,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268297,"byte_end":268328,"line_start":34,"line_end":34,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268333,"byte_end":268336,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268341,"byte_end":268414,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268419,"byte_end":268474,"line_start":37,"line_end":37,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268868,"byte_end":268879,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268599,"byte_end":268674,"line_start":42,"line_end":42,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268679,"byte_end":268710,"line_start":43,"line_end":43,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268715,"byte_end":268718,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268723,"byte_end":268796,"line_start":45,"line_end":45,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":268801,"byte_end":268856,"line_start":46,"line_end":46,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269285,"byte_end":269295,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269049,"byte_end":269112,"line_start":52,"line_end":52,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269117,"byte_end":269120,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269125,"byte_end":269197,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269202,"byte_end":269273,"line_start":55,"line_end":55,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269484,"byte_end":269497,"line_start":66,"line_end":66,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Zip<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269723,"byte_end":269732,"line_start":78,"line_end":78,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Zip<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3084},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":270687,"byte_end":270696,"line_start":104,"line_end":104,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Zip<St1, St2> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10706},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":272110,"byte_end":272116,"line_start":16,"line_end":16,"column_start":16,"column_end":22},"name":"Chunks","qualname":"::stream::stream::chunks::Chunks","value":"Chunks {  }","parent":null,"children":[{"krate":0,"index":10708},{"krate":0,"index":10709},{"krate":0,"index":10710}],"decl_id":null,"docs":" Stream for the [`chunks`](super::StreamExt::chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":272847,"byte_end":272856,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Chunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":273993,"byte_end":274002,"line_start":76,"line_end":76,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Chunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":274429,"byte_end":274442,"line_start":89,"line_end":89,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Chunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10754},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":275189,"byte_end":275200,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"ReadyChunks","qualname":"::stream::stream::ready_chunks::ReadyChunks","value":"ReadyChunks {  }","parent":null,"children":[{"krate":0,"index":10756},{"krate":0,"index":10757},{"krate":0,"index":10758}],"decl_id":null,"docs":" Stream for the [`ready_chunks`](super::StreamExt::ready_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":275785,"byte_end":275794,"line_start":40,"line_end":40,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<ReadyChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":277484,"byte_end":277493,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<ReadyChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3176},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":277925,"byte_end":277938,"line_start":97,"line_end":97,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ReadyChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10802},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":278716,"byte_end":278720,"line_start":19,"line_end":19,"column_start":16,"column_end":20},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":10807},{"krate":0,"index":10808},{"krate":0,"index":10809}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3220},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":279039,"byte_end":279042,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Scan<St, S, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":280080,"byte_end":280089,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<B>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":280898,"byte_end":280907,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Scan<St, S, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":281296,"byte_end":281309,"line_start":114,"line_end":114,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Scan<St, S, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10871},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":282144,"byte_end":282159,"line_start":15,"line_end":15,"column_start":16,"column_end":31},"name":"BufferUnordered","qualname":"::stream::stream::buffer_unordered::BufferUnordered","value":"BufferUnordered {  }","parent":null,"children":[{"krate":0,"index":10873},{"krate":0,"index":10874},{"krate":0,"index":10875}],"decl_id":null,"docs":" Stream for the [`buffer_unordered`](super::StreamExt::buffer_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3293},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":282413,"byte_end":282416,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BufferUnordered<St> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3300},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":283158,"byte_end":283167,"line_start":62,"line_end":62,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<BufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":284124,"byte_end":284133,"line_start":88,"line_end":88,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<BufferUnordered<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":284580,"byte_end":284593,"line_start":105,"line_end":105,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<BufferUnordered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":10916},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":285410,"byte_end":285418,"line_start":15,"line_end":15,"column_start":16,"column_end":24},"name":"Buffered","qualname":"::stream::stream::buffered::Buffered","value":"Buffered {  }","parent":null,"children":[{"krate":0,"index":10918},{"krate":0,"index":10919},{"krate":0,"index":10920}],"decl_id":null,"docs":" Stream for the [`buffered`](super::StreamExt::buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3346},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":285711,"byte_end":285714,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Buffered<St> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3353},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":286388,"byte_end":286397,"line_start":60,"line_end":60,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Buffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3354},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":287340,"byte_end":287349,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Buffered<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11000},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":298204,"byte_end":298220,"line_start":309,"line_end":309,"column_start":16,"column_end":32},"name":"FlattenUnordered","qualname":"::stream::stream::flatten_unordered::FlattenUnordered","value":"FlattenUnordered {  }","parent":null,"children":[{"krate":0,"index":11002},{"krate":0,"index":11003},{"krate":0,"index":11004},{"krate":0,"index":11005},{"krate":0,"index":11006},{"krate":0,"index":11007},{"krate":0,"index":11008}],"decl_id":null,"docs":" Stream for the [`flatten_unordered`](super::StreamExt::flatten_unordered)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3484},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":298682,"byte_end":298685,"line_start":327,"line_end":327,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FlattenUnordered<St> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":300406,"byte_end":300419,"line_start":383,"line_end":383,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FlattenUnordered<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3498},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":300662,"byte_end":300671,"line_start":395,"line_end":395,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FlattenUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11065},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":146410,"byte_end":146426,"line_start":213,"line_end":213,"column_start":5,"column_end":21},"name":"FlatMapUnordered","qualname":"::stream::stream::FlatMapUnordered","value":"FlatMapUnordered {  }","parent":null,"children":[{"krate":0,"index":11069}],"decl_id":null,"docs":" Stream for the [`flat_map_unordered`](StreamExt::flat_map_unordered) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11144},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":305773,"byte_end":305790,"line_start":14,"line_end":14,"column_start":16,"column_end":33},"name":"ForEachConcurrent","qualname":"::stream::stream::for_each_concurrent::ForEachConcurrent","value":"ForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":11148},{"krate":0,"index":11149},{"krate":0,"index":11150},{"krate":0,"index":11151}],"decl_id":null,"docs":" Future for the [`for_each_concurrent`](super::StreamExt::for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3543},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":306066,"byte_end":306069,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ForEachConcurrent<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3553},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":306915,"byte_end":306928,"line_start":60,"line_end":60,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3559},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":307185,"byte_end":307189,"line_start":73,"line_end":73,"column_start":8,"column_end":12},"name":"poll","qualname":"<ForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<()>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3566},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147744,"byte_end":147753,"line_start":249,"line_end":249,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3576},{"krate":0,"index":3580},{"krate":0,"index":3583},{"krate":0,"index":3585},{"krate":0,"index":3590},{"krate":0,"index":3591},{"krate":0,"index":3592},{"krate":0,"index":3593},{"krate":0,"index":3597},{"krate":0,"index":3600},{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3606},{"krate":0,"index":3609},{"krate":0,"index":3613},{"krate":0,"index":3618},{"krate":0,"index":3621},{"krate":0,"index":3624},{"krate":0,"index":3626},{"krate":0,"index":3629},{"krate":0,"index":3633},{"krate":0,"index":3634},{"krate":0,"index":3635},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3643},{"krate":0,"index":3645},{"krate":0,"index":3647},{"krate":0,"index":3648},{"krate":0,"index":3649},{"krate":0,"index":3650},{"krate":0,"index":3652},{"krate":0,"index":3654},{"krate":0,"index":3656},{"krate":0,"index":3657}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147633,"byte_end":147707,"line_start":247,"line_end":247,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147708,"byte_end":147733,"line_start":248,"line_end":248,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":3567},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148663,"byte_end":148667,"line_start":273,"line_end":273,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147768,"byte_end":147834,"line_start":250,"line_end":250,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147839,"byte_end":147842,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147847,"byte_end":147915,"line_start":252,"line_end":252,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147920,"byte_end":147995,"line_start":253,"line_end":253,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148000,"byte_end":148075,"line_start":254,"line_end":254,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148080,"byte_end":148134,"line_start":255,"line_end":255,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148139,"byte_end":148214,"line_start":256,"line_end":256,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148219,"byte_end":148229,"line_start":257,"line_end":257,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148234,"byte_end":148237,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148242,"byte_end":148256,"line_start":259,"line_end":259,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148261,"byte_end":148264,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148269,"byte_end":148276,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148281,"byte_end":148322,"line_start":262,"line_end":262,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148327,"byte_end":148370,"line_start":263,"line_end":263,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148375,"byte_end":148378,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148383,"byte_end":148424,"line_start":265,"line_end":265,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148429,"byte_end":148432,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148437,"byte_end":148482,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148487,"byte_end":148532,"line_start":268,"line_end":268,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148537,"byte_end":148582,"line_start":269,"line_end":269,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148587,"byte_end":148629,"line_start":270,"line_end":270,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148634,"byte_end":148643,"line_start":271,"line_end":271,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148648,"byte_end":148655,"line_start":272,"line_end":272,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149906,"byte_end":149917,"line_start":308,"line_end":308,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148809,"byte_end":148881,"line_start":280,"line_end":280,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148886,"byte_end":148947,"line_start":281,"line_end":281,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148952,"byte_end":148955,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":148960,"byte_end":149035,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149040,"byte_end":149094,"line_start":284,"line_end":284,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149099,"byte_end":149102,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149107,"byte_end":149180,"line_start":286,"line_end":286,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149185,"byte_end":149247,"line_start":287,"line_end":287,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149252,"byte_end":149327,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149332,"byte_end":149386,"line_start":289,"line_end":289,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149391,"byte_end":149466,"line_start":290,"line_end":290,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149471,"byte_end":149481,"line_start":291,"line_end":291,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149486,"byte_end":149489,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149494,"byte_end":149508,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149513,"byte_end":149516,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149521,"byte_end":149528,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149533,"byte_end":149574,"line_start":296,"line_end":296,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149579,"byte_end":149622,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149627,"byte_end":149630,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149635,"byte_end":149672,"line_start":299,"line_end":299,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149677,"byte_end":149680,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149685,"byte_end":149737,"line_start":301,"line_end":301,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149742,"byte_end":149772,"line_start":302,"line_end":302,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149777,"byte_end":149780,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149785,"byte_end":149837,"line_start":304,"line_end":304,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149842,"byte_end":149872,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149877,"byte_end":149886,"line_start":306,"line_end":306,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":149891,"byte_end":149898,"line_start":307,"line_end":307,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150918,"byte_end":150921,"line_start":338,"line_end":338,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150082,"byte_end":150157,"line_start":315,"line_end":315,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150162,"byte_end":150185,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150190,"byte_end":150193,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150198,"byte_end":150270,"line_start":318,"line_end":318,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150275,"byte_end":150339,"line_start":319,"line_end":319,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150344,"byte_end":150381,"line_start":320,"line_end":320,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150386,"byte_end":150389,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150394,"byte_end":150470,"line_start":322,"line_end":322,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150475,"byte_end":150546,"line_start":323,"line_end":323,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150551,"byte_end":150572,"line_start":324,"line_end":324,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150577,"byte_end":150580,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150585,"byte_end":150599,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150604,"byte_end":150607,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150612,"byte_end":150619,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150624,"byte_end":150665,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150670,"byte_end":150713,"line_start":330,"line_end":330,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150718,"byte_end":150721,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150726,"byte_end":150763,"line_start":332,"line_end":332,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150768,"byte_end":150807,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150812,"byte_end":150815,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150820,"byte_end":150884,"line_start":335,"line_end":335,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150889,"byte_end":150898,"line_start":336,"line_end":336,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":150903,"byte_end":150910,"line_start":337,"line_end":337,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3572},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152481,"byte_end":152490,"line_start":384,"line_end":384,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151088,"byte_end":151159,"line_start":346,"line_end":346,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151164,"byte_end":151183,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151188,"byte_end":151191,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151196,"byte_end":151261,"line_start":349,"line_end":349,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151266,"byte_end":151335,"line_start":350,"line_end":350,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151340,"byte_end":151351,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151356,"byte_end":151359,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151364,"byte_end":151439,"line_start":353,"line_end":353,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151444,"byte_end":151526,"line_start":354,"line_end":354,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151531,"byte_end":151549,"line_start":355,"line_end":355,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151554,"byte_end":151557,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151562,"byte_end":151585,"line_start":357,"line_end":357,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151590,"byte_end":151593,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151598,"byte_end":151673,"line_start":359,"line_end":359,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151678,"byte_end":151765,"line_start":360,"line_end":360,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151770,"byte_end":151826,"line_start":361,"line_end":361,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151831,"byte_end":151834,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151839,"byte_end":151851,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151856,"byte_end":151859,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151864,"byte_end":151933,"line_start":365,"line_end":365,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151938,"byte_end":151963,"line_start":366,"line_end":366,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151968,"byte_end":151971,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151976,"byte_end":151990,"line_start":368,"line_end":368,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":151995,"byte_end":151998,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152003,"byte_end":152010,"line_start":370,"line_end":370,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152015,"byte_end":152056,"line_start":371,"line_end":371,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152061,"byte_end":152104,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152109,"byte_end":152112,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152117,"byte_end":152168,"line_start":374,"line_end":374,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152173,"byte_end":152176,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152181,"byte_end":152221,"line_start":376,"line_end":376,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152226,"byte_end":152229,"line_start":377,"line_end":377,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152234,"byte_end":152286,"line_start":378,"line_end":378,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152291,"byte_end":152343,"line_start":379,"line_end":379,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152348,"byte_end":152400,"line_start":380,"line_end":380,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152405,"byte_end":152447,"line_start":381,"line_end":381,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152452,"byte_end":152461,"line_start":382,"line_end":382,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152466,"byte_end":152473,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153721,"byte_end":153727,"line_start":417,"line_end":417,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where F: FnMut(&Self::Item)\n-> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152634,"byte_end":152706,"line_start":391,"line_end":391,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152711,"byte_end":152738,"line_start":392,"line_end":392,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152743,"byte_end":152746,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152751,"byte_end":152826,"line_start":394,"line_end":394,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152831,"byte_end":152902,"line_start":395,"line_end":395,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152907,"byte_end":152979,"line_start":396,"line_end":396,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":152984,"byte_end":153058,"line_start":397,"line_end":397,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153063,"byte_end":153121,"line_start":398,"line_end":398,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153126,"byte_end":153129,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153134,"byte_end":153210,"line_start":400,"line_end":400,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153215,"byte_end":153289,"line_start":401,"line_end":401,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153294,"byte_end":153315,"line_start":402,"line_end":402,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153320,"byte_end":153323,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153328,"byte_end":153342,"line_start":404,"line_end":404,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153347,"byte_end":153350,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153355,"byte_end":153362,"line_start":406,"line_end":406,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153367,"byte_end":153408,"line_start":407,"line_end":407,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153413,"byte_end":153437,"line_start":408,"line_end":408,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153442,"byte_end":153485,"line_start":409,"line_end":409,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153490,"byte_end":153493,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153498,"byte_end":153536,"line_start":411,"line_end":411,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153541,"byte_end":153603,"line_start":412,"line_end":412,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153608,"byte_end":153611,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], events.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153616,"byte_end":153687,"line_start":414,"line_end":414,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153692,"byte_end":153701,"line_start":415,"line_end":415,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153706,"byte_end":153713,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3576},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155054,"byte_end":155064,"line_start":451,"line_end":451,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":153955,"byte_end":154030,"line_start":426,"line_end":426,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154035,"byte_end":154111,"line_start":427,"line_end":427,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154116,"byte_end":154119,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154124,"byte_end":154199,"line_start":429,"line_end":429,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154204,"byte_end":154279,"line_start":430,"line_end":430,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154284,"byte_end":154360,"line_start":431,"line_end":431,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154365,"byte_end":154430,"line_start":432,"line_end":432,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154435,"byte_end":154438,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154443,"byte_end":154519,"line_start":434,"line_end":434,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154524,"byte_end":154598,"line_start":435,"line_end":435,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154603,"byte_end":154628,"line_start":436,"line_end":436,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154633,"byte_end":154636,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154641,"byte_end":154655,"line_start":438,"line_end":438,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154660,"byte_end":154667,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154672,"byte_end":154713,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154718,"byte_end":154761,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154766,"byte_end":154769,"line_start":442,"line_end":442,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154774,"byte_end":154812,"line_start":443,"line_end":443,"column_start":5,"column_end":43}},{"value":"/ let events = stream.filter_map(|x| async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154817,"byte_end":154868,"line_start":444,"line_end":444,"column_start":5,"column_end":56}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154873,"byte_end":154924,"line_start":445,"line_end":445,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154929,"byte_end":154936,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154941,"byte_end":154944,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], events.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":154949,"byte_end":155020,"line_start":448,"line_end":448,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155025,"byte_end":155034,"line_start":449,"line_end":449,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155039,"byte_end":155046,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3580},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156093,"byte_end":156097,"line_start":482,"line_end":482,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155296,"byte_end":155369,"line_start":460,"line_end":460,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155374,"byte_end":155402,"line_start":461,"line_end":461,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155407,"byte_end":155410,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155415,"byte_end":155489,"line_start":463,"line_end":463,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155494,"byte_end":155561,"line_start":464,"line_end":464,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155566,"byte_end":155611,"line_start":465,"line_end":465,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155616,"byte_end":155619,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155624,"byte_end":155700,"line_start":467,"line_end":467,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155705,"byte_end":155731,"line_start":468,"line_end":468,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155736,"byte_end":155739,"line_start":469,"line_end":469,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155744,"byte_end":155758,"line_start":470,"line_end":470,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155763,"byte_end":155766,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155771,"byte_end":155778,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155783,"byte_end":155824,"line_start":473,"line_end":473,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155829,"byte_end":155872,"line_start":474,"line_end":474,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155877,"byte_end":155880,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155885,"byte_end":155922,"line_start":476,"line_end":476,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155927,"byte_end":155982,"line_start":477,"line_end":477,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155987,"byte_end":155990,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":155995,"byte_end":156059,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156064,"byte_end":156073,"line_start":480,"line_end":480,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156078,"byte_end":156085,"line_start":481,"line_end":481,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3583},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157031,"byte_end":157038,"line_start":516,"line_end":516,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"fn collect<C>(Self) -> Collect<Self, C> where C: Default + Extend<Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156306,"byte_end":156360,"line_start":491,"line_end":491,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156365,"byte_end":156420,"line_start":492,"line_end":492,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156425,"byte_end":156428,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156433,"byte_end":156501,"line_start":494,"line_end":494,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156506,"byte_end":156509,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156514,"byte_end":156528,"line_start":496,"line_end":496,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156533,"byte_end":156536,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156541,"byte_end":156548,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156553,"byte_end":156594,"line_start":499,"line_end":499,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156599,"byte_end":156630,"line_start":500,"line_end":500,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156635,"byte_end":156670,"line_start":501,"line_end":501,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156675,"byte_end":156695,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156700,"byte_end":156703,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156708,"byte_end":156745,"line_start":504,"line_end":504,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156750,"byte_end":156753,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156758,"byte_end":156785,"line_start":506,"line_end":506,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156790,"byte_end":156814,"line_start":507,"line_end":507,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156819,"byte_end":156861,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156866,"byte_end":156875,"line_start":509,"line_end":509,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156880,"byte_end":156887,"line_start":510,"line_end":510,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156892,"byte_end":156895,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156900,"byte_end":156948,"line_start":512,"line_end":512,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":156953,"byte_end":156997,"line_start":513,"line_end":513,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157002,"byte_end":157011,"line_start":514,"line_end":514,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157016,"byte_end":157023,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3585},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158157,"byte_end":158162,"line_start":553,"line_end":553,"column_start":8,"column_end":13},"name":"unzip","qualname":"::stream::stream::StreamExt::unzip","value":"fn unzip<A, B, FromA, FromB>(Self) -> Unzip<Self, FromA, FromB> where\nFromA: Default + Extend<A>, FromB: Default + Extend<B>, Self: Sized +\nStream<Item = (A, B)>","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Converts a stream of pairs into a future, which\n resolves to pair of containers.","sig":null,"attributes":[{"value":"/ Converts a stream of pairs into a future, which","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157196,"byte_end":157247,"line_start":523,"line_end":523,"column_start":5,"column_end":56}},{"value":"/ resolves to pair of containers.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157252,"byte_end":157287,"line_start":524,"line_end":524,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157292,"byte_end":157295,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ `unzip()` produces a future, which resolves to two","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157300,"byte_end":157354,"line_start":526,"line_end":526,"column_start":5,"column_end":59}},{"value":"/ collections: one from the left elements of the pairs,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157359,"byte_end":157416,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ and one from the right elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157421,"byte_end":157457,"line_start":528,"line_end":528,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157462,"byte_end":157465,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157470,"byte_end":157538,"line_start":530,"line_end":530,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157543,"byte_end":157546,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157551,"byte_end":157565,"line_start":532,"line_end":532,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157570,"byte_end":157573,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157578,"byte_end":157585,"line_start":534,"line_end":534,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157590,"byte_end":157631,"line_start":535,"line_end":535,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157636,"byte_end":157667,"line_start":536,"line_end":536,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157672,"byte_end":157707,"line_start":537,"line_end":537,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157712,"byte_end":157732,"line_start":538,"line_end":538,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157737,"byte_end":157740,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157745,"byte_end":157782,"line_start":540,"line_end":540,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157787,"byte_end":157790,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157795,"byte_end":157822,"line_start":542,"line_end":542,"column_start":5,"column_end":32}},{"value":"/     tx.unbounded_send((1, 2)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157827,"byte_end":157870,"line_start":543,"line_end":543,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((3, 4)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157875,"byte_end":157918,"line_start":544,"line_end":544,"column_start":5,"column_end":48}},{"value":"/     tx.unbounded_send((5, 6)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157923,"byte_end":157966,"line_start":545,"line_end":545,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157971,"byte_end":157978,"line_start":546,"line_end":546,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157983,"byte_end":157986,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (o1, o2): (Vec<_>, Vec<_>) = rx.unzip().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":157991,"byte_end":158045,"line_start":548,"line_end":548,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(o1, vec![1, 3, 5]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158050,"byte_end":158084,"line_start":549,"line_end":549,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(o2, vec![2, 4, 6]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158089,"byte_end":158123,"line_start":550,"line_end":550,"column_start":5,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158128,"byte_end":158137,"line_start":551,"line_end":551,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158142,"byte_end":158149,"line_start":552,"line_end":552,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3590},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159458,"byte_end":159464,"line_start":594,"line_end":594,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158423,"byte_end":158485,"line_start":562,"line_end":562,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158490,"byte_end":158554,"line_start":563,"line_end":563,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158559,"byte_end":158562,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158567,"byte_end":158631,"line_start":565,"line_end":565,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158636,"byte_end":158701,"line_start":566,"line_end":566,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158706,"byte_end":158752,"line_start":567,"line_end":567,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158757,"byte_end":158760,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158765,"byte_end":158814,"line_start":569,"line_end":569,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158819,"byte_end":158859,"line_start":570,"line_end":570,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158864,"byte_end":158867,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158872,"byte_end":158886,"line_start":572,"line_end":572,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158891,"byte_end":158894,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158899,"byte_end":158906,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158911,"byte_end":158952,"line_start":575,"line_end":575,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158957,"byte_end":158988,"line_start":576,"line_end":576,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":158993,"byte_end":159028,"line_start":577,"line_end":577,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159033,"byte_end":159053,"line_start":578,"line_end":578,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159058,"byte_end":159061,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159066,"byte_end":159103,"line_start":580,"line_end":580,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159108,"byte_end":159111,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159116,"byte_end":159143,"line_start":582,"line_end":582,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159148,"byte_end":159179,"line_start":583,"line_end":583,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159184,"byte_end":159210,"line_start":584,"line_end":584,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159215,"byte_end":159281,"line_start":585,"line_end":585,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159286,"byte_end":159295,"line_start":586,"line_end":586,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159300,"byte_end":159307,"line_start":587,"line_end":587,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159312,"byte_end":159315,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159320,"byte_end":159355,"line_start":589,"line_end":589,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159360,"byte_end":159363,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159368,"byte_end":159424,"line_start":591,"line_end":591,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159429,"byte_end":159438,"line_start":592,"line_end":592,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159443,"byte_end":159450,"line_start":593,"line_end":593,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3591},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160484,"byte_end":160489,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"count","qualname":"::stream::stream::StreamExt::count","value":"fn count(Self) -> Count<Self> where Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Drives the stream to completion, counting the number of items.","sig":null,"attributes":[{"value":"/ Drives the stream to completion, counting the number of items.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159694,"byte_end":159760,"line_start":602,"line_end":602,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159765,"byte_end":159768,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159773,"byte_end":159796,"line_start":604,"line_end":604,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159801,"byte_end":159804,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so counting elements of a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159809,"byte_end":159885,"line_start":606,"line_end":606,"column_start":5,"column_end":81}},{"value":"/ stream with more than [`usize::MAX`] elements either produces the wrong","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159890,"byte_end":159965,"line_start":607,"line_end":607,"column_start":5,"column_end":80}},{"value":"/ result or panics. If debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":159970,"byte_end":160047,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160052,"byte_end":160055,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160060,"byte_end":160072,"line_start":610,"line_end":610,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160077,"byte_end":160080,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ This function might panic if the iterator has more than [`usize::MAX`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160085,"byte_end":160159,"line_start":612,"line_end":612,"column_start":5,"column_end":79}},{"value":"/ elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160164,"byte_end":160177,"line_start":613,"line_end":613,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160182,"byte_end":160185,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160190,"byte_end":160204,"line_start":615,"line_end":615,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160209,"byte_end":160212,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160217,"byte_end":160224,"line_start":617,"line_end":617,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160229,"byte_end":160270,"line_start":618,"line_end":618,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160275,"byte_end":160318,"line_start":619,"line_end":619,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160323,"byte_end":160326,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160331,"byte_end":160369,"line_start":621,"line_end":621,"column_start":5,"column_end":43}},{"value":"/ let count = stream.count().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160374,"byte_end":160411,"line_start":622,"line_end":622,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160416,"byte_end":160419,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(count, 10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160424,"byte_end":160450,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160455,"byte_end":160464,"line_start":625,"line_end":625,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160469,"byte_end":160476,"line_start":626,"line_end":626,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161445,"byte_end":161450,"line_start":657,"line_end":657,"column_start":8,"column_end":13},"name":"cycle","qualname":"::stream::stream::StreamExt::cycle","value":"fn cycle(Self) -> Cycle<Self> where Self: Sized + Clone","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Repeats a stream endlessly.","sig":null,"attributes":[{"value":"/ Repeats a stream endlessly.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160611,"byte_end":160642,"line_start":634,"line_end":634,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160647,"byte_end":160650,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160655,"byte_end":160722,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160727,"byte_end":160799,"line_start":637,"line_end":637,"column_start":5,"column_end":77}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160804,"byte_end":160861,"line_start":638,"line_end":638,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160866,"byte_end":160869,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160874,"byte_end":160888,"line_start":640,"line_end":640,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160893,"byte_end":160896,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160901,"byte_end":160908,"line_start":642,"line_end":642,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160913,"byte_end":160954,"line_start":643,"line_end":643,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":160959,"byte_end":161002,"line_start":644,"line_end":644,"column_start":5,"column_end":48}},{"value":"/ let a = [1, 2, 3];","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161007,"byte_end":161029,"line_start":645,"line_end":645,"column_start":5,"column_end":27}},{"value":"/ let mut s = stream::iter(a.iter()).cycle();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161034,"byte_end":161081,"line_start":646,"line_end":646,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161086,"byte_end":161089,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161094,"byte_end":161135,"line_start":648,"line_end":648,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161140,"byte_end":161181,"line_start":649,"line_end":649,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161186,"byte_end":161227,"line_start":650,"line_end":650,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161232,"byte_end":161273,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161278,"byte_end":161319,"line_start":652,"line_end":652,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161324,"byte_end":161365,"line_start":653,"line_end":653,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(s.next().await, Some(&1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161370,"byte_end":161411,"line_start":654,"line_end":654,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161416,"byte_end":161425,"line_start":655,"line_end":655,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161430,"byte_end":161437,"line_start":656,"line_end":656,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3593},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162400,"byte_end":162404,"line_start":684,"line_end":684,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161585,"byte_end":161652,"line_start":664,"line_end":664,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161657,"byte_end":161709,"line_start":665,"line_end":665,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161714,"byte_end":161717,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161722,"byte_end":161792,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161797,"byte_end":161873,"line_start":668,"line_end":668,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161878,"byte_end":161954,"line_start":669,"line_end":669,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":161959,"byte_end":162029,"line_start":670,"line_end":670,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162034,"byte_end":162060,"line_start":671,"line_end":671,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162065,"byte_end":162068,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162073,"byte_end":162087,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162092,"byte_end":162095,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162100,"byte_end":162107,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162112,"byte_end":162153,"line_start":676,"line_end":676,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162158,"byte_end":162201,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162206,"byte_end":162209,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162214,"byte_end":162257,"line_start":679,"line_end":679,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162262,"byte_end":162331,"line_start":680,"line_end":680,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162336,"byte_end":162366,"line_start":681,"line_end":681,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162371,"byte_end":162380,"line_start":682,"line_end":682,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162385,"byte_end":162392,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3597},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163105,"byte_end":163108,"line_start":706,"line_end":706,"column_start":8,"column_end":11},"name":"any","qualname":"::stream::stream::StreamExt::any","value":"fn any<Fut, F>(Self, F) -> Any<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if any element in stream satisfied a predicate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162639,"byte_end":162752,"line_start":693,"line_end":693,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162757,"byte_end":162760,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162765,"byte_end":162779,"line_start":695,"line_end":695,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162784,"byte_end":162787,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162792,"byte_end":162799,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162804,"byte_end":162845,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162850,"byte_end":162893,"line_start":699,"line_end":699,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162898,"byte_end":162901,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162906,"byte_end":162950,"line_start":701,"line_end":701,"column_start":5,"column_end":49}},{"value":"/ let contain_three = number_stream.any(|i| async move { i == 3 });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":162955,"byte_end":163024,"line_start":702,"line_end":702,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(contain_three.await, true);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163029,"byte_end":163071,"line_start":703,"line_end":703,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163076,"byte_end":163085,"line_start":704,"line_end":704,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163090,"byte_end":163097,"line_start":705,"line_end":705,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3600},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163795,"byte_end":163798,"line_start":728,"line_end":728,"column_start":8,"column_end":11},"name":"all","qualname":"::stream::stream::StreamExt::all","value":"fn all<Fut, F>(Self, F) -> All<Self, Fut, F> where F: FnMut(Self::Item) ->\nFut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","sig":null,"attributes":[{"value":"/ Execute predicate over asynchronous stream, and return `true` if all element in stream satisfied a predicate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163323,"byte_end":163436,"line_start":715,"line_end":715,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163441,"byte_end":163444,"line_start":716,"line_end":716,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163449,"byte_end":163463,"line_start":717,"line_end":717,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163468,"byte_end":163471,"line_start":718,"line_end":718,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163476,"byte_end":163483,"line_start":719,"line_end":719,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163488,"byte_end":163529,"line_start":720,"line_end":720,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163534,"byte_end":163577,"line_start":721,"line_end":721,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163582,"byte_end":163585,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163590,"byte_end":163634,"line_start":723,"line_end":723,"column_start":5,"column_end":49}},{"value":"/ let less_then_twenty = number_stream.all(|i| async move { i < 20 });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163639,"byte_end":163711,"line_start":724,"line_end":724,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(less_then_twenty.await, true);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163716,"byte_end":163761,"line_start":725,"line_end":725,"column_start":5,"column_end":50}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163766,"byte_end":163775,"line_start":726,"line_end":726,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":163780,"byte_end":163787,"line_start":727,"line_end":727,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3603},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164972,"byte_end":164979,"line_start":768,"line_end":768,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164013,"byte_end":164078,"line_start":737,"line_end":737,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164083,"byte_end":164086,"line_start":738,"line_end":738,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164091,"byte_end":164105,"line_start":739,"line_end":739,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164110,"byte_end":164113,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164118,"byte_end":164125,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164130,"byte_end":164171,"line_start":742,"line_end":742,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164176,"byte_end":164207,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164212,"byte_end":164247,"line_start":744,"line_end":744,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164252,"byte_end":164272,"line_start":745,"line_end":745,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164277,"byte_end":164280,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164285,"byte_end":164324,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164329,"byte_end":164368,"line_start":748,"line_end":748,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164373,"byte_end":164412,"line_start":749,"line_end":749,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164417,"byte_end":164420,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164425,"byte_end":164452,"line_start":751,"line_end":751,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164457,"byte_end":164496,"line_start":752,"line_end":752,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164501,"byte_end":164540,"line_start":753,"line_end":753,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164545,"byte_end":164552,"line_start":754,"line_end":754,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164557,"byte_end":164584,"line_start":755,"line_end":755,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164589,"byte_end":164628,"line_start":756,"line_end":756,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164633,"byte_end":164672,"line_start":757,"line_end":757,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164677,"byte_end":164684,"line_start":758,"line_end":758,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164689,"byte_end":164716,"line_start":759,"line_end":759,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164721,"byte_end":164762,"line_start":760,"line_end":760,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164767,"byte_end":164808,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164813,"byte_end":164820,"line_start":762,"line_end":762,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164825,"byte_end":164828,"line_start":763,"line_end":763,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164833,"byte_end":164892,"line_start":764,"line_end":764,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164897,"byte_end":164938,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164943,"byte_end":164952,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":164957,"byte_end":164964,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3604},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166275,"byte_end":166292,"line_start":812,"line_end":812,"column_start":8,"column_end":25},"name":"flatten_unordered","qualname":"::stream::stream::StreamExt::flatten_unordered","value":"fn flatten_unordered<impl Into<Option<usize>>>(Self, impl Into<Option<usize>>)\n-> FlattenUnordered<Self> where Self::Item: Stream + Unpin, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream. Polls\n inner streams concurrently.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream. Polls","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165156,"byte_end":165227,"line_start":776,"line_end":776,"column_start":5,"column_end":76}},{"value":"/ inner streams concurrently.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165232,"byte_end":165263,"line_start":777,"line_end":777,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165268,"byte_end":165271,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165276,"byte_end":165290,"line_start":779,"line_end":779,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165295,"byte_end":165298,"line_start":780,"line_end":780,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165303,"byte_end":165310,"line_start":781,"line_end":781,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165315,"byte_end":165356,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165361,"byte_end":165392,"line_start":783,"line_end":783,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165397,"byte_end":165432,"line_start":784,"line_end":784,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165437,"byte_end":165457,"line_start":785,"line_end":785,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165462,"byte_end":165465,"line_start":786,"line_end":786,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165470,"byte_end":165509,"line_start":787,"line_end":787,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165514,"byte_end":165553,"line_start":788,"line_end":788,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165558,"byte_end":165597,"line_start":789,"line_end":789,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165602,"byte_end":165605,"line_start":790,"line_end":790,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165610,"byte_end":165637,"line_start":791,"line_end":791,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165642,"byte_end":165681,"line_start":792,"line_end":792,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165686,"byte_end":165725,"line_start":793,"line_end":793,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165730,"byte_end":165737,"line_start":794,"line_end":794,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165742,"byte_end":165769,"line_start":795,"line_end":795,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165774,"byte_end":165813,"line_start":796,"line_end":796,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165818,"byte_end":165857,"line_start":797,"line_end":797,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165862,"byte_end":165869,"line_start":798,"line_end":798,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165874,"byte_end":165901,"line_start":799,"line_end":799,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165906,"byte_end":165947,"line_start":800,"line_end":800,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165952,"byte_end":165993,"line_start":801,"line_end":801,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":165998,"byte_end":166005,"line_start":802,"line_end":802,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166010,"byte_end":166013,"line_start":803,"line_end":803,"column_start":5,"column_end":8}},{"value":"/ let mut output = rx3.flatten_unordered(None).collect::<Vec<i32>>().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166018,"byte_end":166095,"line_start":804,"line_end":804,"column_start":5,"column_end":82}},{"value":"/ output.sort();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166100,"byte_end":166118,"line_start":805,"line_end":805,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166123,"byte_end":166126,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166131,"byte_end":166172,"line_start":807,"line_end":807,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166177,"byte_end":166186,"line_start":808,"line_end":808,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166191,"byte_end":166198,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166203,"byte_end":166237,"line_start":810,"line_end":810,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166242,"byte_end":166267,"line_start":811,"line_end":811,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167578,"byte_end":167586,"line_start":845,"line_end":845,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where F: FnMut(Self::Item)\n-> U, U: Stream, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166492,"byte_end":166564,"line_start":820,"line_end":820,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166569,"byte_end":166572,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166577,"byte_end":166654,"line_start":822,"line_end":822,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166659,"byte_end":166734,"line_start":823,"line_end":823,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166739,"byte_end":166815,"line_start":824,"line_end":824,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166820,"byte_end":166823,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over all elements","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166828,"byte_end":166911,"line_start":826,"line_end":826,"column_start":5,"column_end":88}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":166916,"byte_end":166999,"line_start":827,"line_end":827,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167004,"byte_end":167007,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167012,"byte_end":167088,"line_start":829,"line_end":829,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167093,"byte_end":167169,"line_start":830,"line_end":830,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167174,"byte_end":167195,"line_start":831,"line_end":831,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167200,"byte_end":167203,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167208,"byte_end":167222,"line_start":833,"line_end":833,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167227,"byte_end":167230,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167235,"byte_end":167242,"line_start":835,"line_end":835,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167247,"byte_end":167288,"line_start":836,"line_end":836,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167293,"byte_end":167336,"line_start":837,"line_end":837,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167341,"byte_end":167344,"line_start":838,"line_end":838,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167349,"byte_end":167386,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167391,"byte_end":167458,"line_start":840,"line_end":840,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167463,"byte_end":167466,"line_start":841,"line_end":841,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167471,"byte_end":167544,"line_start":842,"line_end":842,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167549,"byte_end":167558,"line_start":843,"line_end":843,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167563,"byte_end":167570,"line_start":844,"line_end":844,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3609},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169644,"byte_end":169662,"line_start":894,"line_end":894,"column_start":8,"column_end":26},"name":"flat_map_unordered","qualname":"::stream::stream::StreamExt::flat_map_unordered","value":"fn flat_map_unordered<U, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> FlatMapUnordered<Self, U, F> where U: Stream + Unpin, F: FnMut(Self::Item)\n-> U, Self: Sized, impl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s\n and polls them concurrently, yielding items in any order, as they made\n available.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167789,"byte_end":167860,"line_start":854,"line_end":854,"column_start":5,"column_end":76}},{"value":"/ and polls them concurrently, yielding items in any order, as they made","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167865,"byte_end":167939,"line_start":855,"line_end":855,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167944,"byte_end":167958,"line_start":856,"line_end":856,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167963,"byte_end":167966,"line_start":857,"line_end":857,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces `Stream`s","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":167971,"byte_end":168038,"line_start":858,"line_end":858,"column_start":5,"column_end":72}},{"value":"/ instead, and you need to poll all of them concurrently, you would","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168043,"byte_end":168112,"line_start":859,"line_end":859,"column_start":5,"column_end":74}},{"value":"/ have to use something like `for_each_concurrent` and merge values","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168117,"byte_end":168186,"line_start":860,"line_end":860,"column_start":5,"column_end":74}},{"value":"/ by hand. This combinator provides ability to collect all values","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168191,"byte_end":168258,"line_start":861,"line_end":861,"column_start":5,"column_end":72}},{"value":"/ from concurrently polled streams into one stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168263,"byte_end":168316,"line_start":862,"line_end":862,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168321,"byte_end":168324,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrently","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168329,"byte_end":168402,"line_start":864,"line_end":864,"column_start":5,"column_end":78}},{"value":"/ polled streams. If this limit is not `None`, no more than `limit` streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168407,"byte_end":168484,"line_start":865,"line_end":865,"column_start":5,"column_end":82}},{"value":"/ will be polled concurrently. The `limit` argument is of type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168489,"byte_end":168553,"line_start":866,"line_end":866,"column_start":5,"column_end":69}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168558,"byte_end":168625,"line_start":867,"line_end":867,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168630,"byte_end":168699,"line_start":868,"line_end":868,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168704,"byte_end":168776,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168781,"byte_end":168784,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produces inner streams is executed over","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168789,"byte_end":168859,"line_start":871,"line_end":871,"column_start":5,"column_end":75}},{"value":"/ all elements of stream as next stream item is available and limit","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168864,"byte_end":168933,"line_start":872,"line_end":872,"column_start":5,"column_end":74}},{"value":"/ of concurrently processed streams isn't exceeded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168938,"byte_end":168991,"line_start":873,"line_end":873,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":168996,"byte_end":168999,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169004,"byte_end":169070,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/ returns a wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169075,"byte_end":169111,"line_start":876,"line_end":876,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169116,"byte_end":169119,"line_start":877,"line_end":877,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169124,"byte_end":169138,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169143,"byte_end":169146,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169151,"byte_end":169158,"line_start":880,"line_end":880,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169163,"byte_end":169204,"line_start":881,"line_end":881,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169209,"byte_end":169252,"line_start":882,"line_end":882,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169257,"byte_end":169260,"line_start":883,"line_end":883,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169265,"byte_end":169301,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ let stream = stream.flat_map_unordered(1, |x| stream::iter(vec![x; x]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169306,"byte_end":169382,"line_start":885,"line_end":885,"column_start":5,"column_end":81}},{"value":"/ let mut values = stream.collect::<Vec<_>>().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169387,"byte_end":169441,"line_start":886,"line_end":886,"column_start":5,"column_end":59}},{"value":"/ values.sort();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169446,"byte_end":169464,"line_start":887,"line_end":887,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169469,"byte_end":169472,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1usize, 2, 2, 3, 3, 3, 4, 4, 4, 4], values);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169477,"byte_end":169541,"line_start":889,"line_end":889,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169546,"byte_end":169555,"line_start":890,"line_end":890,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169560,"byte_end":169567,"line_start":891,"line_end":891,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169572,"byte_end":169606,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169611,"byte_end":169636,"line_start":893,"line_end":893,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3613},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170749,"byte_end":170753,"line_start":931,"line_end":931,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":169940,"byte_end":170011,"line_start":907,"line_end":907,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170016,"byte_end":170046,"line_start":908,"line_end":908,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170051,"byte_end":170054,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170059,"byte_end":170134,"line_start":910,"line_end":910,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170139,"byte_end":170210,"line_start":911,"line_end":911,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170215,"byte_end":170255,"line_start":912,"line_end":912,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170260,"byte_end":170263,"line_start":913,"line_end":913,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170268,"byte_end":170282,"line_start":914,"line_end":914,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170287,"byte_end":170290,"line_start":915,"line_end":915,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170295,"byte_end":170302,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170307,"byte_end":170348,"line_start":917,"line_end":917,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170353,"byte_end":170377,"line_start":918,"line_end":918,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170382,"byte_end":170425,"line_start":919,"line_end":919,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170430,"byte_end":170433,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170438,"byte_end":170476,"line_start":921,"line_end":921,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170481,"byte_end":170484,"line_start":922,"line_end":922,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170489,"byte_end":170533,"line_start":923,"line_end":923,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170538,"byte_end":170558,"line_start":924,"line_end":924,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170563,"byte_end":170626,"line_start":925,"line_end":925,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170631,"byte_end":170638,"line_start":926,"line_end":926,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170643,"byte_end":170646,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170651,"byte_end":170715,"line_start":928,"line_end":928,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170720,"byte_end":170729,"line_start":929,"line_end":929,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":170734,"byte_end":170741,"line_start":930,"line_end":930,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3618},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171800,"byte_end":171810,"line_start":962,"line_end":962,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171022,"byte_end":171096,"line_start":940,"line_end":940,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171101,"byte_end":171124,"line_start":941,"line_end":941,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171129,"byte_end":171132,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171137,"byte_end":171210,"line_start":943,"line_end":943,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171215,"byte_end":171287,"line_start":944,"line_end":944,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171292,"byte_end":171369,"line_start":945,"line_end":945,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171374,"byte_end":171385,"line_start":946,"line_end":946,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171390,"byte_end":171393,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171398,"byte_end":171412,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171417,"byte_end":171420,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171425,"byte_end":171432,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171437,"byte_end":171478,"line_start":951,"line_end":951,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171483,"byte_end":171507,"line_start":952,"line_end":952,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171512,"byte_end":171555,"line_start":953,"line_end":953,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171560,"byte_end":171563,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171568,"byte_end":171606,"line_start":955,"line_end":955,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171611,"byte_end":171614,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171619,"byte_end":171682,"line_start":957,"line_end":957,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171687,"byte_end":171690,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171695,"byte_end":171766,"line_start":959,"line_end":959,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171771,"byte_end":171780,"line_start":960,"line_end":960,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":171785,"byte_end":171792,"line_start":961,"line_end":961,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3621},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172799,"byte_end":172809,"line_start":992,"line_end":992,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172044,"byte_end":172120,"line_start":971,"line_end":971,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172125,"byte_end":172148,"line_start":972,"line_end":972,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172153,"byte_end":172156,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172161,"byte_end":172236,"line_start":974,"line_end":974,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172241,"byte_end":172313,"line_start":975,"line_end":975,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172318,"byte_end":172385,"line_start":976,"line_end":976,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172390,"byte_end":172393,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172398,"byte_end":172412,"line_start":978,"line_end":978,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172417,"byte_end":172420,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172425,"byte_end":172432,"line_start":980,"line_end":980,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172437,"byte_end":172478,"line_start":981,"line_end":981,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172483,"byte_end":172507,"line_start":982,"line_end":982,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172512,"byte_end":172555,"line_start":983,"line_end":983,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172560,"byte_end":172563,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172568,"byte_end":172606,"line_start":985,"line_end":985,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172611,"byte_end":172614,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172619,"byte_end":172682,"line_start":987,"line_end":987,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172687,"byte_end":172690,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172695,"byte_end":172765,"line_start":989,"line_end":989,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172770,"byte_end":172779,"line_start":990,"line_end":990,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":172784,"byte_end":172791,"line_start":991,"line_end":991,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3624},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174325,"byte_end":174335,"line_start":1037,"line_end":1037,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173043,"byte_end":173113,"line_start":1001,"line_end":1001,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173118,"byte_end":173121,"line_start":1002,"line_end":1002,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173126,"byte_end":173197,"line_start":1003,"line_end":1003,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173202,"byte_end":173274,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173279,"byte_end":173349,"line_start":1005,"line_end":1005,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173354,"byte_end":173357,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173362,"byte_end":173433,"line_start":1007,"line_end":1007,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be accessed with `TakeUntil::take_result()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173438,"byte_end":173524,"line_start":1008,"line_end":1008,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173529,"byte_end":173596,"line_start":1009,"line_end":1009,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173601,"byte_end":173665,"line_start":1010,"line_end":1010,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173670,"byte_end":173673,"line_start":1011,"line_end":1011,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173678,"byte_end":173692,"line_start":1012,"line_end":1012,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173697,"byte_end":173700,"line_start":1013,"line_end":1013,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173705,"byte_end":173712,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173717,"byte_end":173758,"line_start":1015,"line_end":1015,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173763,"byte_end":173787,"line_start":1016,"line_end":1016,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173792,"byte_end":173835,"line_start":1017,"line_end":1017,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173840,"byte_end":173868,"line_start":1018,"line_end":1018,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173873,"byte_end":173876,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173881,"byte_end":173919,"line_start":1020,"line_end":1020,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173924,"byte_end":173927,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173932,"byte_end":173950,"line_start":1022,"line_end":1022,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":173955,"byte_end":173997,"line_start":1023,"line_end":1023,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174002,"byte_end":174017,"line_start":1024,"line_end":1024,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174022,"byte_end":174041,"line_start":1025,"line_end":1025,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174046,"byte_end":174071,"line_start":1026,"line_end":1026,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174076,"byte_end":174092,"line_start":1027,"line_end":1027,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174097,"byte_end":174124,"line_start":1028,"line_end":1028,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174129,"byte_end":174138,"line_start":1029,"line_end":1029,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174143,"byte_end":174150,"line_start":1030,"line_end":1030,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174155,"byte_end":174158,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174163,"byte_end":174208,"line_start":1032,"line_end":1032,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174213,"byte_end":174216,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174221,"byte_end":174291,"line_start":1034,"line_end":1034,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174296,"byte_end":174305,"line_start":1035,"line_end":1035,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174310,"byte_end":174317,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3626},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175574,"byte_end":175582,"line_start":1078,"line_end":1078,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174516,"byte_end":174587,"line_start":1045,"line_end":1045,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174592,"byte_end":174635,"line_start":1046,"line_end":1046,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174640,"byte_end":174643,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174648,"byte_end":174723,"line_start":1048,"line_end":1048,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174728,"byte_end":174798,"line_start":1049,"line_end":1049,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174803,"byte_end":174841,"line_start":1050,"line_end":1050,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174846,"byte_end":174849,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174854,"byte_end":174929,"line_start":1052,"line_end":1052,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174934,"byte_end":174977,"line_start":1053,"line_end":1053,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174982,"byte_end":174985,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":174990,"byte_end":175063,"line_start":1055,"line_end":1055,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175068,"byte_end":175111,"line_start":1056,"line_end":1056,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175116,"byte_end":175119,"line_start":1057,"line_end":1057,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175124,"byte_end":175138,"line_start":1058,"line_end":1058,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175143,"byte_end":175146,"line_start":1059,"line_end":1059,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175151,"byte_end":175158,"line_start":1060,"line_end":1060,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175163,"byte_end":175204,"line_start":1061,"line_end":1061,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175209,"byte_end":175233,"line_start":1062,"line_end":1062,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175238,"byte_end":175281,"line_start":1063,"line_end":1063,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175286,"byte_end":175289,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175294,"byte_end":175312,"line_start":1065,"line_end":1065,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175317,"byte_end":175320,"line_start":1066,"line_end":1066,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175325,"byte_end":175330,"line_start":1067,"line_end":1067,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175335,"byte_end":175396,"line_start":1068,"line_end":1068,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175401,"byte_end":175423,"line_start":1069,"line_end":1069,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175428,"byte_end":175457,"line_start":1070,"line_end":1070,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175462,"byte_end":175473,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175478,"byte_end":175496,"line_start":1072,"line_end":1072,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175501,"byte_end":175506,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175511,"byte_end":175514,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175519,"byte_end":175540,"line_start":1075,"line_end":1075,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175545,"byte_end":175554,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175559,"byte_end":175566,"line_start":1077,"line_end":1077,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3629},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177744,"byte_end":177763,"line_start":1134,"line_end":1134,"column_start":8,"column_end":27},"name":"for_each_concurrent","qualname":"::stream::stream::StreamExt::for_each_concurrent","value":"fn for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> ForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Item) -> Fut,\nFut: Future<Output = ()>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175801,"byte_end":175872,"line_start":1087,"line_end":1087,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175877,"byte_end":175951,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/ available.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175956,"byte_end":175970,"line_start":1089,"line_end":1089,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175975,"byte_end":175978,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ This is similar to [`StreamExt::for_each`], but the futures","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":175983,"byte_end":176046,"line_start":1091,"line_end":1091,"column_start":5,"column_end":68}},{"value":"/ produced by the closure are run concurrently (but not in parallel--","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176051,"byte_end":176122,"line_start":1092,"line_end":1092,"column_start":5,"column_end":76}},{"value":"/ this combinator does not introduce any threads).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176127,"byte_end":176179,"line_start":1093,"line_end":1093,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176184,"byte_end":176187,"line_start":1094,"line_end":1094,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176192,"byte_end":176267,"line_start":1095,"line_end":1095,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176272,"byte_end":176342,"line_start":1096,"line_end":1096,"column_start":5,"column_end":75}},{"value":"/ concurrently with the other futures produced by the closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176347,"byte_end":176411,"line_start":1097,"line_end":1097,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176416,"byte_end":176419,"line_start":1098,"line_end":1098,"column_start":5,"column_end":8}},{"value":"/ The first argument is an optional limit on the number of concurrent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176424,"byte_end":176495,"line_start":1099,"line_end":1099,"column_start":5,"column_end":76}},{"value":"/ futures. If this limit is not `None`, no more than `limit` futures","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176500,"byte_end":176570,"line_start":1100,"line_end":1100,"column_start":5,"column_end":75}},{"value":"/ will be run concurrently. The `limit` argument is of type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176575,"byte_end":176636,"line_start":1101,"line_end":1101,"column_start":5,"column_end":66}},{"value":"/ `Into<Option<usize>>`, and so can be provided as either `None`,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176641,"byte_end":176708,"line_start":1102,"line_end":1102,"column_start":5,"column_end":72}},{"value":"/ `Some(10)`, or just `10`. Note: a limit of zero is interpreted as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176713,"byte_end":176782,"line_start":1103,"line_end":1103,"column_start":5,"column_end":74}},{"value":"/ no limit at all, and will have the same result as passing in `None`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176787,"byte_end":176859,"line_start":1104,"line_end":1104,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176864,"byte_end":176867,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176872,"byte_end":176947,"line_start":1106,"line_end":1106,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":176952,"byte_end":177009,"line_start":1107,"line_end":1107,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177014,"byte_end":177017,"line_start":1108,"line_end":1108,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177022,"byte_end":177036,"line_start":1109,"line_end":1109,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177041,"byte_end":177044,"line_start":1110,"line_end":1110,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177049,"byte_end":177056,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177061,"byte_end":177102,"line_start":1112,"line_end":1112,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177107,"byte_end":177141,"line_start":1113,"line_end":1113,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177146,"byte_end":177189,"line_start":1114,"line_end":1114,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177194,"byte_end":177197,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177202,"byte_end":177242,"line_start":1116,"line_end":1116,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177247,"byte_end":177287,"line_start":1117,"line_end":1117,"column_start":5,"column_end":45}},{"value":"/ let (tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177292,"byte_end":177332,"line_start":1118,"line_end":1118,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177337,"byte_end":177340,"line_start":1119,"line_end":1119,"column_start":5,"column_end":8}},{"value":"/ let fut = stream::iter(vec![rx1, rx2, rx3]).for_each_concurrent(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177345,"byte_end":177413,"line_start":1120,"line_end":1120,"column_start":5,"column_end":73}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177418,"byte_end":177440,"line_start":1121,"line_end":1121,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177445,"byte_end":177470,"line_start":1122,"line_end":1122,"column_start":5,"column_end":30}},{"value":"/         rx.await.unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177475,"byte_end":177505,"line_start":1123,"line_end":1123,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177510,"byte_end":177519,"line_start":1124,"line_end":1124,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177524,"byte_end":177530,"line_start":1125,"line_end":1125,"column_start":5,"column_end":11}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177535,"byte_end":177561,"line_start":1126,"line_end":1126,"column_start":5,"column_end":31}},{"value":"/ tx2.send(()).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177566,"byte_end":177592,"line_start":1127,"line_end":1127,"column_start":5,"column_end":31}},{"value":"/ tx3.send(()).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177597,"byte_end":177623,"line_start":1128,"line_end":1128,"column_start":5,"column_end":31}},{"value":"/ fut.await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177628,"byte_end":177642,"line_start":1129,"line_end":1129,"column_start":5,"column_end":19}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177647,"byte_end":177655,"line_start":1130,"line_end":1130,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177660,"byte_end":177667,"line_start":1131,"line_end":1131,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177672,"byte_end":177706,"line_start":1132,"line_end":1132,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":177711,"byte_end":177736,"line_start":1133,"line_end":1133,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3633},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178588,"byte_end":178592,"line_start":1163,"line_end":1163,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178080,"byte_end":178151,"line_start":1147,"line_end":1147,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178156,"byte_end":178159,"line_start":1148,"line_end":1148,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178164,"byte_end":178237,"line_start":1149,"line_end":1149,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178242,"byte_end":178277,"line_start":1150,"line_end":1150,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178282,"byte_end":178285,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178290,"byte_end":178304,"line_start":1152,"line_end":1152,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178309,"byte_end":178312,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178317,"byte_end":178324,"line_start":1154,"line_end":1154,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178329,"byte_end":178370,"line_start":1155,"line_end":1155,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178375,"byte_end":178418,"line_start":1156,"line_end":1156,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178423,"byte_end":178426,"line_start":1157,"line_end":1157,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178431,"byte_end":178477,"line_start":1158,"line_end":1158,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178482,"byte_end":178485,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178490,"byte_end":178554,"line_start":1160,"line_end":1160,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178559,"byte_end":178568,"line_start":1161,"line_end":1161,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178573,"byte_end":178580,"line_start":1162,"line_end":1162,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179257,"byte_end":179261,"line_start":1186,"line_end":1186,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178730,"byte_end":178802,"line_start":1170,"line_end":1170,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178807,"byte_end":178810,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178815,"byte_end":178888,"line_start":1172,"line_end":1172,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178893,"byte_end":178939,"line_start":1173,"line_end":1173,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178944,"byte_end":178947,"line_start":1174,"line_end":1174,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178952,"byte_end":178966,"line_start":1175,"line_end":1175,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178971,"byte_end":178974,"line_start":1176,"line_end":1176,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178979,"byte_end":178986,"line_start":1177,"line_end":1177,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":178991,"byte_end":179032,"line_start":1178,"line_end":1178,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179037,"byte_end":179080,"line_start":1179,"line_end":1179,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179085,"byte_end":179088,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179093,"byte_end":179139,"line_start":1181,"line_end":1181,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179144,"byte_end":179147,"line_start":1182,"line_end":1182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179152,"byte_end":179223,"line_start":1183,"line_end":1183,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179228,"byte_end":179237,"line_start":1184,"line_end":1184,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179242,"byte_end":179249,"line_start":1185,"line_end":1185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3635},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180882,"byte_end":180886,"line_start":1232,"line_end":1232,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179399,"byte_end":179470,"line_start":1193,"line_end":1193,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179475,"byte_end":179548,"line_start":1194,"line_end":1194,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179553,"byte_end":179591,"line_start":1195,"line_end":1195,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179596,"byte_end":179599,"line_start":1196,"line_end":1196,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179604,"byte_end":179658,"line_start":1197,"line_end":1197,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179663,"byte_end":179735,"line_start":1198,"line_end":1198,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179740,"byte_end":179816,"line_start":1199,"line_end":1199,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179821,"byte_end":179889,"line_start":1200,"line_end":1200,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179894,"byte_end":179970,"line_start":1201,"line_end":1201,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":179975,"byte_end":179997,"line_start":1202,"line_end":1202,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180002,"byte_end":180005,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180010,"byte_end":180077,"line_start":1204,"line_end":1204,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180082,"byte_end":180150,"line_start":1205,"line_end":1205,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180155,"byte_end":180168,"line_start":1206,"line_end":1206,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180173,"byte_end":180176,"line_start":1207,"line_end":1207,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180181,"byte_end":180195,"line_start":1208,"line_end":1208,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180200,"byte_end":180203,"line_start":1209,"line_end":1209,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180208,"byte_end":180215,"line_start":1210,"line_end":1210,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180220,"byte_end":180263,"line_start":1211,"line_end":1211,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180268,"byte_end":180311,"line_start":1212,"line_end":1212,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180316,"byte_end":180344,"line_start":1213,"line_end":1213,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180349,"byte_end":180352,"line_start":1214,"line_end":1214,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180357,"byte_end":180375,"line_start":1215,"line_end":1215,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180380,"byte_end":180418,"line_start":1216,"line_end":1216,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180423,"byte_end":180438,"line_start":1217,"line_end":1217,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180443,"byte_end":180460,"line_start":1218,"line_end":1218,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180465,"byte_end":180507,"line_start":1219,"line_end":1219,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180512,"byte_end":180547,"line_start":1220,"line_end":1220,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180552,"byte_end":180596,"line_start":1221,"line_end":1221,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180601,"byte_end":180610,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180615,"byte_end":180629,"line_start":1223,"line_end":1223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180634,"byte_end":180637,"line_start":1224,"line_end":1224,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180642,"byte_end":180685,"line_start":1225,"line_end":1225,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180690,"byte_end":180727,"line_start":1226,"line_end":1226,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180732,"byte_end":180769,"line_start":1227,"line_end":1227,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180774,"byte_end":180808,"line_start":1228,"line_end":1228,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180813,"byte_end":180847,"line_start":1229,"line_end":1229,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180852,"byte_end":180862,"line_start":1230,"line_end":1230,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":180867,"byte_end":180874,"line_start":1231,"line_end":1231,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3636},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181815,"byte_end":181821,"line_start":1265,"line_end":1265,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181011,"byte_end":181058,"line_start":1239,"line_end":1239,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181063,"byte_end":181066,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181071,"byte_end":181145,"line_start":1241,"line_end":1241,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181150,"byte_end":181187,"line_start":1242,"line_end":1242,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181192,"byte_end":181195,"line_start":1243,"line_end":1243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181200,"byte_end":181214,"line_start":1244,"line_end":1244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181219,"byte_end":181222,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181227,"byte_end":181234,"line_start":1246,"line_end":1246,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181239,"byte_end":181280,"line_start":1247,"line_end":1247,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181285,"byte_end":181328,"line_start":1248,"line_end":1248,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181333,"byte_end":181336,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181341,"byte_end":181381,"line_start":1250,"line_end":1250,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181386,"byte_end":181389,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181394,"byte_end":181423,"line_start":1252,"line_end":1252,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181428,"byte_end":181456,"line_start":1253,"line_end":1253,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181461,"byte_end":181518,"line_start":1254,"line_end":1254,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181523,"byte_end":181550,"line_start":1255,"line_end":1255,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181555,"byte_end":181578,"line_start":1256,"line_end":1256,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181583,"byte_end":181586,"line_start":1257,"line_end":1257,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181591,"byte_end":181626,"line_start":1258,"line_end":1258,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181631,"byte_end":181659,"line_start":1259,"line_end":1259,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181664,"byte_end":181721,"line_start":1260,"line_end":1260,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181726,"byte_end":181753,"line_start":1261,"line_end":1261,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181758,"byte_end":181781,"line_start":1262,"line_end":1262,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181786,"byte_end":181795,"line_start":1263,"line_end":1263,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":181800,"byte_end":181807,"line_start":1264,"line_end":1264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3637},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183968,"byte_end":183973,"line_start":1322,"line_end":1322,"column_start":8,"column_end":13},"name":"boxed","qualname":"::stream::stream::StreamExt::boxed","value":"fn boxed<'a>(Self) -> BoxStream where Self: Sized + Send + 'a","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183739,"byte_end":183780,"line_start":1317,"line_end":1317,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183785,"byte_end":183788,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183793,"byte_end":183868,"line_start":1319,"line_end":1319,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183873,"byte_end":183930,"line_start":1320,"line_end":1320,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":183935,"byte_end":183960,"line_start":1321,"line_end":1321,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184429,"byte_end":184440,"line_start":1336,"line_end":1336,"column_start":8,"column_end":19},"name":"boxed_local","qualname":"::stream::stream::StreamExt::boxed_local","value":"fn boxed_local<'a>(Self) -> LocalBoxStream where Self: Sized + 'a","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Wrap the stream in a Box, pinning it.","sig":null,"attributes":[{"value":"/ Wrap the stream in a Box, pinning it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184128,"byte_end":184169,"line_start":1329,"line_end":1329,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184174,"byte_end":184177,"line_start":1330,"line_end":1330,"column_start":5,"column_end":8}},{"value":"/ Similar to `boxed`, but without the `Send` requirement.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184182,"byte_end":184241,"line_start":1331,"line_end":1331,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184246,"byte_end":184249,"line_start":1332,"line_end":1332,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184254,"byte_end":184329,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184334,"byte_end":184391,"line_start":1334,"line_end":1334,"column_start":5,"column_end":62}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184396,"byte_end":184421,"line_start":1335,"line_end":1335,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3641},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185333,"byte_end":185341,"line_start":1357,"line_end":1357,"column_start":8,"column_end":16},"name":"buffered","qualname":"::stream::stream::StreamExt::buffered","value":"fn buffered(Self, usize) -> Buffered<Self> where Self::Item: Future,\nSelf: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures.","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184593,"byte_end":184656,"line_start":1343,"line_end":1343,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184661,"byte_end":184664,"line_start":1344,"line_end":1344,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184669,"byte_end":184744,"line_start":1345,"line_end":1345,"column_start":5,"column_end":80}},{"value":"/ will buffer up to at most `n` futures and then return the outputs in the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184749,"byte_end":184825,"line_start":1346,"line_end":1346,"column_start":5,"column_end":81}},{"value":"/ same order as the underlying stream. No more than `n` futures will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184830,"byte_end":184903,"line_start":1347,"line_end":1347,"column_start":5,"column_end":78}},{"value":"/ buffered at any point in time, and less than `n` may also be buffered","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184908,"byte_end":184981,"line_start":1348,"line_end":1348,"column_start":5,"column_end":78}},{"value":"/ depending on the state of each future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":184986,"byte_end":185028,"line_start":1349,"line_end":1349,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185033,"byte_end":185036,"line_start":1350,"line_end":1350,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185041,"byte_end":185106,"line_start":1351,"line_end":1351,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185111,"byte_end":185114,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185119,"byte_end":185194,"line_start":1353,"line_end":1353,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185199,"byte_end":185256,"line_start":1354,"line_end":1354,"column_start":5,"column_end":62}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185261,"byte_end":185295,"line_start":1355,"line_end":1355,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185300,"byte_end":185325,"line_start":1356,"line_end":1356,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3642},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187021,"byte_end":187037,"line_start":1402,"line_end":1402,"column_start":8,"column_end":24},"name":"buffer_unordered","qualname":"::stream::stream::StreamExt::buffer_unordered","value":"fn buffer_unordered(Self, usize) -> BufferUnordered<Self> where\nSelf::Item: Future, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" An adaptor for creating a buffered list of pending futures (unordered).","sig":null,"attributes":[{"value":"/ An adaptor for creating a buffered list of pending futures (unordered).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185535,"byte_end":185610,"line_start":1365,"line_end":1365,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185615,"byte_end":185618,"line_start":1366,"line_end":1366,"column_start":5,"column_end":8}},{"value":"/ If this stream's item can be converted into a future, then this adaptor","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185623,"byte_end":185698,"line_start":1367,"line_end":1367,"column_start":5,"column_end":80}},{"value":"/ will buffer up to `n` futures and then return the outputs in the order","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185703,"byte_end":185777,"line_start":1368,"line_end":1368,"column_start":5,"column_end":79}},{"value":"/ in which they complete. No more than `n` futures will be buffered at","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185782,"byte_end":185854,"line_start":1369,"line_end":1369,"column_start":5,"column_end":77}},{"value":"/ any point in time, and less than `n` may also be buffered depending on","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185859,"byte_end":185933,"line_start":1370,"line_end":1370,"column_start":5,"column_end":79}},{"value":"/ the state of each future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185938,"byte_end":185967,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185972,"byte_end":185975,"line_start":1372,"line_end":1372,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of each future's output.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":185980,"byte_end":186045,"line_start":1373,"line_end":1373,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186050,"byte_end":186053,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186058,"byte_end":186133,"line_start":1375,"line_end":1375,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186138,"byte_end":186195,"line_start":1376,"line_end":1376,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186200,"byte_end":186203,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186208,"byte_end":186222,"line_start":1378,"line_end":1378,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186227,"byte_end":186230,"line_start":1379,"line_end":1379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186235,"byte_end":186242,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186247,"byte_end":186288,"line_start":1381,"line_end":1381,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186293,"byte_end":186327,"line_start":1382,"line_end":1382,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186332,"byte_end":186375,"line_start":1383,"line_end":1383,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186380,"byte_end":186383,"line_start":1384,"line_end":1384,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186388,"byte_end":186438,"line_start":1385,"line_end":1385,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186443,"byte_end":186493,"line_start":1386,"line_end":1386,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186498,"byte_end":186501,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![recv_one, recv_two]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186506,"byte_end":186573,"line_start":1388,"line_end":1388,"column_start":5,"column_end":72}},{"value":"/ let mut buffered = stream_of_futures.buffer_unordered(10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186578,"byte_end":186640,"line_start":1389,"line_end":1389,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186645,"byte_end":186648,"line_start":1390,"line_end":1390,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186653,"byte_end":186678,"line_start":1391,"line_end":1391,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186683,"byte_end":186737,"line_start":1392,"line_end":1392,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186742,"byte_end":186745,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186750,"byte_end":186775,"line_start":1394,"line_end":1394,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186780,"byte_end":186834,"line_start":1395,"line_end":1395,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186839,"byte_end":186842,"line_start":1396,"line_end":1396,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186847,"byte_end":186891,"line_start":1397,"line_end":1397,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186896,"byte_end":186932,"line_start":1398,"line_end":1398,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186937,"byte_end":186944,"line_start":1399,"line_end":1399,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186949,"byte_end":186983,"line_start":1400,"line_end":1400,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":186988,"byte_end":187013,"line_start":1401,"line_end":1401,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187933,"byte_end":187936,"line_start":1432,"line_end":1432,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187245,"byte_end":187293,"line_start":1410,"line_end":1410,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187298,"byte_end":187301,"line_start":1411,"line_end":1411,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187306,"byte_end":187379,"line_start":1412,"line_end":1412,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187384,"byte_end":187456,"line_start":1413,"line_end":1413,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187461,"byte_end":187474,"line_start":1414,"line_end":1414,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187479,"byte_end":187482,"line_start":1415,"line_end":1415,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187487,"byte_end":187501,"line_start":1416,"line_end":1416,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187506,"byte_end":187509,"line_start":1417,"line_end":1417,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187514,"byte_end":187521,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187526,"byte_end":187567,"line_start":1419,"line_end":1419,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187572,"byte_end":187615,"line_start":1420,"line_end":1420,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187620,"byte_end":187623,"line_start":1421,"line_end":1421,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187628,"byte_end":187666,"line_start":1422,"line_end":1422,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187671,"byte_end":187710,"line_start":1423,"line_end":1423,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187715,"byte_end":187718,"line_start":1424,"line_end":1424,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187723,"byte_end":187757,"line_start":1425,"line_end":1425,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187762,"byte_end":187803,"line_start":1426,"line_end":1426,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187808,"byte_end":187836,"line_start":1427,"line_end":1427,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187841,"byte_end":187891,"line_start":1428,"line_end":1428,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187896,"byte_end":187905,"line_start":1429,"line_end":1429,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187910,"byte_end":187917,"line_start":1430,"line_end":1430,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":187922,"byte_end":187925,"line_start":1431,"line_end":1431,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":3645},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188844,"byte_end":188849,"line_start":1463,"line_end":1463,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188117,"byte_end":188154,"line_start":1440,"line_end":1440,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188159,"byte_end":188162,"line_start":1441,"line_end":1441,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188167,"byte_end":188238,"line_start":1442,"line_end":1442,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188243,"byte_end":188319,"line_start":1443,"line_end":1443,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188324,"byte_end":188327,"line_start":1444,"line_end":1444,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188332,"byte_end":188339,"line_start":1445,"line_end":1445,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188344,"byte_end":188385,"line_start":1446,"line_end":1446,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188390,"byte_end":188433,"line_start":1447,"line_end":1447,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188438,"byte_end":188441,"line_start":1448,"line_end":1448,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188446,"byte_end":188503,"line_start":1449,"line_end":1449,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188508,"byte_end":188564,"line_start":1450,"line_end":1450,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188569,"byte_end":188572,"line_start":1451,"line_end":1451,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188577,"byte_end":188617,"line_start":1452,"line_end":1452,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188622,"byte_end":188625,"line_start":1453,"line_end":1453,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188630,"byte_end":188678,"line_start":1454,"line_end":1454,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188683,"byte_end":188711,"line_start":1455,"line_end":1455,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188716,"byte_end":188731,"line_start":1456,"line_end":1456,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188736,"byte_end":188755,"line_start":1457,"line_end":1457,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188760,"byte_end":188778,"line_start":1458,"line_end":1458,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188783,"byte_end":188798,"line_start":1459,"line_end":1459,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188803,"byte_end":188810,"line_start":1460,"line_end":1460,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188815,"byte_end":188824,"line_start":1461,"line_end":1461,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":188829,"byte_end":188836,"line_start":1462,"line_end":1462,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3647},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189187,"byte_end":189195,"line_start":1474,"line_end":1474,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189041,"byte_end":189096,"line_start":1471,"line_end":1471,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189101,"byte_end":189104,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189109,"byte_end":189179,"line_start":1473,"line_end":1473,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190230,"byte_end":190236,"line_start":1500,"line_end":1500,"column_start":8,"column_end":14},"name":"chunks","qualname":"::stream::stream::StreamExt::chunks","value":"fn chunks(Self, usize) -> Chunks<Self> where Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" An adaptor for chunking up items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up items of the stream inside a vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189328,"byte_end":189395,"line_start":1481,"line_end":1481,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189400,"byte_end":189403,"line_start":1482,"line_end":1482,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull items from this stream and buffer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189408,"byte_end":189482,"line_start":1483,"line_end":1483,"column_start":5,"column_end":79}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189487,"byte_end":189559,"line_start":1484,"line_end":1484,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189564,"byte_end":189616,"line_start":1485,"line_end":1485,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189621,"byte_end":189624,"line_start":1486,"line_end":1486,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189629,"byte_end":189702,"line_start":1487,"line_end":1487,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189707,"byte_end":189781,"line_start":1488,"line_end":1488,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189786,"byte_end":189861,"line_start":1489,"line_end":1489,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189866,"byte_end":189938,"line_start":1490,"line_end":1490,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189943,"byte_end":189955,"line_start":1491,"line_end":1491,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189960,"byte_end":189963,"line_start":1492,"line_end":1492,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":189968,"byte_end":190043,"line_start":1493,"line_end":1493,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190048,"byte_end":190105,"line_start":1494,"line_end":1494,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190110,"byte_end":190113,"line_start":1495,"line_end":1495,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190118,"byte_end":190130,"line_start":1496,"line_end":1496,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190135,"byte_end":190138,"line_start":1497,"line_end":1497,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190143,"byte_end":190192,"line_start":1498,"line_end":1498,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190197,"byte_end":190222,"line_start":1499,"line_end":1499,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3649},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191333,"byte_end":191345,"line_start":1526,"line_end":1526,"column_start":8,"column_end":20},"name":"ready_chunks","qualname":"::stream::stream::StreamExt::ready_chunks","value":"fn ready_chunks(Self, usize) -> ReadyChunks<Self> where Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" An adaptor for chunking up ready items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up ready items of the stream inside a vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190397,"byte_end":190470,"line_start":1507,"line_end":1507,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190475,"byte_end":190478,"line_start":1508,"line_end":1508,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull ready items from this stream and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190483,"byte_end":190556,"line_start":1509,"line_end":1509,"column_start":5,"column_end":78}},{"value":"/ buffer them into a local vector. At most `capacity` items will get","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190561,"byte_end":190631,"line_start":1510,"line_end":1510,"column_start":5,"column_end":75}},{"value":"/ buffered before they're yielded from the returned stream. If underlying","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190636,"byte_end":190711,"line_start":1511,"line_end":1511,"column_start":5,"column_end":80}},{"value":"/ stream returns `Poll::Pending`, and collected chunk is not empty, it will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190716,"byte_end":190793,"line_start":1512,"line_end":1512,"column_start":5,"column_end":82}},{"value":"/ be immediately returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190798,"byte_end":190826,"line_start":1513,"line_end":1513,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190831,"byte_end":190834,"line_start":1514,"line_end":1514,"column_start":5,"column_end":8}},{"value":"/ If the underlying stream ended and only a partial vector was created,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190839,"byte_end":190912,"line_start":1515,"line_end":1515,"column_start":5,"column_end":78}},{"value":"/ it'll be returned. Additionally if an error happens from the underlying","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190917,"byte_end":190992,"line_start":1516,"line_end":1516,"column_start":5,"column_end":80}},{"value":"/ stream then the currently buffered items will be yielded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":190997,"byte_end":191058,"line_start":1517,"line_end":1517,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191063,"byte_end":191066,"line_start":1518,"line_end":1518,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191071,"byte_end":191146,"line_start":1519,"line_end":1519,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191151,"byte_end":191208,"line_start":1520,"line_end":1520,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191213,"byte_end":191216,"line_start":1521,"line_end":1521,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191221,"byte_end":191233,"line_start":1522,"line_end":1522,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191238,"byte_end":191241,"line_start":1523,"line_end":1523,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191246,"byte_end":191295,"line_start":1524,"line_end":1524,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":191300,"byte_end":191325,"line_start":1525,"line_end":1525,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":3650},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194142,"byte_end":194149,"line_start":1586,"line_end":1586,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) -> (),\nSelf: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193839,"byte_end":193912,"line_start":1581,"line_end":1581,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193917,"byte_end":193920,"line_start":1582,"line_end":1582,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193925,"byte_end":193994,"line_start":1583,"line_end":1583,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":193999,"byte_end":194068,"line_start":1584,"line_end":1584,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194073,"byte_end":194134,"line_start":1585,"line_end":1585,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":3652},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194605,"byte_end":194616,"line_start":1599,"line_end":1599,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item = Self::Item>,\nSelf: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194326,"byte_end":194401,"line_start":1594,"line_end":1594,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194406,"byte_end":194427,"line_start":1595,"line_end":1595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194432,"byte_end":194435,"line_start":1596,"line_end":1596,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194440,"byte_end":194520,"line_start":1597,"line_end":1597,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194525,"byte_end":194597,"line_start":1598,"line_end":1598,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3654},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195069,"byte_end":195081,"line_start":1612,"line_end":1612,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194790,"byte_end":194866,"line_start":1607,"line_end":1607,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194871,"byte_end":194892,"line_start":1608,"line_end":1608,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194897,"byte_end":194900,"line_start":1609,"line_end":1609,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194905,"byte_end":194984,"line_start":1610,"line_end":1610,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":194989,"byte_end":195061,"line_start":1611,"line_end":1611,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3656},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195357,"byte_end":195372,"line_start":1622,"line_end":1622,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>> where\nSelf: Unpin","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195256,"byte_end":195327,"line_start":1620,"line_end":1620,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195332,"byte_end":195349,"line_start":1621,"line_end":1621,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197516,"byte_end":197532,"line_start":1679,"line_end":1679,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"fn select_next_some(&mut Self) -> SelectNextSome<, Self> where Self: Unpin +\nFusedStream","parent":{"krate":0,"index":3566},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195519,"byte_end":195594,"line_start":1629,"line_end":1629,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195599,"byte_end":195609,"line_start":1630,"line_end":1630,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195614,"byte_end":195617,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195622,"byte_end":195695,"line_start":1632,"line_end":1632,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195700,"byte_end":195768,"line_start":1633,"line_end":1633,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195773,"byte_end":195821,"line_start":1634,"line_end":1634,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195826,"byte_end":195901,"line_start":1635,"line_end":1635,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195906,"byte_end":195982,"line_start":1636,"line_end":1636,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":195987,"byte_end":196013,"line_start":1637,"line_end":1637,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196018,"byte_end":196021,"line_start":1638,"line_end":1638,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196026,"byte_end":196099,"line_start":1639,"line_end":1639,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196104,"byte_end":196174,"line_start":1640,"line_end":1640,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196179,"byte_end":196219,"line_start":1641,"line_end":1641,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196224,"byte_end":196227,"line_start":1642,"line_end":1642,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196232,"byte_end":196286,"line_start":1643,"line_end":1643,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196291,"byte_end":196375,"line_start":1644,"line_end":1644,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196380,"byte_end":196383,"line_start":1645,"line_end":1645,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196388,"byte_end":196402,"line_start":1646,"line_end":1646,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196407,"byte_end":196410,"line_start":1647,"line_end":1647,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196415,"byte_end":196422,"line_start":1648,"line_end":1648,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196427,"byte_end":196468,"line_start":1649,"line_end":1649,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196473,"byte_end":196507,"line_start":1650,"line_end":1650,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196512,"byte_end":196567,"line_start":1651,"line_end":1651,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196572,"byte_end":196575,"line_start":1652,"line_end":1652,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196580,"byte_end":196615,"line_start":1653,"line_end":1653,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196620,"byte_end":196670,"line_start":1654,"line_end":1654,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196675,"byte_end":196697,"line_start":1655,"line_end":1655,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196702,"byte_end":196712,"line_start":1656,"line_end":1656,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196717,"byte_end":196734,"line_start":1657,"line_end":1657,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196739,"byte_end":196765,"line_start":1658,"line_end":1658,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196770,"byte_end":196825,"line_start":1659,"line_end":1659,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196830,"byte_end":196859,"line_start":1660,"line_end":1660,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196864,"byte_end":196927,"line_start":1661,"line_end":1661,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196932,"byte_end":196978,"line_start":1662,"line_end":1662,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":196983,"byte_end":196997,"line_start":1663,"line_end":1663,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197002,"byte_end":197071,"line_start":1664,"line_end":1664,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197076,"byte_end":197101,"line_start":1665,"line_end":1665,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197106,"byte_end":197159,"line_start":1666,"line_end":1666,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197164,"byte_end":197193,"line_start":1667,"line_end":1667,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197198,"byte_end":197211,"line_start":1668,"line_end":1668,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197216,"byte_end":197286,"line_start":1669,"line_end":1669,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197291,"byte_end":197350,"line_start":1670,"line_end":1670,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197355,"byte_end":197385,"line_start":1671,"line_end":1671,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197390,"byte_end":197399,"line_start":1672,"line_end":1672,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197404,"byte_end":197409,"line_start":1673,"line_end":1673,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197414,"byte_end":197439,"line_start":1674,"line_end":1674,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197444,"byte_end":197453,"line_start":1675,"line_end":1675,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197458,"byte_end":197465,"line_start":1676,"line_end":1676,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197470,"byte_end":197473,"line_start":1677,"line_end":1677,"column_start":5,"column_end":8}},{"value":"/ [`select!`]: crate::select","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":197478,"byte_end":197508,"line_start":1678,"line_end":1678,"column_start":5,"column_end":35}}]},{"kind":"Struct","id":{"krate":0,"index":11205},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":347622,"byte_end":347629,"line_start":14,"line_end":14,"column_start":16,"column_end":23},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":11209},{"krate":0,"index":11210},{"krate":0,"index":11211}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3877},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":347854,"byte_end":347857,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<AndThen<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3888},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":348533,"byte_end":348542,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3889},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":349109,"byte_end":349118,"line_start":73,"line_end":73,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<AndThen<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3894},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":349645,"byte_end":349658,"line_start":91,"line_end":91,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<AndThen<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11269},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":309744,"byte_end":309751,"line_start":30,"line_end":30,"column_start":5,"column_end":12},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":11272}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11338},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":309999,"byte_end":310008,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":11341}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11407},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":310309,"byte_end":310319,"line_start":44,"line_end":44,"column_start":5,"column_end":15},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":11410}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11473},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350364,"byte_end":350374,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":11475}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3927},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350661,"byte_end":350674,"line_start":28,"line_end":28,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<IntoStream<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3931},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350850,"byte_end":350859,"line_start":37,"line_end":37,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<IntoStream<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350833,"byte_end":350842,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3932},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350996,"byte_end":351005,"line_start":41,"line_end":41,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoStream<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11516},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":310745,"byte_end":310750,"line_start":55,"line_end":55,"column_start":5,"column_end":10},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":11519}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11585},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":311027,"byte_end":311033,"line_start":62,"line_end":62,"column_start":5,"column_end":11},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":11588}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n\"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":11651},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":351722,"byte_end":351728,"line_start":14,"line_end":14,"column_start":16,"column_end":22},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":11655},{"krate":0,"index":11656},{"krate":0,"index":11657}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":3973},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":351952,"byte_end":351955,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OrElse<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3984},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":352622,"byte_end":352631,"line_start":57,"line_end":57,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3985},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":353335,"byte_end":353344,"line_start":77,"line_end":77,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<OrElse<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3990},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":353867,"byte_end":353880,"line_start":95,"line_end":95,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<OrElse<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11712},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354557,"byte_end":354564,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":11715}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354390,"byte_end":354460,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354478,"byte_end":354545,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":4030},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354901,"byte_end":354914,"line_start":23,"line_end":23,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryNext as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4034},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":355104,"byte_end":355108,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryNext as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11720},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":355649,"byte_end":355659,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":11724},{"krate":0,"index":11725},{"krate":0,"index":11726}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4072},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":355887,"byte_end":355890,"line_start":26,"line_end":26,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEach<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4083},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":356545,"byte_end":356549,"line_start":53,"line_end":53,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEach<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11777},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":357545,"byte_end":357554,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":11781},{"krate":0,"index":11782},{"krate":0,"index":11783},{"krate":0,"index":11784}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4124},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":357892,"byte_end":357895,"line_start":33,"line_end":33,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilter<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4134},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":358567,"byte_end":358580,"line_start":59,"line_end":59,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilter<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4140},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":358863,"byte_end":358872,"line_start":72,"line_end":72,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4141},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":359611,"byte_end":359620,"line_start":92,"line_end":92,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilter<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11842},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":360682,"byte_end":360694,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":11846},{"krate":0,"index":11847},{"krate":0,"index":11848}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4182},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":360925,"byte_end":360928,"line_start":29,"line_end":29,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFilterMap<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4193},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":361522,"byte_end":361535,"line_start":51,"line_end":51,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFilterMap<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4200},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":361837,"byte_end":361846,"line_start":64,"line_end":64,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4201},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":362686,"byte_end":362695,"line_start":86,"line_end":86,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryFilterMap<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11903},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":363692,"byte_end":363702,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":11905},{"krate":0,"index":11906}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4237},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":364256,"byte_end":364269,"line_start":43,"line_end":43,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFlatten<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4241},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":364580,"byte_end":364589,"line_start":56,"line_end":56,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryFlatten<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11947},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":365880,"byte_end":365890,"line_start":13,"line_end":13,"column_start":16,"column_end":26},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":11950},{"krate":0,"index":11951}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4286},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":366243,"byte_end":366256,"line_start":31,"line_end":31,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryCollect<St, C> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4291},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":366468,"byte_end":366472,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryCollect<St, C> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11996},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":367216,"byte_end":367225,"line_start":12,"line_end":12,"column_start":16,"column_end":25},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":11998},{"krate":0,"index":11999}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4324},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":367726,"byte_end":367730,"line_start":36,"line_end":36,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryConcat<St> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12036},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":368736,"byte_end":368745,"line_start":17,"line_end":17,"column_start":16,"column_end":25},"name":"TryChunks","qualname":"::stream::try_stream::try_chunks::TryChunks","value":"TryChunks {  }","parent":null,"children":[{"krate":0,"index":12038},{"krate":0,"index":12039},{"krate":0,"index":12040}],"decl_id":null,"docs":" Stream for the [`try_chunks`](super::TryStreamExt::try_chunks) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4382},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":369586,"byte_end":369595,"line_start":48,"line_end":48,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryChunks<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":370973,"byte_end":370982,"line_start":83,"line_end":83,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryChunks<St> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4386},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":371424,"byte_end":371437,"line_start":96,"line_end":96,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryChunks<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12084},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":371989,"byte_end":372003,"line_start":116,"line_end":116,"column_start":12,"column_end":26},"name":"TryChunksError","qualname":"::stream::try_stream::try_chunks::TryChunksError","value":"","parent":null,"children":[],"decl_id":null,"docs":" Error indicating, that while chunk was collected inner stream produced an error.","sig":null,"attributes":[{"value":"/ Error indicating, that while chunk was collected inner stream produced an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":371766,"byte_end":371850,"line_start":112,"line_end":112,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":371851,"byte_end":371854,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ Contains all items that were collected before an error occurred, and the stream error itself.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":371855,"byte_end":371952,"line_start":114,"line_end":114,"column_start":1,"column_end":98}}]},{"kind":"Field","id":{"krate":0,"index":12088},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":372010,"byte_end":372020,"line_start":116,"line_end":116,"column_start":33,"column_end":43},"name":"0","qualname":"::stream::try_stream::try_chunks::TryChunksError::0","value":"alloc::vec::Vec<T>","parent":{"krate":0,"index":12084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12089},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":372022,"byte_end":372027,"line_start":116,"line_end":116,"column_start":45,"column_end":50},"name":"1","qualname":"::stream::try_stream::try_chunks::TryChunksError::1","value":"E","parent":{"krate":0,"index":12084},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4390},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":372099,"byte_end":372102,"line_start":119,"line_end":119,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4394},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":372258,"byte_end":372261,"line_start":125,"line_end":125,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryChunksError<T, E> as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9907},"children":[],"decl_id":{"krate":1,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12105},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":372865,"byte_end":372872,"line_start":12,"line_end":12,"column_start":16,"column_end":23},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":12110},{"krate":0,"index":12111},{"krate":0,"index":12112},{"krate":0,"index":12113}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4440},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373151,"byte_end":373154,"line_start":28,"line_end":28,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFold<St, Fut, T, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4452},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373842,"byte_end":373855,"line_start":54,"line_end":54,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryFold<St, Fut, T, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4459},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":374144,"byte_end":374148,"line_start":67,"line_end":67,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryFold<St, Fut, T, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4492},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377320,"byte_end":377330,"line_start":59,"line_end":59,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where F: FnMut(T)\n-> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375463,"byte_end":375539,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375540,"byte_end":375543,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375544,"byte_end":375620,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375621,"byte_end":375691,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375692,"byte_end":375751,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375752,"byte_end":375755,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375756,"byte_end":375834,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375835,"byte_end":375912,"line_start":17,"line_end":17,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375913,"byte_end":375977,"line_start":18,"line_end":18,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375978,"byte_end":375981,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":375982,"byte_end":376054,"line_start":20,"line_end":20,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376055,"byte_end":376133,"line_start":21,"line_end":21,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376134,"byte_end":376163,"line_start":22,"line_end":22,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376164,"byte_end":376167,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376168,"byte_end":376245,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376246,"byte_end":376310,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376311,"byte_end":376363,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376364,"byte_end":376367,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376368,"byte_end":376445,"line_start":28,"line_end":28,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376446,"byte_end":376518,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376519,"byte_end":376588,"line_start":30,"line_end":30,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376589,"byte_end":376667,"line_start":31,"line_end":31,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376668,"byte_end":376671,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376672,"byte_end":376685,"line_start":33,"line_end":33,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376686,"byte_end":376689,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376690,"byte_end":376697,"line_start":35,"line_end":35,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376698,"byte_end":376731,"line_start":36,"line_end":36,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376732,"byte_end":376755,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376756,"byte_end":376797,"line_start":38,"line_end":38,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376798,"byte_end":376844,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376845,"byte_end":376848,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376849,"byte_end":376908,"line_start":41,"line_end":41,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376909,"byte_end":376931,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376932,"byte_end":376966,"line_start":43,"line_end":43,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376967,"byte_end":376976,"line_start":44,"line_end":44,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376977,"byte_end":376980,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":376981,"byte_end":377004,"line_start":46,"line_end":46,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377005,"byte_end":377044,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377045,"byte_end":377081,"line_start":48,"line_end":48,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377082,"byte_end":377125,"line_start":49,"line_end":49,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377126,"byte_end":377142,"line_start":50,"line_end":50,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377143,"byte_end":377163,"line_start":51,"line_end":51,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377164,"byte_end":377173,"line_start":52,"line_end":52,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377174,"byte_end":377181,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377182,"byte_end":377185,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377186,"byte_end":377251,"line_start":55,"line_end":55,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377252,"byte_end":377294,"line_start":56,"line_end":56,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377295,"byte_end":377304,"line_start":57,"line_end":57,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377305,"byte_end":377312,"line_start":58,"line_end":58,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12174},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377693,"byte_end":377702,"line_start":70,"line_end":70,"column_start":16,"column_end":25},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":12178},{"krate":0,"index":12179},{"krate":0,"index":12180}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4501},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377913,"byte_end":377916,"line_start":83,"line_end":83,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryUnfold<T, F, Fut> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4508},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":378255,"byte_end":378264,"line_start":95,"line_end":95,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryUnfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12231},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":379610,"byte_end":379622,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":12235},{"krate":0,"index":12236},{"krate":0,"index":12237},{"krate":0,"index":12238},{"krate":0,"index":12239}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4553},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":379980,"byte_end":379983,"line_start":32,"line_end":32,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TrySkipWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":380866,"byte_end":380875,"line_start":63,"line_end":63,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":381791,"byte_end":381800,"line_start":89,"line_end":89,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4570},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":382340,"byte_end":382353,"line_start":106,"line_end":106,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TrySkipWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12300},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":383159,"byte_end":383171,"line_start":15,"line_end":15,"column_start":16,"column_end":28},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":12304},{"krate":0,"index":12305},{"krate":0,"index":12306},{"krate":0,"index":12307},{"krate":0,"index":12308}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4611},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":383544,"byte_end":383547,"line_start":35,"line_end":35,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryTakeWhile<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4622},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":384424,"byte_end":384433,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4623},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":385383,"byte_end":385392,"line_start":94,"line_end":94,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4628},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":386006,"byte_end":386019,"line_start":115,"line_end":115,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryTakeWhile<St, Fut, F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12369},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":386940,"byte_end":386958,"line_start":16,"line_end":16,"column_start":16,"column_end":34},"name":"TryBufferUnordered","qualname":"::stream::try_stream::try_buffer_unordered::TryBufferUnordered","value":"TryBufferUnordered {  }","parent":null,"children":[{"krate":0,"index":12371},{"krate":0,"index":12372},{"krate":0,"index":12373}],"decl_id":null,"docs":" Stream for the\n [`try_buffer_unordered`](super::TryStreamExt::try_buffer_unordered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4682},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":387672,"byte_end":387681,"line_start":49,"line_end":49,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBufferUnordered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12417},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":389498,"byte_end":389509,"line_start":15,"line_end":15,"column_start":16,"column_end":27},"name":"TryBuffered","qualname":"::stream::try_stream::try_buffered::TryBuffered","value":"TryBuffered {  }","parent":null,"children":[{"krate":0,"index":12419},{"krate":0,"index":12420},{"krate":0,"index":12421}],"decl_id":null,"docs":" Stream for the [`try_buffered`](super::TryStreamExt::try_buffered) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4736},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":390237,"byte_end":390246,"line_start":50,"line_end":50,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<TryBuffered<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12465},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":392046,"byte_end":392066,"line_start":16,"line_end":16,"column_start":16,"column_end":36},"name":"TryForEachConcurrent","qualname":"::stream::try_stream::try_for_each_concurrent::TryForEachConcurrent","value":"TryForEachConcurrent {  }","parent":null,"children":[{"krate":0,"index":12469},{"krate":0,"index":12470},{"krate":0,"index":12471},{"krate":0,"index":12472}],"decl_id":null,"docs":" Future for the\n [`try_for_each_concurrent`](super::TryStreamExt::try_for_each_concurrent)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":4784},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":392345,"byte_end":392348,"line_start":30,"line_end":30,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryForEachConcurrent<St, Fut, F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4789},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":392786,"byte_end":392799,"line_start":45,"line_end":45,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::FusedFuture>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":27},"children":[],"decl_id":{"krate":5,"index":28},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4800},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":393555,"byte_end":393559,"line_start":75,"line_end":75,"column_start":8,"column_end":12},"name":"poll","qualname":"<TryForEachConcurrent<St, Fut, F> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":4807},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314242,"byte_end":314254,"line_start":157,"line_end":157,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":4808},{"krate":0,"index":4810},{"krate":0,"index":4813},{"krate":0,"index":4816},{"krate":0,"index":4819},{"krate":0,"index":4822},{"krate":0,"index":4824},{"krate":0,"index":4826},{"krate":0,"index":4827},{"krate":0,"index":4828},{"krate":0,"index":4831},{"krate":0,"index":4834},{"krate":0,"index":4837},{"krate":0,"index":4841},{"krate":0,"index":4843},{"krate":0,"index":4844},{"krate":0,"index":4847},{"krate":0,"index":4851},{"krate":0,"index":4852},{"krate":0,"index":4856},{"krate":0,"index":4857},{"krate":0,"index":4858},{"krate":0,"index":4859}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314180,"byte_end":314231,"line_start":156,"line_end":156,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":4808},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314796,"byte_end":314804,"line_start":175,"line_end":175,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314272,"byte_end":314346,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314351,"byte_end":314377,"line_start":159,"line_end":159,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314382,"byte_end":314385,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314390,"byte_end":314404,"line_start":161,"line_end":161,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314409,"byte_end":314412,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314417,"byte_end":314424,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314429,"byte_end":314470,"line_start":164,"line_end":164,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314475,"byte_end":314521,"line_start":165,"line_end":165,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314526,"byte_end":314529,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314534,"byte_end":314554,"line_start":167,"line_end":167,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314559,"byte_end":314604,"line_start":168,"line_end":168,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314609,"byte_end":314640,"line_start":169,"line_end":169,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314645,"byte_end":314648,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314653,"byte_end":314707,"line_start":171,"line_end":171,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314712,"byte_end":314763,"line_start":172,"line_end":172,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314768,"byte_end":314776,"line_start":173,"line_end":173,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314781,"byte_end":314788,"line_start":174,"line_end":174,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4810},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315500,"byte_end":315506,"line_start":200,"line_end":200,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314980,"byte_end":315053,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315058,"byte_end":315089,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315094,"byte_end":315097,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315102,"byte_end":315116,"line_start":186,"line_end":186,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315121,"byte_end":315124,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315129,"byte_end":315136,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315141,"byte_end":315182,"line_start":189,"line_end":189,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315187,"byte_end":315233,"line_start":190,"line_end":190,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315238,"byte_end":315241,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315246,"byte_end":315266,"line_start":192,"line_end":192,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315271,"byte_end":315312,"line_start":193,"line_end":193,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315317,"byte_end":315348,"line_start":194,"line_end":194,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315353,"byte_end":315356,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315361,"byte_end":315414,"line_start":196,"line_end":196,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315419,"byte_end":315467,"line_start":197,"line_end":197,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315472,"byte_end":315480,"line_start":198,"line_end":198,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315485,"byte_end":315492,"line_start":199,"line_end":199,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4813},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316215,"byte_end":316222,"line_start":225,"line_end":225,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315696,"byte_end":315767,"line_start":208,"line_end":208,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315772,"byte_end":315803,"line_start":209,"line_end":209,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315808,"byte_end":315811,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315816,"byte_end":315830,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315835,"byte_end":315838,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315843,"byte_end":315850,"line_start":213,"line_end":213,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315855,"byte_end":315896,"line_start":214,"line_end":214,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315901,"byte_end":315947,"line_start":215,"line_end":215,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315952,"byte_end":315955,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315960,"byte_end":315980,"line_start":217,"line_end":217,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":315985,"byte_end":316026,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316031,"byte_end":316063,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316068,"byte_end":316071,"line_start":220,"line_end":220,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316076,"byte_end":316129,"line_start":221,"line_end":221,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316134,"byte_end":316182,"line_start":222,"line_end":222,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316187,"byte_end":316195,"line_start":223,"line_end":223,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316200,"byte_end":316207,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4816},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317827,"byte_end":317835,"line_start":271,"line_end":271,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where F: FnMut(Self::Ok)\n-> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316414,"byte_end":316490,"line_start":233,"line_end":233,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316495,"byte_end":316535,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316540,"byte_end":316543,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316548,"byte_end":316624,"line_start":236,"line_end":236,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316629,"byte_end":316705,"line_start":237,"line_end":237,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316710,"byte_end":316783,"line_start":238,"line_end":238,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316788,"byte_end":316830,"line_start":239,"line_end":239,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316835,"byte_end":316838,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316843,"byte_end":316916,"line_start":241,"line_end":241,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316921,"byte_end":316952,"line_start":242,"line_end":242,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316957,"byte_end":316960,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":316965,"byte_end":317039,"line_start":244,"line_end":244,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317044,"byte_end":317118,"line_start":245,"line_end":245,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317123,"byte_end":317139,"line_start":246,"line_end":246,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317144,"byte_end":317147,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317152,"byte_end":317223,"line_start":248,"line_end":248,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317228,"byte_end":317254,"line_start":249,"line_end":249,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317259,"byte_end":317262,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317267,"byte_end":317339,"line_start":251,"line_end":251,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317344,"byte_end":317393,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317398,"byte_end":317401,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317406,"byte_end":317420,"line_start":254,"line_end":254,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317425,"byte_end":317428,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317433,"byte_end":317440,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317445,"byte_end":317476,"line_start":257,"line_end":257,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317481,"byte_end":317505,"line_start":258,"line_end":258,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317510,"byte_end":317548,"line_start":259,"line_end":259,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317553,"byte_end":317556,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317561,"byte_end":317617,"line_start":261,"line_end":261,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317622,"byte_end":317625,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317630,"byte_end":317665,"line_start":263,"line_end":263,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317670,"byte_end":317709,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317714,"byte_end":317738,"line_start":265,"line_end":265,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317743,"byte_end":317759,"line_start":266,"line_end":266,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317764,"byte_end":317780,"line_start":267,"line_end":267,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317785,"byte_end":317795,"line_start":268,"line_end":268,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317800,"byte_end":317807,"line_start":269,"line_end":269,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":317812,"byte_end":317819,"line_start":270,"line_end":270,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4819},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318987,"byte_end":318994,"line_start":297,"line_end":297,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318088,"byte_end":318153,"line_start":280,"line_end":280,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318158,"byte_end":318207,"line_start":281,"line_end":281,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318212,"byte_end":318215,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318220,"byte_end":318299,"line_start":283,"line_end":283,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318304,"byte_end":318378,"line_start":284,"line_end":284,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318383,"byte_end":318459,"line_start":285,"line_end":285,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318464,"byte_end":318509,"line_start":286,"line_end":286,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318514,"byte_end":318517,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318522,"byte_end":318597,"line_start":288,"line_end":288,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318602,"byte_end":318642,"line_start":289,"line_end":289,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318647,"byte_end":318650,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318655,"byte_end":318764,"line_start":291,"line_end":291,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318769,"byte_end":318843,"line_start":292,"line_end":292,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318848,"byte_end":318864,"line_start":293,"line_end":293,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318869,"byte_end":318872,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318877,"byte_end":318948,"line_start":295,"line_end":295,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":318953,"byte_end":318979,"line_start":296,"line_end":296,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":4822},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319546,"byte_end":319556,"line_start":312,"line_end":312,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok) ->\n(), Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319243,"byte_end":319317,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319322,"byte_end":319332,"line_start":307,"line_end":307,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319337,"byte_end":319340,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319345,"byte_end":319415,"line_start":309,"line_end":309,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319420,"byte_end":319496,"line_start":310,"line_end":310,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319501,"byte_end":319538,"line_start":311,"line_end":311,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4824},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320045,"byte_end":320056,"line_start":325,"line_end":325,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where F: FnMut(&Self::Error)\n-> (), Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319754,"byte_end":319833,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319838,"byte_end":319841,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319846,"byte_end":319916,"line_start":322,"line_end":322,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":319921,"byte_end":319995,"line_start":323,"line_end":323,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320000,"byte_end":320037,"line_start":324,"line_end":324,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":4826},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320977,"byte_end":320988,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320259,"byte_end":320312,"line_start":333,"line_end":333,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320317,"byte_end":320361,"line_start":334,"line_end":334,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320366,"byte_end":320369,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320374,"byte_end":320423,"line_start":336,"line_end":336,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320428,"byte_end":320501,"line_start":337,"line_end":337,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320506,"byte_end":320526,"line_start":338,"line_end":338,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320531,"byte_end":320534,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320539,"byte_end":320553,"line_start":340,"line_end":340,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320558,"byte_end":320561,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320566,"byte_end":320573,"line_start":342,"line_end":342,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320578,"byte_end":320637,"line_start":343,"line_end":343,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320642,"byte_end":320645,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320650,"byte_end":320669,"line_start":345,"line_end":345,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320674,"byte_end":320692,"line_start":346,"line_end":346,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320697,"byte_end":320769,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320774,"byte_end":320804,"line_start":348,"line_end":348,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320809,"byte_end":320816,"line_start":349,"line_end":349,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320821,"byte_end":320895,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320900,"byte_end":320903,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320908,"byte_end":320957,"line_start":352,"line_end":352,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":320962,"byte_end":320969,"line_start":353,"line_end":353,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4827},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321883,"byte_end":321891,"line_start":381,"line_end":381,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321144,"byte_end":321218,"line_start":361,"line_end":361,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321223,"byte_end":321297,"line_start":362,"line_end":362,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321302,"byte_end":321314,"line_start":363,"line_end":363,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321319,"byte_end":321322,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321327,"byte_end":321394,"line_start":365,"line_end":365,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321399,"byte_end":321471,"line_start":366,"line_end":366,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321476,"byte_end":321515,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321520,"byte_end":321523,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321528,"byte_end":321542,"line_start":369,"line_end":369,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321547,"byte_end":321550,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321555,"byte_end":321562,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321567,"byte_end":321608,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321613,"byte_end":321659,"line_start":373,"line_end":373,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321664,"byte_end":321667,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321672,"byte_end":321729,"line_start":375,"line_end":375,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321734,"byte_end":321737,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321742,"byte_end":321796,"line_start":377,"line_end":377,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321801,"byte_end":321850,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321855,"byte_end":321863,"line_start":379,"line_end":379,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":321868,"byte_end":321875,"line_start":380,"line_end":380,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4828},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323243,"byte_end":323255,"line_start":421,"line_end":421,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322058,"byte_end":322127,"line_start":388,"line_end":388,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322132,"byte_end":322188,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322193,"byte_end":322196,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322201,"byte_end":322276,"line_start":391,"line_end":391,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322281,"byte_end":322351,"line_start":392,"line_end":392,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322356,"byte_end":322394,"line_start":393,"line_end":393,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322399,"byte_end":322402,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322407,"byte_end":322485,"line_start":395,"line_end":395,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322490,"byte_end":322550,"line_start":396,"line_end":396,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322555,"byte_end":322612,"line_start":397,"line_end":397,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322617,"byte_end":322684,"line_start":398,"line_end":398,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322689,"byte_end":322719,"line_start":399,"line_end":399,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322724,"byte_end":322727,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322732,"byte_end":322746,"line_start":401,"line_end":401,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322751,"byte_end":322754,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322759,"byte_end":322766,"line_start":403,"line_end":403,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322771,"byte_end":322812,"line_start":404,"line_end":404,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322817,"byte_end":322841,"line_start":405,"line_end":405,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322846,"byte_end":322892,"line_start":406,"line_end":406,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322897,"byte_end":322900,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322905,"byte_end":322926,"line_start":408,"line_end":408,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322931,"byte_end":322934,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322939,"byte_end":322944,"line_start":410,"line_end":410,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":322949,"byte_end":323010,"line_start":411,"line_end":411,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323015,"byte_end":323037,"line_start":412,"line_end":412,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323042,"byte_end":323106,"line_start":413,"line_end":413,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323111,"byte_end":323122,"line_start":414,"line_end":414,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323127,"byte_end":323166,"line_start":415,"line_end":415,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323171,"byte_end":323176,"line_start":416,"line_end":416,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323181,"byte_end":323184,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323189,"byte_end":323210,"line_start":418,"line_end":418,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323215,"byte_end":323223,"line_start":419,"line_end":419,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323228,"byte_end":323235,"line_start":420,"line_end":420,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4831},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324268,"byte_end":324282,"line_start":451,"line_end":451,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323519,"byte_end":323593,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323598,"byte_end":323621,"line_start":431,"line_end":431,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323626,"byte_end":323629,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323634,"byte_end":323665,"line_start":433,"line_end":433,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323670,"byte_end":323747,"line_start":434,"line_end":434,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323752,"byte_end":323781,"line_start":435,"line_end":435,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323786,"byte_end":323789,"line_start":436,"line_end":436,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323794,"byte_end":323808,"line_start":437,"line_end":437,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323813,"byte_end":323816,"line_start":438,"line_end":438,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323821,"byte_end":323828,"line_start":439,"line_end":439,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323833,"byte_end":323874,"line_start":440,"line_end":440,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323879,"byte_end":323903,"line_start":441,"line_end":441,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323908,"byte_end":323954,"line_start":442,"line_end":442,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323959,"byte_end":323962,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":323967,"byte_end":324036,"line_start":444,"line_end":444,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324041,"byte_end":324111,"line_start":445,"line_end":445,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324116,"byte_end":324119,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324124,"byte_end":324191,"line_start":447,"line_end":447,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324196,"byte_end":324235,"line_start":448,"line_end":448,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324240,"byte_end":324248,"line_start":449,"line_end":449,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324253,"byte_end":324260,"line_start":450,"line_end":450,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4834},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325315,"byte_end":325329,"line_start":481,"line_end":481,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324559,"byte_end":324633,"line_start":460,"line_end":460,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324638,"byte_end":324661,"line_start":461,"line_end":461,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324666,"byte_end":324669,"line_start":462,"line_end":462,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324674,"byte_end":324705,"line_start":463,"line_end":463,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324710,"byte_end":324787,"line_start":464,"line_end":464,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324792,"byte_end":324821,"line_start":465,"line_end":465,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324826,"byte_end":324829,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324834,"byte_end":324848,"line_start":467,"line_end":467,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324853,"byte_end":324856,"line_start":468,"line_end":468,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324861,"byte_end":324868,"line_start":469,"line_end":469,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324873,"byte_end":324914,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324919,"byte_end":324943,"line_start":471,"line_end":471,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324948,"byte_end":324994,"line_start":472,"line_end":472,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":324999,"byte_end":325002,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325007,"byte_end":325083,"line_start":474,"line_end":474,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325088,"byte_end":325158,"line_start":475,"line_end":475,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325163,"byte_end":325166,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325171,"byte_end":325238,"line_start":477,"line_end":477,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325243,"byte_end":325282,"line_start":478,"line_end":478,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325287,"byte_end":325295,"line_start":479,"line_end":479,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325300,"byte_end":325307,"line_start":480,"line_end":480,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4837},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327244,"byte_end":327267,"line_start":533,"line_end":533,"column_start":8,"column_end":31},"name":"try_for_each_concurrent","qualname":"::stream::try_stream::TryStreamExt::try_for_each_concurrent","value":"fn try_for_each_concurrent<Fut, F,\nimpl Into<Option<usize>>>(Self, impl Into<Option<usize>>, F)\n-> TryForEachConcurrent<Self, Fut, F> where F: FnMut(Self::Ok) -> Fut,\nFut: Future<Output = Result<(), Self::Error>>, Self: Sized,\nimpl Into<Option<usize>>: Into<Option<usize>>","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided asynchronous\n closure for each element on the stream concurrently as elements become\n available, exiting as soon as an error occurs.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided asynchronous","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325606,"byte_end":325688,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/ closure for each element on the stream concurrently as elements become","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325693,"byte_end":325767,"line_start":491,"line_end":491,"column_start":5,"column_end":79}},{"value":"/ available, exiting as soon as an error occurs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325772,"byte_end":325822,"line_start":492,"line_end":492,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325827,"byte_end":325830,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ This is similar to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325835,"byte_end":325857,"line_start":494,"line_end":494,"column_start":5,"column_end":27}},{"value":"/ [`StreamExt::for_each_concurrent`](crate::stream::StreamExt::for_each_concurrent),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325862,"byte_end":325948,"line_start":495,"line_end":495,"column_start":5,"column_end":91}},{"value":"/ but will resolve to an error immediately if the underlying stream or the provided","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":325953,"byte_end":326038,"line_start":496,"line_end":496,"column_start":5,"column_end":90}},{"value":"/ closure return an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326043,"byte_end":326071,"line_start":497,"line_end":497,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326076,"byte_end":326079,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326084,"byte_end":326159,"line_start":499,"line_end":499,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326164,"byte_end":326221,"line_start":500,"line_end":500,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326226,"byte_end":326229,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326234,"byte_end":326248,"line_start":502,"line_end":502,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326253,"byte_end":326256,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326261,"byte_end":326268,"line_start":504,"line_end":504,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326273,"byte_end":326314,"line_start":505,"line_end":505,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326319,"byte_end":326353,"line_start":506,"line_end":506,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326358,"byte_end":326415,"line_start":507,"line_end":507,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326420,"byte_end":326423,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326428,"byte_end":326468,"line_start":509,"line_end":509,"column_start":5,"column_end":45}},{"value":"/ let (tx2, rx2) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326473,"byte_end":326513,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/ let (_tx3, rx3) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326518,"byte_end":326559,"line_start":511,"line_end":511,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326564,"byte_end":326567,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![rx1, rx2, rx3]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326572,"byte_end":326623,"line_start":513,"line_end":513,"column_start":5,"column_end":56}},{"value":"/ let fut = stream.map(Ok).try_for_each_concurrent(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326628,"byte_end":326681,"line_start":514,"line_end":514,"column_start":5,"column_end":58}},{"value":"/     /* limit */ 2,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326686,"byte_end":326708,"line_start":515,"line_end":515,"column_start":5,"column_end":27}},{"value":"/     |rx| async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326713,"byte_end":326738,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/         let res: Result<(), oneshot::Canceled> = rx.await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326743,"byte_end":326805,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/         res","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326810,"byte_end":326825,"line_start":518,"line_end":518,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326830,"byte_end":326839,"line_start":519,"line_end":519,"column_start":5,"column_end":14}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326844,"byte_end":326850,"line_start":520,"line_end":520,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326855,"byte_end":326858,"line_start":521,"line_end":521,"column_start":5,"column_end":8}},{"value":"/ tx1.send(()).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326863,"byte_end":326889,"line_start":522,"line_end":522,"column_start":5,"column_end":31}},{"value":"/ // Drop the second sender so that `rx2` resolves to `Canceled`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326894,"byte_end":326961,"line_start":523,"line_end":523,"column_start":5,"column_end":72}},{"value":"/ drop(tx2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326966,"byte_end":326980,"line_start":524,"line_end":524,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326985,"byte_end":326988,"line_start":525,"line_end":525,"column_start":5,"column_end":8}},{"value":"/ // The final result is an error because the second future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":326993,"byte_end":327054,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ // resulted in an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327059,"byte_end":327087,"line_start":527,"line_end":527,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Err(oneshot::Canceled), fut.await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327092,"byte_end":327142,"line_start":528,"line_end":528,"column_start":5,"column_end":55}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327147,"byte_end":327155,"line_start":529,"line_end":529,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327160,"byte_end":327167,"line_start":530,"line_end":530,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327172,"byte_end":327206,"line_start":531,"line_end":531,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327211,"byte_end":327236,"line_start":532,"line_end":532,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4841},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328716,"byte_end":328727,"line_start":580,"line_end":580,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"fn try_collect<C>(Self) -> TryCollect<Self, C> where C: Default +\nExtend<Self::Ok>, Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327677,"byte_end":327729,"line_start":550,"line_end":550,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327734,"byte_end":327801,"line_start":551,"line_end":551,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327806,"byte_end":327809,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327814,"byte_end":327888,"line_start":553,"line_end":553,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327893,"byte_end":327974,"line_start":554,"line_end":554,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":327979,"byte_end":328049,"line_start":555,"line_end":555,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328054,"byte_end":328057,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328062,"byte_end":328130,"line_start":557,"line_end":557,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328135,"byte_end":328138,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328143,"byte_end":328157,"line_start":559,"line_end":559,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328162,"byte_end":328165,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328170,"byte_end":328177,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328182,"byte_end":328223,"line_start":562,"line_end":562,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328228,"byte_end":328259,"line_start":563,"line_end":563,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328264,"byte_end":328302,"line_start":564,"line_end":564,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328307,"byte_end":328327,"line_start":565,"line_end":565,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328332,"byte_end":328335,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328340,"byte_end":328377,"line_start":567,"line_end":567,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328382,"byte_end":328385,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328390,"byte_end":328417,"line_start":569,"line_end":569,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328422,"byte_end":328446,"line_start":570,"line_end":570,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328451,"byte_end":328497,"line_start":571,"line_end":571,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328502,"byte_end":328511,"line_start":572,"line_end":572,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328516,"byte_end":328559,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328564,"byte_end":328571,"line_start":574,"line_end":574,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328576,"byte_end":328579,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328584,"byte_end":328647,"line_start":576,"line_end":576,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328652,"byte_end":328683,"line_start":577,"line_end":577,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328688,"byte_end":328696,"line_start":578,"line_end":578,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328701,"byte_end":328708,"line_start":579,"line_end":579,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4843},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330542,"byte_end":330552,"line_start":625,"line_end":625,"column_start":8,"column_end":18},"name":"try_chunks","qualname":"::stream::try_stream::TryStreamExt::try_chunks","value":"fn try_chunks(Self, usize) -> TryChunks<Self> where Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" An adaptor for chunking up successful items of the stream inside a vector.","sig":null,"attributes":[{"value":"/ An adaptor for chunking up successful items of the stream inside a vector.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328910,"byte_end":328988,"line_start":587,"line_end":587,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":328993,"byte_end":328996,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ This combinator will attempt to pull successful items from this stream and buffer","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329001,"byte_end":329086,"line_start":589,"line_end":589,"column_start":5,"column_end":90}},{"value":"/ them into a local vector. At most `capacity` items will get buffered","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329091,"byte_end":329163,"line_start":590,"line_end":590,"column_start":5,"column_end":77}},{"value":"/ before they're yielded from the returned stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329168,"byte_end":329220,"line_start":591,"line_end":591,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329225,"byte_end":329228,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that the vectors returned from this iterator may not always have","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329233,"byte_end":329306,"line_start":593,"line_end":593,"column_start":5,"column_end":78}},{"value":"/ `capacity` elements. If the underlying stream ended and only a partial","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329311,"byte_end":329385,"line_start":594,"line_end":594,"column_start":5,"column_end":79}},{"value":"/ vector was created, it'll be returned. Additionally if an error happens","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329390,"byte_end":329465,"line_start":595,"line_end":595,"column_start":5,"column_end":80}},{"value":"/ from the underlying stream then the currently buffered items will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329470,"byte_end":329542,"line_start":596,"line_end":596,"column_start":5,"column_end":77}},{"value":"/ yielded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329547,"byte_end":329559,"line_start":597,"line_end":597,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329564,"byte_end":329567,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329572,"byte_end":329647,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329652,"byte_end":329709,"line_start":600,"line_end":600,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329714,"byte_end":329717,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329722,"byte_end":329753,"line_start":602,"line_end":602,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::chunks`](crate::stream::StreamExt::chunks) but exits","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329758,"byte_end":329827,"line_start":603,"line_end":603,"column_start":5,"column_end":74}},{"value":"/ early if an error occurs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329832,"byte_end":329861,"line_start":604,"line_end":604,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329866,"byte_end":329869,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329874,"byte_end":329888,"line_start":606,"line_end":606,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329893,"byte_end":329896,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329901,"byte_end":329908,"line_start":608,"line_end":608,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329913,"byte_end":329954,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryChunksError, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":329959,"byte_end":330021,"line_start":610,"line_end":610,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330026,"byte_end":330029,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Err(4), Ok(5), Ok(6)]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330034,"byte_end":330125,"line_start":612,"line_end":612,"column_start":5,"column_end":96}},{"value":"/ let mut stream = stream.try_chunks(2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330130,"byte_end":330172,"line_start":613,"line_end":613,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330177,"byte_end":330180,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![1, 2])));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330185,"byte_end":330247,"line_start":615,"line_end":615,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(stream.try_next().await, Err(TryChunksError(vec![3], 4)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330252,"byte_end":330325,"line_start":616,"line_end":616,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(vec![5, 6])));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330330,"byte_end":330392,"line_start":617,"line_end":617,"column_start":5,"column_end":67}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330397,"byte_end":330405,"line_start":618,"line_end":618,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330410,"byte_end":330417,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330422,"byte_end":330425,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330430,"byte_end":330442,"line_start":621,"line_end":621,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330447,"byte_end":330450,"line_start":622,"line_end":622,"column_start":5,"column_end":8}},{"value":"/ This method will panic if `capacity` is zero.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330455,"byte_end":330504,"line_start":623,"line_end":623,"column_start":5,"column_end":54}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330509,"byte_end":330534,"line_start":624,"line_end":624,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4844},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332075,"byte_end":332085,"line_start":664,"line_end":664,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330787,"byte_end":330860,"line_start":634,"line_end":634,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330865,"byte_end":330899,"line_start":635,"line_end":635,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330904,"byte_end":330907,"line_start":636,"line_end":636,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330912,"byte_end":330987,"line_start":637,"line_end":637,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":330992,"byte_end":331067,"line_start":638,"line_end":638,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331072,"byte_end":331145,"line_start":639,"line_end":639,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331150,"byte_end":331221,"line_start":640,"line_end":640,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331226,"byte_end":331276,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331281,"byte_end":331284,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331289,"byte_end":331360,"line_start":643,"line_end":643,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331365,"byte_end":331368,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331373,"byte_end":331449,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331454,"byte_end":331524,"line_start":646,"line_end":646,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331529,"byte_end":331554,"line_start":647,"line_end":647,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331559,"byte_end":331562,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331567,"byte_end":331581,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331586,"byte_end":331593,"line_start":650,"line_end":650,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331598,"byte_end":331639,"line_start":651,"line_end":651,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331644,"byte_end":331668,"line_start":652,"line_end":652,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331673,"byte_end":331730,"line_start":653,"line_end":653,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331735,"byte_end":331738,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331743,"byte_end":331823,"line_start":655,"line_end":655,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331828,"byte_end":331871,"line_start":656,"line_end":656,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331876,"byte_end":331909,"line_start":657,"line_end":657,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331914,"byte_end":331921,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331926,"byte_end":331929,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331934,"byte_end":331982,"line_start":660,"line_end":660,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":331987,"byte_end":332042,"line_start":661,"line_end":661,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332047,"byte_end":332055,"line_start":662,"line_end":662,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332060,"byte_end":332067,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4847},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333712,"byte_end":333726,"line_start":705,"line_end":705,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332336,"byte_end":332398,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332403,"byte_end":332471,"line_start":674,"line_end":674,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332476,"byte_end":332510,"line_start":675,"line_end":675,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332515,"byte_end":332518,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332523,"byte_end":332598,"line_start":677,"line_end":677,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332603,"byte_end":332678,"line_start":678,"line_end":678,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332683,"byte_end":332759,"line_start":679,"line_end":679,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332764,"byte_end":332829,"line_start":680,"line_end":680,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332834,"byte_end":332837,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332842,"byte_end":332913,"line_start":682,"line_end":682,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332918,"byte_end":332921,"line_start":683,"line_end":683,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":332926,"byte_end":333002,"line_start":684,"line_end":684,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333007,"byte_end":333081,"line_start":685,"line_end":685,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333086,"byte_end":333111,"line_start":686,"line_end":686,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333116,"byte_end":333119,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333124,"byte_end":333138,"line_start":688,"line_end":688,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333143,"byte_end":333150,"line_start":689,"line_end":689,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333155,"byte_end":333196,"line_start":690,"line_end":690,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333201,"byte_end":333258,"line_start":691,"line_end":691,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333263,"byte_end":333288,"line_start":692,"line_end":692,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333293,"byte_end":333296,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333301,"byte_end":333371,"line_start":694,"line_end":694,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333376,"byte_end":333431,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333436,"byte_end":333498,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333503,"byte_end":333518,"line_start":697,"line_end":697,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333523,"byte_end":333530,"line_start":698,"line_end":698,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333535,"byte_end":333538,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333543,"byte_end":333564,"line_start":700,"line_end":700,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333569,"byte_end":333618,"line_start":701,"line_end":701,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333623,"byte_end":333679,"line_start":702,"line_end":702,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333684,"byte_end":333692,"line_start":703,"line_end":703,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":333697,"byte_end":333704,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4851},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335622,"byte_end":335633,"line_start":756,"line_end":756,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334003,"byte_end":334068,"line_start":714,"line_end":714,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334073,"byte_end":334076,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334081,"byte_end":334154,"line_start":716,"line_end":716,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334159,"byte_end":334232,"line_start":717,"line_end":717,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334237,"byte_end":334310,"line_start":718,"line_end":718,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334315,"byte_end":334385,"line_start":719,"line_end":719,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334390,"byte_end":334393,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334398,"byte_end":334412,"line_start":721,"line_end":721,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334417,"byte_end":334420,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334425,"byte_end":334432,"line_start":723,"line_end":723,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334437,"byte_end":334478,"line_start":724,"line_end":724,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334483,"byte_end":334514,"line_start":725,"line_end":725,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334519,"byte_end":334570,"line_start":726,"line_end":726,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334575,"byte_end":334595,"line_start":727,"line_end":727,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334600,"byte_end":334603,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334608,"byte_end":334647,"line_start":729,"line_end":729,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334652,"byte_end":334691,"line_start":730,"line_end":730,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334696,"byte_end":334735,"line_start":731,"line_end":731,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334740,"byte_end":334743,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334748,"byte_end":334775,"line_start":733,"line_end":733,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334780,"byte_end":334823,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334828,"byte_end":334835,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334840,"byte_end":334867,"line_start":736,"line_end":736,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334872,"byte_end":334915,"line_start":737,"line_end":737,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334920,"byte_end":334964,"line_start":738,"line_end":738,"column_start":5,"column_end":49}},{"value":"/     tx2.unbounded_send(Ok(4)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":334969,"byte_end":335012,"line_start":739,"line_end":739,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335017,"byte_end":335024,"line_start":740,"line_end":740,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335029,"byte_end":335056,"line_start":741,"line_end":741,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335061,"byte_end":335106,"line_start":742,"line_end":742,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335111,"byte_end":335156,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(5)).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335161,"byte_end":335205,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335210,"byte_end":335217,"line_start":745,"line_end":745,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335222,"byte_end":335225,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335230,"byte_end":335269,"line_start":747,"line_end":747,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335274,"byte_end":335323,"line_start":748,"line_end":748,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335328,"byte_end":335377,"line_start":749,"line_end":749,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335382,"byte_end":335432,"line_start":750,"line_end":750,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(4)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335437,"byte_end":335486,"line_start":751,"line_end":751,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(5)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335491,"byte_end":335541,"line_start":752,"line_end":752,"column_start":5,"column_end":55}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335546,"byte_end":335588,"line_start":753,"line_end":753,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335593,"byte_end":335602,"line_start":754,"line_end":754,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335607,"byte_end":335614,"line_start":755,"line_end":755,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4852},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337225,"byte_end":337233,"line_start":795,"line_end":795,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":335938,"byte_end":336008,"line_start":767,"line_end":767,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336013,"byte_end":336073,"line_start":768,"line_end":768,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336078,"byte_end":336081,"line_start":769,"line_end":769,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336086,"byte_end":336156,"line_start":770,"line_end":770,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336161,"byte_end":336237,"line_start":771,"line_end":771,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336242,"byte_end":336318,"line_start":772,"line_end":772,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336323,"byte_end":336393,"line_start":773,"line_end":773,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336398,"byte_end":336424,"line_start":774,"line_end":774,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336429,"byte_end":336432,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336437,"byte_end":336517,"line_start":776,"line_end":776,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336522,"byte_end":336591,"line_start":777,"line_end":777,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336596,"byte_end":336617,"line_start":778,"line_end":778,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336622,"byte_end":336625,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336630,"byte_end":336644,"line_start":780,"line_end":780,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336649,"byte_end":336652,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336657,"byte_end":336664,"line_start":782,"line_end":782,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336669,"byte_end":336710,"line_start":783,"line_end":783,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336715,"byte_end":336761,"line_start":784,"line_end":784,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336766,"byte_end":336769,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336774,"byte_end":336843,"line_start":786,"line_end":786,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336848,"byte_end":336925,"line_start":787,"line_end":787,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336930,"byte_end":336963,"line_start":788,"line_end":788,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336968,"byte_end":336971,"line_start":789,"line_end":789,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":336976,"byte_end":337062,"line_start":790,"line_end":790,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337067,"byte_end":337153,"line_start":791,"line_end":791,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337158,"byte_end":337192,"line_start":792,"line_end":792,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337197,"byte_end":337205,"line_start":793,"line_end":793,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337210,"byte_end":337217,"line_start":794,"line_end":794,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4856},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338759,"byte_end":338769,"line_start":838,"line_end":838,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337513,"byte_end":337575,"line_start":804,"line_end":804,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337580,"byte_end":337655,"line_start":805,"line_end":805,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337660,"byte_end":337663,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337668,"byte_end":337739,"line_start":807,"line_end":807,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337744,"byte_end":337820,"line_start":808,"line_end":808,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337825,"byte_end":337864,"line_start":809,"line_end":809,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337869,"byte_end":337872,"line_start":810,"line_end":810,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337877,"byte_end":337963,"line_start":811,"line_end":811,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337968,"byte_end":337971,"line_start":812,"line_end":812,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":337976,"byte_end":338060,"line_start":813,"line_end":813,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338065,"byte_end":338121,"line_start":814,"line_end":814,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338126,"byte_end":338129,"line_start":815,"line_end":815,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338134,"byte_end":338148,"line_start":816,"line_end":816,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338153,"byte_end":338156,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338161,"byte_end":338168,"line_start":818,"line_end":818,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338173,"byte_end":338214,"line_start":819,"line_end":819,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338219,"byte_end":338250,"line_start":820,"line_end":820,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338255,"byte_end":338293,"line_start":821,"line_end":821,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338298,"byte_end":338318,"line_start":822,"line_end":822,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338323,"byte_end":338326,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338331,"byte_end":338392,"line_start":824,"line_end":824,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338397,"byte_end":338400,"line_start":825,"line_end":825,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338405,"byte_end":338432,"line_start":826,"line_end":826,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338437,"byte_end":338468,"line_start":827,"line_end":827,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338473,"byte_end":338499,"line_start":828,"line_end":828,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338504,"byte_end":338574,"line_start":829,"line_end":829,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338579,"byte_end":338588,"line_start":830,"line_end":830,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338593,"byte_end":338600,"line_start":831,"line_end":831,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338605,"byte_end":338608,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338613,"byte_end":338652,"line_start":833,"line_end":833,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338657,"byte_end":338660,"line_start":834,"line_end":834,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338665,"byte_end":338725,"line_start":835,"line_end":835,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338730,"byte_end":338739,"line_start":836,"line_end":836,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":338744,"byte_end":338751,"line_start":837,"line_end":837,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":4857},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341491,"byte_end":341511,"line_start":905,"line_end":905,"column_start":8,"column_end":28},"name":"try_buffer_unordered","qualname":"::stream::try_stream::TryStreamExt::try_buffer_unordered","value":"fn try_buffer_unordered(Self, usize) -> TryBufferUnordered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently (unordered).","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently (unordered).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339023,"byte_end":339101,"line_start":846,"line_end":846,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339106,"byte_end":339109,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339114,"byte_end":339219,"line_start":848,"line_end":848,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339224,"byte_end":339267,"line_start":849,"line_end":849,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339272,"byte_end":339275,"line_start":850,"line_end":850,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339280,"byte_end":339348,"line_start":851,"line_end":851,"column_start":5,"column_end":73}},{"value":"/ outputs in the order in which they complete. If the underlying stream","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339353,"byte_end":339426,"line_start":852,"line_end":852,"column_start":5,"column_end":78}},{"value":"/ returns an error, it will be immediately propagated.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339431,"byte_end":339487,"line_start":853,"line_end":853,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339492,"byte_end":339495,"line_start":854,"line_end":854,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339500,"byte_end":339575,"line_start":855,"line_end":855,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339580,"byte_end":339653,"line_start":856,"line_end":856,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339658,"byte_end":339723,"line_start":857,"line_end":857,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339728,"byte_end":339731,"line_start":858,"line_end":858,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339736,"byte_end":339811,"line_start":859,"line_end":859,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339816,"byte_end":339873,"line_start":860,"line_end":860,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339878,"byte_end":339881,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339886,"byte_end":339900,"line_start":862,"line_end":862,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339905,"byte_end":339908,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of completion:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339913,"byte_end":339965,"line_start":864,"line_end":864,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339970,"byte_end":339977,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":339982,"byte_end":340023,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340028,"byte_end":340062,"line_start":867,"line_end":867,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340067,"byte_end":340124,"line_start":868,"line_end":868,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340129,"byte_end":340132,"line_start":869,"line_end":869,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340137,"byte_end":340187,"line_start":870,"line_end":870,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340192,"byte_end":340242,"line_start":871,"line_end":871,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340247,"byte_end":340250,"line_start":872,"line_end":872,"column_start":5,"column_end":8}},{"value":"/ let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340255,"byte_end":340330,"line_start":873,"line_end":873,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340335,"byte_end":340338,"line_start":874,"line_end":874,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340343,"byte_end":340409,"line_start":875,"line_end":875,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340414,"byte_end":340417,"line_start":876,"line_end":876,"column_start":5,"column_end":8}},{"value":"/ send_two.send(2i32)?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340422,"byte_end":340447,"line_start":877,"line_end":877,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340452,"byte_end":340506,"line_start":878,"line_end":878,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340511,"byte_end":340514,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340519,"byte_end":340544,"line_start":880,"line_end":880,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340549,"byte_end":340603,"line_start":881,"line_end":881,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340608,"byte_end":340611,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340616,"byte_end":340660,"line_start":883,"line_end":883,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340665,"byte_end":340701,"line_start":884,"line_end":884,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340706,"byte_end":340713,"line_start":885,"line_end":885,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340718,"byte_end":340721,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340726,"byte_end":340786,"line_start":887,"line_end":887,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340791,"byte_end":340798,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340803,"byte_end":340844,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340849,"byte_end":340880,"line_start":890,"line_end":890,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340885,"byte_end":340936,"line_start":891,"line_end":891,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340941,"byte_end":340944,"line_start":892,"line_end":892,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":340949,"byte_end":341003,"line_start":893,"line_end":893,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffer_unordered(10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341008,"byte_end":341074,"line_start":894,"line_end":894,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341079,"byte_end":341082,"line_start":895,"line_end":895,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341087,"byte_end":341136,"line_start":896,"line_end":896,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341141,"byte_end":341195,"line_start":897,"line_end":897,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341200,"byte_end":341203,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341208,"byte_end":341261,"line_start":899,"line_end":899,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341266,"byte_end":341338,"line_start":900,"line_end":900,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341343,"byte_end":341402,"line_start":901,"line_end":901,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341407,"byte_end":341414,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341419,"byte_end":341453,"line_start":903,"line_end":903,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341458,"byte_end":341483,"line_start":904,"line_end":904,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4858},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344522,"byte_end":344534,"line_start":981,"line_end":981,"column_start":8,"column_end":20},"name":"try_buffered","qualname":"::stream::try_stream::TryStreamExt::try_buffered","value":"fn try_buffered(Self, usize) -> TryBuffered<Self> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" Attempt to execute several futures from a stream concurrently.","sig":null,"attributes":[{"value":"/ Attempt to execute several futures from a stream concurrently.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341788,"byte_end":341854,"line_start":915,"line_end":915,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341859,"byte_end":341862,"line_start":916,"line_end":916,"column_start":5,"column_end":8}},{"value":"/ This stream's `Ok` type must be a [`TryFuture`](futures_core::future::TryFuture) with an `Error` type","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341867,"byte_end":341972,"line_start":917,"line_end":917,"column_start":5,"column_end":110}},{"value":"/ that matches the stream's `Error` type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":341977,"byte_end":342020,"line_start":918,"line_end":918,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342025,"byte_end":342028,"line_start":919,"line_end":919,"column_start":5,"column_end":8}},{"value":"/ This adaptor will buffer up to `n` futures and then return their","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342033,"byte_end":342101,"line_start":920,"line_end":920,"column_start":5,"column_end":73}},{"value":"/ outputs in the same order as the underlying stream. If the underlying stream returns an error, it will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342106,"byte_end":342212,"line_start":921,"line_end":921,"column_start":5,"column_end":111}},{"value":"/ be immediately propagated.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342217,"byte_end":342247,"line_start":922,"line_end":922,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342252,"byte_end":342255,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ The returned stream will be a stream of results, each containing either","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342260,"byte_end":342335,"line_start":924,"line_end":924,"column_start":5,"column_end":80}},{"value":"/ an error or a future's output. An error can be produced either by the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342340,"byte_end":342413,"line_start":925,"line_end":925,"column_start":5,"column_end":78}},{"value":"/ underlying stream itself or by one of the futures it yielded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342418,"byte_end":342483,"line_start":926,"line_end":926,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342488,"byte_end":342491,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ This method is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342496,"byte_end":342571,"line_start":928,"line_end":928,"column_start":5,"column_end":80}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342576,"byte_end":342633,"line_start":929,"line_end":929,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342638,"byte_end":342641,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342646,"byte_end":342660,"line_start":931,"line_end":931,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342665,"byte_end":342668,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ Results are returned in the order of addition:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342673,"byte_end":342723,"line_start":933,"line_end":933,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342728,"byte_end":342735,"line_start":934,"line_end":934,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342740,"byte_end":342781,"line_start":935,"line_end":935,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::oneshot;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342786,"byte_end":342820,"line_start":936,"line_end":936,"column_start":5,"column_end":39}},{"value":"/ use futures::future::lazy;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342825,"byte_end":342855,"line_start":937,"line_end":937,"column_start":5,"column_end":35}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342860,"byte_end":342917,"line_start":938,"line_end":938,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342922,"byte_end":342925,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ let (send_one, recv_one) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342930,"byte_end":342980,"line_start":940,"line_end":940,"column_start":5,"column_end":55}},{"value":"/ let (send_two, recv_two) = oneshot::channel();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":342985,"byte_end":343035,"line_start":941,"line_end":941,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343040,"byte_end":343043,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ let mut buffered = lazy(move |cx| {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343048,"byte_end":343087,"line_start":943,"line_end":943,"column_start":5,"column_end":44}},{"value":"/     let stream_of_futures = stream::iter(vec![Ok(recv_one), Ok(recv_two)]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343092,"byte_end":343171,"line_start":944,"line_end":944,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343176,"byte_end":343179,"line_start":945,"line_end":945,"column_start":5,"column_end":8}},{"value":"/     let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343184,"byte_end":343246,"line_start":946,"line_end":946,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343251,"byte_end":343254,"line_start":947,"line_end":947,"column_start":5,"column_end":8}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343259,"byte_end":343322,"line_start":948,"line_end":948,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343327,"byte_end":343330,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/     send_two.send(2i32)?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343335,"byte_end":343364,"line_start":950,"line_end":950,"column_start":5,"column_end":34}},{"value":"/     assert!(buffered.try_poll_next_unpin(cx).is_pending());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343369,"byte_end":343432,"line_start":951,"line_end":951,"column_start":5,"column_end":68}},{"value":"/     Ok::<_, i32>(buffered)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343437,"byte_end":343467,"line_start":952,"line_end":952,"column_start":5,"column_end":35}},{"value":"/ }).await?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343472,"byte_end":343486,"line_start":953,"line_end":953,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343491,"byte_end":343494,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ send_one.send(1i32)?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343499,"byte_end":343524,"line_start":955,"line_end":955,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(1i32)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343529,"byte_end":343583,"line_start":956,"line_end":956,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(2i32)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343588,"byte_end":343642,"line_start":957,"line_end":957,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343647,"byte_end":343650,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(buffered.next().await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343655,"byte_end":343699,"line_start":959,"line_end":959,"column_start":5,"column_end":49}},{"value":"/ # Ok::<(), i32>(()) }).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343704,"byte_end":343740,"line_start":960,"line_end":960,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343745,"byte_end":343752,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343757,"byte_end":343760,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ Errors from the underlying stream itself are propagated:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343765,"byte_end":343825,"line_start":963,"line_end":963,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343830,"byte_end":343837,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343842,"byte_end":343883,"line_start":965,"line_end":965,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343888,"byte_end":343919,"line_start":966,"line_end":966,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343924,"byte_end":343975,"line_start":967,"line_end":967,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343980,"byte_end":343983,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ let (sink, stream_of_futures) = mpsc::unbounded();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":343988,"byte_end":344042,"line_start":969,"line_end":969,"column_start":5,"column_end":59}},{"value":"/ let mut buffered = stream_of_futures.try_buffered(10);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344047,"byte_end":344105,"line_start":970,"line_end":970,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344110,"byte_end":344113,"line_start":971,"line_end":971,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Ok(async { Ok(7i32) }))?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344118,"byte_end":344167,"line_start":972,"line_end":972,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(buffered.next().await, Some(Ok(7i32)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344172,"byte_end":344226,"line_start":973,"line_end":973,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344231,"byte_end":344234,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ sink.unbounded_send(Err(\"error in the stream\"))?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344239,"byte_end":344292,"line_start":975,"line_end":975,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(buffered.next().await, Some(Err(\"error in the stream\")));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344297,"byte_end":344369,"line_start":976,"line_end":976,"column_start":5,"column_end":77}},{"value":"/ # Ok::<(), Box<dyn std::error::Error>>(()) }).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344374,"byte_end":344433,"line_start":977,"line_end":977,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344438,"byte_end":344445,"line_start":978,"line_end":978,"column_start":5,"column_end":12}},{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344450,"byte_end":344484,"line_start":979,"line_end":979,"column_start":5,"column_end":39}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344489,"byte_end":344514,"line_start":980,"line_end":980,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":4859},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344989,"byte_end":345008,"line_start":995,"line_end":995,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":4807},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344881,"byte_end":344959,"line_start":993,"line_end":993,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":344964,"byte_end":344981,"line_start":994,"line_end":994,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":12526},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396108,"byte_end":396112,"line_start":9,"line_end":9,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":12528}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":395986,"byte_end":396023,"line_start":6,"line_end":6,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396048,"byte_end":396096,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4960},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396630,"byte_end":396634,"line_start":29,"line_end":29,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396164,"byte_end":396228,"line_start":15,"line_end":15,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396229,"byte_end":396257,"line_start":16,"line_end":16,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396258,"byte_end":396261,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396262,"byte_end":396335,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396336,"byte_end":396391,"line_start":19,"line_end":19,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396392,"byte_end":396395,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396396,"byte_end":396403,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396404,"byte_end":396445,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396446,"byte_end":396489,"line_start":23,"line_end":23,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396490,"byte_end":396493,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396494,"byte_end":396538,"line_start":25,"line_end":25,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396539,"byte_end":396604,"line_start":26,"line_end":26,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396605,"byte_end":396614,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396615,"byte_end":396622,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":4965},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396844,"byte_end":396853,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Iter<I> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<I::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":4966},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396980,"byte_end":396989,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter<I> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12535},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397325,"byte_end":397331,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":12537}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397201,"byte_end":397240,"line_start":6,"line_end":6,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397265,"byte_end":397313,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":4995},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397855,"byte_end":397861,"line_start":27,"line_end":27,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397353,"byte_end":397413,"line_start":13,"line_end":13,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397414,"byte_end":397417,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397418,"byte_end":397485,"line_start":15,"line_end":15,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397486,"byte_end":397558,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397559,"byte_end":397616,"line_start":17,"line_end":17,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397617,"byte_end":397620,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397621,"byte_end":397628,"line_start":19,"line_end":19,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397629,"byte_end":397670,"line_start":20,"line_end":20,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397671,"byte_end":397714,"line_start":21,"line_end":21,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397715,"byte_end":397718,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397719,"byte_end":397754,"line_start":23,"line_end":23,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397755,"byte_end":397829,"line_start":24,"line_end":24,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397830,"byte_end":397839,"line_start":25,"line_end":25,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397840,"byte_end":397847,"line_start":26,"line_end":26,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5002},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":398065,"byte_end":398074,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Repeat<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5003},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":398207,"byte_end":398216,"line_start":46,"line_end":46,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Repeat<T> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5006},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":398359,"byte_end":398372,"line_start":55,"line_end":55,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Repeat<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12544},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398852,"byte_end":398862,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"RepeatWith","qualname":"::stream::repeat_with::RepeatWith","value":"RepeatWith {  }","parent":null,"children":[{"krate":0,"index":12546}],"decl_id":null,"docs":" An stream that repeats elements of type `A` endlessly by\n applying the provided closure `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ An stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398550,"byte_end":398610,"line_start":6,"line_end":6,"column_start":1,"column_end":61}},{"value":"/ applying the provided closure `F: FnMut() -> A`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398611,"byte_end":398663,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398664,"byte_end":398667,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This `struct` is created by the [`repeat_with()`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398668,"byte_end":398731,"line_start":9,"line_end":9,"column_start":1,"column_end":64}},{"value":"/ See its documentation for more.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398732,"byte_end":398767,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398792,"byte_end":398840,"line_start":12,"line_end":12,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5042},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399020,"byte_end":399029,"line_start":22,"line_end":22,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<RepeatWith<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5043},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399171,"byte_end":399180,"line_start":26,"line_end":26,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<RepeatWith<F> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5047},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399324,"byte_end":399337,"line_start":32,"line_end":32,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<RepeatWith<F> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5048},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":401150,"byte_end":401161,"line_start":91,"line_end":91,"column_start":8,"column_end":19},"name":"repeat_with","qualname":"::stream::repeat_with::repeat_with","value":"fn repeat_with<A, F>(F) -> RepeatWith<F> where F: FnMut() -> A","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that repeats elements of type `A` endlessly by\n applying the provided closure, the repeater, `F: FnMut() -> A`.","sig":null,"attributes":[{"value":"/ Creates a new stream that repeats elements of type `A` endlessly by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399378,"byte_end":399449,"line_start":37,"line_end":37,"column_start":1,"column_end":72}},{"value":"/ applying the provided closure, the repeater, `F: FnMut() -> A`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399450,"byte_end":399517,"line_start":38,"line_end":38,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399518,"byte_end":399521,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ The `repeat_with()` function calls the repeater over and over again.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399522,"byte_end":399594,"line_start":40,"line_end":40,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399595,"byte_end":399598,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Infinite stream like `repeat_with()` are often used with adapters like","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399599,"byte_end":399673,"line_start":42,"line_end":42,"column_start":1,"column_end":75}},{"value":"/ [`stream.take()`], in order to make them finite.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399674,"byte_end":399726,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399727,"byte_end":399730,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ If the element type of the stream you need implements [`Clone`], and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399731,"byte_end":399803,"line_start":45,"line_end":45,"column_start":1,"column_end":73}},{"value":"/ it is OK to keep the source element in memory, you should instead use","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399804,"byte_end":399877,"line_start":46,"line_end":46,"column_start":1,"column_end":74}},{"value":"/ the [`stream.repeat()`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399878,"byte_end":399915,"line_start":47,"line_end":47,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399916,"byte_end":399919,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399920,"byte_end":399934,"line_start":49,"line_end":49,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399935,"byte_end":399938,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Basic usage:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399939,"byte_end":399955,"line_start":51,"line_end":51,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399956,"byte_end":399959,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399960,"byte_end":399967,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399968,"byte_end":400009,"line_start":54,"line_end":54,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400010,"byte_end":400053,"line_start":55,"line_end":55,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400054,"byte_end":400057,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ // let's assume we have some value of a type that is not `Clone`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400058,"byte_end":400126,"line_start":57,"line_end":57,"column_start":1,"column_end":69}},{"value":"/ // or which don't want to have in memory just yet because it is expensive:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400127,"byte_end":400205,"line_start":58,"line_end":58,"column_start":1,"column_end":79}},{"value":"/ #[derive(PartialEq, Debug)]","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400206,"byte_end":400237,"line_start":59,"line_end":59,"column_start":1,"column_end":32}},{"value":"/ struct Expensive;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400238,"byte_end":400259,"line_start":60,"line_end":60,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400260,"byte_end":400263,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"/ // a particular value forever:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400264,"byte_end":400298,"line_start":62,"line_end":62,"column_start":1,"column_end":35}},{"value":"/ let mut things = stream::repeat_with(|| Expensive);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400299,"byte_end":400354,"line_start":63,"line_end":63,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400355,"byte_end":400358,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400359,"byte_end":400412,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400413,"byte_end":400466,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(Some(Expensive), things.next().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400467,"byte_end":400520,"line_start":67,"line_end":67,"column_start":1,"column_end":54}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400521,"byte_end":400530,"line_start":68,"line_end":68,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400531,"byte_end":400538,"line_start":69,"line_end":69,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400539,"byte_end":400542,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Using mutation and going finite:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400543,"byte_end":400579,"line_start":71,"line_end":71,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400580,"byte_end":400583,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400584,"byte_end":400595,"line_start":73,"line_end":73,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400596,"byte_end":400637,"line_start":74,"line_end":74,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400638,"byte_end":400681,"line_start":75,"line_end":75,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400682,"byte_end":400685,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ // From the zeroth to the third power of two:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400686,"byte_end":400735,"line_start":77,"line_end":77,"column_start":1,"column_end":50}},{"value":"/ let mut curr = 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400736,"byte_end":400757,"line_start":78,"line_end":78,"column_start":1,"column_end":22}},{"value":"/ let mut pow2 = stream::repeat_with(|| { let tmp = curr; curr *= 2; tmp })","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400758,"byte_end":400835,"line_start":79,"line_end":79,"column_start":1,"column_end":78}},{"value":"/                     .take(4);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400836,"byte_end":400869,"line_start":80,"line_end":80,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400870,"byte_end":400873,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(Some(1), pow2.next().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400874,"byte_end":400917,"line_start":82,"line_end":82,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(2), pow2.next().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400918,"byte_end":400961,"line_start":83,"line_end":83,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(4), pow2.next().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":400962,"byte_end":401005,"line_start":84,"line_end":84,"column_start":1,"column_end":44}},{"value":"/ assert_eq!(Some(8), pow2.next().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":401006,"byte_end":401049,"line_start":85,"line_end":85,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":401050,"byte_end":401053,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ // ... and now we're done","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":401054,"byte_end":401083,"line_start":87,"line_end":87,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(None, pow2.next().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":401084,"byte_end":401124,"line_start":88,"line_end":88,"column_start":1,"column_end":41}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":401125,"byte_end":401134,"line_start":89,"line_end":89,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":401135,"byte_end":401142,"line_start":90,"line_end":90,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12553},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401552,"byte_end":401557,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":12555}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401436,"byte_end":401474,"line_start":7,"line_end":7,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401492,"byte_end":401540,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5082},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401726,"byte_end":401731,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401596,"byte_end":401644,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401645,"byte_end":401648,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401649,"byte_end":401718,"line_start":16,"line_end":16,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":5088},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401886,"byte_end":401899,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Empty<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5092},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401996,"byte_end":402005,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Empty<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5093},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":402119,"byte_end":402128,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Empty<T> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5096},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":402230,"byte_end":402235,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Empty<T> as core::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5134},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402816,"byte_end":402820,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"fn once<Fut>(Fut) -> Once<Fut> where Fut: Future","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402509,"byte_end":402550,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402551,"byte_end":402554,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402555,"byte_end":402562,"line_start":11,"line_end":11,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402563,"byte_end":402604,"line_start":12,"line_end":12,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402605,"byte_end":402648,"line_start":13,"line_end":13,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402649,"byte_end":402652,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402653,"byte_end":402697,"line_start":15,"line_end":15,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402698,"byte_end":402753,"line_start":16,"line_end":16,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402754,"byte_end":402790,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402791,"byte_end":402800,"line_start":18,"line_end":18,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":402801,"byte_end":402808,"line_start":19,"line_end":19,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12559},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403082,"byte_end":403086,"line_start":28,"line_end":28,"column_start":16,"column_end":20},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":12561}],"decl_id":null,"docs":" A stream which emits single element and then EOF.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5142},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403338,"byte_end":403347,"line_start":43,"line_end":43,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Once<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5143},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403698,"byte_end":403707,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Once<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5146},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403917,"byte_end":403930,"line_start":64,"line_end":64,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Once<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12595},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404262,"byte_end":404269,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":12597}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404142,"byte_end":404184,"line_start":7,"line_end":7,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404202,"byte_end":404250,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":5178},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404445,"byte_end":404452,"line_start":17,"line_end":17,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404313,"byte_end":404367,"line_start":14,"line_end":14,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404368,"byte_end":404371,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404372,"byte_end":404437,"line_start":16,"line_end":16,"column_start":1,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":5184},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404620,"byte_end":404633,"line_start":24,"line_end":24,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Pending<T> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5188},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404732,"byte_end":404741,"line_start":32,"line_end":32,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Pending<T> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5189},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404851,"byte_end":404860,"line_start":36,"line_end":36,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Pending<T> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5192},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404964,"byte_end":404969,"line_start":42,"line_end":42,"column_start":8,"column_end":13},"name":"clone","qualname":"<Pending<T> as core::clone::Clone>::clone","value":"fn clone(&Self) -> Self","parent":{"krate":1,"index":2772},"children":[],"decl_id":{"krate":1,"index":2773},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5220},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405295,"byte_end":405301,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":5222}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405194,"byte_end":405234,"line_start":9,"line_end":9,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405235,"byte_end":405283,"line_start":10,"line_end":10,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5227},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405394,"byte_end":405397,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PollFn<F> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5228},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405989,"byte_end":405996,"line_start":41,"line_end":41,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405501,"byte_end":405574,"line_start":23,"line_end":23,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405575,"byte_end":405578,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405579,"byte_end":405638,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405639,"byte_end":405642,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405643,"byte_end":405657,"line_start":27,"line_end":27,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405658,"byte_end":405661,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405662,"byte_end":405669,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405670,"byte_end":405703,"line_start":30,"line_end":30,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405704,"byte_end":405732,"line_start":31,"line_end":31,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405733,"byte_end":405736,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405737,"byte_end":405766,"line_start":33,"line_end":33,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405767,"byte_end":405770,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405771,"byte_end":405835,"line_start":35,"line_end":35,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405836,"byte_end":405889,"line_start":36,"line_end":36,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405890,"byte_end":405911,"line_start":37,"line_end":37,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405912,"byte_end":405965,"line_start":38,"line_end":38,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405966,"byte_end":405973,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405974,"byte_end":405981,"line_start":40,"line_end":40,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5235},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":406242,"byte_end":406251,"line_start":54,"line_end":54,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollFn<F> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<T>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12601},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":406757,"byte_end":406770,"line_start":12,"line_end":12,"column_start":16,"column_end":29},"name":"PollImmediate","qualname":"::stream::poll_immediate::PollImmediate","value":"PollImmediate {  }","parent":null,"children":[{"krate":0,"index":12603}],"decl_id":null,"docs":" Stream for the [poll_immediate](poll_immediate()) function.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5264},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":406931,"byte_end":406940,"line_start":24,"line_end":24,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<PollImmediate<S> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5265},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":407612,"byte_end":407621,"line_start":42,"line_end":42,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<PollImmediate<S> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5268},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":407800,"byte_end":407813,"line_start":48,"line_end":48,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<PollImmediate<S> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5269},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408751,"byte_end":408765,"line_start":78,"line_end":78,"column_start":8,"column_end":22},"name":"poll_immediate","qualname":"::stream::poll_immediate::poll_immediate","value":"fn poll_immediate<S>(S) -> PollImmediate<S> where S: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","sig":null,"attributes":[{"value":"/ Creates a new stream that always immediately returns [Poll::Ready](core::task::Poll::Ready) when awaiting it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":407870,"byte_end":407983,"line_start":53,"line_end":53,"column_start":1,"column_end":114}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":407984,"byte_end":407987,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ This is useful when immediacy is more important than waiting for the next item to be ready.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":407988,"byte_end":408083,"line_start":55,"line_end":55,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408084,"byte_end":408087,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408088,"byte_end":408102,"line_start":57,"line_end":57,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408103,"byte_end":408106,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408107,"byte_end":408114,"line_start":59,"line_end":59,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408115,"byte_end":408156,"line_start":60,"line_end":60,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408157,"byte_end":408200,"line_start":61,"line_end":61,"column_start":1,"column_end":44}},{"value":"/ use futures::task::Poll;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408201,"byte_end":408229,"line_start":62,"line_end":62,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408230,"byte_end":408233,"line_start":63,"line_end":63,"column_start":1,"column_end":4}},{"value":"/ let mut r = stream::poll_immediate(Box::pin(stream::iter(1_u32..3)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408234,"byte_end":408307,"line_start":64,"line_end":64,"column_start":1,"column_end":74}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(1)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408308,"byte_end":408361,"line_start":65,"line_end":65,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, Some(Poll::Ready(2)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408362,"byte_end":408415,"line_start":66,"line_end":66,"column_start":1,"column_end":54}},{"value":"/ assert_eq!(r.next().await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408416,"byte_end":408453,"line_start":67,"line_end":67,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408454,"byte_end":408457,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ let mut p = stream::poll_immediate(Box::pin(stream::once(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408458,"byte_end":408526,"line_start":69,"line_end":69,"column_start":1,"column_end":69}},{"value":"/     futures::pending!();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408527,"byte_end":408555,"line_start":70,"line_end":70,"column_start":1,"column_end":29}},{"value":"/     42_u8","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408556,"byte_end":408569,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/ })));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408570,"byte_end":408579,"line_start":72,"line_end":72,"column_start":1,"column_end":10}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Pending));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408580,"byte_end":408632,"line_start":73,"line_end":73,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(p.next().await, Some(Poll::Ready(42)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408633,"byte_end":408687,"line_start":74,"line_end":74,"column_start":1,"column_end":55}},{"value":"/ assert_eq!(p.next().await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408688,"byte_end":408725,"line_start":75,"line_end":75,"column_start":1,"column_end":38}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408726,"byte_end":408735,"line_start":76,"line_end":76,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":408736,"byte_end":408743,"line_start":77,"line_end":77,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12640},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409298,"byte_end":409304,"line_start":12,"line_end":12,"column_start":16,"column_end":22},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":12643}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5312},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410330,"byte_end":410336,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409426,"byte_end":409494,"line_start":18,"line_end":18,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409495,"byte_end":409571,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409572,"byte_end":409620,"line_start":20,"line_end":20,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409621,"byte_end":409624,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409625,"byte_end":409700,"line_start":22,"line_end":22,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409701,"byte_end":409770,"line_start":23,"line_end":23,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409771,"byte_end":409798,"line_start":24,"line_end":24,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409799,"byte_end":409802,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409803,"byte_end":409874,"line_start":26,"line_end":26,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409875,"byte_end":409895,"line_start":27,"line_end":27,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409896,"byte_end":409899,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409900,"byte_end":409915,"line_start":29,"line_end":29,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409916,"byte_end":409919,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409920,"byte_end":409931,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409932,"byte_end":409973,"line_start":32,"line_end":32,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select, StreamExt };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":409974,"byte_end":410029,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410030,"byte_end":410033,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410034,"byte_end":410059,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410060,"byte_end":410086,"line_start":36,"line_end":36,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410087,"byte_end":410090,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let mut out = select(left, right);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410091,"byte_end":410129,"line_start":38,"line_end":38,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410130,"byte_end":410133,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410134,"byte_end":410155,"line_start":40,"line_end":40,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410156,"byte_end":410192,"line_start":41,"line_end":41,"column_start":1,"column_end":37}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410193,"byte_end":410245,"line_start":42,"line_end":42,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410246,"byte_end":410298,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410299,"byte_end":410304,"line_start":44,"line_end":44,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410305,"byte_end":410314,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410315,"byte_end":410322,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5319},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410805,"byte_end":410812,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410697,"byte_end":410771,"line_start":62,"line_end":62,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410776,"byte_end":410793,"line_start":63,"line_end":63,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5320},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411140,"byte_end":411147,"line_start":73,"line_end":73,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410878,"byte_end":410946,"line_start":68,"line_end":68,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410951,"byte_end":410982,"line_start":69,"line_end":69,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410987,"byte_end":410990,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410995,"byte_end":411068,"line_start":71,"line_end":71,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411073,"byte_end":411128,"line_start":72,"line_end":72,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5321},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411494,"byte_end":411505,"line_start":82,"line_end":82,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411225,"byte_end":411300,"line_start":77,"line_end":77,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411305,"byte_end":411336,"line_start":78,"line_end":78,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411341,"byte_end":411344,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411349,"byte_end":411422,"line_start":80,"line_end":80,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411427,"byte_end":411482,"line_start":81,"line_end":81,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5322},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411879,"byte_end":411889,"line_start":91,"line_end":91,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411643,"byte_end":411706,"line_start":87,"line_end":87,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411711,"byte_end":411714,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411719,"byte_end":411791,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411796,"byte_end":411867,"line_start":90,"line_end":90,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5326},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":412068,"byte_end":412081,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Select<St1, St2> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5331},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":412281,"byte_end":412290,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Select<St1, St2> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St1::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":12686},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412793,"byte_end":412797,"line_start":11,"line_end":11,"column_start":5,"column_end":9},"name":"Left","qualname":"::stream::select_with_strategy::PollNext::Left","value":"PollNext::Left","parent":{"krate":0,"index":12685},"children":[],"decl_id":null,"docs":" Poll the first stream.\n","sig":null,"attributes":[{"value":"/ Poll the first stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412762,"byte_end":412788,"line_start":10,"line_end":10,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":12688},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412835,"byte_end":412840,"line_start":13,"line_end":13,"column_start":5,"column_end":10},"name":"Right","qualname":"::stream::select_with_strategy::PollNext::Right","value":"PollNext::Right","parent":{"krate":0,"index":12685},"children":[],"decl_id":null,"docs":" Poll the second stream.\n","sig":null,"attributes":[{"value":"/ Poll the second stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412803,"byte_end":412830,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":12685},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412747,"byte_end":412755,"line_start":9,"line_end":9,"column_start":10,"column_end":18},"name":"PollNext","qualname":"::stream::select_with_strategy::PollNext","value":"enum PollNext { Left, Right, }","parent":null,"children":[{"krate":0,"index":12686},{"krate":0,"index":12688}],"decl_id":null,"docs":" Type to tell [`SelectWithStrategy`] which stream to poll next.\n","sig":null,"attributes":[{"value":"/ Type to tell [`SelectWithStrategy`] which stream to poll next.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412620,"byte_end":412686,"line_start":7,"line_end":7,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5368},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412921,"byte_end":412927,"line_start":18,"line_end":18,"column_start":12,"column_end":18},"name":"toggle","qualname":"<PollNext>::toggle","value":"fn toggle(&mut Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Toggle the value and return the old one.\n","sig":null,"attributes":[{"value":"/ Toggle the value and return the old one.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412865,"byte_end":412909,"line_start":17,"line_end":17,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5371},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":413226,"byte_end":413233,"line_start":33,"line_end":33,"column_start":8,"column_end":15},"name":"default","qualname":"<PollNext as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12704},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414151,"byte_end":414169,"line_start":67,"line_end":67,"column_start":16,"column_end":34},"name":"SelectWithStrategy","qualname":"::stream::select_with_strategy::SelectWithStrategy","value":"SelectWithStrategy {  }","parent":null,"children":[{"krate":0,"index":12709},{"krate":0,"index":12710},{"krate":0,"index":12711},{"krate":0,"index":12712},{"krate":0,"index":12713}],"decl_id":null,"docs":" Stream for the [`select_with_strategy()`] function. See function docs for details.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Function","id":{"krate":0,"index":5383},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416488,"byte_end":416508,"line_start":139,"line_end":139,"column_start":8,"column_end":28},"name":"select_with_strategy","qualname":"::stream::select_with_strategy::select_with_strategy","value":"fn select_with_strategy<St1, St2, Clos, State>(St1, St2, Clos)\n-> SelectWithStrategy<St1, St2, Clos, State> where St1: Stream,\nSt2: Stream<Item = St1::Item>, Clos: FnMut(&mut State) -> PollNext,\nState: Default","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. You provide a\n closure to tell [`SelectWithStrategy`] which stream to poll. The closure can\n store state on `SelectWithStrategy` to which it will receive a `&mut` on every\n invocation. This allows basing the strategy on prior choices.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. You provide a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414359,"byte_end":414436,"line_start":78,"line_end":78,"column_start":1,"column_end":78}},{"value":"/ closure to tell [`SelectWithStrategy`] which stream to poll. The closure can","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414437,"byte_end":414517,"line_start":79,"line_end":79,"column_start":1,"column_end":81}},{"value":"/ store state on `SelectWithStrategy` to which it will receive a `&mut` on every","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414518,"byte_end":414600,"line_start":80,"line_end":80,"column_start":1,"column_end":83}},{"value":"/ invocation. This allows basing the strategy on prior choices.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414601,"byte_end":414666,"line_start":81,"line_end":81,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414667,"byte_end":414670,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ After one of the two input streams completes, the remaining one will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414671,"byte_end":414746,"line_start":83,"line_end":83,"column_start":1,"column_end":76}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414747,"byte_end":414816,"line_start":84,"line_end":84,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414817,"byte_end":414844,"line_start":85,"line_end":85,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414845,"byte_end":414848,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414849,"byte_end":414920,"line_start":87,"line_end":87,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414921,"byte_end":414941,"line_start":88,"line_end":88,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414942,"byte_end":414945,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ## Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414946,"byte_end":414961,"line_start":90,"line_end":90,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414962,"byte_end":414965,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ ### Priority","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414966,"byte_end":414982,"line_start":92,"line_end":92,"column_start":1,"column_end":17}},{"value":"/ This example shows how to always prioritize the left stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":414983,"byte_end":415047,"line_start":93,"line_end":93,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415048,"byte_end":415051,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415052,"byte_end":415063,"line_start":95,"line_end":95,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415064,"byte_end":415105,"line_start":96,"line_end":96,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415106,"byte_end":415185,"line_start":97,"line_end":97,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415186,"byte_end":415189,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415190,"byte_end":415215,"line_start":99,"line_end":99,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415216,"byte_end":415242,"line_start":100,"line_end":100,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415243,"byte_end":415246,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ // We don't need any state, so let's make it an empty tuple.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415247,"byte_end":415311,"line_start":102,"line_end":102,"column_start":1,"column_end":65}},{"value":"/ // We must provide some type here, as there is no way for the compiler","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415312,"byte_end":415386,"line_start":103,"line_end":103,"column_start":1,"column_end":75}},{"value":"/ // to infer it. As we don't need to capture variables, we can just","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415387,"byte_end":415457,"line_start":104,"line_end":104,"column_start":1,"column_end":71}},{"value":"/ // use a function pointer instead of a closure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415458,"byte_end":415509,"line_start":105,"line_end":105,"column_start":1,"column_end":52}},{"value":"/ fn prio_left(_: &mut ()) -> PollNext { PollNext::Left }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415510,"byte_end":415569,"line_start":106,"line_end":106,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415570,"byte_end":415573,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, prio_left);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415574,"byte_end":415637,"line_start":108,"line_end":108,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415638,"byte_end":415641,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415642,"byte_end":415663,"line_start":110,"line_end":110,"column_start":1,"column_end":22}},{"value":"/     // Whenever we poll out, we will alwas get `1`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415664,"byte_end":415719,"line_start":111,"line_end":111,"column_start":1,"column_end":56}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415720,"byte_end":415772,"line_start":112,"line_end":112,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415773,"byte_end":415778,"line_start":113,"line_end":113,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415779,"byte_end":415788,"line_start":114,"line_end":114,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415789,"byte_end":415796,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415797,"byte_end":415800,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ ### Round Robin","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415801,"byte_end":415820,"line_start":117,"line_end":117,"column_start":1,"column_end":20}},{"value":"/ This example shows how to select from both streams round robin.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415821,"byte_end":415888,"line_start":118,"line_end":118,"column_start":1,"column_end":68}},{"value":"/ Note: this special case is provided by [`futures-util::stream::select`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415889,"byte_end":415965,"line_start":119,"line_end":119,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415966,"byte_end":415969,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415970,"byte_end":415981,"line_start":121,"line_end":121,"column_start":1,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":415982,"byte_end":416023,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{ repeat, select_with_strategy, PollNext, StreamExt };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416024,"byte_end":416103,"line_start":123,"line_end":123,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416104,"byte_end":416107,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let left = repeat(1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416108,"byte_end":416133,"line_start":125,"line_end":125,"column_start":1,"column_end":26}},{"value":"/ let right = repeat(2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416134,"byte_end":416160,"line_start":126,"line_end":126,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416161,"byte_end":416164,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let rrobin = |last: &mut PollNext| last.toggle();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416165,"byte_end":416218,"line_start":128,"line_end":128,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416219,"byte_end":416222,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ let mut out = select_with_strategy(left, right, rrobin);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416223,"byte_end":416283,"line_start":130,"line_end":130,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416284,"byte_end":416287,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ for _ in 0..100 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416288,"byte_end":416309,"line_start":132,"line_end":132,"column_start":1,"column_end":22}},{"value":"/     // We should be alternating now.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416310,"byte_end":416350,"line_start":133,"line_end":133,"column_start":1,"column_end":41}},{"value":"/     assert_eq!(1, out.select_next_some().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416351,"byte_end":416403,"line_start":134,"line_end":134,"column_start":1,"column_end":53}},{"value":"/     assert_eq!(2, out.select_next_some().await);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416404,"byte_end":416456,"line_start":135,"line_end":135,"column_start":1,"column_end":53}},{"value":"/ }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416457,"byte_end":416462,"line_start":136,"line_end":136,"column_start":1,"column_end":6}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416463,"byte_end":416472,"line_start":137,"line_end":137,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416473,"byte_end":416480,"line_start":138,"line_end":138,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":5393},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417139,"byte_end":417146,"line_start":162,"line_end":162,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_ref","value":"fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417031,"byte_end":417105,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417110,"byte_end":417127,"line_start":161,"line_end":161,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":5394},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417484,"byte_end":417491,"line_start":171,"line_end":171,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_mut","value":"fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417222,"byte_end":417290,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417295,"byte_end":417326,"line_start":167,"line_end":167,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417331,"byte_end":417334,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417339,"byte_end":417412,"line_start":169,"line_end":169,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417417,"byte_end":417472,"line_start":170,"line_end":170,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5395},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417856,"byte_end":417867,"line_start":180,"line_end":180,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::get_pin_mut","value":"fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417587,"byte_end":417662,"line_start":175,"line_end":175,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417667,"byte_end":417698,"line_start":176,"line_end":176,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417703,"byte_end":417706,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417711,"byte_end":417784,"line_start":178,"line_end":178,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":417789,"byte_end":417844,"line_start":179,"line_end":179,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":5396},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":418245,"byte_end":418255,"line_start":189,"line_end":189,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<SelectWithStrategy<St1, St2, Clos, State>>::into_inner","value":"fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":418009,"byte_end":418072,"line_start":185,"line_end":185,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":418077,"byte_end":418080,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":418085,"byte_end":418157,"line_start":187,"line_end":187,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":418162,"byte_end":418233,"line_start":188,"line_end":188,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5402},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":418518,"byte_end":418531,"line_start":200,"line_end":200,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5419},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":420134,"byte_end":420143,"line_start":264,"line_end":264,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<St1::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5425},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":421270,"byte_end":421273,"line_start":297,"line_end":297,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectWithStrategy<St1, St2, Clos, State> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":5472},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423259,"byte_end":423265,"line_start":50,"line_end":50,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":421817,"byte_end":421887,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":421888,"byte_end":421891,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":421892,"byte_end":421961,"line_start":13,"line_end":13,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":421962,"byte_end":422043,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422044,"byte_end":422075,"line_start":15,"line_end":15,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422076,"byte_end":422079,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422080,"byte_end":422159,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422160,"byte_end":422239,"line_start":18,"line_end":18,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422240,"byte_end":422294,"line_start":19,"line_end":19,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422295,"byte_end":422298,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422299,"byte_end":422379,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422380,"byte_end":422450,"line_start":22,"line_end":22,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422451,"byte_end":422473,"line_start":23,"line_end":23,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422474,"byte_end":422477,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422478,"byte_end":422555,"line_start":25,"line_end":25,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422556,"byte_end":422628,"line_start":26,"line_end":26,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422629,"byte_end":422706,"line_start":27,"line_end":27,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422707,"byte_end":422767,"line_start":28,"line_end":28,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422768,"byte_end":422771,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422772,"byte_end":422785,"line_start":30,"line_end":30,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422786,"byte_end":422789,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422790,"byte_end":422797,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422798,"byte_end":422839,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422840,"byte_end":422883,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422884,"byte_end":422887,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422888,"byte_end":422943,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422944,"byte_end":422967,"line_start":37,"line_end":37,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":422968,"byte_end":423007,"line_start":38,"line_end":38,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423008,"byte_end":423045,"line_start":39,"line_end":39,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423046,"byte_end":423085,"line_start":40,"line_end":40,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423086,"byte_end":423102,"line_start":41,"line_end":41,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423103,"byte_end":423119,"line_start":42,"line_end":42,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423120,"byte_end":423129,"line_start":43,"line_end":43,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423130,"byte_end":423137,"line_start":44,"line_end":44,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423138,"byte_end":423141,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423142,"byte_end":423194,"line_start":46,"line_end":46,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423195,"byte_end":423233,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423234,"byte_end":423243,"line_start":48,"line_end":48,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423244,"byte_end":423251,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":12777},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423612,"byte_end":423618,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":12781},{"krate":0,"index":12782}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":5481},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423810,"byte_end":423813,"line_start":73,"line_end":73,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Unfold<T, F, Fut> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5487},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":424085,"byte_end":424098,"line_start":83,"line_end":83,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<Unfold<T, F, Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5494},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":424394,"byte_end":424403,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Unfold<T, F, Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5572},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428669,"byte_end":428683,"line_start":95,"line_end":95,"column_start":12,"column_end":26},"name":"FuturesOrdered","qualname":"::stream::futures_ordered::FuturesOrdered","value":"FuturesOrdered {  }","parent":null,"children":[{"krate":0,"index":5574},{"krate":0,"index":5575},{"krate":0,"index":5576},{"krate":0,"index":5577}],"decl_id":null,"docs":" An unbounded queue of futures.","sig":null,"attributes":[{"value":"/ An unbounded queue of futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426603,"byte_end":426637,"line_start":59,"line_end":59,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426638,"byte_end":426641,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ This \"combinator\" is similar to `FuturesUnordered`, but it imposes an order","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426642,"byte_end":426721,"line_start":61,"line_end":61,"column_start":1,"column_end":80}},{"value":"/ on top of the set of futures. While futures in the set will race to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426722,"byte_end":426793,"line_start":62,"line_end":62,"column_start":1,"column_end":72}},{"value":"/ completion in parallel, results will only be returned in the order their","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426794,"byte_end":426870,"line_start":63,"line_end":63,"column_start":1,"column_end":77}},{"value":"/ originating futures were added to the queue.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426871,"byte_end":426919,"line_start":64,"line_end":64,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426920,"byte_end":426923,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Futures are pushed into this queue and their realized values are yielded in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426924,"byte_end":427003,"line_start":66,"line_end":66,"column_start":1,"column_end":80}},{"value":"/ order. This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427004,"byte_end":427079,"line_start":67,"line_end":67,"column_start":1,"column_end":76}},{"value":"/ Futures managed by `FuturesOrdered` will only be polled when they generate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427080,"byte_end":427158,"line_start":68,"line_end":68,"column_start":1,"column_end":79}},{"value":"/ notifications. This reduces the required amount of work needed to coordinate","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427159,"byte_end":427239,"line_start":69,"line_end":69,"column_start":1,"column_end":81}},{"value":"/ large numbers of futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427240,"byte_end":427269,"line_start":70,"line_end":70,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427270,"byte_end":427273,"line_start":71,"line_end":71,"column_start":1,"column_end":4}},{"value":"/ When a `FuturesOrdered` is first created, it does not contain any futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427274,"byte_end":427352,"line_start":72,"line_end":72,"column_start":1,"column_end":79}},{"value":"/ Calling `poll` in this state will result in `Poll::Ready(None))` to be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427353,"byte_end":427427,"line_start":73,"line_end":73,"column_start":1,"column_end":75}},{"value":"/ returned. Futures are submitted to the queue using `push`; however, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427428,"byte_end":427503,"line_start":74,"line_end":74,"column_start":1,"column_end":76}},{"value":"/ future will **not** be polled at this point. `FuturesOrdered` will only","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427504,"byte_end":427579,"line_start":75,"line_end":75,"column_start":1,"column_end":76}},{"value":"/ poll managed futures when `FuturesOrdered::poll` is called. As such, it","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427580,"byte_end":427655,"line_start":76,"line_end":76,"column_start":1,"column_end":76}},{"value":"/ is important to call `poll` after pushing new futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427656,"byte_end":427714,"line_start":77,"line_end":77,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427715,"byte_end":427718,"line_start":78,"line_end":78,"column_start":1,"column_end":4}},{"value":"/ If `FuturesOrdered::poll` returns `Poll::Ready(None)` this means that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427719,"byte_end":427792,"line_start":79,"line_end":79,"column_start":1,"column_end":74}},{"value":"/ the queue is currently not managing any futures. A future may be submitted","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427793,"byte_end":427871,"line_start":80,"line_end":80,"column_start":1,"column_end":79}},{"value":"/ to the queue at a later time. At that point, a call to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427872,"byte_end":427930,"line_start":81,"line_end":81,"column_start":1,"column_end":59}},{"value":"/ `FuturesOrdered::poll` will either return the future's resolved value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":427931,"byte_end":428004,"line_start":82,"line_end":82,"column_start":1,"column_end":74}},{"value":"/ **or** `Poll::Pending` if the future has not yet completed. When","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428005,"byte_end":428073,"line_start":83,"line_end":83,"column_start":1,"column_end":69}},{"value":"/ multiple futures are submitted to the queue, `FuturesOrdered::poll` will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428074,"byte_end":428150,"line_start":84,"line_end":84,"column_start":1,"column_end":77}},{"value":"/ return `Poll::Pending` until the first future completes, even if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428151,"byte_end":428219,"line_start":85,"line_end":85,"column_start":1,"column_end":69}},{"value":"/ some of the later futures have already completed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428220,"byte_end":428273,"line_start":86,"line_end":86,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428274,"byte_end":428277,"line_start":87,"line_end":87,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made `FuturesOrdered` via the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428278,"byte_end":428344,"line_start":88,"line_end":88,"column_start":1,"column_end":67}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty queue","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428345,"byte_end":428424,"line_start":89,"line_end":89,"column_start":1,"column_end":80}},{"value":"/ with the `FuturesOrdered::new` constructor.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428425,"byte_end":428472,"line_start":90,"line_end":90,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428473,"byte_end":428476,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428477,"byte_end":428550,"line_start":92,"line_end":92,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428551,"byte_end":428608,"line_start":93,"line_end":93,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428609,"byte_end":428657,"line_start":94,"line_end":94,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5582},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429191,"byte_end":429194,"line_start":109,"line_end":109,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesOrdered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `FuturesOrdered`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `FuturesOrdered`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428971,"byte_end":429015,"line_start":105,"line_end":105,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429020,"byte_end":429023,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ The returned `FuturesOrdered` does not contain any futures and, in this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429028,"byte_end":429103,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"/ state, `FuturesOrdered::poll_next` will return `Poll::Ready(None)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429108,"byte_end":429179,"line_start":108,"line_end":108,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":5583},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429691,"byte_end":429694,"line_start":123,"line_end":123,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesOrdered<Fut>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the queue.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the queue.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429418,"byte_end":429475,"line_start":118,"line_end":118,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429480,"byte_end":429483,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures, both","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429488,"byte_end":429551,"line_start":120,"line_end":120,"column_start":5,"column_end":68}},{"value":"/ those currently processing and those that have completed but","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429556,"byte_end":429620,"line_start":121,"line_end":121,"column_start":5,"column_end":69}},{"value":"/ which are waiting for earlier futures to complete.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429625,"byte_end":429679,"line_start":122,"line_end":122,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":5584},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429852,"byte_end":429860,"line_start":128,"line_end":128,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesOrdered<Fut>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the queue contains no futures\n","sig":null,"attributes":[{"value":"/ Returns `true` if the queue contains no futures","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429789,"byte_end":429840,"line_start":127,"line_end":127,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":5585},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430336,"byte_end":430340,"line_start":139,"line_end":139,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesOrdered<Fut>>::push","value":"fn push(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the queue.","sig":null,"attributes":[{"value":"/ Push a future into the queue.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":429965,"byte_end":429998,"line_start":132,"line_end":132,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430003,"byte_end":430006,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430011,"byte_end":430087,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430092,"byte_end":430166,"line_start":135,"line_end":135,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430171,"byte_end":430244,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430249,"byte_end":430272,"line_start":137,"line_end":137,"column_start":5,"column_end":28}},{"value":"deprecated(note = \"use `push_back` instead\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430277,"byte_end":430324,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":5586},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430741,"byte_end":430750,"line_start":149,"line_end":149,"column_start":12,"column_end":21},"name":"push_back","qualname":"<FuturesOrdered<Fut>>::push_back","value":"fn push_back(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the back of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the back of the queue.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430410,"byte_end":430455,"line_start":143,"line_end":143,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430460,"byte_end":430463,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430468,"byte_end":430544,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430549,"byte_end":430623,"line_start":146,"line_end":146,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430628,"byte_end":430701,"line_start":147,"line_end":147,"column_start":5,"column_end":78}},{"value":"/ task notifications.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430706,"byte_end":430729,"line_start":148,"line_end":148,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":5587},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431360,"byte_end":431370,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"push_front","qualname":"<FuturesOrdered<Fut>>::push_front","value":"fn push_front(&mut Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Pushes a future to the front of the queue.","sig":null,"attributes":[{"value":"/ Pushes a future to the front of the queue.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":430959,"byte_end":431005,"line_start":155,"line_end":155,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431010,"byte_end":431013,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function submits the given future to the internal set for managing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431018,"byte_end":431094,"line_start":157,"line_end":157,"column_start":5,"column_end":81}},{"value":"/ This function will not call `poll` on the submitted future. The caller","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431099,"byte_end":431173,"line_start":158,"line_end":158,"column_start":5,"column_end":79}},{"value":"/ must ensure that `FuturesOrdered::poll` is called in order to receive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431178,"byte_end":431251,"line_start":159,"line_end":159,"column_start":5,"column_end":78}},{"value":"/ task notifications. This future will be the next future to be returned","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431256,"byte_end":431330,"line_start":160,"line_end":160,"column_start":5,"column_end":79}},{"value":"/ complete.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431335,"byte_end":431348,"line_start":161,"line_end":161,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":5590},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431757,"byte_end":431764,"line_start":174,"line_end":174,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesOrdered<Fut> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5594},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431894,"byte_end":431903,"line_start":182,"line_end":182,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5595},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":432874,"byte_end":432883,"line_start":208,"line_end":208,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesOrdered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5598},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433040,"byte_end":433043,"line_start":215,"line_end":215,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesOrdered<Fut> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5601},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433220,"byte_end":433229,"line_start":221,"line_end":221,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesOrdered<Fut> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = Fut>","parent":{"krate":1,"index":7987},"children":[],"decl_id":{"krate":1,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5606},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433519,"byte_end":433532,"line_start":234,"line_end":234,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesOrdered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5609},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433703,"byte_end":433709,"line_start":240,"line_end":240,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesOrdered<Fut> as core::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":1,"index":8000},"children":[],"decl_id":{"krate":1,"index":8002},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":5614},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"futures_unordered","qualname":"::stream::futures_unordered","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","parent":null,"children":[{"krate":0,"index":5615},{"krate":0,"index":5618},{"krate":0,"index":5619},{"krate":0,"index":5622},{"krate":0,"index":5625},{"krate":0,"index":5628},{"krate":0,"index":5629},{"krate":0,"index":5632},{"krate":0,"index":5633},{"krate":0,"index":5635},{"krate":0,"index":5638},{"krate":0,"index":5639},{"krate":0,"index":5641},{"krate":0,"index":5644},{"krate":0,"index":5647},{"krate":0,"index":5650},{"krate":0,"index":5651},{"krate":0,"index":5652},{"krate":0,"index":5654},{"krate":0,"index":5655},{"krate":0,"index":5657},{"krate":0,"index":5658},{"krate":0,"index":5660},{"krate":0,"index":5661},{"krate":0,"index":5663},{"krate":0,"index":5664},{"krate":0,"index":5666},{"krate":0,"index":5667},{"krate":0,"index":5670},{"krate":0,"index":5673},{"krate":0,"index":5676},{"krate":0,"index":5677},{"krate":0,"index":5680},{"krate":0,"index":5683},{"krate":0,"index":5684},{"krate":0,"index":5687},{"krate":0,"index":5690},{"krate":0,"index":5691},{"krate":0,"index":5694},{"krate":0,"index":5697},{"krate":0,"index":5700},{"krate":0,"index":5703},{"krate":0,"index":5706},{"krate":0,"index":5712},{"krate":0,"index":5782},{"krate":0,"index":5783},{"krate":0,"index":5786},{"krate":0,"index":5787},{"krate":0,"index":5789},{"krate":0,"index":5790},{"krate":0,"index":5792},{"krate":0,"index":5795},{"krate":0,"index":5798},{"krate":0,"index":5866},{"krate":0,"index":5869},{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5932},{"krate":0,"index":5935},{"krate":0,"index":5940},{"krate":0,"index":5942},{"krate":0,"index":5944},{"krate":0,"index":5946},{"krate":0,"index":5948},{"krate":0,"index":5950},{"krate":0,"index":5953},{"krate":0,"index":5968},{"krate":0,"index":5981},{"krate":0,"index":5984},{"krate":0,"index":5988},{"krate":0,"index":5991},{"krate":0,"index":5997},{"krate":0,"index":6003},{"krate":0,"index":6008},{"krate":0,"index":6013},{"krate":0,"index":6016}],"decl_id":null,"docs":" An unbounded set of futures.","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139064,"byte_end":139098,"line_start":110,"line_end":110,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139099,"byte_end":139124,"line_start":111,"line_end":111,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":433866,"byte_end":433898,"line_start":1,"line_end":1,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":433899,"byte_end":433902,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":433903,"byte_end":433978,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":433979,"byte_end":434036,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":12870},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461158,"byte_end":461168,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IterPinMut","qualname":"::stream::futures_unordered::iter::IterPinMut","value":"IterPinMut {  }","parent":null,"children":[{"krate":0,"index":12873},{"krate":0,"index":12874},{"krate":0,"index":12875}],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461070,"byte_end":461129,"line_start":8,"line_end":8,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":12880},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461405,"byte_end":461412,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::futures_unordered::iter::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all futures in the unordered set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461317,"byte_end":461376,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":12889},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461553,"byte_end":461563,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"name":"IterPinRef","qualname":"::stream::futures_unordered::iter::IterPinRef","value":"IterPinRef {  }","parent":null,"children":[{"krate":0,"index":12892},{"krate":0,"index":12893},{"krate":0,"index":12894},{"krate":0,"index":12895}],"decl_id":null,"docs":" Immutable iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all futures in the unordered set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461463,"byte_end":461524,"line_start":20,"line_end":20,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":12900},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461851,"byte_end":461855,"line_start":31,"line_end":31,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::futures_unordered::iter::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all the futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all the futures in the unordered set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461757,"byte_end":461822,"line_start":29,"line_end":29,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":12909},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461992,"byte_end":462000,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::futures_unordered::iter::IntoIter","value":"IntoIter {  }","parent":null,"children":[{"krate":0,"index":12911},{"krate":0,"index":12912}],"decl_id":null,"docs":" Owned iterator over all futures in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all futures in the unordered set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":461906,"byte_end":461963,"line_start":33,"line_end":33,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":5734},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":462165,"byte_end":462169,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<Fut> as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5735},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":463181,"byte_end":463190,"line_start":70,"line_end":70,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<Fut> as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5742},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":463418,"byte_end":463422,"line_start":80,"line_end":80,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinMut as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5743},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464095,"byte_end":464104,"line_start":99,"line_end":99,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinMut as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5750},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464330,"byte_end":464334,"line_start":109,"line_end":109,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5751},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464424,"byte_end":464433,"line_start":113,"line_end":113,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5758},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464652,"byte_end":464656,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"next","qualname":"<IterPinRef as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5759},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465350,"byte_end":465359,"line_start":142,"line_end":142,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterPinRef as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5766},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465578,"byte_end":465582,"line_start":152,"line_end":152,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5767},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465672,"byte_end":465681,"line_start":156,"line_end":156,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5935},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435980,"byte_end":435996,"line_start":55,"line_end":55,"column_start":12,"column_end":28},"name":"FuturesUnordered","qualname":"::stream::futures_unordered::FuturesUnordered","value":"FuturesUnordered {  }","parent":null,"children":[{"krate":0,"index":5937},{"krate":0,"index":5938},{"krate":0,"index":5939}],"decl_id":null,"docs":" A set of futures which may complete in any order.","sig":null,"attributes":[{"value":"/ A set of futures which may complete in any order.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434885,"byte_end":434938,"line_start":34,"line_end":34,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434939,"byte_end":434942,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ This structure is optimized to manage a large number of futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":434943,"byte_end":435011,"line_start":36,"line_end":36,"column_start":1,"column_end":69}},{"value":"/ Futures managed by [`FuturesUnordered`] will only be polled when they","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435012,"byte_end":435085,"line_start":37,"line_end":37,"column_start":1,"column_end":74}},{"value":"/ generate wake-up notifications. This reduces the required amount of work","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435086,"byte_end":435162,"line_start":38,"line_end":38,"column_start":1,"column_end":77}},{"value":"/ needed to poll large numbers of futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435163,"byte_end":435207,"line_start":39,"line_end":39,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435208,"byte_end":435211,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ [`FuturesUnordered`] can be filled by [`collect`](Iterator::collect)ing an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435212,"byte_end":435290,"line_start":41,"line_end":41,"column_start":1,"column_end":79}},{"value":"/ iterator of futures into a [`FuturesUnordered`], or by","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435291,"byte_end":435349,"line_start":42,"line_end":42,"column_start":1,"column_end":59}},{"value":"/ [`push`](FuturesUnordered::push)ing futures onto an existing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435350,"byte_end":435414,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"/ [`FuturesUnordered`]. When new futures are added,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435415,"byte_end":435468,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"/ [`poll_next`](Stream::poll_next) must be called in order to begin receiving","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435469,"byte_end":435548,"line_start":45,"line_end":45,"column_start":1,"column_end":80}},{"value":"/ wake-ups for new futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435549,"byte_end":435578,"line_start":46,"line_end":46,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435579,"byte_end":435582,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Note that you can create a ready-made [`FuturesUnordered`] via the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435583,"byte_end":435653,"line_start":48,"line_end":48,"column_start":1,"column_end":71}},{"value":"/ [`collect`](Iterator::collect) method, or you can start with an empty set","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435654,"byte_end":435731,"line_start":49,"line_end":49,"column_start":1,"column_end":78}},{"value":"/ with the [`FuturesUnordered::new`] constructor.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435732,"byte_end":435783,"line_start":50,"line_end":50,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435784,"byte_end":435787,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This type is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435788,"byte_end":435861,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435862,"byte_end":435919,"line_start":53,"line_end":53,"column_start":1,"column_end":58}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":435920,"byte_end":435968,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":5947},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436345,"byte_end":436354,"line_start":66,"line_end":66,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"<FuturesUnordered<FutureObj> as futures_task::Spawn>::spawn_obj","value":"fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":22,"index":16},"children":[],"decl_id":{"krate":22,"index":17},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5949},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436551,"byte_end":436566,"line_start":73,"line_end":73,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"<FuturesUnordered<LocalFutureObj> as futures_task::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":22,"index":19},"children":[],"decl_id":{"krate":22,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5952},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438255,"byte_end":438262,"line_start":105,"line_end":105,"column_start":8,"column_end":15},"name":"default","qualname":"<FuturesUnordered<Fut> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5955},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438613,"byte_end":438616,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<FuturesUnordered<Fut>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty [`FuturesUnordered`].","sig":null,"attributes":[{"value":"/ Constructs a new, empty [`FuturesUnordered`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438342,"byte_end":438391,"line_start":111,"line_end":111,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438396,"byte_end":438399,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The returned [`FuturesUnordered`] does not contain any futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438404,"byte_end":438471,"line_start":113,"line_end":113,"column_start":5,"column_end":72}},{"value":"/ In this state, [`FuturesUnordered::poll_next`](Stream::poll_next) will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438476,"byte_end":438550,"line_start":114,"line_end":114,"column_start":5,"column_end":79}},{"value":"/ return [`Poll::Ready(None)`](Poll::Ready).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438555,"byte_end":438601,"line_start":115,"line_end":115,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5956},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":439646,"byte_end":439649,"line_start":145,"line_end":145,"column_start":12,"column_end":15},"name":"len","qualname":"<FuturesUnordered<Fut>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of futures contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of futures contained in the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":439508,"byte_end":439563,"line_start":142,"line_end":142,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":439568,"byte_end":439571,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":439576,"byte_end":439634,"line_start":144,"line_end":144,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":5957},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":439813,"byte_end":439821,"line_start":151,"line_end":151,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<FuturesUnordered<Fut>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no futures.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":439751,"byte_end":439801,"line_start":150,"line_end":150,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":5958},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":440404,"byte_end":440408,"line_start":163,"line_end":163,"column_start":12,"column_end":16},"name":"push","qualname":"<FuturesUnordered<Fut>>::push","value":"fn push(&Self, Fut)","parent":null,"children":[],"decl_id":null,"docs":" Push a future into the set.","sig":null,"attributes":[{"value":"/ Push a future into the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":440034,"byte_end":440065,"line_start":157,"line_end":157,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":440070,"byte_end":440073,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ This method adds the given future to the set. This method will not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":440078,"byte_end":440148,"line_start":159,"line_end":159,"column_start":5,"column_end":75}},{"value":"/ call [`poll`](core::future::Future::poll) on the submitted future. The caller must","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":440153,"byte_end":440239,"line_start":160,"line_end":160,"column_start":5,"column_end":91}},{"value":"/ ensure that [`FuturesUnordered::poll_next`](Stream::poll_next) is called","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":440244,"byte_end":440320,"line_start":161,"line_end":161,"column_start":5,"column_end":81}},{"value":"/ in order to receive wake-up notifications for the given future.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":440325,"byte_end":440392,"line_start":162,"line_end":162,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5959},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":441726,"byte_end":441730,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"iter","qualname":"<FuturesUnordered<Fut>>::iter","value":"fn iter(&Self) -> Iter<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":441644,"byte_end":441714,"line_start":191,"line_end":191,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5960},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":441928,"byte_end":441940,"line_start":200,"line_end":200,"column_start":12,"column_end":24},"name":"iter_pin_ref","qualname":"<FuturesUnordered<Fut>>::iter_pin_ref","value":"fn iter_pin_ref(Pin<&Self>) -> IterPinRef<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each future in the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":441846,"byte_end":441916,"line_start":199,"line_end":199,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":5961},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":442269,"byte_end":442277,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<FuturesUnordered<Fut>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut<, Fut> where Fut: Unpin","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":442188,"byte_end":442257,"line_start":207,"line_end":207,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5962},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":442484,"byte_end":442496,"line_start":216,"line_end":216,"column_start":12,"column_end":24},"name":"iter_pin_mut","qualname":"<FuturesUnordered<Fut>>::iter_pin_mut","value":"fn iter_pin_mut(Pin<&mut Self>) -> IterPinMut<, Fut>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each future in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each future in the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":442403,"byte_end":442472,"line_start":215,"line_end":215,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":5971},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":450000,"byte_end":450009,"line_start":388,"line_end":388,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5980},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457015,"byte_end":457024,"line_start":543,"line_end":543,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<FuturesUnordered<Fut> as futures_core::Stream>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":99},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5983},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457175,"byte_end":457178,"line_start":550,"line_end":550,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FuturesUnordered<Fut> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5986},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457379,"byte_end":457384,"line_start":557,"line_end":557,"column_start":12,"column_end":17},"name":"clear","qualname":"<FuturesUnordered<Fut>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all futures.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457326,"byte_end":457367,"line_start":556,"line_end":556,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":5990},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457916,"byte_end":457920,"line_start":576,"line_end":576,"column_start":8,"column_end":12},"name":"drop","qualname":"<FuturesUnordered<Fut> as core::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":1,"index":3393},"children":[],"decl_id":{"krate":1,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":5996},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459238,"byte_end":459247,"line_start":602,"line_end":602,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a FuturesUnordered<Fut> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":7991},"children":[],"decl_id":{"krate":1,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6002},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459448,"byte_end":459457,"line_start":611,"line_end":611,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut FuturesUnordered<Fut> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":7991},"children":[],"decl_id":{"krate":1,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6007},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459639,"byte_end":459648,"line_start":620,"line_end":620,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<FuturesUnordered<Fut> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":7991},"children":[],"decl_id":{"krate":1,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6010},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460068,"byte_end":460077,"line_start":631,"line_end":631,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<FuturesUnordered<Fut> as core::iter::FromIterator>::from_iter","value":"fn from_iter<I>(I) -> Self where I: IntoIterator<Item = Fut>","parent":{"krate":1,"index":7987},"children":[],"decl_id":{"krate":1,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6015},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460360,"byte_end":460373,"line_start":644,"line_end":644,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<FuturesUnordered<Fut> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6018},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460498,"byte_end":460504,"line_start":650,"line_end":650,"column_start":8,"column_end":14},"name":"extend","qualname":"<FuturesUnordered<Fut> as core::iter::Extend>::extend","value":"fn extend<I>(&mut Self, I) where I: IntoIterator<Item = Fut>","parent":{"krate":1,"index":8000},"children":[],"decl_id":{"krate":1,"index":8002},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":6023},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"select_all","qualname":"::stream::select_all","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","parent":null,"children":[{"krate":0,"index":6024},{"krate":0,"index":6025},{"krate":0,"index":6028},{"krate":0,"index":6029},{"krate":0,"index":6031},{"krate":0,"index":6034},{"krate":0,"index":6037},{"krate":0,"index":6040},{"krate":0,"index":6041},{"krate":0,"index":6044},{"krate":0,"index":6047},{"krate":0,"index":6048},{"krate":0,"index":6051},{"krate":0,"index":6054},{"krate":0,"index":6057},{"krate":0,"index":6060},{"krate":0,"index":6061},{"krate":0,"index":6064},{"krate":0,"index":6067},{"krate":0,"index":6070},{"krate":0,"index":12916},{"krate":0,"index":12919},{"krate":0,"index":6073},{"krate":0,"index":6076},{"krate":0,"index":6085},{"krate":0,"index":6088},{"krate":0,"index":6092},{"krate":0,"index":6095},{"krate":0,"index":6097},{"krate":0,"index":6101},{"krate":0,"index":6105},{"krate":0,"index":6110},{"krate":0,"index":6116},{"krate":0,"index":12949},{"krate":0,"index":12954},{"krate":0,"index":12958},{"krate":0,"index":12963},{"krate":0,"index":12967},{"krate":0,"index":12971},{"krate":0,"index":6122},{"krate":0,"index":6128},{"krate":0,"index":6130},{"krate":0,"index":6136},{"krate":0,"index":6138},{"krate":0,"index":6143}],"decl_id":null,"docs":" An unbounded set of streams\n","sig":null,"attributes":[{"value":"cfg(not(futures_no_atomic_cas))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139280,"byte_end":139314,"line_start":118,"line_end":118,"column_start":1,"column_end":35}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139315,"byte_end":139340,"line_start":119,"line_end":119,"column_start":1,"column_end":26}},{"value":"/ An unbounded set of streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":474720,"byte_end":474751,"line_start":1,"line_end":1,"column_start":1,"column_end":32}}]},{"kind":"Struct","id":{"krate":0,"index":12916},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":475791,"byte_end":475800,"line_start":30,"line_end":30,"column_start":16,"column_end":25},"name":"SelectAll","qualname":"::stream::select_all::SelectAll","value":"SelectAll {  }","parent":null,"children":[{"krate":0,"index":12918}],"decl_id":null,"docs":" An unbounded set of streams","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6075},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":475931,"byte_end":475934,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SelectAll<St> as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6078},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476282,"byte_end":476285,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<SelectAll<St>>::new","value":"fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new, empty `SelectAll`","sig":null,"attributes":[{"value":"/ Constructs a new, empty `SelectAll`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476082,"byte_end":476121,"line_start":43,"line_end":43,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476126,"byte_end":476129,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ The returned `SelectAll` does not contain any streams and, in this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476134,"byte_end":476204,"line_start":45,"line_end":45,"column_start":5,"column_end":75}},{"value":"/ state, `SelectAll::poll` will return `Poll::Ready(None)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476209,"byte_end":476270,"line_start":46,"line_end":46,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":6079},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476495,"byte_end":476498,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"len","qualname":"<SelectAll<St>>::len","value":"fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of streams contained in the set.","sig":null,"attributes":[{"value":"/ Returns the number of streams contained in the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476357,"byte_end":476412,"line_start":51,"line_end":51,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476417,"byte_end":476420,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This represents the total number of in-flight streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476425,"byte_end":476483,"line_start":53,"line_end":53,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":6080},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476614,"byte_end":476622,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<SelectAll<St>>::is_empty","value":"fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the set contains no streams\n","sig":null,"attributes":[{"value":"/ Returns `true` if the set contains no streams","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476553,"byte_end":476602,"line_start":58,"line_end":58,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":6081},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476984,"byte_end":476988,"line_start":69,"line_end":69,"column_start":12,"column_end":16},"name":"push","qualname":"<SelectAll<St>>::push","value":"fn push(&mut Self, St)","parent":null,"children":[],"decl_id":null,"docs":" Push a stream into the set.","sig":null,"attributes":[{"value":"/ Push a stream into the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476681,"byte_end":476712,"line_start":63,"line_end":63,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476717,"byte_end":476720,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This function submits the given stream to the set for managing. This","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476725,"byte_end":476797,"line_start":65,"line_end":65,"column_start":5,"column_end":77}},{"value":"/ function will not call `poll` on the submitted stream. The caller must","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476802,"byte_end":476876,"line_start":66,"line_end":66,"column_start":5,"column_end":79}},{"value":"/ ensure that `SelectAll::poll` is called in order to receive task","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476881,"byte_end":476949,"line_start":67,"line_end":67,"column_start":5,"column_end":73}},{"value":"/ notifications.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476954,"byte_end":476972,"line_start":68,"line_end":68,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":6082},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477154,"byte_end":477158,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"iter","qualname":"<SelectAll<St>>::iter","value":"fn iter(&Self) -> Iter<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows inspecting each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows inspecting each stream in the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477072,"byte_end":477142,"line_start":73,"line_end":73,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":6083},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477308,"byte_end":477316,"line_start":79,"line_end":79,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<SelectAll<St>>::iter_mut","value":"fn iter_mut(&mut Self) -> IterMut<, St>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that allows modifying each stream in the set.\n","sig":null,"attributes":[{"value":"/ Returns an iterator that allows modifying each stream in the set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477227,"byte_end":477296,"line_start":78,"line_end":78,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":6084},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477452,"byte_end":477457,"line_start":84,"line_end":84,"column_start":12,"column_end":17},"name":"clear","qualname":"<SelectAll<St>>::clear","value":"fn clear(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears the set, removing all streams.\n","sig":null,"attributes":[{"value":"/ Clears the set, removing all streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477399,"byte_end":477440,"line_start":83,"line_end":83,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":6087},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477567,"byte_end":477574,"line_start":90,"line_end":90,"column_start":8,"column_end":15},"name":"default","qualname":"<SelectAll<St> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6091},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477702,"byte_end":477711,"line_start":98,"line_end":98,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<SelectAll<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6094},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478468,"byte_end":478481,"line_start":118,"line_end":118,"column_start":8,"column_end":21},"name":"is_terminated","qualname":"<SelectAll<St> as futures_core::FusedStream>::is_terminated","value":"fn is_terminated(&Self) -> bool","parent":{"krate":5,"index":110},"children":[],"decl_id":{"krate":5,"index":111},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6095},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479164,"byte_end":479174,"line_start":135,"line_end":135,"column_start":8,"column_end":18},"name":"select_all","qualname":"::stream::select_all::select_all","value":"fn select_all<I>(I) -> SelectAll<I::Item> where I: IntoIterator,\nI::Item: Stream + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Convert a list of streams into a `Stream` of results from the streams.","sig":null,"attributes":[{"value":"/ Convert a list of streams into a `Stream` of results from the streams.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478543,"byte_end":478617,"line_start":123,"line_end":123,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478618,"byte_end":478621,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ This essentially takes a list of streams (e.g. a vector, an iterator, etc.)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478622,"byte_end":478701,"line_start":125,"line_end":125,"column_start":1,"column_end":80}},{"value":"/ and bundles them together into a single stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478702,"byte_end":478753,"line_start":126,"line_end":126,"column_start":1,"column_end":52}},{"value":"/ The stream will yield items as they become available on the underlying","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478754,"byte_end":478828,"line_start":127,"line_end":127,"column_start":1,"column_end":75}},{"value":"/ streams internally, in the order they become available.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478829,"byte_end":478888,"line_start":128,"line_end":128,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478889,"byte_end":478892,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Note that the returned set can also be used to dynamically push more","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478893,"byte_end":478965,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ streams into the set as they become available.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478966,"byte_end":479016,"line_start":131,"line_end":131,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479017,"byte_end":479020,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479021,"byte_end":479098,"line_start":133,"line_end":133,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479099,"byte_end":479156,"line_start":134,"line_end":134,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6099},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479495,"byte_end":479504,"line_start":150,"line_end":150,"column_start":8,"column_end":17},"name":"from_iter","qualname":"<SelectAll<St> as core::iter::FromIterator>::from_iter","value":"fn from_iter<T>(T) -> Self where T: IntoIterator<Item = St>","parent":{"krate":1,"index":7987},"children":[],"decl_id":{"krate":1,"index":7989},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6103},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479649,"byte_end":479655,"line_start":156,"line_end":156,"column_start":8,"column_end":14},"name":"extend","qualname":"<SelectAll<St> as core::iter::Extend>::extend","value":"fn extend<T>(&mut Self, T) where T: IntoIterator<Item = St>","parent":{"krate":1,"index":8000},"children":[],"decl_id":{"krate":1,"index":8002},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6109},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479896,"byte_end":479905,"line_start":167,"line_end":167,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<SelectAll<St> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":7991},"children":[],"decl_id":{"krate":1,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6115},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480114,"byte_end":480123,"line_start":176,"line_end":176,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a SelectAll<St> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":7991},"children":[],"decl_id":{"krate":1,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6121},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480322,"byte_end":480331,"line_start":185,"line_end":185,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a mut SelectAll<St> as core::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":1,"index":7991},"children":[],"decl_id":{"krate":1,"index":7994},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12949},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480481,"byte_end":480485,"line_start":192,"line_end":192,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::select_all::Iter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Immutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Immutable iterator over all streams in the unordered set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480391,"byte_end":480452,"line_start":190,"line_end":190,"column_start":1,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":12958},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480638,"byte_end":480645,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"IterMut","qualname":"::stream::select_all::IterMut","value":"","parent":null,"children":[],"decl_id":null,"docs":" Mutable iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Mutable iterator over all streams in the unordered set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480550,"byte_end":480609,"line_start":194,"line_end":194,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":12967},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480799,"byte_end":480807,"line_start":200,"line_end":200,"column_start":12,"column_end":20},"name":"IntoIter","qualname":"::stream::select_all::IntoIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" Owned iterator over all streams in the unordered set.\n","sig":null,"attributes":[{"value":"/ Owned iterator over all streams in the unordered set.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480713,"byte_end":480770,"line_start":198,"line_end":198,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":6126},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480957,"byte_end":480961,"line_start":205,"line_end":205,"column_start":8,"column_end":12},"name":"next","qualname":"<Iter as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6127},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481219,"byte_end":481228,"line_start":213,"line_end":213,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<Iter as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6134},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481460,"byte_end":481464,"line_start":223,"line_end":223,"column_start":8,"column_end":12},"name":"next","qualname":"<IterMut as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6135},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481722,"byte_end":481731,"line_start":231,"line_end":231,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IterMut as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6141},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481951,"byte_end":481955,"line_start":241,"line_end":241,"column_start":8,"column_end":12},"name":"next","qualname":"<IntoIter<St> as core::iter::Iterator>::next","value":"fn next(&mut Self) -> Option<Self::Item>","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8188},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6142},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":482216,"byte_end":482225,"line_start":249,"line_end":249,"column_start":8,"column_end":17},"name":"size_hint","qualname":"<IntoIter<St> as core::iter::Iterator>::size_hint","value":"fn size_hint(&Self) -> (usize, Option<usize>)","parent":{"krate":1,"index":8186},"children":[],"decl_id":{"krate":1,"index":8189},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":6166},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":482822,"byte_end":482831,"line_start":12,"line_end":12,"column_start":8,"column_end":17},"name":"abortable","qualname":"::stream::abortable::abortable","value":"fn abortable<St>(St) -> (Abortable<St>, AbortHandle) where St: Stream","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` stream and an `AbortHandle` which can be used to stop it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":482452,"byte_end":482539,"line_start":5,"line_end":5,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":482540,"byte_end":482543,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This function is a convenient (but less flexible) alternative to calling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":482544,"byte_end":482620,"line_start":7,"line_end":7,"column_start":1,"column_end":77}},{"value":"/ `AbortHandle::new` and `Abortable::new` manually.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":482621,"byte_end":482674,"line_start":8,"line_end":8,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":482675,"byte_end":482678,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":482679,"byte_end":482756,"line_start":10,"line_end":10,"column_start":1,"column_end":78}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/abortable.rs","byte_start":482757,"byte_end":482814,"line_start":11,"line_end":11,"column_start":1,"column_end":58}}]},{"kind":"Mod","id":{"krate":0,"index":6200},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","parent":null,"children":[{"krate":0,"index":6201},{"krate":0,"index":6202},{"krate":0,"index":6205},{"krate":0,"index":6208},{"krate":0,"index":6211},{"krate":0,"index":6214},{"krate":0,"index":6217},{"krate":0,"index":6218},{"krate":0,"index":6221},{"krate":0,"index":6224},{"krate":0,"index":6227},{"krate":0,"index":6230},{"krate":0,"index":6233},{"krate":0,"index":6236},{"krate":0,"index":6239},{"krate":0,"index":6242},{"krate":0,"index":6245},{"krate":0,"index":6248},{"krate":0,"index":6249},{"krate":0,"index":6252},{"krate":0,"index":6255},{"krate":0,"index":6258},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6296}],"decl_id":null,"docs":" Tools for working with tasks.","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483059,"byte_end":483092,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483093,"byte_end":483096,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module contains:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483097,"byte_end":483122,"line_start":3,"line_end":3,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483123,"byte_end":483126,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ - [`Spawn`], a trait for spawning new tasks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483127,"byte_end":483175,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"/ - [`Context`], a context of an asynchronous task,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483176,"byte_end":483229,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/   including a handle for waking up the task.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483230,"byte_end":483278,"line_start":7,"line_end":7,"column_start":1,"column_end":49}},{"value":"/ - [`Waker`], a handle for waking up a task.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483279,"byte_end":483326,"line_start":8,"line_end":8,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483327,"byte_end":483330,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The remaining types and traits in the module are used for implementing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483331,"byte_end":483405,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ executors or dealing with synchronization issues around task wakeup.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/mod.rs","byte_start":483406,"byte_end":483478,"line_start":11,"line_end":11,"column_start":1,"column_end":73}}]},{"kind":"Trait","id":{"krate":0,"index":6286},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484728,"byte_end":484736,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[{"krate":0,"index":6287}],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484685,"byte_end":484717,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":6287},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485911,"byte_end":485916,"line_start":49,"line_end":49,"column_start":8,"column_end":13},"name":"spawn","qualname":"::task::spawn::SpawnExt::spawn","value":"fn spawn<Fut>(&Self, Fut) -> Result<(), SpawnError> where Fut: Future<Output =\n()> + Send + 'static","parent":{"krate":0,"index":6286},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484750,"byte_end":484815,"line_start":21,"line_end":21,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484820,"byte_end":484835,"line_start":22,"line_end":22,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484840,"byte_end":484843,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484848,"byte_end":484918,"line_start":24,"line_end":24,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484923,"byte_end":484942,"line_start":25,"line_end":25,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484947,"byte_end":484950,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484955,"byte_end":485024,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485029,"byte_end":485102,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485107,"byte_end":485146,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485151,"byte_end":485154,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485159,"byte_end":485225,"line_start":31,"line_end":31,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485230,"byte_end":485296,"line_start":32,"line_end":32,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485301,"byte_end":485372,"line_start":33,"line_end":33,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485377,"byte_end":485433,"line_start":34,"line_end":34,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485438,"byte_end":485441,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485446,"byte_end":485453,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485458,"byte_end":485465,"line_start":37,"line_end":37,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::ThreadPool;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485470,"byte_end":485508,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ use futures::task::SpawnExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485513,"byte_end":485545,"line_start":39,"line_end":39,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485550,"byte_end":485553,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ let executor = ThreadPool::new().unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485558,"byte_end":485604,"line_start":41,"line_end":41,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485609,"byte_end":485612,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485617,"byte_end":485654,"line_start":43,"line_end":43,"column_start":5,"column_end":42}},{"value":"/ executor.spawn(future).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485659,"byte_end":485695,"line_start":44,"line_end":44,"column_start":5,"column_end":41}},{"value":"/ # }","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485700,"byte_end":485707,"line_start":45,"line_end":45,"column_start":5,"column_end":12}},{"value":"/ # std::thread::sleep(std::time::Duration::from_millis(500)); // wait for background threads closed: https://github.com/rust-lang/miri/issues/1371","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485712,"byte_end":485861,"line_start":46,"line_end":46,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485866,"byte_end":485873,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":485878,"byte_end":485903,"line_start":48,"line_end":48,"column_start":5,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":6289},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":487848,"byte_end":487861,"line_start":103,"line_end":103,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[{"krate":0,"index":6290}],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":487800,"byte_end":487837,"line_start":102,"line_end":102,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":6290},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488904,"byte_end":488915,"line_start":130,"line_end":130,"column_start":8,"column_end":19},"name":"spawn_local","qualname":"::task::spawn::LocalSpawnExt::spawn_local","value":"fn spawn_local<Fut>(&Self, Fut) -> Result<(), SpawnError> where\nFut: Future<Output = ()> + 'static","parent":{"krate":0,"index":6289},"children":[],"decl_id":null,"docs":" Spawns a task that polls the given future with output `()` to\n completion.","sig":null,"attributes":[{"value":"/ Spawns a task that polls the given future with output `()` to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":487880,"byte_end":487945,"line_start":104,"line_end":104,"column_start":5,"column_end":70}},{"value":"/ completion.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":487950,"byte_end":487965,"line_start":105,"line_end":105,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":487970,"byte_end":487973,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ This method returns a [`Result`] that contains a [`SpawnError`] if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":487978,"byte_end":488048,"line_start":107,"line_end":107,"column_start":5,"column_end":75}},{"value":"/ spawning fails.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488053,"byte_end":488072,"line_start":108,"line_end":108,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488077,"byte_end":488080,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ You can use [`spawn_with_handle`](SpawnExt::spawn_with_handle) if","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488085,"byte_end":488154,"line_start":110,"line_end":110,"column_start":5,"column_end":74}},{"value":"/ you want to spawn a future with output other than `()` or if you want","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488159,"byte_end":488232,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/ to be able to await its completion.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488237,"byte_end":488276,"line_start":112,"line_end":112,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488281,"byte_end":488284,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Note this method will eventually be replaced with the upcoming","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488289,"byte_end":488355,"line_start":114,"line_end":114,"column_start":5,"column_end":71}},{"value":"/ `Spawn::spawn` method which will take a `dyn Future` as input.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488360,"byte_end":488426,"line_start":115,"line_end":115,"column_start":5,"column_end":71}},{"value":"/ Technical limitations prevent `Spawn::spawn` from being implemented","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488431,"byte_end":488502,"line_start":116,"line_end":116,"column_start":5,"column_end":76}},{"value":"/ today. Feel free to use this method in the meantime.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488507,"byte_end":488563,"line_start":117,"line_end":117,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488568,"byte_end":488571,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488576,"byte_end":488583,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::LocalPool;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488588,"byte_end":488625,"line_start":120,"line_end":120,"column_start":5,"column_end":42}},{"value":"/ use futures::task::LocalSpawnExt;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488630,"byte_end":488667,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488672,"byte_end":488675,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ let executor = LocalPool::new();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488680,"byte_end":488716,"line_start":123,"line_end":123,"column_start":5,"column_end":41}},{"value":"/ let spawner = executor.spawner();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488721,"byte_end":488758,"line_start":124,"line_end":124,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488763,"byte_end":488766,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ let future = async { /* ... */ };","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488771,"byte_end":488808,"line_start":126,"line_end":126,"column_start":5,"column_end":42}},{"value":"/ spawner.spawn_local(future).unwrap();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488813,"byte_end":488854,"line_start":127,"line_end":127,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488859,"byte_end":488866,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":488871,"byte_end":488896,"line_start":129,"line_end":129,"column_start":5,"column_end":30}}]},{"kind":"Mod","id":{"krate":0,"index":6299},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","parent":null,"children":[{"krate":0,"index":6300}],"decl_id":null,"docs":" This module contains the `Never` type.","sig":null,"attributes":[{"value":"/ This module contains the `Never` type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490320,"byte_end":490362,"line_start":1,"line_end":1,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490363,"byte_end":490366,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Values of this type can never be created and will never exist.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490367,"byte_end":490433,"line_start":3,"line_end":3,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":6300},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":491070,"byte_end":491075,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490435,"byte_end":490470,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490471,"byte_end":490474,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490475,"byte_end":490550,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490551,"byte_end":490588,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490589,"byte_end":490592,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490593,"byte_end":490657,"line_start":10,"line_end":10,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490658,"byte_end":490661,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490662,"byte_end":490733,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490734,"byte_end":490785,"line_start":13,"line_end":13,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490786,"byte_end":490878,"line_start":14,"line_end":14,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490879,"byte_end":490882,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490883,"byte_end":490954,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/never.rs","byte_start":490955,"byte_end":491060,"line_start":17,"line_end":17,"column_start":1,"column_end":106}}]},{"kind":"Mod","id":{"krate":0,"index":6301},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"lock","qualname":"::lock","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","parent":null,"children":[],"decl_id":null,"docs":" Futures-powered synchronization primitives.","sig":null,"attributes":[{"value":"cfg(feature = \"alloc\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11428,"byte_end":11453,"line_start":329,"line_end":329,"column_start":1,"column_end":26}},{"value":"/ Futures-powered synchronization primitives.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":491106,"byte_end":491153,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":491154,"byte_end":491157,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This module is only available when the `std` or `alloc` feature of this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":491158,"byte_end":491233,"line_start":3,"line_end":3,"column_start":1,"column_end":76}},{"value":"/ library is activated, and it is activated by default.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lock/mod.rs","byte_start":491234,"byte_end":491291,"line_start":4,"line_end":4,"column_start":1,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":12974},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":492591,"byte_end":492600,"line_start":15,"line_end":15,"column_start":16,"column_end":25},"name":"Abortable","qualname":"::abortable::Abortable","value":"Abortable {  }","parent":null,"children":[{"krate":0,"index":12976},{"krate":0,"index":12977}],"decl_id":null,"docs":" A future/stream which can be remotely short-circuited using an `AbortHandle`.\n","sig":null,"attributes":[{"value":"must_use = \"futures/streams do nothing unless you poll them\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/pin-project-lite-0.2.9/src/lib.rs","byte_start":14002369,"byte_end":14002378,"line_start":633,"line_end":633,"column_start":11,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":6340},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494010,"byte_end":494013,"line_start":58,"line_end":58,"column_start":12,"column_end":15},"name":"new","qualname":"<Abortable<T>>::new","value":"fn new(T, AbortRegistration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Abortable` future/stream using an existing `AbortRegistration`.\n `AbortRegistration`s can be acquired through `AbortHandle::new`.","sig":null,"attributes":[{"value":"/ Creates a new `Abortable` future/stream using an existing `AbortRegistration`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":492706,"byte_end":492788,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ `AbortRegistration`s can be acquired through `AbortHandle::new`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":492793,"byte_end":492861,"line_start":24,"line_end":24,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":492866,"byte_end":492869,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ When `abort` is called on the handle tied to `reg` or if `abort` has","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":492874,"byte_end":492946,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ already been called, the future/stream will complete immediately without making","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":492951,"byte_end":493034,"line_start":27,"line_end":27,"column_start":5,"column_end":88}},{"value":"/ any further progress.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493039,"byte_end":493064,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493069,"byte_end":493072,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493077,"byte_end":493092,"line_start":30,"line_end":30,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493097,"byte_end":493100,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ Usage with futures:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493105,"byte_end":493128,"line_start":32,"line_end":32,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493133,"byte_end":493136,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493141,"byte_end":493148,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493153,"byte_end":493194,"line_start":35,"line_end":35,"column_start":5,"column_end":46}},{"value":"/ use futures::future::{Abortable, AbortHandle, Aborted};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493199,"byte_end":493258,"line_start":36,"line_end":36,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493263,"byte_end":493266,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493271,"byte_end":493340,"line_start":38,"line_end":38,"column_start":5,"column_end":74}},{"value":"/ let future = Abortable::new(async { 2 }, abort_registration);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493345,"byte_end":493410,"line_start":39,"line_end":39,"column_start":5,"column_end":70}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493415,"byte_end":493440,"line_start":40,"line_end":40,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(future.await, Err(Aborted));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493445,"byte_end":493488,"line_start":41,"line_end":41,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493493,"byte_end":493502,"line_start":42,"line_end":42,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493507,"byte_end":493514,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493519,"byte_end":493522,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ Usage with streams:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493527,"byte_end":493550,"line_start":45,"line_end":45,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493555,"byte_end":493558,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493563,"byte_end":493570,"line_start":47,"line_end":47,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493575,"byte_end":493616,"line_start":48,"line_end":48,"column_start":5,"column_end":46}},{"value":"/ # use futures::future::{Abortable, AbortHandle};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493621,"byte_end":493673,"line_start":49,"line_end":49,"column_start":5,"column_end":57}},{"value":"/ # use futures::stream::{self, StreamExt};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493678,"byte_end":493723,"line_start":50,"line_end":50,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493728,"byte_end":493731,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ let (abort_handle, abort_registration) = AbortHandle::new_pair();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493736,"byte_end":493805,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ let mut stream = Abortable::new(stream::iter(vec![1, 2, 3]), abort_registration);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493810,"byte_end":493895,"line_start":53,"line_end":53,"column_start":5,"column_end":90}},{"value":"/ abort_handle.abort();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493900,"byte_end":493925,"line_start":54,"line_end":54,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493930,"byte_end":493972,"line_start":55,"line_end":55,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493977,"byte_end":493986,"line_start":56,"line_end":56,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":493991,"byte_end":493998,"line_start":57,"line_end":57,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6341},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494518,"byte_end":494528,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"is_aborted","qualname":"<Abortable<T>>::is_aborted","value":"fn is_aborted(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Checks whether the task has been aborted. Note that all this\n method indicates is whether [`AbortHandle::abort`] was *called*.\n This means that it will return `true` even if:\n * `abort` was called after the task had completed.\n * `abort` was called while the task was being polled - the task may still be running and\n will not be stopped until `poll` returns.\n","sig":null,"attributes":[{"value":"/ Checks whether the task has been aborted. Note that all this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494108,"byte_end":494172,"line_start":62,"line_end":62,"column_start":5,"column_end":69}},{"value":"/ method indicates is whether [`AbortHandle::abort`] was *called*.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494177,"byte_end":494245,"line_start":63,"line_end":63,"column_start":5,"column_end":73}},{"value":"/ This means that it will return `true` even if:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494250,"byte_end":494300,"line_start":64,"line_end":64,"column_start":5,"column_end":55}},{"value":"/ * `abort` was called after the task had completed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494305,"byte_end":494359,"line_start":65,"line_end":65,"column_start":5,"column_end":59}},{"value":"/ * `abort` was called while the task was being polled - the task may still be running and","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494364,"byte_end":494456,"line_start":66,"line_end":66,"column_start":5,"column_end":97}},{"value":"/ will not be stopped until `poll` returns.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494461,"byte_end":494506,"line_start":67,"line_end":67,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":13017},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494796,"byte_end":494813,"line_start":77,"line_end":77,"column_start":12,"column_end":29},"name":"AbortRegistration","qualname":"::abortable::AbortRegistration","value":"AbortRegistration {  }","parent":null,"children":[{"krate":0,"index":13018}],"decl_id":null,"docs":" A registration handle for an `Abortable` task.\n Values of this type can be acquired from `AbortHandle::new` and are used\n in calls to `Abortable::new`.\n","sig":null,"attributes":[{"value":"/ A registration handle for an `Abortable` task.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494606,"byte_end":494656,"line_start":73,"line_end":73,"column_start":1,"column_end":51}},{"value":"/ Values of this type can be acquired from `AbortHandle::new` and are used","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494657,"byte_end":494733,"line_start":74,"line_end":74,"column_start":1,"column_end":77}},{"value":"/ in calls to `Abortable::new`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494734,"byte_end":494767,"line_start":75,"line_end":75,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":13021},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494930,"byte_end":494941,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"AbortHandle","qualname":"::abortable::AbortHandle","value":"AbortHandle {  }","parent":null,"children":[{"krate":0,"index":13022}],"decl_id":null,"docs":" A handle to an `Abortable` task.\n","sig":null,"attributes":[{"value":"/ A handle to an `Abortable` task.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494858,"byte_end":494894,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":6343},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":495212,"byte_end":495220,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"name":"new_pair","qualname":"<AbortHandle>::new_pair","value":"fn new_pair() -> (Self, AbortRegistration)","parent":null,"children":[],"decl_id":null,"docs":" Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used\n to abort a running future or stream.","sig":null,"attributes":[{"value":"/ Creates an (`AbortHandle`, `AbortRegistration`) pair which can be used","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494998,"byte_end":495072,"line_start":88,"line_end":88,"column_start":5,"column_end":79}},{"value":"/ to abort a running future or stream.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":495077,"byte_end":495117,"line_start":89,"line_end":89,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":495122,"byte_end":495125,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This function is usually paired with a call to [`Abortable::new`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":495130,"byte_end":495200,"line_start":91,"line_end":91,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":13032},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":495775,"byte_end":495782,"line_start":110,"line_end":110,"column_start":12,"column_end":19},"name":"Aborted","qualname":"::abortable::Aborted","value":"","parent":null,"children":[],"decl_id":null,"docs":" Indicator that the `Abortable` task was aborted.\n","sig":null,"attributes":[{"value":"/ Indicator that the `Abortable` task was aborted.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":495666,"byte_end":495718,"line_start":108,"line_end":108,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":6345},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":495824,"byte_end":495827,"line_start":113,"line_end":113,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Aborted as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9907},"children":[],"decl_id":{"krate":1,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6354},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497111,"byte_end":497115,"line_start":158,"line_end":158,"column_start":8,"column_end":12},"name":"poll","qualname":"<Abortable<Fut> as futures_core::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<Self::Output>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6359},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497335,"byte_end":497344,"line_start":169,"line_end":169,"column_start":8,"column_end":17},"name":"poll_next","qualname":"<Abortable<St> as futures_core::Stream>::poll_next","value":"fn poll_next(Pin<&mut Self>, &mut Context) -> Poll<Option<Self::Item>>","parent":{"krate":5,"index":96},"children":[],"decl_id":{"krate":5,"index":98},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6362},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497916,"byte_end":497921,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"abort","qualname":"<AbortHandle>::abort","value":"fn abort(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Abort the `Abortable` stream/future associated with this handle.","sig":null,"attributes":[{"value":"/ Abort the `Abortable` stream/future associated with this handle.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497549,"byte_end":497617,"line_start":175,"line_end":175,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497622,"byte_end":497625,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Notifies the Abortable task associated with this handle that it","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497630,"byte_end":497697,"line_start":177,"line_end":177,"column_start":5,"column_end":72}},{"value":"/ should abort. Note that if the task is currently being polled on","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497702,"byte_end":497770,"line_start":178,"line_end":178,"column_start":5,"column_end":73}},{"value":"/ another thread, it will not immediately stop running. Instead, it will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497775,"byte_end":497849,"line_start":179,"line_end":179,"column_start":5,"column_end":79}},{"value":"/ continue to run until its poll method returns.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497854,"byte_end":497904,"line_start":180,"line_end":180,"column_start":5,"column_end":55}}]},{"kind":"Trait","id":{"krate":0,"index":6374},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498104,"byte_end":498111,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":6376},{"krate":0,"index":6377}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":6376},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498126,"byte_end":498132,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":6374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6377},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498141,"byte_end":498150,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6383},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498275,"byte_end":498284,"line_start":14,"line_end":14,"column_start":8,"column_end":17},"name":"call_once","qualname":"<T as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> R","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":6384},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498343,"byte_end":498349,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":6386}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6386},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498374,"byte_end":498382,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":6384},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6391},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498489,"byte_end":498497,"line_start":27,"line_end":27,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<T as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, A) -> R","parent":{"krate":0,"index":6384},"children":[],"decl_id":{"krate":0,"index":6386},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6401},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":499688,"byte_end":499692,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6407},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":499755,"byte_end":499762,"line_start":77,"line_end":77,"column_start":8,"column_end":15},"name":"default","qualname":"<OkFn<E> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6412},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":499885,"byte_end":499894,"line_start":84,"line_end":84,"column_start":8,"column_end":17},"name":"call_once","qualname":"<OkFn<E> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13063},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500048,"byte_end":500055,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6418},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500203,"byte_end":500212,"line_start":100,"line_end":100,"column_start":8,"column_end":17},"name":"call_once","qualname":"<ChainFn<F, G> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6423},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500402,"byte_end":500410,"line_start":109,"line_end":109,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<ChainFn<F, G> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":6384},"children":[],"decl_id":{"krate":0,"index":6386},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13084},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500789,"byte_end":500802,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6435},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500883,"byte_end":500892,"line_start":131,"line_end":131,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MergeResultFn as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, T>) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13100},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":501144,"byte_end":501153,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6441},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":501362,"byte_end":501371,"line_start":149,"line_end":149,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6446},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":501633,"byte_end":501641,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":6384},"children":[],"decl_id":{"krate":0,"index":6386},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13115},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502108,"byte_end":502115,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6459},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502249,"byte_end":502258,"line_start":186,"line_end":186,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6465},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502434,"byte_end":502442,"line_start":194,"line_end":194,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6384},"children":[],"decl_id":{"krate":0,"index":6386},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13130},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502826,"byte_end":502834,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6480},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502969,"byte_end":502978,"line_start":218,"line_end":218,"column_start":8,"column_end":17},"name":"call_once","qualname":"<MapErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6486},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503159,"byte_end":503167,"line_start":226,"line_end":226,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<MapErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6384},"children":[],"decl_id":{"krate":0,"index":6386},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13145},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503554,"byte_end":503565,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6502},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503710,"byte_end":503719,"line_start":250,"line_end":250,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectOkFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6508},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503958,"byte_end":503966,"line_start":260,"line_end":260,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectOkFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6384},"children":[],"decl_id":{"krate":0,"index":6386},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13157},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":504450,"byte_end":504462,"line_start":281,"line_end":281,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6523},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":504608,"byte_end":504617,"line_start":288,"line_end":288,"column_start":8,"column_end":17},"name":"call_once","qualname":"<InspectErrFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":504858,"byte_end":504866,"line_start":298,"line_end":298,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<InspectErrFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, &'a Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6384},"children":[],"decl_id":{"krate":0,"index":6386},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13169},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":505610,"byte_end":505624,"line_start":324,"line_end":324,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6549},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":505758,"byte_end":505767,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"call_once","qualname":"<UnwrapOrElseFn<F> as fns::FnOnce1>::call_once","value":"fn call_once(Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6555},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":505973,"byte_end":505981,"line_start":339,"line_end":339,"column_start":8,"column_end":16},"name":"call_mut","qualname":"<UnwrapOrElseFn<F> as fns::FnMut1>::call_mut","value":"fn call_mut(&mut Self, Result<T, E>) -> Self::Output","parent":{"krate":0,"index":6384},"children":[],"decl_id":{"krate":0,"index":6386},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6565},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":506389,"byte_end":506395,"line_start":355,"line_end":355,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6571},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":506464,"byte_end":506471,"line_start":358,"line_end":358,"column_start":8,"column_end":15},"name":"default","qualname":"<IntoFn<T> as core::default::Default>::default","value":"fn default() -> Self","parent":{"krate":1,"index":3128},"children":[],"decl_id":{"krate":1,"index":3129},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":6576},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":506606,"byte_end":506615,"line_start":367,"line_end":367,"column_start":8,"column_end":17},"name":"call_once","qualname":"<IntoFn<T> as fns::FnOnce1>::call_once","value":"fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":6374},"children":[],"decl_id":{"krate":0,"index":6377},"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":140}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":153},{"krate":0,"index":154}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":181}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":190},{"krate":0,"index":191}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66224,"byte_end":66234,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":400}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66385,"byte_end":66395,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66518,"byte_end":66528,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67237,"byte_end":67247,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67377,"byte_end":67387,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67630,"byte_end":67640,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68593,"byte_end":68603,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":458}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68846,"byte_end":68856,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72180,"byte_end":72193,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72323,"byte_end":72336,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72579,"byte_end":72592,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48622,"byte_end":48625,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73901,"byte_end":73905,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74501,"byte_end":74505,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74649,"byte_end":74653,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":613},{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75256,"byte_end":75263,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":648}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75866,"byte_end":75873,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":653},{"krate":0,"index":654}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76018,"byte_end":76025,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76051,"byte_end":76058,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76812,"byte_end":76821,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77424,"byte_end":77433,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78531,"byte_end":78540,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":704}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78741,"byte_end":78750,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":707},{"krate":0,"index":708}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80070,"byte_end":80082,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80308,"byte_end":80320,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81433,"byte_end":81445,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":756}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81649,"byte_end":81661,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83311,"byte_end":83323,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83421,"byte_end":83433,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":794},{"krate":0,"index":795}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83747,"byte_end":83759,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83946,"byte_end":83958,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":801}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84396,"byte_end":84402,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85096,"byte_end":85102,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":835}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85244,"byte_end":85250,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":839},{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":85978,"byte_end":85991,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86557,"byte_end":86570,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":87590,"byte_end":87603,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":886},{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89775,"byte_end":89780,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":921}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89959,"byte_end":89964,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89996,"byte_end":90001,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":926}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90098,"byte_end":90103,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":929},{"krate":0,"index":930}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98101,"byte_end":98108,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1092}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":100655,"byte_end":100662,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1097},{"krate":0,"index":1098}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":101650,"byte_end":101657,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1102}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102153,"byte_end":102159,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104595,"byte_end":104601,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1148},{"krate":0,"index":1149}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":105223,"byte_end":105229,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1153}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":105792,"byte_end":105801,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106808,"byte_end":106817,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1196}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":107000,"byte_end":107009,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":107664,"byte_end":107673,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1204}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":116278,"byte_end":116288,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1369}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":119066,"byte_end":119076,"line_start":136,"line_end":136,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":120648,"byte_end":120658,"line_start":179,"line_end":179,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121164,"byte_end":121173,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":123012,"byte_end":123021,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1422},{"krate":0,"index":1423}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124383,"byte_end":124391,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":125469,"byte_end":125477,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1470},{"krate":0,"index":1471}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":126893,"byte_end":126901,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1475}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127880,"byte_end":127886,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1512}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128225,"byte_end":128231,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1517}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128616,"byte_end":128622,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129003,"byte_end":129009,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129250,"byte_end":129256,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1529},{"krate":0,"index":1530}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129595,"byte_end":129601,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1534}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129877,"byte_end":129883,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":130418,"byte_end":130424,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1544}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":198236,"byte_end":198241,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1696}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":198467,"byte_end":198472,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1700}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":198681,"byte_end":198686,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":200282,"byte_end":200289,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1747},{"krate":0,"index":1748}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":200531,"byte_end":200538,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1752}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":200716,"byte_end":200723,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1756},{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":201749,"byte_end":201754,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1799},{"krate":0,"index":1800}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":202102,"byte_end":202107,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":202357,"byte_end":202362,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1814},{"krate":0,"index":1815}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":203487,"byte_end":203493,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":203713,"byte_end":203719,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1855},{"krate":0,"index":1856}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":204427,"byte_end":204433,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205159,"byte_end":205164,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205385,"byte_end":205390,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1902}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205522,"byte_end":205527,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1905}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205645,"byte_end":205650,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":206456,"byte_end":206461,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1942}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":206617,"byte_end":206622,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":207371,"byte_end":207376,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1950}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208124,"byte_end":208133,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1980},{"krate":0,"index":9328},{"krate":0,"index":9329},{"krate":0,"index":9330},{"krate":0,"index":9331}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208319,"byte_end":208328,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":1983}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208446,"byte_end":208455,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":209896,"byte_end":209902,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2029}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":210375,"byte_end":210381,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":9393},{"krate":0,"index":9394},{"krate":0,"index":9395},{"krate":0,"index":9396}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":210704,"byte_end":210710,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":211047,"byte_end":211053,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":213218,"byte_end":213227,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":213524,"byte_end":213533,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":9454},{"krate":0,"index":9455},{"krate":0,"index":9456},{"krate":0,"index":9457}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":213800,"byte_end":213809,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2100}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":214076,"byte_end":214085,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2108}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":216180,"byte_end":216187,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2139},{"krate":0,"index":9507},{"krate":0,"index":9508},{"krate":0,"index":9509},{"krate":0,"index":9510}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":216356,"byte_end":216363,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2142}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":216555,"byte_end":216562,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218076,"byte_end":218080,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2182}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218436,"byte_end":218440,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2188}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218701,"byte_end":218705,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2194}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218940,"byte_end":218944,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2200},{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":220533,"byte_end":220536,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2239}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":220866,"byte_end":220869,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":221122,"byte_end":221125,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2249}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":221354,"byte_end":221357,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2254},{"krate":0,"index":2255}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223109,"byte_end":223112,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223442,"byte_end":223445,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223697,"byte_end":223700,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2303}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223929,"byte_end":223932,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2308},{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":225686,"byte_end":225693,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2351}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":225986,"byte_end":225993,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2356}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":226224,"byte_end":226231,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":226470,"byte_end":226477,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2366},{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":227578,"byte_end":227582,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":9854},{"krate":0,"index":9855},{"krate":0,"index":9856},{"krate":0,"index":9857}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":228079,"byte_end":228083,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2401}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":228181,"byte_end":228185,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2406}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229387,"byte_end":229399,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231889,"byte_end":231901,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2446}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":232021,"byte_end":232033,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2449},{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":232918,"byte_end":232921,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2487}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":233110,"byte_end":233113,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2491},{"krate":0,"index":9978},{"krate":0,"index":9979},{"krate":0,"index":9980},{"krate":0,"index":9981}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":233282,"byte_end":233285,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2495}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":233453,"byte_end":233456,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234568,"byte_end":234572,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234623,"byte_end":234627,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234778,"byte_end":234782,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2542}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234921,"byte_end":234925,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2545},{"krate":0,"index":2546}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235576,"byte_end":235590,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2580}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235741,"byte_end":235755,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":2583}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235899,"byte_end":235913,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2586},{"krate":0,"index":2587}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237224,"byte_end":237232,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":10121},{"krate":0,"index":10122},{"krate":0,"index":10123},{"krate":0,"index":10124},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242729,"byte_end":242737,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2652}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242879,"byte_end":242887,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2655},{"krate":0,"index":2656},{"krate":0,"index":2657}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244039,"byte_end":244043,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2660}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244288,"byte_end":244292,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2663}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244403,"byte_end":244407,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2667},{"krate":0,"index":2668}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":245104,"byte_end":245111,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":245359,"byte_end":245366,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2674}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":245477,"byte_end":245484,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2678},{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246204,"byte_end":246210,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2683}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246562,"byte_end":246568,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2689}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246837,"byte_end":246843,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2694},{"krate":0,"index":2695}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":248104,"byte_end":248112,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2699}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":248432,"byte_end":248440,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2704}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":248624,"byte_end":248632,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2708},{"krate":0,"index":2709}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249003,"byte_end":249013,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":249678,"byte_end":249682,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2763},{"krate":0,"index":10345},{"krate":0,"index":10346},{"krate":0,"index":10347},{"krate":0,"index":10348}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":249873,"byte_end":249877,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2766}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":249995,"byte_end":249999,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2769},{"krate":0,"index":2770},{"krate":0,"index":2771}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":251596,"byte_end":251605,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2810}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":252057,"byte_end":252066,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2815},{"krate":0,"index":10414},{"krate":0,"index":10415},{"krate":0,"index":10416},{"krate":0,"index":10417}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":252392,"byte_end":252401,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2820}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":252649,"byte_end":252658,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2827}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":254951,"byte_end":254955,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2860},{"krate":0,"index":10458},{"krate":0,"index":10459},{"krate":0,"index":10460},{"krate":0,"index":10461}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":255128,"byte_end":255132,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2863},{"krate":0,"index":2864},{"krate":0,"index":2865}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":256077,"byte_end":256081,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":257104,"byte_end":257113,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2906}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":257561,"byte_end":257570,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2911},{"krate":0,"index":10527},{"krate":0,"index":10528},{"krate":0,"index":10529},{"krate":0,"index":10530}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":257889,"byte_end":257898,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2916},{"krate":0,"index":2917},{"krate":0,"index":2918}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":259410,"byte_end":259419,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2923}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":260803,"byte_end":260812,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2960}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261100,"byte_end":261109,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2964},{"krate":0,"index":10584},{"krate":0,"index":10585},{"krate":0,"index":10586},{"krate":0,"index":10587},{"krate":0,"index":2965},{"krate":0,"index":2966},{"krate":0,"index":2967}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":263226,"byte_end":263235,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2971},{"krate":0,"index":2972},{"krate":0,"index":2973}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":264267,"byte_end":264276,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2977}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265218,"byte_end":265222,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265473,"byte_end":265477,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":10645},{"krate":0,"index":10646},{"krate":0,"index":10647},{"krate":0,"index":10648}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265723,"byte_end":265727,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3025}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265953,"byte_end":265957,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3030},{"krate":0,"index":3031},{"krate":0,"index":3032}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":267832,"byte_end":267835,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269421,"byte_end":269424,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3078}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269619,"byte_end":269622,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3084}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":272303,"byte_end":272309,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":10750},{"krate":0,"index":10751},{"krate":0,"index":10752},{"krate":0,"index":10753}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":272795,"byte_end":272801,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":274409,"byte_end":274415,"line_start":88,"line_end":88,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3132}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":275387,"byte_end":275398,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3168},{"krate":0,"index":10798},{"krate":0,"index":10799},{"krate":0,"index":10800},{"krate":0,"index":10801}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":275728,"byte_end":275739,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":277900,"byte_end":277911,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":278909,"byte_end":278913,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3220}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":279399,"byte_end":279403,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":279567,"byte_end":279571,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3234},{"krate":0,"index":10867},{"krate":0,"index":10868},{"krate":0,"index":10869},{"krate":0,"index":10870}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":279933,"byte_end":279937,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":281164,"byte_end":281168,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3250}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":282349,"byte_end":282364,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3293}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":282696,"byte_end":282711,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":10912},{"krate":0,"index":10913},{"krate":0,"index":10914},{"krate":0,"index":10915}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":283038,"byte_end":283053,"line_start":55,"line_end":55,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":284507,"byte_end":284522,"line_start":100,"line_end":100,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3304}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":285632,"byte_end":285640,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3346}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":285987,"byte_end":285995,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3349},{"krate":0,"index":10957},{"krate":0,"index":10958},{"krate":0,"index":10959},{"krate":0,"index":10960}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":286275,"byte_end":286283,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":289432,"byte_end":289447,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3432},{"krate":0,"index":3433},{"krate":0,"index":3436},{"krate":0,"index":3440},{"krate":0,"index":3442},{"krate":0,"index":3444}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":293566,"byte_end":293579,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3453},{"krate":0,"index":3454},{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":294099,"byte_end":294112,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3459}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":294510,"byte_end":294520,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":294545,"byte_end":294555,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":294565,"byte_end":294575,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":3467},{"krate":0,"index":3468},{"krate":0,"index":3470}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":295626,"byte_end":295636,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3472}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":297237,"byte_end":297250,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":3475}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":297454,"byte_end":297467,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3480}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":298582,"byte_end":298598,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3484}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":299072,"byte_end":299088,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3487},{"krate":0,"index":11057},{"krate":0,"index":11058},{"krate":0,"index":11059},{"krate":0,"index":11060}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":300027,"byte_end":300047,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":3490}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":300314,"byte_end":300330,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":300535,"byte_end":300551,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3497},{"krate":0,"index":3498}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":305980,"byte_end":305997,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3543}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":306343,"byte_end":306360,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3548}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":306793,"byte_end":306810,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3553}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":307040,"byte_end":307057,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3558},{"krate":0,"index":3559}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147611,"byte_end":147612,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":347778,"byte_end":347785,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3877}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":348078,"byte_end":348085,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":3882},{"krate":0,"index":11262},{"krate":0,"index":11263},{"krate":0,"index":11264},{"krate":0,"index":11265}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":348366,"byte_end":348373,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3887},{"krate":0,"index":3888},{"krate":0,"index":3889}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":349509,"byte_end":349516,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3894}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350434,"byte_end":350444,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3924},{"krate":0,"index":11509},{"krate":0,"index":11510},{"krate":0,"index":11511},{"krate":0,"index":11512}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350637,"byte_end":350647,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3927}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350768,"byte_end":350778,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3930},{"krate":0,"index":3931},{"krate":0,"index":3932}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":351877,"byte_end":351883,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":352175,"byte_end":352181,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3978},{"krate":0,"index":11708},{"krate":0,"index":11709},{"krate":0,"index":11710},{"krate":0,"index":11711}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":352459,"byte_end":352465,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3983},{"krate":0,"index":3984},{"krate":0,"index":3985}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":353735,"byte_end":353741,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3990}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354645,"byte_end":354652,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354706,"byte_end":354713,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354876,"byte_end":354883,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4030}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":355025,"byte_end":355032,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4034}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":355808,"byte_end":355818,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4072}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":356114,"byte_end":356124,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4077}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":356369,"byte_end":356379,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4082},{"krate":0,"index":4083}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":357778,"byte_end":357787,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4124}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":358183,"byte_end":358192,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":4129},{"krate":0,"index":11838},{"krate":0,"index":11839},{"krate":0,"index":11840},{"krate":0,"index":11841}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":358435,"byte_end":358444,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4134}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":358701,"byte_end":358710,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4139},{"krate":0,"index":4140},{"krate":0,"index":4141}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":360844,"byte_end":360856,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4182}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":361156,"byte_end":361168,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4187},{"krate":0,"index":11899},{"krate":0,"index":11900},{"krate":0,"index":11901},{"krate":0,"index":11902}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":361365,"byte_end":361377,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4193}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":361655,"byte_end":361667,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4199},{"krate":0,"index":4200},{"krate":0,"index":4201}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":363844,"byte_end":363854,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":4234},{"krate":0,"index":11943},{"krate":0,"index":11944},{"krate":0,"index":11945},{"krate":0,"index":11946}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":364119,"byte_end":364129,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4237}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":364375,"byte_end":364385,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":4240},{"krate":0,"index":4241}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":365994,"byte_end":366004,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4282}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":366144,"byte_end":366154,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4286}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":366342,"byte_end":366352,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":4290},{"krate":0,"index":4291}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":367327,"byte_end":367336,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":4320}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":367555,"byte_end":367564,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4323},{"krate":0,"index":4324}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":368948,"byte_end":368957,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4377},{"krate":0,"index":4378},{"krate":0,"index":12080},{"krate":0,"index":12081},{"krate":0,"index":12082},{"krate":0,"index":12083}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":369452,"byte_end":369461,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4381},{"krate":0,"index":4382},{"krate":0,"index":4383}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":371401,"byte_end":371410,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4386}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":372069,"byte_end":372083,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4390}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":372228,"byte_end":372242,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4394}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373053,"byte_end":373060,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4440}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373419,"byte_end":373426,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4446}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373706,"byte_end":373713,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":4452}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373967,"byte_end":373974,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4458},{"krate":0,"index":4459}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377837,"byte_end":377846,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4501}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":378108,"byte_end":378117,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":4507},{"krate":0,"index":4508}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":379863,"byte_end":379875,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4553}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":380331,"byte_end":380343,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4558},{"krate":0,"index":12296},{"krate":0,"index":12297},{"krate":0,"index":12298},{"krate":0,"index":12299}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":380683,"byte_end":380695,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4563},{"krate":0,"index":4564},{"krate":0,"index":4565}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":382187,"byte_end":382199,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4570}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":383427,"byte_end":383439,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4611}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":383891,"byte_end":383903,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":4616},{"krate":0,"index":12365},{"krate":0,"index":12366},{"krate":0,"index":12367},{"krate":0,"index":12368}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":384241,"byte_end":384253,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4621},{"krate":0,"index":4622},{"krate":0,"index":4623}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":385853,"byte_end":385865,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4628}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":387153,"byte_end":387171,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":4678},{"krate":0,"index":12413},{"krate":0,"index":12414},{"krate":0,"index":12415},{"krate":0,"index":12416}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":387510,"byte_end":387528,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4681},{"krate":0,"index":4682}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":389734,"byte_end":389745,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4732},{"krate":0,"index":12461},{"krate":0,"index":12462},{"krate":0,"index":12463},{"krate":0,"index":12464}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":390082,"byte_end":390093,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":4735},{"krate":0,"index":4736}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":392256,"byte_end":392276,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4784}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":392641,"byte_end":392661,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":4789}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":392900,"byte_end":392920,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":4794}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":393368,"byte_end":393388,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":4799},{"krate":0,"index":4800}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314174,"byte_end":314175,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396152,"byte_end":396156,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396778,"byte_end":396782,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4964},{"krate":0,"index":4965},{"krate":0,"index":4966}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397973,"byte_end":397979,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":398006,"byte_end":398012,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5001},{"krate":0,"index":5002},{"krate":0,"index":5003}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":398320,"byte_end":398326,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":5006}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398923,"byte_end":398933,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398977,"byte_end":398987,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5043}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399301,"byte_end":399311,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":5047}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401831,"byte_end":401836,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401868,"byte_end":401873,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5088}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401958,"byte_end":401963,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":5091},{"krate":0,"index":5092},{"krate":0,"index":5093}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":402212,"byte_end":402217,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5096}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403156,"byte_end":403160,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5138}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403289,"byte_end":403293,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5141},{"krate":0,"index":5142},{"krate":0,"index":5143}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403898,"byte_end":403902,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5146}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404561,"byte_end":404568,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404600,"byte_end":404607,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5184}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404692,"byte_end":404699,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5187},{"krate":0,"index":5188},{"krate":0,"index":5189}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404944,"byte_end":404951,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5192}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405338,"byte_end":405344,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405375,"byte_end":405381,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5227}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":406146,"byte_end":406152,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5234},{"krate":0,"index":5235}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":406848,"byte_end":406861,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5263},{"krate":0,"index":5264},{"krate":0,"index":5265}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":407774,"byte_end":407787,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5268}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410674,"byte_end":410680,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":5319},{"krate":0,"index":5320},{"krate":0,"index":5321},{"krate":0,"index":5322}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411984,"byte_end":411990,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5326}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":412169,"byte_end":412175,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5330},{"krate":0,"index":5331}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412850,"byte_end":412858,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":5368},{"krate":0,"index":5369}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":413208,"byte_end":413216,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5371}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":413373,"byte_end":413386,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":5382}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416983,"byte_end":417001,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5393},{"krate":0,"index":5394},{"krate":0,"index":5395},{"krate":0,"index":5396}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":418368,"byte_end":418386,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5402}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":419956,"byte_end":419974,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5418},{"krate":0,"index":5419}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":421148,"byte_end":421166,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5425}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423737,"byte_end":423743,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5481}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423983,"byte_end":423989,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5487}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":424269,"byte_end":424275,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5493},{"krate":0,"index":5494}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":425823,"byte_end":425835,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5558}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":425940,"byte_end":425952,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":425983,"byte_end":425995,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5563}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426118,"byte_end":426130,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5566}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426311,"byte_end":426323,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5569},{"krate":0,"index":5570}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428905,"byte_end":428919,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428945,"byte_end":428959,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431728,"byte_end":431742,"line_start":173,"line_end":173,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":5590}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431835,"byte_end":431849,"line_start":179,"line_end":179,"column_start":30,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5593},{"krate":0,"index":5594},{"krate":0,"index":5595}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433011,"byte_end":433025,"line_start":214,"line_end":214,"column_start":29,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5598}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433191,"byte_end":433205,"line_start":220,"line_end":220,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":5601}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433490,"byte_end":433504,"line_start":233,"line_end":233,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5606}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433674,"byte_end":433688,"line_start":239,"line_end":239,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5609}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/abort.rs","byte_start":460735,"byte_end":460746,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":5711}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":462120,"byte_end":462128,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5733},{"krate":0,"index":5734},{"krate":0,"index":5735}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":463309,"byte_end":463317,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":463354,"byte_end":463364,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464216,"byte_end":464226,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464274,"byte_end":464281,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":5749},{"krate":0,"index":5750},{"krate":0,"index":5751}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464544,"byte_end":464551,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464592,"byte_end":464602,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5757},{"krate":0,"index":5758},{"krate":0,"index":5759}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465471,"byte_end":465481,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465529,"byte_end":465533,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5765},{"krate":0,"index":5766},{"krate":0,"index":5767}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465792,"byte_end":465796,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465965,"byte_end":465975,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466020,"byte_end":466030,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466076,"byte_end":466086,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466131,"byte_end":466141,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466195,"byte_end":466203,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466252,"byte_end":466260,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":467945,"byte_end":467949,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":467984,"byte_end":467988,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":468020,"byte_end":468024,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5858}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":469157,"byte_end":469161,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":5861},{"krate":0,"index":5862}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":470161,"byte_end":470165,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":5865}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":471615,"byte_end":471630,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":5921},{"krate":0,"index":5922},{"krate":0,"index":5923},{"krate":0,"index":5924}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":474298,"byte_end":474313,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":5927}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436157,"byte_end":436173,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436214,"byte_end":436230,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436259,"byte_end":436275,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436300,"byte_end":436316,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":5947}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436501,"byte_end":436517,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5949}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438224,"byte_end":438240,"line_start":104,"line_end":104,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":5952}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438314,"byte_end":438330,"line_start":110,"line_end":110,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5955},{"krate":0,"index":5956},{"krate":0,"index":5957},{"krate":0,"index":5958},{"krate":0,"index":5959},{"krate":0,"index":5960},{"krate":0,"index":5961},{"krate":0,"index":5962},{"krate":0,"index":5963},{"krate":0,"index":5964},{"krate":0,"index":5965},{"krate":0,"index":5966},{"krate":0,"index":5967}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":449939,"byte_end":449955,"line_start":385,"line_end":385,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5970},{"krate":0,"index":5971},{"krate":0,"index":5980}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454331,"byte_end":454335,"line_start":483,"line_end":483,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5979}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457144,"byte_end":457160,"line_start":549,"line_end":549,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5983}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457298,"byte_end":457314,"line_start":555,"line_end":555,"column_start":11,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":5986},{"krate":0,"index":5987}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457885,"byte_end":457901,"line_start":575,"line_end":575,"column_start":20,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":5990}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459551,"byte_end":459567,"line_start":616,"line_end":616,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6005},{"krate":0,"index":6006},{"krate":0,"index":6007}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460037,"byte_end":460053,"line_start":630,"line_end":630,"column_start":33,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6010}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460329,"byte_end":460345,"line_start":643,"line_end":643,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6015}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460467,"byte_end":460483,"line_start":649,"line_end":649,"column_start":27,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6018}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":475908,"byte_end":475917,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6075}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476062,"byte_end":476071,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6078},{"krate":0,"index":6079},{"krate":0,"index":6080},{"krate":0,"index":6081},{"krate":0,"index":6082},{"krate":0,"index":6083},{"krate":0,"index":6084}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477544,"byte_end":477553,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6087}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477652,"byte_end":477661,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6090},{"krate":0,"index":6091}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478445,"byte_end":478454,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6094}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479472,"byte_end":479481,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6099}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479626,"byte_end":479635,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6103}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479818,"byte_end":479827,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":6107},{"krate":0,"index":6108},{"krate":0,"index":6109}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480910,"byte_end":480914,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6125},{"krate":0,"index":6126},{"krate":0,"index":6127}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481347,"byte_end":481351,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481406,"byte_end":481413,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6133},{"krate":0,"index":6134},{"krate":0,"index":6135}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481850,"byte_end":481857,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481908,"byte_end":481916,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6140},{"krate":0,"index":6141},{"krate":0,"index":6142}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":482344,"byte_end":482352,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484600,"byte_end":484602,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484657,"byte_end":484659,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":492687,"byte_end":492696,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6340},{"krate":0,"index":6341}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494980,"byte_end":494991,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6343}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":495807,"byte_end":495814,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6345}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":496017,"byte_end":496026,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":6348}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497015,"byte_end":497024,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6353},{"krate":0,"index":6354}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497263,"byte_end":497272,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6358},{"krate":0,"index":6359}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497531,"byte_end":497542,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":6362}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498214,"byte_end":498215,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6382},{"krate":0,"index":6383}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498450,"byte_end":498451,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6391}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498721,"byte_end":498722,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6399}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":499738,"byte_end":499742,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":6407}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":499836,"byte_end":499840,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":6411},{"krate":0,"index":6412}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500099,"byte_end":500106,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":6417},{"krate":0,"index":6418}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500329,"byte_end":500336,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6423}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500527,"byte_end":500534,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6428}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500839,"byte_end":500852,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6434},{"krate":0,"index":6435}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":501269,"byte_end":501278,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":6440},{"krate":0,"index":6441}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":501562,"byte_end":501571,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":6446}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":501833,"byte_end":501842,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":6451}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502164,"byte_end":502171,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6458},{"krate":0,"index":6459}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502390,"byte_end":502397,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6465}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502575,"byte_end":502582,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6471}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502883,"byte_end":502891,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6479},{"krate":0,"index":6480}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503114,"byte_end":503122,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":6486}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503304,"byte_end":503312,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":6492}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503622,"byte_end":503633,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6501},{"krate":0,"index":6502}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503893,"byte_end":503904,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6508}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":504141,"byte_end":504152,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":6514}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":504519,"byte_end":504531,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6522},{"krate":0,"index":6523}],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":504792,"byte_end":504804,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":505042,"byte_end":505054,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6535}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":505673,"byte_end":505687,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6548},{"krate":0,"index":6549}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":505910,"byte_end":505924,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":6555}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":506125,"byte_end":506139,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6561}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":506445,"byte_end":506451,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":6571}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":506544,"byte_end":506550,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":6575},{"krate":0,"index":6576}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/unfold_state.rs","byte_start":507155,"byte_end":507166,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":6587},{"krate":0,"index":6588}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10623,"byte_end":10629,"line_start":294,"line_end":294,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":15}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":10727,"byte_end":10733,"line_start":298,"line_end":298,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1599}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139133,"byte_end":139150,"line_start":112,"line_end":112,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":5614}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/mod.rs","byte_start":139349,"byte_end":139359,"line_start":120,"line_end":120,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":6023}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11000,"byte_end":11004,"line_start":309,"line_end":309,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6200}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11015,"byte_end":11020,"line_start":311,"line_end":311,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6299}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/lib.rs","byte_start":11462,"byte_end":11466,"line_start":330,"line_end":330,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":6301}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35483,"byte_end":35490,"line_start":20,"line_end":20,"column_start":18,"column_end":25},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":6589},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35620,"byte_end":35627,"line_start":26,"line_end":26,"column_start":27,"column_end":34},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":6589},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":35852,"byte_end":35859,"line_start":39,"line_end":39,"column_start":22,"column_end":29},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":6589},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36633,"byte_end":36640,"line_start":64,"line_end":64,"column_start":27,"column_end":34},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":6589},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/flatten.rs","byte_start":36865,"byte_end":36872,"line_start":77,"line_end":77,"column_start":22,"column_end":29},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":6589},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39886,"byte_end":39890,"line_start":17,"line_end":17,"column_start":11,"column_end":15},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":6636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":39997,"byte_end":40001,"line_start":23,"line_end":23,"column_start":19,"column_end":23},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":6636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41730,"byte_end":41734,"line_start":74,"line_end":74,"column_start":35,"column_end":39},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":6636},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/fuse.rs","byte_start":41847,"byte_end":41851,"line_start":80,"line_end":80,"column_start":30,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":6636},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":42829,"byte_end":42832,"line_start":25,"line_end":25,"column_start":14,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":6672},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43001,"byte_end":43004,"line_start":32,"line_end":32,"column_start":33,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":6672},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/map.rs","byte_start":43266,"byte_end":43269,"line_start":45,"line_end":45,"column_start":28,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":6672},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18634,"byte_end":18635,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":238},"to":{"krate":0,"index":239}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/future/mod.rs","byte_start":18766,"byte_end":18772,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":13328},"to":{"krate":0,"index":239}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66224,"byte_end":66234,"line_start":16,"line_end":16,"column_start":11,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":7224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66385,"byte_end":66395,"line_start":23,"line_end":23,"column_start":52,"column_end":62},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":7224},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/into_future.rs","byte_start":66518,"byte_end":66528,"line_start":29,"line_end":29,"column_start":33,"column_end":43},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":7224},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67237,"byte_end":67247,"line_start":20,"line_end":20,"column_start":18,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":7260},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67377,"byte_end":67387,"line_start":26,"line_end":26,"column_start":27,"column_end":37},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":7260},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":67630,"byte_end":67640,"line_start":39,"line_end":39,"column_start":22,"column_end":32},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":7260},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68593,"byte_end":68603,"line_start":67,"line_end":67,"column_start":27,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":7260},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten.rs","byte_start":68846,"byte_end":68856,"line_start":80,"line_end":80,"column_start":22,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":7260},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72180,"byte_end":72193,"line_start":17,"line_end":17,"column_start":18,"column_end":31},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":7307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72323,"byte_end":72336,"line_start":23,"line_end":23,"column_start":27,"column_end":40},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":7307},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/try_flatten_err.rs","byte_start":72579,"byte_end":72592,"line_start":36,"line_end":36,"column_start":22,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":7307},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48622,"byte_end":48625,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":505},"to":{"krate":0,"index":506}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_future/mod.rs","byte_start":48708,"byte_end":48717,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":5,"index":44},"to":{"krate":0,"index":506}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":73901,"byte_end":73905,"line_start":14,"line_end":14,"column_start":19,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":8174},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74501,"byte_end":74505,"line_start":42,"line_end":42,"column_start":28,"column_end":32},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":8174},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/lazy.rs","byte_start":74649,"byte_end":74653,"line_start":51,"line_end":51,"column_start":23,"column_end":27},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":8174},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75256,"byte_end":75263,"line_start":14,"line_end":14,"column_start":25,"column_end":32},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":8180},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":75866,"byte_end":75873,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":8180},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76018,"byte_end":76025,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":8180},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/pending.rs","byte_start":76051,"byte_end":76058,"line_start":51,"line_end":51,"column_start":19,"column_end":26},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":8180},"to":{"krate":1,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":76812,"byte_end":76821,"line_start":24,"line_end":24,"column_start":37,"column_end":46},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":8186},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":77424,"byte_end":77433,"line_start":47,"line_end":47,"column_start":19,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":8186},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78531,"byte_end":78540,"line_start":79,"line_end":79,"column_start":35,"column_end":44},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":8186},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/maybe_done.rs","byte_start":78741,"byte_end":78750,"line_start":88,"line_end":88,"column_start":30,"column_end":39},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":8186},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80070,"byte_end":80082,"line_start":25,"line_end":25,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":8199},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":80308,"byte_end":80320,"line_start":32,"line_end":32,"column_start":22,"column_end":34},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":8199},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81433,"byte_end":81445,"line_start":64,"line_end":64,"column_start":38,"column_end":50},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":8199},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_maybe_done.rs","byte_start":81649,"byte_end":81661,"line_start":73,"line_end":73,"column_start":33,"column_end":45},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":8199},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83311,"byte_end":83323,"line_start":34,"line_end":34,"column_start":21,"column_end":33},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":8212},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83421,"byte_end":83433,"line_start":40,"line_end":40,"column_start":28,"column_end":40},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":8212},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83747,"byte_end":83759,"line_start":51,"line_end":51,"column_start":38,"column_end":50},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":8212},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/option.rs","byte_start":83946,"byte_end":83958,"line_start":60,"line_end":60,"column_start":29,"column_end":41},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":8212},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":84396,"byte_end":84402,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":825},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85096,"byte_end":85102,"line_start":43,"line_end":43,"column_start":24,"column_end":30},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":825},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_fn.rs","byte_start":85244,"byte_end":85250,"line_start":49,"line_end":49,"column_start":23,"column_end":29},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":825},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":85978,"byte_end":85991,"line_start":19,"line_end":19,"column_start":23,"column_end":36},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":8251},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":86557,"byte_end":86570,"line_start":40,"line_end":40,"column_start":33,"column_end":46},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":8251},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/poll_immediate.rs","byte_start":87590,"byte_end":87603,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":8251},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89775,"byte_end":89780,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":8290},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89959,"byte_end":89964,"line_start":19,"line_end":19,"column_start":19,"column_end":24},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":8290},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":89996,"byte_end":90001,"line_start":21,"line_end":21,"column_start":25,"column_end":30},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":8290},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/ready.rs","byte_start":90098,"byte_end":90103,"line_start":27,"line_end":27,"column_start":20,"column_end":25},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":8290},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":98101,"byte_end":98108,"line_start":50,"line_end":50,"column_start":24,"column_end":31},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":100655,"byte_end":100662,"line_start":130,"line_end":130,"column_start":20,"column_end":27},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/join_all.rs","byte_start":101650,"byte_end":101657,"line_start":162,"line_end":162,"column_start":37,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":1080},"to":{"krate":1,"index":7987}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":102153,"byte_end":102159,"line_start":14,"line_end":14,"column_start":36,"column_end":42},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":8644},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":104595,"byte_end":104601,"line_start":94,"line_end":94,"column_start":23,"column_end":29},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":8644},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select.rs","byte_start":105223,"byte_end":105229,"line_start":117,"line_end":117,"column_start":28,"column_end":34},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":8644},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":105792,"byte_end":105801,"line_start":17,"line_end":17,"column_start":28,"column_end":37},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":8652},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":106808,"byte_end":106817,"line_start":44,"line_end":44,"column_start":11,"column_end":20},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":8652},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":107000,"byte_end":107009,"line_start":51,"line_end":51,"column_start":38,"column_end":47},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":8652},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_all.rs","byte_start":107664,"byte_end":107673,"line_start":70,"line_end":70,"column_start":49,"column_end":58},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":8652},"to":{"krate":1,"index":7987}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":116278,"byte_end":116288,"line_start":47,"line_end":47,"column_start":24,"column_end":34},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1358},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":119066,"byte_end":119076,"line_start":136,"line_end":136,"column_start":20,"column_end":30},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1358},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_join_all.rs","byte_start":120648,"byte_end":120658,"line_start":179,"line_end":179,"column_start":29,"column_end":39},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1358},"to":{"krate":1,"index":7987}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":121164,"byte_end":121173,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":8980},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/try_select.rs","byte_start":123012,"byte_end":123021,"line_start":61,"line_end":61,"column_start":37,"column_end":46},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":8980},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":124383,"byte_end":124391,"line_start":17,"line_end":17,"column_start":28,"column_end":36},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":8988},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":125469,"byte_end":125477,"line_start":45,"line_end":45,"column_start":41,"column_end":49},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":8988},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/select_ok.rs","byte_start":126893,"byte_end":126901,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":8988},"to":{"krate":1,"index":7987}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":127880,"byte_end":127886,"line_start":35,"line_end":35,"column_start":12,"column_end":18},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":8994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128225,"byte_end":128231,"line_start":46,"line_end":46,"column_start":15,"column_end":21},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":8994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":128616,"byte_end":128622,"line_start":58,"line_end":58,"column_start":15,"column_end":21},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":8994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129003,"byte_end":129009,"line_start":70,"line_end":70,"column_start":9,"column_end":15},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":8994},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129250,"byte_end":129256,"line_start":80,"line_end":80,"column_start":23,"column_end":29},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":8994},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129595,"byte_end":129601,"line_start":95,"line_end":95,"column_start":28,"column_end":34},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":8994},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":129877,"byte_end":129883,"line_start":108,"line_end":108,"column_start":23,"column_end":29},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":8994},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/future/either.rs","byte_start":130418,"byte_end":130424,"line_start":130,"line_end":130,"column_start":28,"column_end":34},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":8994},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":198236,"byte_end":198241,"line_start":20,"line_end":20,"column_start":16,"column_end":21},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":9011},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":198467,"byte_end":198472,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":9011},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chain.rs","byte_start":198681,"byte_end":198686,"line_start":40,"line_end":40,"column_start":27,"column_end":32},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":9011},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":200282,"byte_end":200289,"line_start":20,"line_end":20,"column_start":30,"column_end":37},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":9060},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":200531,"byte_end":200538,"line_start":30,"line_end":30,"column_start":29,"column_end":36},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":9060},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/collect.rs","byte_start":200716,"byte_end":200723,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":9060},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":201749,"byte_end":201754,"line_start":21,"line_end":21,"column_start":50,"column_end":55},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":9109},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":202102,"byte_end":202107,"line_start":32,"line_end":32,"column_start":46,"column_end":51},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":9109},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/unzip.rs","byte_start":202357,"byte_end":202362,"line_start":43,"line_end":43,"column_start":41,"column_end":46},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":9109},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":203487,"byte_end":203493,"line_start":19,"line_end":19,"column_start":10,"column_end":16},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":9171},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":203713,"byte_end":203719,"line_start":29,"line_end":29,"column_start":21,"column_end":27},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":9171},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/concat.rs","byte_start":204427,"byte_end":204433,"line_start":54,"line_end":54,"column_start":26,"column_end":32},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":9171},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205159,"byte_end":205164,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":9211},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205385,"byte_end":205390,"line_start":28,"line_end":28,"column_start":18,"column_end":23},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":9211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205522,"byte_end":205527,"line_start":34,"line_end":34,"column_start":39,"column_end":44},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":9211},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/count.rs","byte_start":205645,"byte_end":205650,"line_start":40,"line_end":40,"column_start":29,"column_end":34},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":9211},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":206456,"byte_end":206461,"line_start":19,"line_end":19,"column_start":10,"column_end":15},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":9248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":206617,"byte_end":206622,"line_start":28,"line_end":28,"column_start":21,"column_end":26},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":9248},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/cycle.rs","byte_start":207371,"byte_end":207376,"line_start":56,"line_end":56,"column_start":26,"column_end":31},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":9248},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208124,"byte_end":208133,"line_start":20,"line_end":20,"column_start":18,"column_end":27},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":9288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208319,"byte_end":208328,"line_start":28,"line_end":28,"column_start":48,"column_end":57},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":9288},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/enumerate.rs","byte_start":208446,"byte_end":208455,"line_start":34,"line_end":34,"column_start":29,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":9288},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":209896,"byte_end":209902,"line_start":27,"line_end":27,"column_start":33,"column_end":39},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":9332},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":210375,"byte_end":210381,"line_start":43,"line_end":43,"column_start":18,"column_end":24},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":9332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":210704,"byte_end":210710,"line_start":56,"line_end":56,"column_start":34,"column_end":40},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":9332},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter.rs","byte_start":211047,"byte_end":211053,"line_start":68,"line_end":68,"column_start":29,"column_end":35},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":9332},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":213218,"byte_end":213227,"line_start":24,"line_end":24,"column_start":33,"column_end":42},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":9397},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":213524,"byte_end":213533,"line_start":37,"line_end":37,"column_start":18,"column_end":27},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":9397},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":213800,"byte_end":213809,"line_start":50,"line_end":50,"column_start":37,"column_end":46},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":9397},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/filter_map.rs","byte_start":214076,"byte_end":214085,"line_start":61,"line_end":61,"column_start":32,"column_end":41},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":9397},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":216180,"byte_end":216187,"line_start":21,"line_end":21,"column_start":13,"column_end":20},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":9458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":216356,"byte_end":216363,"line_start":29,"line_end":29,"column_start":26,"column_end":33},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":9458},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten.rs","byte_start":216555,"byte_end":216562,"line_start":39,"line_end":39,"column_start":21,"column_end":28},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":9458},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218076,"byte_end":218080,"line_start":22,"line_end":22,"column_start":36,"column_end":40},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":9566},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218436,"byte_end":218440,"line_start":37,"line_end":37,"column_start":21,"column_end":25},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":9566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218701,"byte_end":218705,"line_start":48,"line_end":48,"column_start":37,"column_end":41},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":9566},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fold.rs","byte_start":218940,"byte_end":218944,"line_start":59,"line_end":59,"column_start":32,"column_end":36},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":9566},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":220533,"byte_end":220536,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":9635},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":220866,"byte_end":220869,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":9635},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":221122,"byte_end":221125,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":9635},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/any.rs","byte_start":221354,"byte_end":221357,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":9635},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223109,"byte_end":223112,"line_start":22,"line_end":22,"column_start":33,"column_end":36},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":9696},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223442,"byte_end":223445,"line_start":36,"line_end":36,"column_start":18,"column_end":21},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":9696},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223697,"byte_end":223700,"line_start":47,"line_end":47,"column_start":34,"column_end":37},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":9696},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/all.rs","byte_start":223929,"byte_end":223932,"line_start":58,"line_end":58,"column_start":29,"column_end":32},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":9696},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":225686,"byte_end":225693,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":9757},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":225986,"byte_end":225993,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":9757},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":226224,"byte_end":226231,"line_start":45,"line_end":45,"column_start":34,"column_end":41},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":9757},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each.rs","byte_start":226470,"byte_end":226477,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":9757},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":227578,"byte_end":227582,"line_start":20,"line_end":20,"column_start":10,"column_end":14},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":9814},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":228079,"byte_end":228083,"line_start":37,"line_end":37,"column_start":33,"column_end":37},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":9814},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/fuse.rs","byte_start":228181,"byte_end":228185,"line_start":43,"line_end":43,"column_start":28,"column_end":32},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":9814},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":229387,"byte_end":229399,"line_start":15,"line_end":15,"column_start":26,"column_end":38},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":9858},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":231889,"byte_end":231901,"line_start":73,"line_end":73,"column_start":42,"column_end":54},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":9858},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/into_future.rs","byte_start":232021,"byte_end":232033,"line_start":79,"line_end":79,"column_start":37,"column_end":49},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":9858},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":232918,"byte_end":232921,"line_start":22,"line_end":22,"column_start":28,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":9933},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":233110,"byte_end":233113,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":9933},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":233282,"byte_end":233285,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":9933},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/map.rs","byte_start":233453,"byte_end":233456,"line_start":49,"line_end":49,"column_start":24,"column_end":27},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":9933},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234568,"byte_end":234572,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":10065},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234623,"byte_end":234627,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":10065},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234778,"byte_end":234782,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":10065},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/next.rs","byte_start":234921,"byte_end":234925,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":10065},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235576,"byte_end":235590,"line_start":16,"line_end":16,"column_start":22,"column_end":36},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":10073},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235741,"byte_end":235755,"line_start":22,"line_end":22,"column_start":56,"column_end":70},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":10073},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/select_next_some.rs","byte_start":235899,"byte_end":235913,"line_start":28,"line_end":28,"column_start":51,"column_end":65},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":10073},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":237224,"byte_end":237232,"line_start":29,"line_end":29,"column_start":18,"column_end":26},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":10081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242729,"byte_end":242737,"line_start":189,"line_end":189,"column_start":34,"column_end":42},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":10081},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":242879,"byte_end":242887,"line_start":195,"line_end":195,"column_start":28,"column_end":36},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":10081},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244039,"byte_end":244043,"line_start":237,"line_end":237,"column_start":25,"column_end":29},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":10125},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244288,"byte_end":244292,"line_start":247,"line_end":247,"column_start":34,"column_end":38},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":10125},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":244403,"byte_end":244407,"line_start":253,"line_end":253,"column_start":25,"column_end":29},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":10125},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":245104,"byte_end":245111,"line_start":279,"line_end":279,"column_start":25,"column_end":32},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":10166},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":245359,"byte_end":245366,"line_start":289,"line_end":289,"column_start":34,"column_end":41},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":10166},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":245477,"byte_end":245484,"line_start":295,"line_end":295,"column_start":25,"column_end":32},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":10166},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246204,"byte_end":246210,"line_start":321,"line_end":321,"column_start":28,"column_end":34},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":10207},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246562,"byte_end":246568,"line_start":332,"line_end":332,"column_start":29,"column_end":35},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":10207},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":246837,"byte_end":246843,"line_start":343,"line_end":343,"column_start":24,"column_end":30},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":10207},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":248104,"byte_end":248112,"line_start":381,"line_end":381,"column_start":28,"column_end":36},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":10256},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":248432,"byte_end":248440,"line_start":394,"line_end":394,"column_start":29,"column_end":37},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":10256},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":248624,"byte_end":248632,"line_start":405,"line_end":405,"column_start":24,"column_end":32},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":10256},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/peek.rs","byte_start":249003,"byte_end":249013,"line_start":423,"line_end":423,"column_start":34,"column_end":44},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2710},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":249678,"byte_end":249682,"line_start":20,"line_end":20,"column_start":18,"column_end":22},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":10305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":249873,"byte_end":249877,"line_start":28,"line_end":28,"column_start":39,"column_end":43},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":10305},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip.rs","byte_start":249995,"byte_end":249999,"line_start":34,"line_end":34,"column_start":29,"column_end":33},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":10305},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":251596,"byte_end":251605,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":10349},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":252057,"byte_end":252066,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":10349},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":252392,"byte_end":252401,"line_start":54,"line_end":54,"column_start":34,"column_end":43},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":10349},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/skip_while.rs","byte_start":252649,"byte_end":252658,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":10349},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":254951,"byte_end":254955,"line_start":21,"line_end":21,"column_start":18,"column_end":22},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":10418},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":255128,"byte_end":255132,"line_start":29,"line_end":29,"column_start":21,"column_end":25},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":10418},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take.rs","byte_start":256077,"byte_end":256081,"line_start":68,"line_end":68,"column_start":26,"column_end":30},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":10418},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":257104,"byte_end":257113,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":10462},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":257561,"byte_end":257570,"line_start":41,"line_end":41,"column_start":18,"column_end":27},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":10462},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":257889,"byte_end":257898,"line_start":54,"line_end":54,"column_start":29,"column_end":38},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":10462},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_while.rs","byte_start":259410,"byte_end":259419,"line_start":104,"line_end":104,"column_start":34,"column_end":43},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":10462},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":260803,"byte_end":260812,"line_start":30,"line_end":30,"column_start":30,"column_end":39},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":10531},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":261100,"byte_end":261109,"line_start":41,"line_end":41,"column_start":15,"column_end":24},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":10531},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":263226,"byte_end":263235,"line_start":111,"line_end":111,"column_start":26,"column_end":35},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":10531},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/take_until.rs","byte_start":264267,"byte_end":264276,"line_start":150,"line_end":150,"column_start":31,"column_end":40},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":10531},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265218,"byte_end":265222,"line_start":23,"line_end":23,"column_start":33,"column_end":37},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":10588},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265473,"byte_end":265477,"line_start":33,"line_end":33,"column_start":18,"column_end":22},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":10588},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265723,"byte_end":265727,"line_start":45,"line_end":45,"column_start":34,"column_end":38},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":10588},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/then.rs","byte_start":265953,"byte_end":265957,"line_start":56,"line_end":56,"column_start":29,"column_end":33},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":10588},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":267832,"byte_end":267835,"line_start":22,"line_end":22,"column_start":32,"column_end":35},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":10649},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269421,"byte_end":269424,"line_start":61,"line_end":61,"column_start":32,"column_end":35},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":10649},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/zip.rs","byte_start":269619,"byte_end":269622,"line_start":71,"line_end":71,"column_start":27,"column_end":30},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":10649},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":272303,"byte_end":272309,"line_start":24,"line_end":24,"column_start":18,"column_end":24},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":10706},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":272795,"byte_end":272801,"line_start":43,"line_end":43,"column_start":29,"column_end":35},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":10706},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/chunks.rs","byte_start":274409,"byte_end":274415,"line_start":88,"line_end":88,"column_start":39,"column_end":45},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":10706},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":275387,"byte_end":275398,"line_start":23,"line_end":23,"column_start":18,"column_end":29},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":10754},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":275728,"byte_end":275739,"line_start":37,"line_end":37,"column_start":29,"column_end":40},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":10754},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/ready_chunks.rs","byte_start":277900,"byte_end":277911,"line_start":96,"line_end":96,"column_start":39,"column_end":50},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":10754},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":278909,"byte_end":278913,"line_start":28,"line_end":28,"column_start":36,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":10802},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":279399,"byte_end":279403,"line_start":45,"line_end":45,"column_start":29,"column_end":33},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":10802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":279567,"byte_end":279571,"line_start":52,"line_end":52,"column_start":24,"column_end":28},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":10802},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":279933,"byte_end":279937,"line_start":65,"line_end":65,"column_start":35,"column_end":39},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":10802},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/scan.rs","byte_start":281164,"byte_end":281168,"line_start":108,"line_end":108,"column_start":40,"column_end":44},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":10802},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":282349,"byte_end":282364,"line_start":26,"line_end":26,"column_start":25,"column_end":40},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":10871},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":282696,"byte_end":282711,"line_start":39,"line_end":39,"column_start":10,"column_end":25},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":10871},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":283038,"byte_end":283053,"line_start":55,"line_end":55,"column_start":21,"column_end":36},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":10871},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffer_unordered.rs","byte_start":284507,"byte_end":284522,"line_start":100,"line_end":100,"column_start":26,"column_end":41},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":10871},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":285632,"byte_end":285640,"line_start":27,"line_end":27,"column_start":25,"column_end":33},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":10916},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":285987,"byte_end":285995,"line_start":41,"line_end":41,"column_start":10,"column_end":18},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":10916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/buffered.rs","byte_start":286275,"byte_end":286283,"line_start":53,"line_end":53,"column_start":21,"column_end":29},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":10916},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":289432,"byte_end":289447,"line_start":60,"line_end":60,"column_start":6,"column_end":21},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":10961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":293566,"byte_end":293579,"line_start":177,"line_end":177,"column_start":45,"column_end":58},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3445},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":294099,"byte_end":294112,"line_start":194,"line_end":194,"column_start":50,"column_end":63},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3445},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":294510,"byte_end":294520,"line_start":210,"line_end":210,"column_start":22,"column_end":32},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":3460},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":294545,"byte_end":294555,"line_start":211,"line_end":211,"column_start":22,"column_end":32},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":3460},"to":{"krate":1,"index":3162}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":294565,"byte_end":294575,"line_start":213,"line_end":213,"column_start":6,"column_end":16},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":3460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":295626,"byte_end":295636,"line_start":239,"line_end":239,"column_start":18,"column_end":28},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":3460},"to":{"krate":22,"index":94}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":297237,"byte_end":297250,"line_start":279,"line_end":279,"column_start":10,"column_end":23},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":10967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":297454,"byte_end":297467,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":10967},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":298582,"byte_end":298598,"line_start":322,"line_end":322,"column_start":25,"column_end":41},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":11000},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":299072,"byte_end":299088,"line_start":338,"line_end":338,"column_start":10,"column_end":26},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":11000},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":300027,"byte_end":300047,"line_start":368,"line_end":368,"column_start":10,"column_end":30},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":11009},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":300314,"byte_end":300330,"line_start":378,"line_end":378,"column_start":26,"column_end":42},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":11000},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/flatten_unordered.rs","byte_start":300535,"byte_end":300551,"line_start":388,"line_end":388,"column_start":21,"column_end":37},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":11000},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":305980,"byte_end":305997,"line_start":23,"line_end":23,"column_start":33,"column_end":50},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":11144},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":306343,"byte_end":306360,"line_start":37,"line_end":37,"column_start":18,"column_end":35},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":11144},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":306793,"byte_end":306810,"line_start":54,"line_end":54,"column_start":34,"column_end":51},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":11144},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/for_each_concurrent.rs","byte_start":307040,"byte_end":307057,"line_start":65,"line_end":65,"column_start":29,"column_end":46},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":11144},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147611,"byte_end":147612,"line_start":245,"line_end":245,"column_start":31,"column_end":32},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":3565},"to":{"krate":0,"index":3566}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/stream/mod.rs","byte_start":147755,"byte_end":147761,"line_start":249,"line_end":249,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":5,"index":96},"to":{"krate":0,"index":3566}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":347778,"byte_end":347785,"line_start":23,"line_end":23,"column_start":33,"column_end":40},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":11205},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":348078,"byte_end":348085,"line_start":36,"line_end":36,"column_start":18,"column_end":25},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":11205},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":348366,"byte_end":348373,"line_start":49,"line_end":49,"column_start":29,"column_end":36},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":11205},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/and_then.rs","byte_start":349509,"byte_end":349516,"line_start":85,"line_end":85,"column_start":34,"column_end":41},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":11205},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350434,"byte_end":350444,"line_start":18,"line_end":18,"column_start":10,"column_end":20},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":11473},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350637,"byte_end":350647,"line_start":27,"line_end":27,"column_start":51,"column_end":61},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":11473},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/into_stream.rs","byte_start":350768,"byte_end":350778,"line_start":33,"line_end":33,"column_start":32,"column_end":42},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":11473},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":351877,"byte_end":351883,"line_start":23,"line_end":23,"column_start":33,"column_end":39},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":11651},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":352175,"byte_end":352181,"line_start":36,"line_end":36,"column_start":18,"column_end":24},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":11651},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":352459,"byte_end":352465,"line_start":49,"line_end":49,"column_start":29,"column_end":35},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":11651},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/or_else.rs","byte_start":353735,"byte_end":353741,"line_start":89,"line_end":89,"column_start":34,"column_end":40},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":11651},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354645,"byte_end":354652,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":11712},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354706,"byte_end":354713,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":11712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":354876,"byte_end":354883,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":11712},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_next.rs","byte_start":355025,"byte_end":355032,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":11712},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":355808,"byte_end":355818,"line_start":21,"line_end":21,"column_start":33,"column_end":43},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":11720},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":356114,"byte_end":356124,"line_start":34,"line_end":34,"column_start":18,"column_end":28},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":11720},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each.rs","byte_start":356369,"byte_end":356379,"line_start":45,"line_end":45,"column_start":29,"column_end":39},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":11720},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":357778,"byte_end":357787,"line_start":27,"line_end":27,"column_start":33,"column_end":42},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":11777},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":358183,"byte_end":358192,"line_start":42,"line_end":42,"column_start":18,"column_end":27},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":11777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":358435,"byte_end":358444,"line_start":53,"line_end":53,"column_start":34,"column_end":43},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":11777},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter.rs","byte_start":358701,"byte_end":358710,"line_start":64,"line_end":64,"column_start":29,"column_end":38},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":11777},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":360844,"byte_end":360856,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":11842},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":361156,"byte_end":361168,"line_start":37,"line_end":37,"column_start":18,"column_end":30},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":11842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":361365,"byte_end":361377,"line_start":45,"line_end":45,"column_start":37,"column_end":49},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":11842},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_filter_map.rs","byte_start":361655,"byte_end":361667,"line_start":56,"line_end":56,"column_start":32,"column_end":44},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":11842},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":363844,"byte_end":363854,"line_start":24,"line_end":24,"column_start":10,"column_end":20},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":11903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":364119,"byte_end":364129,"line_start":37,"line_end":37,"column_start":26,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":11903},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_flatten.rs","byte_start":364375,"byte_end":364385,"line_start":48,"line_end":48,"column_start":21,"column_end":31},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":11903},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":365994,"byte_end":366004,"line_start":20,"line_end":20,"column_start":33,"column_end":43},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":11947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":366144,"byte_end":366154,"line_start":26,"line_end":26,"column_start":29,"column_end":39},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":11947},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_collect.rs","byte_start":366342,"byte_end":366352,"line_start":36,"line_end":36,"column_start":24,"column_end":34},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":11947},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":367327,"byte_end":367336,"line_start":19,"line_end":19,"column_start":10,"column_end":19},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":11996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_concat.rs","byte_start":367555,"byte_end":367564,"line_start":29,"line_end":29,"column_start":21,"column_end":30},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":11996},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":368948,"byte_end":368957,"line_start":25,"line_end":25,"column_start":21,"column_end":30},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":12036},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":369452,"byte_end":369461,"line_start":44,"line_end":44,"column_start":32,"column_end":41},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":12036},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":371401,"byte_end":371410,"line_start":95,"line_end":95,"column_start":51,"column_end":60},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":12036},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":372069,"byte_end":372083,"line_start":118,"line_end":118,"column_start":39,"column_end":53},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":12084},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_chunks.rs","byte_start":372228,"byte_end":372242,"line_start":124,"line_end":124,"column_start":43,"column_end":57},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":12084},"to":{"krate":1,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373053,"byte_end":373060,"line_start":22,"line_end":22,"column_start":36,"column_end":43},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":12105},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373419,"byte_end":373426,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":12105},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373706,"byte_end":373713,"line_start":48,"line_end":48,"column_start":37,"column_end":44},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":12105},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_fold.rs","byte_start":373967,"byte_end":373974,"line_start":59,"line_end":59,"column_start":32,"column_end":39},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":12105},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":377837,"byte_end":377846,"line_start":78,"line_end":78,"column_start":32,"column_end":41},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":12174},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_unfold.rs","byte_start":378108,"byte_end":378117,"line_start":88,"line_end":88,"column_start":34,"column_end":43},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":12174},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":379863,"byte_end":379875,"line_start":26,"line_end":26,"column_start":33,"column_end":45},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":12231},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":380331,"byte_end":380343,"line_start":42,"line_end":42,"column_start":18,"column_end":30},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":12231},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":380683,"byte_end":380695,"line_start":55,"line_end":55,"column_start":29,"column_end":41},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":12231},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_skip_while.rs","byte_start":382187,"byte_end":382199,"line_start":100,"line_end":100,"column_start":34,"column_end":46},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":12231},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":383427,"byte_end":383439,"line_start":29,"line_end":29,"column_start":33,"column_end":45},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":12300},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":383891,"byte_end":383903,"line_start":45,"line_end":45,"column_start":18,"column_end":30},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":12300},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":384241,"byte_end":384253,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":12300},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_take_while.rs","byte_start":385853,"byte_end":385865,"line_start":109,"line_end":109,"column_start":34,"column_end":46},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":12300},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":387153,"byte_end":387171,"line_start":26,"line_end":26,"column_start":10,"column_end":28},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":12369},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffer_unordered.rs","byte_start":387510,"byte_end":387528,"line_start":42,"line_end":42,"column_start":21,"column_end":39},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":12369},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":389734,"byte_end":389745,"line_start":27,"line_end":27,"column_start":10,"column_end":21},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":12417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_buffered.rs","byte_start":390082,"byte_end":390093,"line_start":43,"line_end":43,"column_start":21,"column_end":32},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":12417},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":392256,"byte_end":392276,"line_start":25,"line_end":25,"column_start":33,"column_end":53},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":12465},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":392641,"byte_end":392661,"line_start":39,"line_end":39,"column_start":34,"column_end":54},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":12465},"to":{"krate":5,"index":27}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":392900,"byte_end":392920,"line_start":50,"line_end":50,"column_start":18,"column_end":38},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":12465},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/try_for_each_concurrent.rs","byte_start":393368,"byte_end":393388,"line_start":67,"line_end":67,"column_start":29,"column_end":49},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":12465},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314174,"byte_end":314175,"line_start":154,"line_end":154,"column_start":46,"column_end":47},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4806},"to":{"krate":0,"index":4807}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/try_stream/mod.rs","byte_start":314256,"byte_end":314265,"line_start":157,"line_end":157,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":5,"index":127},"to":{"krate":0,"index":4807}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396152,"byte_end":396156,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":12526},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/iter.rs","byte_start":396778,"byte_end":396782,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":12526},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":397973,"byte_end":397979,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":12535},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":398006,"byte_end":398012,"line_start":36,"line_end":36,"column_start":20,"column_end":26},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":12535},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat.rs","byte_start":398320,"byte_end":398326,"line_start":51,"line_end":51,"column_start":25,"column_end":31},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":12535},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398923,"byte_end":398933,"line_start":17,"line_end":17,"column_start":36,"column_end":46},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":12544},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":398977,"byte_end":398987,"line_start":19,"line_end":19,"column_start":37,"column_end":47},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":12544},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/repeat_with.rs","byte_start":399301,"byte_end":399311,"line_start":31,"line_end":31,"column_start":42,"column_end":52},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":12544},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401831,"byte_end":401836,"line_start":21,"line_end":21,"column_start":19,"column_end":24},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":12553},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401868,"byte_end":401873,"line_start":23,"line_end":23,"column_start":25,"column_end":30},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":12553},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":401958,"byte_end":401963,"line_start":29,"line_end":29,"column_start":20,"column_end":25},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":12553},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/empty.rs","byte_start":402212,"byte_end":402217,"line_start":41,"line_end":41,"column_start":19,"column_end":24},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":12553},"to":{"krate":1,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403156,"byte_end":403160,"line_start":34,"line_end":34,"column_start":11,"column_end":15},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":12559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403289,"byte_end":403293,"line_start":40,"line_end":40,"column_start":30,"column_end":34},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":12559},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/once.rs","byte_start":403898,"byte_end":403902,"line_start":63,"line_end":63,"column_start":35,"column_end":39},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":12559},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404561,"byte_end":404568,"line_start":21,"line_end":21,"column_start":19,"column_end":26},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":12595},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404600,"byte_end":404607,"line_start":23,"line_end":23,"column_start":25,"column_end":32},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":12595},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404692,"byte_end":404699,"line_start":29,"line_end":29,"column_start":20,"column_end":27},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":12595},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/pending.rs","byte_start":404944,"byte_end":404951,"line_start":41,"line_end":41,"column_start":19,"column_end":26},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":12595},"to":{"krate":1,"index":2772}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405338,"byte_end":405344,"line_start":15,"line_end":15,"column_start":19,"column_end":25},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":5220},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":405375,"byte_end":405381,"line_start":17,"line_end":17,"column_start":24,"column_end":30},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5220},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_fn.rs","byte_start":406146,"byte_end":406152,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5220},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":406848,"byte_end":406861,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":12601},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/poll_immediate.rs","byte_start":407774,"byte_end":407787,"line_start":47,"line_end":47,"column_start":40,"column_end":53},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":12601},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":410674,"byte_end":410680,"line_start":61,"line_end":61,"column_start":16,"column_end":22},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":12640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":411984,"byte_end":411990,"line_start":96,"line_end":96,"column_start":32,"column_end":38},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":12640},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select.rs","byte_start":412169,"byte_end":412175,"line_start":106,"line_end":106,"column_start":27,"column_end":33},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":12640},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":412850,"byte_end":412858,"line_start":16,"line_end":16,"column_start":6,"column_end":14},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":12685},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":413208,"byte_end":413216,"line_start":32,"line_end":32,"column_start":18,"column_end":26},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":12685},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":413373,"byte_end":413386,"line_start":45,"line_end":45,"column_start":6,"column_end":19},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5372},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":416983,"byte_end":417001,"line_start":159,"line_end":159,"column_start":29,"column_end":47},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":12704},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":418368,"byte_end":418386,"line_start":194,"line_end":194,"column_start":45,"column_end":63},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":12704},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":419956,"byte_end":419974,"line_start":256,"line_end":256,"column_start":40,"column_end":58},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":12704},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_with_strategy.rs","byte_start":421148,"byte_end":421166,"line_start":291,"line_end":291,"column_start":44,"column_end":62},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":12704},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423737,"byte_end":423743,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":12777},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":423983,"byte_end":423989,"line_start":78,"line_end":78,"column_start":39,"column_end":45},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":12777},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/unfold.rs","byte_start":424269,"byte_end":424275,"line_start":92,"line_end":92,"column_start":34,"column_end":40},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":12777},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":425823,"byte_end":425835,"line_start":26,"line_end":26,"column_start":23,"column_end":35},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":12830},"to":{"krate":1,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":425940,"byte_end":425952,"line_start":32,"line_end":32,"column_start":16,"column_end":28},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":12830},"to":{"krate":1,"index":2807}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":425983,"byte_end":425995,"line_start":34,"line_end":34,"column_start":24,"column_end":36},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":12830},"to":{"krate":1,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426118,"byte_end":426130,"line_start":40,"line_end":40,"column_start":17,"column_end":29},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":12830},"to":{"krate":1,"index":2838}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":426311,"byte_end":426323,"line_start":47,"line_end":47,"column_start":20,"column_end":32},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":12830},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428905,"byte_end":428919,"line_start":102,"line_end":102,"column_start":27,"column_end":41},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":5572},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":428945,"byte_end":428959,"line_start":104,"line_end":104,"column_start":19,"column_end":33},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5572},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431728,"byte_end":431742,"line_start":173,"line_end":173,"column_start":31,"column_end":45},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5572},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":431835,"byte_end":431849,"line_start":179,"line_end":179,"column_start":30,"column_end":44},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5572},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433011,"byte_end":433025,"line_start":214,"line_end":214,"column_start":29,"column_end":43},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":5572},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433191,"byte_end":433205,"line_start":220,"line_end":220,"column_start":41,"column_end":55},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":5572},"to":{"krate":1,"index":7987}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433490,"byte_end":433504,"line_start":233,"line_end":233,"column_start":35,"column_end":49},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":5572},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_ordered.rs","byte_start":433674,"byte_end":433688,"line_start":239,"line_end":239,"column_start":35,"column_end":49},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":5572},"to":{"krate":1,"index":8000}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/abort.rs","byte_start":460735,"byte_end":460746,"line_start":4,"line_end":4,"column_start":19,"column_end":30},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":5708},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":462120,"byte_end":462128,"line_start":40,"line_end":40,"column_start":31,"column_end":39},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":12909},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":463309,"byte_end":463317,"line_start":75,"line_end":75,"column_start":40,"column_end":48},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":12909},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":463354,"byte_end":463364,"line_start":77,"line_end":77,"column_start":28,"column_end":38},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":12870},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464216,"byte_end":464226,"line_start":104,"line_end":104,"column_start":33,"column_end":43},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":12870},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464274,"byte_end":464281,"line_start":106,"line_end":106,"column_start":35,"column_end":42},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":12880},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464544,"byte_end":464551,"line_start":118,"line_end":118,"column_start":40,"column_end":47},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":12880},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":464592,"byte_end":464602,"line_start":120,"line_end":120,"column_start":28,"column_end":38},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":12889},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465471,"byte_end":465481,"line_start":147,"line_end":147,"column_start":33,"column_end":43},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":12889},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465529,"byte_end":465533,"line_start":149,"line_end":149,"column_start":35,"column_end":39},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":12900},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465792,"byte_end":465796,"line_start":161,"line_end":161,"column_start":40,"column_end":44},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":12900},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":465965,"byte_end":465975,"line_start":165,"line_end":165,"column_start":33,"column_end":43},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":12889},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466020,"byte_end":466030,"line_start":166,"line_end":166,"column_start":33,"column_end":43},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":12889},"to":{"krate":1,"index":3162}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466076,"byte_end":466086,"line_start":168,"line_end":168,"column_start":33,"column_end":43},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":12870},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466131,"byte_end":466141,"line_start":169,"line_end":169,"column_start":33,"column_end":43},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":12870},"to":{"krate":1,"index":3162}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466195,"byte_end":466203,"line_start":171,"line_end":171,"column_start":41,"column_end":49},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":12909},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/iter.rs","byte_start":466252,"byte_end":466260,"line_start":172,"line_end":172,"column_start":41,"column_end":49},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":12909},"to":{"krate":1,"index":3162}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":467945,"byte_end":467949,"line_start":46,"line_end":46,"column_start":27,"column_end":31},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":5842},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":467984,"byte_end":467988,"line_start":47,"line_end":47,"column_start":27,"column_end":31},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":5842},"to":{"krate":1,"index":3162}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":468020,"byte_end":468024,"line_start":49,"line_end":49,"column_start":23,"column_end":27},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":5842},"to":{"krate":22,"index":94}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":469157,"byte_end":469161,"line_start":78,"line_end":78,"column_start":11,"column_end":15},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":5842},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/task.rs","byte_start":470161,"byte_end":470165,"line_start":109,"line_end":109,"column_start":20,"column_end":24},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":5842},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":471615,"byte_end":471630,"line_start":29,"line_end":29,"column_start":11,"column_end":26},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":5913},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/ready_to_run_queue.rs","byte_start":474298,"byte_end":474313,"line_start":111,"line_end":111,"column_start":20,"column_end":35},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":5913},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436157,"byte_end":436173,"line_start":61,"line_end":61,"column_start":33,"column_end":49},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":5935},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436214,"byte_end":436230,"line_start":62,"line_end":62,"column_start":33,"column_end":49},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":5935},"to":{"krate":1,"index":3162}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436259,"byte_end":436275,"line_start":63,"line_end":63,"column_start":21,"column_end":37},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":5935},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436300,"byte_end":436316,"line_start":65,"line_end":65,"column_start":16,"column_end":32},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":5935},"to":{"krate":22,"index":16}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":436501,"byte_end":436517,"line_start":72,"line_end":72,"column_start":21,"column_end":37},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":5935},"to":{"krate":22,"index":19}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438224,"byte_end":438240,"line_start":104,"line_end":104,"column_start":23,"column_end":39},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":5935},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":438314,"byte_end":438330,"line_start":110,"line_end":110,"column_start":11,"column_end":27},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":5935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":449939,"byte_end":449955,"line_start":385,"line_end":385,"column_start":30,"column_end":46},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5935},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":454331,"byte_end":454335,"line_start":483,"line_end":483,"column_start":32,"column_end":36},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":5972},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457144,"byte_end":457160,"line_start":549,"line_end":549,"column_start":21,"column_end":37},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5935},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457298,"byte_end":457314,"line_start":555,"line_end":555,"column_start":11,"column_end":27},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":5935},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":457885,"byte_end":457901,"line_start":575,"line_end":575,"column_start":20,"column_end":36},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":5935},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":459551,"byte_end":459567,"line_start":616,"line_end":616,"column_start":35,"column_end":51},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":5935},"to":{"krate":1,"index":7991}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460037,"byte_end":460053,"line_start":630,"line_end":630,"column_start":33,"column_end":49},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":5935},"to":{"krate":1,"index":7987}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460329,"byte_end":460345,"line_start":643,"line_end":643,"column_start":35,"column_end":51},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":5935},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/futures_unordered/mod.rs","byte_start":460467,"byte_end":460483,"line_start":649,"line_end":649,"column_start":27,"column_end":43},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":5935},"to":{"krate":1,"index":8000}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":475908,"byte_end":475917,"line_start":36,"line_end":36,"column_start":27,"column_end":36},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":12916},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":476062,"byte_end":476071,"line_start":42,"line_end":42,"column_start":26,"column_end":35},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":12916},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477544,"byte_end":477553,"line_start":89,"line_end":89,"column_start":38,"column_end":47},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":12916},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":477652,"byte_end":477661,"line_start":95,"line_end":95,"column_start":37,"column_end":46},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":12916},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":478445,"byte_end":478454,"line_start":117,"line_end":117,"column_start":42,"column_end":51},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":12916},"to":{"krate":5,"index":110}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479472,"byte_end":479481,"line_start":149,"line_end":149,"column_start":47,"column_end":56},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":12916},"to":{"krate":1,"index":7987}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479626,"byte_end":479635,"line_start":155,"line_end":155,"column_start":41,"column_end":50},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":12916},"to":{"krate":1,"index":8000}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":479818,"byte_end":479827,"line_start":163,"line_end":163,"column_start":43,"column_end":52},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":12916},"to":{"krate":1,"index":7991}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":480910,"byte_end":480914,"line_start":202,"line_end":202,"column_start":43,"column_end":47},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":12949},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481347,"byte_end":481351,"line_start":218,"line_end":218,"column_start":48,"column_end":52},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":12949},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481406,"byte_end":481413,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":12958},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481850,"byte_end":481857,"line_start":236,"line_end":236,"column_start":48,"column_end":55},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":12958},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":481908,"byte_end":481916,"line_start":238,"line_end":238,"column_start":39,"column_end":47},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":12967},"to":{"krate":1,"index":8186}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/stream/select_all.rs","byte_start":482344,"byte_end":482352,"line_start":254,"line_end":254,"column_start":48,"column_end":56},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":12967},"to":{"krate":1,"index":8060}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484600,"byte_end":484602,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":6283},"to":{"krate":0,"index":6286}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484657,"byte_end":484659,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6285},"to":{"krate":0,"index":6289}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":484738,"byte_end":484743,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":22,"index":16},"to":{"krate":0,"index":6286}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/task/spawn.rs","byte_start":487863,"byte_end":487873,"line_start":103,"line_end":103,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":22,"index":19},"to":{"krate":0,"index":6289}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":492687,"byte_end":492696,"line_start":22,"line_end":22,"column_start":9,"column_end":18},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":12974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":494980,"byte_end":494991,"line_start":87,"line_end":87,"column_start":6,"column_end":17},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":13021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":495807,"byte_end":495814,"line_start":112,"line_end":112,"column_start":23,"column_end":30},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":13032},"to":{"krate":1,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":496017,"byte_end":496026,"line_start":121,"line_end":121,"column_start":9,"column_end":18},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":12974},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497015,"byte_end":497024,"line_start":152,"line_end":152,"column_start":22,"column_end":31},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":12974},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497263,"byte_end":497272,"line_start":163,"line_end":163,"column_start":21,"column_end":30},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":12974},"to":{"krate":5,"index":96}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/abortable.rs","byte_start":497531,"byte_end":497542,"line_start":174,"line_end":174,"column_start":6,"column_end":17},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":13021},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498214,"byte_end":498215,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6379},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498354,"byte_end":498361,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":6374},"to":{"krate":0,"index":6384}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498450,"byte_end":498451,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6388},"to":{"krate":0,"index":6384}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498637,"byte_end":498643,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":6384},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":498721,"byte_end":498722,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6396},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":499738,"byte_end":499742,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6401},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":499836,"byte_end":499840,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6401},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500099,"byte_end":500106,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":13063},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500329,"byte_end":500336,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":13063},"to":{"krate":0,"index":6384}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500527,"byte_end":500534,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":13063},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":500839,"byte_end":500852,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":13084},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":501269,"byte_end":501278,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":13100},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":501562,"byte_end":501571,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":13100},"to":{"krate":0,"index":6384}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":501833,"byte_end":501842,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":13100},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502164,"byte_end":502171,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":13115},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502390,"byte_end":502397,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":13115},"to":{"krate":0,"index":6384}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502575,"byte_end":502582,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":13115},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":502883,"byte_end":502891,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":13130},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503114,"byte_end":503122,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":13130},"to":{"krate":0,"index":6384}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503304,"byte_end":503312,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":13130},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503622,"byte_end":503633,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":13145},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":503893,"byte_end":503904,"line_start":256,"line_end":256,"column_start":48,"column_end":59},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":13145},"to":{"krate":0,"index":6384}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":504141,"byte_end":504152,"line_start":266,"line_end":266,"column_start":45,"column_end":56},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":13145},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":504519,"byte_end":504531,"line_start":283,"line_end":283,"column_start":49,"column_end":61},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":13157},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":504792,"byte_end":504804,"line_start":294,"line_end":294,"column_start":48,"column_end":60},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":13157},"to":{"krate":0,"index":6384}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":505042,"byte_end":505054,"line_start":304,"line_end":304,"column_start":45,"column_end":57},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":13157},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":505673,"byte_end":505687,"line_start":326,"line_end":326,"column_start":41,"column_end":55},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":13169},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":505910,"byte_end":505924,"line_start":335,"line_end":335,"column_start":40,"column_end":54},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":13169},"to":{"krate":0,"index":6384}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":506125,"byte_end":506139,"line_start":343,"line_end":343,"column_start":37,"column_end":51},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":13169},"to":{"krate":0,"index":6392}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":506445,"byte_end":506451,"line_start":357,"line_end":357,"column_start":21,"column_end":27},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6565},"to":{"krate":1,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/fns.rs","byte_start":506544,"byte_end":506550,"line_start":362,"line_end":362,"column_start":27,"column_end":33},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":6565},"to":{"krate":0,"index":6374}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.25/src/unfold_state.rs","byte_start":507155,"byte_end":507166,"line_start":22,"line_end":22,"column_start":12,"column_end":23},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":13202},"to":{"krate":4294967295,"index":4294967295}}]}