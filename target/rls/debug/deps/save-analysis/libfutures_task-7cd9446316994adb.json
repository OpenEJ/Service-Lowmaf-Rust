{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25","program":"/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","futures_task","--edition=2018","/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","-C","metadata=7cd9446316994adb","-C","extra-filename=-7cd9446316994adb","--out-dir","/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","-L","dependency=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libfutures_task-7cd9446316994adb.rmeta"},"prelude":{"crate_id":{"name":"futures_task","disambiguator":[10040432833625291285,0]},"crate_root":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src","external_crates":[{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","num":4,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}}],"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":0,"byte_end":1427,"line_start":1,"line_end":50,"column_start":1,"column_end":70}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":19},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":597,"byte_end":607,"line_start":19,"line_end":19,"column_start":24,"column_end":34},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":16},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":609,"byte_end":614,"line_start":19,"line_end":19,"column_start":36,"column_end":41},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":22},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":616,"byte_end":626,"line_start":19,"line_end":19,"column_start":43,"column_end":53},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":94},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":791,"byte_end":798,"line_start":26,"line_end":26,"column_start":26,"column_end":33},"alias_span":null,"name":"ArcWake","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":122},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":956,"byte_end":961,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1128,"byte_end":1137,"line_start":40,"line_end":40,"column_start":28,"column_end":37},"alias_span":null,"name":"waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":407},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1139,"byte_end":1147,"line_start":40,"line_end":40,"column_start":39,"column_end":47},"alias_span":null,"name":"WakerRef","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1195,"byte_end":1204,"line_start":43,"line_end":43,"column_start":29,"column_end":38},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":203},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1206,"byte_end":1220,"line_start":43,"line_end":43,"column_start":40,"column_end":54},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1222,"byte_end":1237,"line_start":43,"line_end":43,"column_start":56,"column_end":71},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":378},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1284,"byte_end":1294,"line_start":46,"line_end":46,"column_start":28,"column_end":38},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":379},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1323,"byte_end":1337,"line_start":47,"line_end":47,"column_start":28,"column_end":42},"alias_span":null,"name":"noop_waker_ref","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13630},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1379,"byte_end":1386,"line_start":50,"line_end":50,"column_start":22,"column_end":29},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":49788},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1388,"byte_end":1392,"line_start":50,"line_end":50,"column_start":31,"column_end":35},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":49824},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1394,"byte_end":1402,"line_start":50,"line_end":50,"column_start":37,"column_end":45},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":49833},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1404,"byte_end":1418,"line_start":50,"line_end":50,"column_start":47,"column_end":61},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":1,"index":13640},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":1420,"byte_end":1425,"line_start":50,"line_end":50,"column_start":63,"column_end":68},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":0,"byte_end":1427,"line_start":1,"line_end":50,"column_start":1,"column_end":70},"name":"","qualname":"::","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":84},{"krate":0,"index":87},{"krate":0,"index":90},{"krate":0,"index":97},{"krate":0,"index":100},{"krate":0,"index":134},{"krate":0,"index":137},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":176},{"krate":0,"index":179},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":354},{"krate":0,"index":357},{"krate":0,"index":360},{"krate":0,"index":385},{"krate":0,"index":388},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":398},{"krate":0,"index":401},{"krate":0,"index":404}],"decl_id":null,"docs":" Tools for working with tasks.\n","sig":null,"attributes":[{"value":"/ Tools for working with tasks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":0,"byte_end":33,"line_start":1,"line_end":1,"column_start":1,"column_end":34}},{"value":"no_std","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":69,"byte_end":75,"line_start":3,"line_end":3,"column_start":35,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\nunreachable_pub)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/lib.rs","byte_start":78,"byte_end":166,"line_start":4,"line_end":4,"column_start":1,"column_end":89}}]},{"kind":"Trait","id":{"krate":0,"index":16},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1599,"byte_end":1604,"line_start":6,"line_end":6,"column_start":11,"column_end":16},"name":"Spawn","qualname":"::spawn::Spawn","value":"Spawn","parent":null,"children":[{"krate":0,"index":17},{"krate":0,"index":18}],"decl_id":null,"docs":" The `Spawn` trait allows for pushing futures onto an executor that will\n run them to completion.\n","sig":null,"attributes":[{"value":"/ The `Spawn` trait allows for pushing futures onto an executor that will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1485,"byte_end":1560,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"/ run them to completion.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1561,"byte_end":1588,"line_start":5,"line_end":5,"column_start":1,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1924,"byte_end":1933,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"::spawn::Spawn::spawn_obj","value":"fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1611,"byte_end":1662,"line_start":7,"line_end":7,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1667,"byte_end":1670,"line_start":8,"line_end":8,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1675,"byte_end":1687,"line_start":9,"line_end":9,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1692,"byte_end":1695,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1700,"byte_end":1766,"line_start":11,"line_end":11,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1771,"byte_end":1832,"line_start":12,"line_end":12,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1837,"byte_end":1901,"line_start":13,"line_end":13,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":1906,"byte_end":1916,"line_start":14,"line_end":14,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":18},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2343,"byte_end":2349,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"status","qualname":"::spawn::Spawn::status","value":"fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2005,"byte_end":2068,"line_start":17,"line_end":17,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2073,"byte_end":2076,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2081,"byte_end":2143,"line_start":19,"line_end":19,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2148,"byte_end":2210,"line_start":20,"line_end":20,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2215,"byte_end":2278,"line_start":21,"line_end":21,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2283,"byte_end":2321,"line_start":22,"line_end":22,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2326,"byte_end":2335,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":19},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2526,"byte_end":2536,"line_start":31,"line_end":31,"column_start":11,"column_end":21},"name":"LocalSpawn","qualname":"::spawn::LocalSpawn","value":"LocalSpawn","parent":null,"children":[{"krate":0,"index":20},{"krate":0,"index":21}],"decl_id":null,"docs":" The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures\n that don't implement `Send`.\n","sig":null,"attributes":[{"value":"/ The `LocalSpawn` is similar to [`Spawn`], but allows spawning futures","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2409,"byte_end":2482,"line_start":29,"line_end":29,"column_start":1,"column_end":74}},{"value":"/ that don't implement `Send`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2483,"byte_end":2515,"line_start":30,"line_end":30,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2856,"byte_end":2871,"line_start":40,"line_end":40,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"::spawn::LocalSpawn::spawn_local_obj","value":"fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Spawns a future that will be run to completion.","sig":null,"attributes":[{"value":"/ Spawns a future that will be run to completion.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2543,"byte_end":2594,"line_start":32,"line_end":32,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2599,"byte_end":2602,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2607,"byte_end":2619,"line_start":34,"line_end":34,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2624,"byte_end":2627,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ The executor may be unable to spawn tasks. Spawn errors should","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2632,"byte_end":2698,"line_start":36,"line_end":36,"column_start":5,"column_end":71}},{"value":"/ represent relatively rare scenarios, such as the executor","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2703,"byte_end":2764,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ having been shut down so that it is no longer able to accept","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2769,"byte_end":2833,"line_start":38,"line_end":38,"column_start":5,"column_end":69}},{"value":"/ tasks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2838,"byte_end":2848,"line_start":39,"line_end":39,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":21},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3286,"byte_end":3298,"line_start":49,"line_end":49,"column_start":8,"column_end":20},"name":"status_local","qualname":"::spawn::LocalSpawn::status_local","value":"fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":null,"docs":" Determines whether the executor is able to spawn new tasks.","sig":null,"attributes":[{"value":"/ Determines whether the executor is able to spawn new tasks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":2948,"byte_end":3011,"line_start":42,"line_end":42,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3016,"byte_end":3019,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method will return `Ok` when the executor is *likely*","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3024,"byte_end":3086,"line_start":44,"line_end":44,"column_start":5,"column_end":67}},{"value":"/ (but not guaranteed) to accept a subsequent spawn attempt.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3091,"byte_end":3153,"line_start":45,"line_end":45,"column_start":5,"column_end":67}},{"value":"/ Likewise, an `Err` return means that `spawn` is likely, but","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3158,"byte_end":3221,"line_start":46,"line_end":46,"column_start":5,"column_end":68}},{"value":"/ not guaranteed, to yield an error.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3226,"byte_end":3264,"line_start":47,"line_end":47,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3269,"byte_end":3278,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":22},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3413,"byte_end":3423,"line_start":55,"line_end":55,"column_start":12,"column_end":22},"name":"SpawnError","qualname":"::spawn::SpawnError","value":"SpawnError {  }","parent":null,"children":[{"krate":0,"index":23}],"decl_id":null,"docs":" An error that occurred during spawning.\n","sig":null,"attributes":[{"value":"/ An error that occurred during spawning.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3358,"byte_end":3401,"line_start":54,"line_end":54,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":25},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3484,"byte_end":3487,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SpawnError as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3655,"byte_end":3658,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"fmt","qualname":"<SpawnError as core::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9907},"children":[],"decl_id":{"krate":1,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3922,"byte_end":3930,"line_start":76,"line_end":76,"column_start":12,"column_end":20},"name":"shutdown","qualname":"<SpawnError>::shutdown","value":"fn shutdown() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spawning failed because the executor has been shut down.\n","sig":null,"attributes":[{"value":"/ Spawning failed because the executor has been shut down.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3850,"byte_end":3910,"line_start":75,"line_end":75,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":4059,"byte_end":4070,"line_start":81,"line_end":81,"column_start":12,"column_end":23},"name":"is_shutdown","qualname":"<SpawnError>::is_shutdown","value":"fn is_shutdown(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether spawning failed to the executor being shut down.\n","sig":null,"attributes":[{"value":"/ Check whether spawning failed to the executor being shut down.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3981,"byte_end":4047,"line_start":80,"line_end":80,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":33},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":4158,"byte_end":4167,"line_start":87,"line_end":87,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"<&'_ Sp as spawn::Spawn>::spawn_obj","value":"fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":17},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":34},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":4285,"byte_end":4291,"line_start":91,"line_end":91,"column_start":8,"column_end":14},"name":"status","qualname":"<&'_ Sp as spawn::Spawn>::status","value":"fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":4413,"byte_end":4422,"line_start":97,"line_end":97,"column_start":8,"column_end":17},"name":"spawn_obj","qualname":"<&'_ mut Sp as spawn::Spawn>::spawn_obj","value":"fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":17},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":4540,"byte_end":4546,"line_start":101,"line_end":101,"column_start":8,"column_end":14},"name":"status","qualname":"<&'_ mut Sp as spawn::Spawn>::status","value":"fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":41},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":4674,"byte_end":4689,"line_start":107,"line_end":107,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"<&'_ Sp as spawn::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":42},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":4818,"byte_end":4830,"line_start":111,"line_end":111,"column_start":8,"column_end":20},"name":"status_local","qualname":"<&'_ Sp as spawn::LocalSpawn>::status_local","value":"fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":45},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":4968,"byte_end":4983,"line_start":117,"line_end":117,"column_start":8,"column_end":23},"name":"spawn_local_obj","qualname":"<&'_ mut Sp as spawn::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":46},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5112,"byte_end":5124,"line_start":121,"line_end":121,"column_start":8,"column_end":20},"name":"status_local","qualname":"<&'_ mut Sp as spawn::LocalSpawn>::status_local","value":"fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":58},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5357,"byte_end":5366,"line_start":132,"line_end":132,"column_start":12,"column_end":21},"name":"spawn_obj","qualname":"<Box<Sp> as spawn::Spawn>::spawn_obj","value":"fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":17},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5495,"byte_end":5501,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"status","qualname":"<Box<Sp> as spawn::Spawn>::status","value":"fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":62},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5654,"byte_end":5669,"line_start":142,"line_end":142,"column_start":12,"column_end":27},"name":"spawn_local_obj","qualname":"<Box<Sp> as spawn::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":63},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5809,"byte_end":5821,"line_start":146,"line_end":146,"column_start":12,"column_end":24},"name":"status_local","qualname":"<Box<Sp> as spawn::LocalSpawn>::status_local","value":"fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":66},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5969,"byte_end":5978,"line_start":152,"line_end":152,"column_start":12,"column_end":21},"name":"spawn_obj","qualname":"<Rc<Sp> as spawn::Spawn>::spawn_obj","value":"fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":17},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":67},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6107,"byte_end":6113,"line_start":156,"line_end":156,"column_start":12,"column_end":18},"name":"status","qualname":"<Rc<Sp> as spawn::Spawn>::status","value":"fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6265,"byte_end":6280,"line_start":162,"line_end":162,"column_start":12,"column_end":27},"name":"spawn_local_obj","qualname":"<Rc<Sp> as spawn::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6420,"byte_end":6432,"line_start":166,"line_end":166,"column_start":12,"column_end":24},"name":"status_local","qualname":"<Rc<Sp> as spawn::LocalSpawn>::status_local","value":"fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":74},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6633,"byte_end":6642,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"spawn_obj","qualname":"<alloc::sync::Arc<Sp> as spawn::Spawn>::spawn_obj","value":"fn spawn_obj(&Self, FutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":17},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6771,"byte_end":6777,"line_start":177,"line_end":177,"column_start":12,"column_end":18},"name":"status","qualname":"<alloc::sync::Arc<Sp> as spawn::Spawn>::status","value":"fn status(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":16},"children":[],"decl_id":{"krate":0,"index":18},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":78},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6982,"byte_end":6997,"line_start":184,"line_end":184,"column_start":12,"column_end":27},"name":"spawn_local_obj","qualname":"<alloc::sync::Arc<Sp> as spawn::LocalSpawn>::spawn_local_obj","value":"fn spawn_local_obj(&Self, LocalFutureObj) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":20},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":7137,"byte_end":7149,"line_start":188,"line_end":188,"column_start":12,"column_end":24},"name":"status_local","qualname":"<alloc::sync::Arc<Sp> as spawn::LocalSpawn>::status_local","value":"fn status_local(&Self) -> Result<(), SpawnError>","parent":{"krate":0,"index":19},"children":[],"decl_id":{"krate":0,"index":21},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":94},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8036,"byte_end":8043,"line_start":20,"line_end":20,"column_start":11,"column_end":18},"name":"ArcWake","qualname":"::arc_wake::ArcWake","value":"ArcWake: Send + Sync","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":96}],"decl_id":null,"docs":" A way of waking up a specific task.","sig":null,"attributes":[{"value":"/ A way of waking up a specific task.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7263,"byte_end":7302,"line_start":3,"line_end":3,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7303,"byte_end":7306,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ By implementing this trait, types that are expected to be wrapped in an `Arc`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7307,"byte_end":7388,"line_start":5,"line_end":5,"column_start":1,"column_end":82}},{"value":"/ can be converted into [`Waker`] objects.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7389,"byte_end":7433,"line_start":6,"line_end":6,"column_start":1,"column_end":45}},{"value":"/ Those Wakers can be used to signal executors that a task it owns","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7434,"byte_end":7502,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ is ready to be `poll`ed again.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7503,"byte_end":7537,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7538,"byte_end":7541,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Currently, there are two ways to convert `ArcWake` into [`Waker`]:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7542,"byte_end":7612,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7613,"byte_end":7616,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ * [`waker`](super::waker()) converts `Arc<impl ArcWake>` into [`Waker`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7617,"byte_end":7693,"line_start":12,"line_end":12,"column_start":1,"column_end":77}},{"value":"/ * [`waker_ref`](super::waker_ref()) converts `&Arc<impl ArcWake>` into [`WakerRef`] that","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7694,"byte_end":7786,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/   provides access to a [`&Waker`][`Waker`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7787,"byte_end":7834,"line_start":14,"line_end":14,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7835,"byte_end":7838,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7839,"byte_end":7870,"line_start":16,"line_end":16,"column_start":1,"column_end":32}},{"value":"/ [`WakerRef`]: super::WakerRef","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":7871,"byte_end":7904,"line_start":17,"line_end":17,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8495,"byte_end":8499,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"wake","qualname":"::arc_wake::ArcWake::wake","value":"fn wake(Arc<Self>)","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8063,"byte_end":8138,"line_start":21,"line_end":21,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8143,"byte_end":8159,"line_start":22,"line_end":22,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8164,"byte_end":8167,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8172,"byte_end":8253,"line_start":24,"line_end":24,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8258,"byte_end":8307,"line_start":25,"line_end":25,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8312,"byte_end":8315,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake` should place","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8320,"byte_end":8398,"line_start":27,"line_end":27,"column_start":5,"column_end":83}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8403,"byte_end":8443,"line_start":28,"line_end":28,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8448,"byte_end":8451,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8456,"byte_end":8487,"line_start":30,"line_end":30,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":9127,"byte_end":9138,"line_start":48,"line_end":48,"column_start":8,"column_end":19},"name":"wake_by_ref","qualname":"::arc_wake::ArcWake::wake_by_ref","value":"fn wake_by_ref(&Arc<Self>)","parent":{"krate":0,"index":94},"children":[],"decl_id":null,"docs":" Indicates that the associated task is ready to make progress and should\n be `poll`ed.","sig":null,"attributes":[{"value":"/ Indicates that the associated task is ready to make progress and should","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8563,"byte_end":8638,"line_start":35,"line_end":35,"column_start":5,"column_end":80}},{"value":"/ be `poll`ed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8643,"byte_end":8659,"line_start":36,"line_end":36,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8664,"byte_end":8667,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ This function can be called from an arbitrary thread, including threads which","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8672,"byte_end":8753,"line_start":38,"line_end":38,"column_start":5,"column_end":86}},{"value":"/ did not create the `ArcWake` based [`Waker`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8758,"byte_end":8807,"line_start":39,"line_end":39,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8812,"byte_end":8815,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Executors generally maintain a queue of \"ready\" tasks; `wake_by_ref` should place","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8820,"byte_end":8905,"line_start":41,"line_end":41,"column_start":5,"column_end":90}},{"value":"/ the associated task onto this queue.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8910,"byte_end":8950,"line_start":42,"line_end":42,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8955,"byte_end":8958,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This function is similar to [`wake`](ArcWake::wake), but must not consume the provided data","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8963,"byte_end":9058,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ pointer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":9063,"byte_end":9075,"line_start":45,"line_end":45,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":9080,"byte_end":9083,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ [`Waker`]: std::task::Waker","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":9088,"byte_end":9119,"line_start":47,"line_end":47,"column_start":5,"column_end":36}}]},{"kind":"Function","id":{"krate":0,"index":122},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker.rs","byte_start":9655,"byte_end":9660,"line_start":19,"line_end":19,"column_start":8,"column_end":13},"name":"waker","qualname":"::waker::waker","value":"fn waker<W>(Arc<W>) -> Waker where W: ArcWake + 'static","parent":null,"children":[],"decl_id":null,"docs":" Creates a [`Waker`] from an `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a [`Waker`] from an `Arc<impl ArcWake>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker.rs","byte_start":9505,"byte_end":9557,"line_start":15,"line_end":15,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker.rs","byte_start":9558,"byte_end":9561,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The returned [`Waker`] will call","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker.rs","byte_start":9562,"byte_end":9598,"line_start":17,"line_end":17,"column_start":1,"column_end":37}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker.rs","byte_start":9599,"byte_end":9647,"line_start":18,"line_end":18,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":407},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11472,"byte_end":11480,"line_start":14,"line_end":14,"column_start":12,"column_end":20},"name":"WakerRef","qualname":"::waker_ref::WakerRef","value":"WakerRef {  }","parent":null,"children":[{"krate":0,"index":409},{"krate":0,"index":410}],"decl_id":null,"docs":" A [`Waker`] that is only valid for a given lifetime.","sig":null,"attributes":[{"value":"/ A [`Waker`] that is only valid for a given lifetime.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11267,"byte_end":11323,"line_start":9,"line_end":9,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11324,"byte_end":11327,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Note: this type implements [`Deref<Target = Waker>`](std::ops::Deref),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11328,"byte_end":11402,"line_start":11,"line_end":11,"column_start":1,"column_end":75}},{"value":"/ so it can be used to get a `&Waker`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11403,"byte_end":11443,"line_start":12,"line_end":12,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11667,"byte_end":11670,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<WakerRef>::new","value":"fn new(&'a Waker) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] reference.\n","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] reference.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11584,"byte_end":11641,"line_start":20,"line_end":20,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11646,"byte_end":11655,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12299,"byte_end":12310,"line_start":36,"line_end":36,"column_start":12,"column_end":23},"name":"new_unowned","qualname":"<WakerRef>::new_unowned","value":"fn new_unowned(ManuallyDrop<Waker>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","sig":null,"attributes":[{"value":"/ Create a new [`WakerRef`] from a [`Waker`] that must not be dropped.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11945,"byte_end":12017,"line_start":29,"line_end":29,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12022,"byte_end":12025,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ Note: this if for rare cases where the caller created a [`Waker`] in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12030,"byte_end":12102,"line_start":31,"line_end":31,"column_start":5,"column_end":77}},{"value":"/ an unsafe way (that will be valid only for a lifetime to be determined","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12107,"byte_end":12181,"line_start":32,"line_end":32,"column_start":5,"column_end":79}},{"value":"/ by the caller), and the [`Waker`] doesn't need to or must not be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12186,"byte_end":12254,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ destroyed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12259,"byte_end":12273,"line_start":34,"line_end":34,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12278,"byte_end":12287,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":169},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12480,"byte_end":12485,"line_start":45,"line_end":45,"column_start":8,"column_end":13},"name":"deref","qualname":"<WakerRef as core::ops::Deref>::deref","value":"fn deref(&Self) -> &Waker","parent":{"krate":1,"index":3369},"children":[],"decl_id":{"krate":1,"index":3371},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12463,"byte_end":12472,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":170},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12722,"byte_end":12731,"line_start":55,"line_end":55,"column_start":8,"column_end":17},"name":"waker_ref","qualname":"::waker_ref::waker_ref","value":"fn waker_ref<W>(&Arc<W>) -> WakerRef where W: ArcWake","parent":null,"children":[],"decl_id":null,"docs":" Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","sig":null,"attributes":[{"value":"/ Creates a reference to a [`Waker`] from a reference to `Arc<impl ArcWake>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12534,"byte_end":12613,"line_start":50,"line_end":50,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12614,"byte_end":12617,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ The resulting [`Waker`] will call","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12618,"byte_end":12655,"line_start":52,"line_end":52,"column_start":1,"column_end":38}},{"value":"/ [`ArcWake.wake()`](ArcWake::wake) if awoken.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12656,"byte_end":12704,"line_start":53,"line_end":53,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12705,"byte_end":12714,"line_start":54,"line_end":54,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":203},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":13525,"byte_end":13539,"line_start":16,"line_end":16,"column_start":12,"column_end":26},"name":"LocalFutureObj","qualname":"::future_obj::LocalFutureObj","value":"LocalFutureObj {  }","parent":null,"children":[{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208}],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":13236,"byte_end":13298,"line_start":10,"line_end":10,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + 'a>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":13299,"byte_end":13338,"line_start":11,"line_end":11,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":13339,"byte_end":13342,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":13343,"byte_end":13421,"line_start":13,"line_end":13,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":13422,"byte_end":13499,"line_start":14,"line_end":14,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":13500,"byte_end":13513,"line_start":15,"line_end":15,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14547,"byte_end":14550,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<LocalFutureObj>::new","value":"fn new<F>(F) -> Self where F: UnsafeFutureObj + 'a","parent":null,"children":[],"decl_id":null,"docs":" Create a `LocalFutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `LocalFutureObj` from a custom trait object representation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14449,"byte_end":14521,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14526,"byte_end":14535,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15099,"byte_end":15114,"line_start":61,"line_end":61,"column_start":19,"column_end":34},"name":"into_future_obj","qualname":"<LocalFutureObj>::into_future_obj","value":"unsafe fn into_future_obj(Self) -> FutureObj","parent":null,"children":[],"decl_id":null,"docs":" Converts the `LocalFutureObj` into a `FutureObj`.","sig":null,"attributes":[{"value":"/ Converts the `LocalFutureObj` into a `FutureObj`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14801,"byte_end":14854,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14859,"byte_end":14862,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14867,"byte_end":14879,"line_start":55,"line_end":55,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14884,"byte_end":14887,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ To make this operation safe one has to ensure that the `UnsafeFutureObj`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14892,"byte_end":14968,"line_start":57,"line_end":57,"column_start":5,"column_end":81}},{"value":"/ instance from which this `LocalFutureObj` was created actually","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14973,"byte_end":15039,"line_start":58,"line_end":58,"column_start":5,"column_end":71}},{"value":"/ implements `Send`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15044,"byte_end":15066,"line_start":59,"line_end":59,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15071,"byte_end":15080,"line_start":60,"line_end":60,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15230,"byte_end":15233,"line_start":67,"line_end":67,"column_start":8,"column_end":11},"name":"fmt","qualname":"<LocalFutureObj as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15429,"byte_end":15433,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"from","qualname":"<LocalFutureObj as core::convert::From>::from","value":"fn from(FutureObj) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15412,"byte_end":15421,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15572,"byte_end":15576,"line_start":83,"line_end":83,"column_start":8,"column_end":12},"name":"poll","qualname":"<LocalFutureObj as core::future::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15555,"byte_end":15564,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15761,"byte_end":15765,"line_start":89,"line_end":89,"column_start":8,"column_end":12},"name":"drop","qualname":"<LocalFutureObj as core::ops::Drop>::drop","value":"fn drop(&mut Self)","parent":{"krate":1,"index":3393},"children":[],"decl_id":{"krate":1,"index":3394},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":237},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16276,"byte_end":16285,"line_start":103,"line_end":103,"column_start":12,"column_end":21},"name":"FutureObj","qualname":"::future_obj::FutureObj","value":"","parent":null,"children":[],"decl_id":null,"docs":" A custom trait object for polling futures, roughly akin to\n `Box<dyn Future<Output = T> + Send + 'a>`.","sig":null,"attributes":[{"value":"/ A custom trait object for polling futures, roughly akin to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15835,"byte_end":15897,"line_start":94,"line_end":94,"column_start":1,"column_end":63}},{"value":"/ `Box<dyn Future<Output = T> + Send + 'a>`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15898,"byte_end":15944,"line_start":95,"line_end":95,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15945,"byte_end":15948,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ This custom trait object was introduced as currently it is not possible to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15949,"byte_end":16027,"line_start":97,"line_end":97,"column_start":1,"column_end":79}},{"value":"/ take `dyn Trait` by value and `Box<dyn Trait>` is not available in no_std","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16028,"byte_end":16105,"line_start":98,"line_end":98,"column_start":1,"column_end":78}},{"value":"/ contexts.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16106,"byte_end":16119,"line_start":99,"line_end":99,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16120,"byte_end":16123,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ You should generally not need to use this type outside of `no_std` or when","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16124,"byte_end":16202,"line_start":101,"line_end":101,"column_start":1,"column_end":79}},{"value":"/ implementing `Spawn`, consider using `BoxFuture` instead.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16203,"byte_end":16264,"line_start":102,"line_end":102,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":249},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16529,"byte_end":16532,"line_start":111,"line_end":111,"column_start":12,"column_end":15},"name":"new","qualname":"<FutureObj>::new","value":"fn new<F>(F) -> Self where F: UnsafeFutureObj + Send","parent":null,"children":[],"decl_id":null,"docs":" Create a `FutureObj` from a custom trait object representation.\n","sig":null,"attributes":[{"value":"/ Create a `FutureObj` from a custom trait object representation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16436,"byte_end":16503,"line_start":109,"line_end":109,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16508,"byte_end":16517,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16678,"byte_end":16681,"line_start":117,"line_end":117,"column_start":8,"column_end":11},"name":"fmt","qualname":"<FutureObj as core::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":1,"index":9900},"children":[],"decl_id":{"krate":1,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16869,"byte_end":16873,"line_start":126,"line_end":126,"column_start":8,"column_end":12},"name":"poll","qualname":"<FutureObj as core::future::Future>::poll","value":"fn poll(Pin<&mut Self>, &mut Context) -> Poll<T>","parent":{"krate":1,"index":13328},"children":[],"decl_id":{"krate":1,"index":13330},"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16852,"byte_end":16861,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":258},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17380,"byte_end":17395,"line_start":141,"line_end":141,"column_start":18,"column_end":33},"name":"UnsafeFutureObj","qualname":"::future_obj::UnsafeFutureObj","value":"UnsafeFutureObj<'a, T>: 'a","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"decl_id":null,"docs":" A custom implementation of a future trait object for `FutureObj`, providing\n a vtable with drop support.","sig":null,"attributes":[{"value":"/ A custom implementation of a future trait object for `FutureObj`, providing","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16983,"byte_end":17062,"line_start":131,"line_end":131,"column_start":1,"column_end":80}},{"value":"/ a vtable with drop support.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17063,"byte_end":17094,"line_start":132,"line_end":132,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17095,"byte_end":17098,"line_start":133,"line_end":133,"column_start":1,"column_end":4}},{"value":"/ This custom representation is typically used only in `no_std` contexts,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17099,"byte_end":17174,"line_start":134,"line_end":134,"column_start":1,"column_end":76}},{"value":"/ where the default `Box`-based implementation is not available.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17175,"byte_end":17241,"line_start":135,"line_end":135,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17242,"byte_end":17245,"line_start":136,"line_end":136,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17246,"byte_end":17258,"line_start":137,"line_end":137,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17259,"byte_end":17262,"line_start":138,"line_end":138,"column_start":1,"column_end":4}},{"value":"/ See the safety notes on individual methods for what guarantees an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17263,"byte_end":17332,"line_start":139,"line_end":139,"column_start":1,"column_end":70}},{"value":"/ implementor must provide.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17333,"byte_end":17362,"line_start":140,"line_end":140,"column_start":1,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17840,"byte_end":17848,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"into_raw","qualname":"::future_obj::UnsafeFutureObj::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Convert an owned instance into a (conceptually owned) fat pointer.","sig":null,"attributes":[{"value":"/ Convert an owned instance into a (conceptually owned) fat pointer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17413,"byte_end":17483,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17488,"byte_end":17491,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17496,"byte_end":17508,"line_start":144,"line_end":144,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17513,"byte_end":17516,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17521,"byte_end":17539,"line_start":146,"line_end":146,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17544,"byte_end":17547,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to convert the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17552,"byte_end":17623,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ provided `*mut (dyn Future<Output = T> + 'a)` into a `Pin<&mut (dyn","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17628,"byte_end":17699,"line_start":149,"line_end":149,"column_start":5,"column_end":76}},{"value":"/ Future<Output = T> + 'a)>` and call methods on it, non-reentrantly,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17704,"byte_end":17775,"line_start":150,"line_end":150,"column_start":5,"column_end":76}},{"value":"/ until `UnsafeFutureObj::drop` is called with it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17780,"byte_end":17832,"line_start":151,"line_end":151,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18526,"byte_end":18530,"line_start":172,"line_end":172,"column_start":15,"column_end":19},"name":"drop","qualname":"::future_obj::UnsafeFutureObj::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":null,"docs":" Drops the future represented by the given fat pointer.","sig":null,"attributes":[{"value":"/ Drops the future represented by the given fat pointer.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17899,"byte_end":17957,"line_start":154,"line_end":154,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17962,"byte_end":17965,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17970,"byte_end":17982,"line_start":156,"line_end":156,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17987,"byte_end":17990,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ## Implementor","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":17995,"byte_end":18013,"line_start":158,"line_end":158,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18018,"byte_end":18021,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ The trait implementor must guarantee that it is safe to call this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18026,"byte_end":18095,"line_start":160,"line_end":160,"column_start":5,"column_end":74}},{"value":"/ function once per `into_raw` invocation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18100,"byte_end":18144,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18149,"byte_end":18152,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ ## Caller","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18157,"byte_end":18170,"line_start":163,"line_end":163,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18175,"byte_end":18178,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ The caller must ensure:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18183,"byte_end":18210,"line_start":165,"line_end":165,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18215,"byte_end":18218,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/  * the pointer passed was obtained from an `into_raw` invocation from","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18223,"byte_end":18296,"line_start":167,"line_end":167,"column_start":5,"column_end":78}},{"value":"/    this same trait object","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18301,"byte_end":18330,"line_start":168,"line_end":168,"column_start":5,"column_end":34}},{"value":"/  * the pointer is not currently in use as a `Pin<&mut (dyn Future<Output","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18335,"byte_end":18411,"line_start":169,"line_end":169,"column_start":5,"column_end":81}},{"value":"/    = T> + 'a)>`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18416,"byte_end":18435,"line_start":170,"line_end":170,"column_start":5,"column_end":24}},{"value":"/  * the pointer must not be used again after this function is called","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18440,"byte_end":18511,"line_start":171,"line_end":171,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18690,"byte_end":18698,"line_start":179,"line_end":179,"column_start":8,"column_end":16},"name":"into_raw","qualname":"<&'a mut F as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":268},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18810,"byte_end":18814,"line_start":183,"line_end":183,"column_start":15,"column_end":19},"name":"drop","qualname":"<&'a mut F as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":18964,"byte_end":18972,"line_start":187,"line_end":187,"column_start":8,"column_end":16},"name":"into_raw","qualname":"<&'a mut dyn Future<Output = T> + Unpin + 'a as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19084,"byte_end":19088,"line_start":191,"line_end":191,"column_start":15,"column_end":19},"name":"drop","qualname":"<&'a mut dyn Future<Output = T> + Unpin + 'a as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":278},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19248,"byte_end":19256,"line_start":198,"line_end":198,"column_start":8,"column_end":16},"name":"into_raw","qualname":"<Pin<&'a mut F> as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19399,"byte_end":19403,"line_start":202,"line_end":202,"column_start":15,"column_end":19},"name":"drop","qualname":"<Pin<&'a mut F> as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19550,"byte_end":19558,"line_start":206,"line_end":206,"column_start":8,"column_end":16},"name":"into_raw","qualname":"<Pin<&'a mut dyn Future<Output = T> + 'a> as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19701,"byte_end":19705,"line_start":210,"line_end":210,"column_start":15,"column_end":19},"name":"drop","qualname":"<Pin<&'a mut dyn Future<Output = T> + 'a> as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19964,"byte_end":19972,"line_start":222,"line_end":222,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Box<F> as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":295},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20080,"byte_end":20084,"line_start":226,"line_end":226,"column_start":19,"column_end":23},"name":"drop","qualname":"<Box<F> as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20294,"byte_end":20302,"line_start":232,"line_end":232,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Box<dyn Future<Output = T> + 'a> as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20410,"byte_end":20414,"line_start":236,"line_end":236,"column_start":19,"column_end":23},"name":"drop","qualname":"<Box<dyn Future<Output = T> + 'a> as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20619,"byte_end":20627,"line_start":242,"line_end":242,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Box<dyn Future<Output = T> + Send + 'a> as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20735,"byte_end":20739,"line_start":246,"line_end":246,"column_start":19,"column_end":23},"name":"drop","qualname":"<Box<dyn Future<Output = T> + Send + 'a> as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20965,"byte_end":20973,"line_start":255,"line_end":255,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Pin<Box<F>> as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":21173,"byte_end":21177,"line_start":260,"line_end":260,"column_start":19,"column_end":23},"name":"drop","qualname":"<Pin<Box<F>> as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":21391,"byte_end":21399,"line_start":266,"line_end":266,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Pin<Box<dyn Future<Output = T> + 'a>> as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":316},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":21599,"byte_end":21603,"line_start":271,"line_end":271,"column_start":19,"column_end":23},"name":"drop","qualname":"<Pin<Box<dyn Future<Output = T> + 'a>> as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":21824,"byte_end":21832,"line_start":277,"line_end":277,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<Pin<Box<dyn Future<Output = T> + Send + 'a>> as future_obj::UnsafeFutureObj>::into_raw","value":"fn into_raw(Self) -> *mut dyn Future<Output = T> + 'a","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":261},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22032,"byte_end":22036,"line_start":282,"line_end":282,"column_start":19,"column_end":23},"name":"drop","qualname":"<Pin<Box<dyn Future<Output = T> + Send + 'a>> as future_obj::UnsafeFutureObj>::drop","value":"unsafe fn drop(*mut dyn Future<Output = T> + 'a)","parent":{"krate":0,"index":258},"children":[],"decl_id":{"krate":0,"index":262},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22242,"byte_end":22246,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"from","qualname":"<FutureObj as core::convert::From>::from","value":"fn from(Box<F>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22413,"byte_end":22417,"line_start":294,"line_end":294,"column_start":12,"column_end":16},"name":"from","qualname":"<FutureObj as core::convert::From>::from","value":"fn from(Box<dyn Future<Output = ()> + Send + 'a>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22625,"byte_end":22629,"line_start":300,"line_end":300,"column_start":12,"column_end":16},"name":"from","qualname":"<FutureObj as core::convert::From>::from","value":"fn from(Pin<Box<F>>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":335},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22806,"byte_end":22810,"line_start":306,"line_end":306,"column_start":12,"column_end":16},"name":"from","qualname":"<FutureObj as core::convert::From>::from","value":"fn from(Pin<Box<dyn Future<Output = ()> + Send + 'a>>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23016,"byte_end":23020,"line_start":312,"line_end":312,"column_start":12,"column_end":16},"name":"from","qualname":"<LocalFutureObj as core::convert::From>::from","value":"fn from(Box<F>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":342},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23185,"byte_end":23189,"line_start":318,"line_end":318,"column_start":12,"column_end":16},"name":"from","qualname":"<LocalFutureObj as core::convert::From>::from","value":"fn from(Box<dyn Future<Output = ()> + 'a>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23388,"byte_end":23392,"line_start":324,"line_end":324,"column_start":12,"column_end":16},"name":"from","qualname":"<LocalFutureObj as core::convert::From>::from","value":"fn from(Pin<Box<F>>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":349},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23567,"byte_end":23571,"line_start":330,"line_end":330,"column_start":12,"column_end":16},"name":"from","qualname":"<LocalFutureObj as core::convert::From>::from","value":"fn from(Pin<Box<dyn Future<Output = ()> + 'a>>) -> Self","parent":{"krate":1,"index":3056},"children":[],"decl_id":{"krate":1,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":378},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24336,"byte_end":24346,"line_start":29,"line_end":29,"column_start":8,"column_end":18},"name":"noop_waker","qualname":"::noop_waker::noop_waker","value":"fn noop_waker() -> Waker","parent":null,"children":[],"decl_id":null,"docs":" Create a new [`Waker`] which does\n nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Create a new [`Waker`] which does","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24116,"byte_end":24153,"line_start":18,"line_end":18,"column_start":1,"column_end":38}},{"value":"/ nothing when `wake()` is called on it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24154,"byte_end":24196,"line_start":19,"line_end":19,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24197,"byte_end":24200,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24201,"byte_end":24215,"line_start":21,"line_end":21,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24216,"byte_end":24219,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24220,"byte_end":24227,"line_start":23,"line_end":23,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24228,"byte_end":24262,"line_start":24,"line_end":24,"column_start":1,"column_end":35}},{"value":"/ let waker = noop_waker();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24263,"byte_end":24292,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ waker.wake();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24293,"byte_end":24310,"line_start":26,"line_end":26,"column_start":1,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24311,"byte_end":24318,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24319,"byte_end":24328,"line_start":28,"line_end":28,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":379},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24757,"byte_end":24771,"line_start":45,"line_end":45,"column_start":8,"column_end":22},"name":"noop_waker_ref","qualname":"::noop_waker::noop_waker_ref","value":"fn noop_waker_ref() -> &'static Waker","parent":null,"children":[],"decl_id":null,"docs":" Get a static reference to a [`Waker`] which\n does nothing when `wake()` is called on it.","sig":null,"attributes":[{"value":"/ Get a static reference to a [`Waker`] which","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24507,"byte_end":24554,"line_start":34,"line_end":34,"column_start":1,"column_end":48}},{"value":"/ does nothing when `wake()` is called on it.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24555,"byte_end":24602,"line_start":35,"line_end":35,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24603,"byte_end":24606,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24607,"byte_end":24621,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24622,"byte_end":24625,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24626,"byte_end":24633,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ use futures::task::noop_waker_ref;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24634,"byte_end":24672,"line_start":40,"line_end":40,"column_start":1,"column_end":39}},{"value":"/ let waker = noop_waker_ref();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24673,"byte_end":24706,"line_start":41,"line_end":41,"column_start":1,"column_end":34}},{"value":"/ waker.wake_by_ref();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24707,"byte_end":24731,"line_start":42,"line_end":42,"column_start":1,"column_end":25}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24732,"byte_end":24739,"line_start":43,"line_end":43,"column_start":1,"column_end":8}},{"value":"inline","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24740,"byte_end":24749,"line_start":44,"line_end":44,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3464,"byte_end":3474,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":25}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3635,"byte_end":3645,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3833,"byte_end":3843,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":29},{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5336,"byte_end":5339,"line_start":131,"line_end":131,"column_start":40,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":58},{"krate":0,"index":59}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5633,"byte_end":5636,"line_start":141,"line_end":141,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5949,"byte_end":5951,"line_start":151,"line_end":151,"column_start":40,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":66},{"krate":0,"index":67}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6245,"byte_end":6247,"line_start":161,"line_end":161,"column_start":50,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6612,"byte_end":6615,"line_start":172,"line_end":172,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6961,"byte_end":6964,"line_start":183,"line_end":183,"column_start":63,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11565,"byte_end":11573,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12418,"byte_end":12426,"line_start":41,"line_end":41,"column_start":16,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":168},{"krate":0,"index":169}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":13942,"byte_end":13956,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14421,"byte_end":14435,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":220},{"krate":0,"index":222}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15199,"byte_end":15213,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":225}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15384,"byte_end":15398,"line_start":72,"line_end":72,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":229}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15505,"byte_end":15519,"line_start":79,"line_end":79,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15730,"byte_end":15744,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16336,"byte_end":16345,"line_start":105,"line_end":105,"column_start":19,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16380,"byte_end":16389,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16413,"byte_end":16422,"line_start":108,"line_end":108,"column_start":13,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16652,"byte_end":16661,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16807,"byte_end":16816,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19186,"byte_end":19189,"line_start":194,"line_end":194,"column_start":50,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19498,"byte_end":19501,"line_start":205,"line_end":205,"column_start":47,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19894,"byte_end":19897,"line_start":218,"line_end":218,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":294},{"krate":0,"index":295}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20248,"byte_end":20251,"line_start":231,"line_end":231,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20566,"byte_end":20569,"line_start":241,"line_end":241,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":304},{"krate":0,"index":305}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20890,"byte_end":20893,"line_start":251,"line_end":251,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":21340,"byte_end":21343,"line_start":265,"line_end":265,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":21766,"byte_end":21769,"line_start":276,"line_end":276,"column_start":55,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":321}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22211,"byte_end":22220,"line_start":287,"line_end":287,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22382,"byte_end":22391,"line_start":293,"line_end":293,"column_start":65,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22594,"byte_end":22603,"line_start":299,"line_end":299,"column_start":72,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22775,"byte_end":22784,"line_start":305,"line_end":305,"column_start":70,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":335}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22980,"byte_end":22994,"line_start":311,"line_end":311,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23149,"byte_end":23163,"line_start":317,"line_end":317,"column_start":58,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":342}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23352,"byte_end":23366,"line_start":323,"line_end":323,"column_start":65,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23531,"byte_end":23545,"line_start":329,"line_end":329,"column_start":63,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":349}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24854,"byte_end":24866,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3464,"byte_end":3474,"line_start":59,"line_end":59,"column_start":21,"column_end":31},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":22},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3635,"byte_end":3645,"line_start":65,"line_end":65,"column_start":23,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":22},"to":{"krate":1,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":3833,"byte_end":3843,"line_start":74,"line_end":74,"column_start":6,"column_end":16},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":22},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5336,"byte_end":5339,"line_start":131,"line_end":131,"column_start":40,"column_end":43},"kind":{"Impl":{"id":3}},"from":{"krate":4,"index":421},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5633,"byte_end":5636,"line_start":141,"line_end":141,"column_start":50,"column_end":53},"kind":{"Impl":{"id":4}},"from":{"krate":4,"index":421},"to":{"krate":0,"index":19}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":5949,"byte_end":5951,"line_start":151,"line_end":151,"column_start":40,"column_end":42},"kind":{"Impl":{"id":5}},"from":{"krate":4,"index":4992},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6245,"byte_end":6247,"line_start":161,"line_end":161,"column_start":50,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":4,"index":4992},"to":{"krate":0,"index":19}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6612,"byte_end":6615,"line_start":172,"line_end":172,"column_start":53,"column_end":56},"kind":{"Impl":{"id":7}},"from":{"krate":4,"index":6312},"to":{"krate":0,"index":16}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/spawn.rs","byte_start":6961,"byte_end":6964,"line_start":183,"line_end":183,"column_start":63,"column_end":66},"kind":{"Impl":{"id":8}},"from":{"krate":4,"index":6312},"to":{"krate":0,"index":19}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8045,"byte_end":8049,"line_start":20,"line_end":20,"column_start":20,"column_end":24},"kind":"SuperTrait","from":{"krate":1,"index":3150},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/arc_wake.rs","byte_start":8052,"byte_end":8056,"line_start":20,"line_end":20,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":3162},"to":{"krate":0,"index":94}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":11565,"byte_end":11573,"line_start":19,"line_end":19,"column_start":10,"column_end":18},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":407},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/waker_ref.rs","byte_start":12418,"byte_end":12426,"line_start":41,"line_end":41,"column_start":16,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":407},"to":{"krate":1,"index":3369}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":13942,"byte_end":13956,"line_start":25,"line_end":25,"column_start":19,"column_end":33},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":14421,"byte_end":14435,"line_start":42,"line_end":42,"column_start":13,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":203},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15199,"byte_end":15213,"line_start":66,"line_end":66,"column_start":24,"column_end":38},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15384,"byte_end":15398,"line_start":72,"line_end":72,"column_start":40,"column_end":54},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15505,"byte_end":15519,"line_start":79,"line_end":79,"column_start":20,"column_end":34},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":15730,"byte_end":15744,"line_start":88,"line_end":88,"column_start":18,"column_end":32},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3393}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16336,"byte_end":16345,"line_start":105,"line_end":105,"column_start":19,"column_end":28},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":3191}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16380,"byte_end":16389,"line_start":106,"line_end":106,"column_start":25,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":3150}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16413,"byte_end":16422,"line_start":108,"line_end":108,"column_start":13,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":237},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16652,"byte_end":16661,"line_start":116,"line_end":116,"column_start":24,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":16807,"byte_end":16816,"line_start":122,"line_end":122,"column_start":20,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":13328}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19186,"byte_end":19189,"line_start":194,"line_end":194,"column_start":50,"column_end":53},"kind":{"Impl":{"id":22}},"from":{"krate":1,"index":47058},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19498,"byte_end":19501,"line_start":205,"line_end":205,"column_start":47,"column_end":50},"kind":{"Impl":{"id":23}},"from":{"krate":1,"index":47058},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":19894,"byte_end":19897,"line_start":218,"line_end":218,"column_start":54,"column_end":57},"kind":{"Impl":{"id":24}},"from":{"krate":4,"index":421},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20248,"byte_end":20251,"line_start":231,"line_end":231,"column_start":55,"column_end":58},"kind":{"Impl":{"id":25}},"from":{"krate":4,"index":421},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20566,"byte_end":20569,"line_start":241,"line_end":241,"column_start":55,"column_end":58},"kind":{"Impl":{"id":26}},"from":{"krate":4,"index":421},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":20890,"byte_end":20893,"line_start":251,"line_end":251,"column_start":54,"column_end":57},"kind":{"Impl":{"id":27}},"from":{"krate":1,"index":47058},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":21340,"byte_end":21343,"line_start":265,"line_end":265,"column_start":55,"column_end":58},"kind":{"Impl":{"id":28}},"from":{"krate":1,"index":47058},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":21766,"byte_end":21769,"line_start":276,"line_end":276,"column_start":55,"column_end":58},"kind":{"Impl":{"id":29}},"from":{"krate":1,"index":47058},"to":{"krate":0,"index":258}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22211,"byte_end":22220,"line_start":287,"line_end":287,"column_start":67,"column_end":76},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22382,"byte_end":22391,"line_start":293,"line_end":293,"column_start":65,"column_end":74},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22594,"byte_end":22603,"line_start":299,"line_end":299,"column_start":72,"column_end":81},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22775,"byte_end":22784,"line_start":305,"line_end":305,"column_start":70,"column_end":79},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":237},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":22980,"byte_end":22994,"line_start":311,"line_end":311,"column_start":60,"column_end":74},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23149,"byte_end":23163,"line_start":317,"line_end":317,"column_start":58,"column_end":72},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23352,"byte_end":23366,"line_start":323,"line_end":323,"column_start":65,"column_end":79},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/future_obj.rs","byte_start":23531,"byte_end":23545,"line_start":329,"line_end":329,"column_start":63,"column_end":77},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":203},"to":{"krate":1,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-task-0.3.25/src/noop_waker.rs","byte_start":24854,"byte_end":24866,"line_start":47,"line_end":47,"column_start":26,"column_end":38},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":380},"to":{"krate":1,"index":3162}}]}