{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17","program":"/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","time","--edition=2021","/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"alloc\"","--cfg","feature=\"formatting\"","--cfg","feature=\"macros\"","--cfg","feature=\"parsing\"","--cfg","feature=\"std\"","-C","metadata=801bc3c74e421b22","-C","extra-filename=-801bc3c74e421b22","--out-dir","/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","-L","dependency=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps","--extern","itoa=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libitoa-aca488d1653912e1.rmeta","--extern","time_core=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtime_core-9901248a7d0cc726.rmeta","--extern","time_macros=/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtime_macros-323120ca7b2a78d2.so","--cap-lints","allow","--error-format=json","--sysroot","/home/dom/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/dom/Projects/OpenEJ/Service-Lowmaf-Rust/target/rls/debug/deps/libtime-801bc3c74e421b22.rmeta"},"prelude":{"crate_id":{"name":"time","disambiguator":[8980664182857605474,0]},"crate_root":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src","external_crates":[{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[9914303954752503396,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","num":2,"id":{"name":"core","disambiguator":[15846600599516386926,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[3248197779922953368,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[16106073209810206859,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[705058097557950442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[4226859831290989395,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8113236783331938933,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17166186933304791475,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[9102879459332679527,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[17334790913793278849,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[15832914008974928315,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[4406420180649270496,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[1969707906566880681,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[13786306822812891743,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[3136484058452542816,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[4549596711944770628,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[11754765901466761141,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[12231018808310572442,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[12139228928510032792,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/macros.rs","num":20,"id":{"name":"time_macros","disambiguator":[8894241745363662100,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","num":21,"id":{"name":"time_core","disambiguator":[1214708054817163139,0]}},{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/mod.rs","num":22,"id":{"name":"itoa","disambiguator":[13318191299545705178,0]}}],"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":0,"byte_end":11517,"line_start":1,"line_end":357,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3082},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":86764,"byte_end":86778,"line_start":22,"line_end":22,"column_start":26,"column_end":40},"alias_span":null,"name":"ComponentRange","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3103},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":86806,"byte_end":86821,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3104},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":86806,"byte_end":86821,"line_start":23,"line_end":23,"column_start":27,"column_end":42},"alias_span":null,"name":"ConversionRange","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3116},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":86850,"byte_end":86866,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3117},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":86850,"byte_end":86866,"line_start":24,"line_end":24,"column_start":28,"column_end":44},"alias_span":null,"name":"DifferentVariant","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3129},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":86915,"byte_end":86921,"line_start":26,"line_end":26,"column_start":17,"column_end":23},"alias_span":null,"name":"Format","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3140},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87124,"byte_end":87148,"line_start":30,"line_end":30,"column_start":37,"column_end":61},"alias_span":null,"name":"InvalidFormatDescription","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3162},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87175,"byte_end":87189,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3163},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87175,"byte_end":87189,"line_start":31,"line_end":31,"column_start":26,"column_end":40},"alias_span":null,"name":"InvalidVariant","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3175},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87234,"byte_end":87239,"line_start":33,"line_end":33,"column_start":16,"column_end":21},"alias_span":null,"name":"Parse","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3196},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87301,"byte_end":87321,"line_start":35,"line_end":35,"column_start":33,"column_end":53},"alias_span":null,"name":"ParseFromDescription","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3214},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87376,"byte_end":87389,"line_start":37,"line_end":37,"column_start":26,"column_end":39},"alias_span":null,"name":"TryFromParsed","value":"","parent":{"krate":0,"index":327}},{"kind":"Use","ref_id":{"krate":0,"index":3261},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116644,"byte_end":116662,"line_start":16,"line_end":16,"column_start":31,"column_end":49},"alias_span":null,"name":"FormatItem","value":"","parent":{"krate":0,"index":597}},{"kind":"Use","ref_id":{"krate":0,"index":3750},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116731,"byte_end":116746,"line_start":18,"line_end":18,"column_start":28,"column_end":43},"alias_span":null,"name":"OwnedFormatItem","value":"","parent":{"krate":0,"index":597}},{"kind":"Use","ref_id":{"krate":0,"index":3292},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116774,"byte_end":116783,"line_start":20,"line_end":20,"column_start":26,"column_end":35},"alias_span":null,"name":"Component","value":"","parent":{"krate":0,"index":597}},{"kind":"Use","ref_id":{"krate":0,"index":857},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116833,"byte_end":116838,"line_start":22,"line_end":22,"column_start":23,"column_end":28},"alias_span":null,"name":"parse","value":"","parent":{"krate":0,"index":597}},{"kind":"Use","ref_id":{"krate":0,"index":859},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116840,"byte_end":116851,"line_start":22,"line_end":22,"column_start":30,"column_end":41},"alias_span":null,"name":"parse_owned","value":"","parent":{"krate":0,"index":597}},{"kind":"Use","ref_id":{"krate":0,"index":927},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":170929,"byte_end":170950,"line_start":7,"line_end":7,"column_start":26,"column_end":47},"alias_span":null,"name":"DoNotRelyOnWhatThisIs","value":"","parent":{"krate":0,"index":903}},{"kind":"Use","ref_id":{"krate":0,"index":928},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":170952,"byte_end":170965,"line_start":7,"line_end":7,"column_start":49,"column_end":62},"alias_span":null,"name":"EncodedConfig","value":"","parent":{"krate":0,"index":903}},{"kind":"Use","ref_id":{"krate":0,"index":4081},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":117017,"byte_end":117024,"line_start":31,"line_end":31,"column_start":22,"column_end":29},"alias_span":null,"name":"Iso8601","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":4082},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":117017,"byte_end":117024,"line_start":31,"line_end":31,"column_start":22,"column_end":29},"alias_span":null,"name":"Iso8601","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":4196},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":117047,"byte_end":117054,"line_start":32,"line_end":32,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc2822","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":4197},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":117047,"byte_end":117054,"line_start":32,"line_end":32,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc2822","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":4209},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":117077,"byte_end":117084,"line_start":33,"line_end":33,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc3339","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":4210},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":117077,"byte_end":117084,"line_start":33,"line_end":33,"column_start":22,"column_end":29},"alias_span":null,"name":"Rfc3339","value":"","parent":{"krate":0,"index":902}},{"kind":"Use","ref_id":{"krate":0,"index":1042},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/mod.rs","byte_start":190848,"byte_end":190859,"line_start":9,"line_end":9,"column_start":28,"column_end":39},"alias_span":null,"name":"Formattable","value":"","parent":{"krate":0,"index":982}},{"kind":"Use","ref_id":{"krate":20,"index":811},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/macros.rs","byte_start":233123,"byte_end":233127,"line_start":22,"line_end":22,"column_start":22,"column_end":26},"alias_span":null,"name":"date","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":20,"index":815},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/macros.rs","byte_start":234275,"byte_end":234283,"line_start":51,"line_end":51,"column_start":22,"column_end":30},"alias_span":null,"name":"datetime","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":20,"index":600},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/macros.rs","byte_start":235379,"byte_end":235397,"line_start":74,"line_end":74,"column_start":22,"column_end":40},"alias_span":null,"name":"format_description","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":20,"index":819},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/macros.rs","byte_start":236537,"byte_end":236543,"line_start":97,"line_end":97,"column_start":22,"column_end":28},"alias_span":null,"name":"offset","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":20,"index":823},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/macros.rs","byte_start":237883,"byte_end":237887,"line_start":132,"line_end":132,"column_start":22,"column_end":26},"alias_span":null,"name":"time","value":"","parent":{"krate":0,"index":1384}},{"kind":"Use","ref_id":{"krate":0,"index":2040},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":289594,"byte_end":289602,"line_start":10,"line_end":10,"column_start":25,"column_end":33},"alias_span":null,"name":"Parsable","value":"","parent":{"krate":0,"index":1615}},{"kind":"Use","ref_id":{"krate":0,"index":4356},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":289626,"byte_end":289632,"line_start":11,"line_end":11,"column_start":23,"column_end":29},"alias_span":null,"name":"Parsed","value":"","parent":{"krate":0,"index":1615}},{"kind":"Use","ref_id":{"krate":21,"index":6},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":462633,"byte_end":462645,"line_start":3,"line_end":3,"column_start":27,"column_end":39},"alias_span":null,"name":"days_in_year","value":"","parent":{"krate":0,"index":2820}},{"kind":"Use","ref_id":{"krate":21,"index":5},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":462647,"byte_end":462659,"line_start":3,"line_end":3,"column_start":41,"column_end":53},"alias_span":null,"name":"is_leap_year","value":"","parent":{"krate":0,"index":2820}},{"kind":"Use","ref_id":{"krate":21,"index":7},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":462661,"byte_end":462674,"line_start":3,"line_end":3,"column_start":55,"column_end":68},"alias_span":null,"name":"weeks_in_year","value":"","parent":{"krate":0,"index":2820}},{"kind":"Use","ref_id":{"krate":0,"index":2903},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10834,"byte_end":10838,"line_start":336,"line_end":336,"column_start":22,"column_end":26},"alias_span":null,"name":"Date","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2951},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10865,"byte_end":10873,"line_start":337,"line_end":337,"column_start":26,"column_end":34},"alias_span":null,"name":"Duration","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3232},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10897,"byte_end":10902,"line_start":338,"line_end":338,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4222},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10952,"byte_end":10959,"line_start":340,"line_end":340,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4223},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10952,"byte_end":10959,"line_start":340,"line_end":340,"column_start":25,"column_end":32},"alias_span":null,"name":"Instant","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4256},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10983,"byte_end":10988,"line_start":341,"line_end":341,"column_start":23,"column_end":28},"alias_span":null,"name":"Month","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4307},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":11023,"byte_end":11037,"line_start":342,"line_end":342,"column_start":34,"column_end":48},"alias_span":null,"name":"OffsetDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4460},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":11075,"byte_end":11092,"line_start":343,"line_end":343,"column_start":37,"column_end":54},"alias_span":null,"name":"PrimitiveDateTime","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4507},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":11115,"byte_end":11119,"line_start":344,"line_end":344,"column_start":22,"column_end":26},"alias_span":null,"name":"Time","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4538},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":11148,"byte_end":11157,"line_start":345,"line_end":345,"column_start":28,"column_end":37},"alias_span":null,"name":"UtcOffset","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4559},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":11183,"byte_end":11190,"line_start":346,"line_end":346,"column_start":25,"column_end":32},"alias_span":null,"name":"Weekday","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":0,"byte_end":11517,"line_start":1,"line_end":357,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":145},{"krate":0,"index":327},{"krate":0,"index":531},{"krate":0,"index":597},{"krate":0,"index":982},{"krate":0,"index":1302},{"krate":0,"index":1384},{"krate":0,"index":1400},{"krate":0,"index":1428},{"krate":0,"index":1615},{"krate":0,"index":2555},{"krate":0,"index":2680},{"krate":0,"index":2681},{"krate":0,"index":2771},{"krate":0,"index":2820},{"krate":0,"index":2843},{"krate":0,"index":2870},{"krate":0,"index":2873},{"krate":0,"index":2876},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2882},{"krate":0,"index":2885},{"krate":0,"index":2888},{"krate":0,"index":2891},{"krate":0,"index":2894},{"krate":0,"index":2897},{"krate":0,"index":2900},{"krate":0,"index":2902}],"decl_id":null,"docs":" # Feature flags","sig":null,"attributes":[{"value":"/ # Feature flags","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":0,"byte_end":19,"line_start":1,"line_end":1,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":20,"byte_end":23,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This crate exposes a number of features. These can be enabled or disabled as shown","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":24,"byte_end":110,"line_start":3,"line_end":3,"column_start":1,"column_end":87}},{"value":"/ [in Cargo's documentation](https://doc.rust-lang.org/cargo/reference/features.html). Features","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":111,"byte_end":208,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ are _disabled_ by default unless otherwise noted.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":209,"byte_end":262,"line_start":5,"line_end":5,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":263,"byte_end":266,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Reliance on a given feature is always indicated alongside the item definition.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":267,"byte_end":349,"line_start":7,"line_end":7,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":350,"byte_end":353,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ - `std` (_enabled by default, implicitly enables `alloc`_)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":354,"byte_end":416,"line_start":9,"line_end":9,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":417,"byte_end":420,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/   This enables a number of features that depend on the standard library.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":421,"byte_end":497,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":498,"byte_end":501,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ - `alloc` (_enabled by default via `std`_)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":502,"byte_end":548,"line_start":13,"line_end":13,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":549,"byte_end":552,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/   Enables a number of features that require the ability to dynamically allocate memory.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":553,"byte_end":644,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":645,"byte_end":648,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ - `macros`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":649,"byte_end":663,"line_start":17,"line_end":17,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":664,"byte_end":667,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/   Enables macros that provide compile-time verification of values and intuitive syntax.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":668,"byte_end":759,"line_start":19,"line_end":19,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":760,"byte_end":763,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ - `formatting` (_implicitly enables `std`_)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":764,"byte_end":811,"line_start":21,"line_end":21,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":812,"byte_end":815,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/   Enables formatting of most structs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":816,"byte_end":857,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":858,"byte_end":861,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ - `parsing`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":862,"byte_end":877,"line_start":25,"line_end":25,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":878,"byte_end":881,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/   Enables parsing of most structs.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":882,"byte_end":920,"line_start":27,"line_end":27,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":921,"byte_end":924,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ - `local-offset` (_implicitly enables `std`_)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":925,"byte_end":974,"line_start":29,"line_end":29,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":975,"byte_end":978,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/   This feature enables a number of methods that allow obtaining the system's UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":979,"byte_end":1071,"line_start":31,"line_end":31,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1072,"byte_end":1075,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ - `large-dates`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1076,"byte_end":1095,"line_start":33,"line_end":33,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1096,"byte_end":1099,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/   By default, only years within the ±9999 range (inclusive) are supported. If you need support","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1100,"byte_end":1199,"line_start":35,"line_end":35,"column_start":1,"column_end":99}},{"value":"/   for years outside this range, consider enabling this feature; the supported range will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1200,"byte_end":1295,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/   increased to ±999,999.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1296,"byte_end":1325,"line_start":37,"line_end":37,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1326,"byte_end":1329,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/   Note that enabling this feature has some costs, as it means forgoing some optimizations.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1330,"byte_end":1424,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/   Ambiguities may be introduced when parsing that would not otherwise exist.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1425,"byte_end":1505,"line_start":40,"line_end":40,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1506,"byte_end":1509,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ - `serde`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1510,"byte_end":1523,"line_start":42,"line_end":42,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1524,"byte_end":1527,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/   Enables [serde](https://docs.rs/serde) support for all types except [`Instant`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1528,"byte_end":1614,"line_start":44,"line_end":44,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1615,"byte_end":1618,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ - `serde-human-readable` (_implicitly enables `serde`, `formatting`, and `parsing`_)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1619,"byte_end":1707,"line_start":46,"line_end":46,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1708,"byte_end":1711,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/   Allows serde representations to use a human-readable format. This is determined by the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1712,"byte_end":1804,"line_start":48,"line_end":48,"column_start":1,"column_end":93}},{"value":"/   serializer, not the user. If this feature is not enabled or if the serializer requests a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1805,"byte_end":1899,"line_start":49,"line_end":49,"column_start":1,"column_end":95}},{"value":"/   non-human-readable format, a format optimized for binary representation will be used.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1900,"byte_end":1991,"line_start":50,"line_end":50,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1992,"byte_end":1995,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/   Libraries should never enable this feature, as the decision of what format to use should be up","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":1996,"byte_end":2096,"line_start":52,"line_end":52,"column_start":1,"column_end":101}},{"value":"/   to the user.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2097,"byte_end":2115,"line_start":53,"line_end":53,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2116,"byte_end":2119,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ - `serde-well-known` (_implicitly enables `serde-human-readable`_)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2120,"byte_end":2190,"line_start":55,"line_end":55,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2191,"byte_end":2194,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/   _This feature flag is deprecated and will be removed in a future breaking release. Use the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2195,"byte_end":2291,"line_start":57,"line_end":57,"column_start":1,"column_end":97}},{"value":"/   `serde-human-readable` feature instead._","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2292,"byte_end":2338,"line_start":58,"line_end":58,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2339,"byte_end":2342,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/   Enables support for serializing and deserializing well-known formats using serde's","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2343,"byte_end":2431,"line_start":60,"line_end":60,"column_start":1,"column_end":89}},{"value":"/   [`#[with]` attribute](https://serde.rs/field-attrs.html#with).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2432,"byte_end":2500,"line_start":61,"line_end":61,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2501,"byte_end":2504,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ - `rand`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2505,"byte_end":2517,"line_start":63,"line_end":63,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2518,"byte_end":2521,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/   Enables [rand](https://docs.rs/rand) support for all types.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2522,"byte_end":2587,"line_start":65,"line_end":65,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2588,"byte_end":2591,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ - `quickcheck` (_implicitly enables `alloc`_)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2592,"byte_end":2641,"line_start":67,"line_end":67,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2642,"byte_end":2645,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/   Enables [quickcheck](https://docs.rs/quickcheck) support for all types except [`Instant`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2646,"byte_end":2742,"line_start":69,"line_end":69,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2743,"byte_end":2746,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ - `wasm-bindgen`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2747,"byte_end":2767,"line_start":71,"line_end":71,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2768,"byte_end":2771,"line_start":72,"line_end":72,"column_start":1,"column_end":4}},{"value":"/   Enables [wasm-bindgen](https://github.com/rustwasm/wasm-bindgen) support for converting","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2772,"byte_end":2865,"line_start":73,"line_end":73,"column_start":1,"column_end":94}},{"value":"/   [JavaScript dates](https://rustwasm.github.io/wasm-bindgen/api/js_sys/struct.Date.html), as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2866,"byte_end":2963,"line_start":74,"line_end":74,"column_start":1,"column_end":98}},{"value":"/   well as obtaining the UTC offset from JavaScript.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":2964,"byte_end":3019,"line_start":75,"line_end":75,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":3020,"byte_end":3023,"line_start":76,"line_end":76,"column_start":1,"column_end":4}},{"value":"/ <small>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":3024,"byte_end":3035,"line_start":77,"line_end":77,"column_start":1,"column_end":12}},{"value":"/ One feature only available to end users is the <code>unsound_local_offset</code> cfg. This","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":3036,"byte_end":3130,"line_start":78,"line_end":78,"column_start":1,"column_end":95}},{"value":"/ enables obtaining the system's UTC offset even when it is unsound. To enable this, use the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":3131,"byte_end":3225,"line_start":79,"line_end":79,"column_start":1,"column_end":95}},{"value":"/ <code>RUSTFLAGS</code> environment variable. This is untested and officially unsupported. Do not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":3226,"byte_end":3326,"line_start":80,"line_end":80,"column_start":1,"column_end":101}},{"value":"/ use this unless you understand the risk.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":3327,"byte_end":3371,"line_start":81,"line_end":81,"column_start":1,"column_end":45}},{"value":"/ </small>","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":3372,"byte_end":3384,"line_start":82,"line_end":82,"column_start":1,"column_end":13}},{"value":"deny(anonymous_parameters, clippy :: all, clippy :: alloc_instead_of_core,\nclippy :: explicit_auto_deref, clippy :: obfuscated_if_else, clippy ::\nstd_instead_of_core, clippy :: undocumented_unsafe_blocks, const_err,\nillegal_floating_point_literal_pattern, late_bound_lifetime_arguments,\npath_statements, patterns_in_fns_without_body, rust_2018_idioms,\ntrivial_casts, trivial_numeric_casts, unreachable_pub, unsafe_op_in_unsafe_fn,\nunused_extern_crates, rustdoc :: broken_intra_doc_links, rustdoc ::\nprivate_intra_doc_links)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":3560,"byte_end":4153,"line_start":87,"line_end":108,"column_start":1,"column_end":3}},{"value":"warn(clippy :: dbg_macro, clippy :: decimal_literal_representation, clippy\n:: get_unwrap, clippy :: missing_docs_in_private_items, clippy :: nursery,\nclippy :: print_stdout, clippy :: todo, clippy :: unimplemented, clippy ::\nunnested_or_patterns, clippy :: unwrap_in_result, clippy :: unwrap_used,\nclippy :: use_debug, deprecated_in_future, missing_copy_implementations,\nmissing_debug_implementations, unused_qualifications,\nvariant_size_differences)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":4154,"byte_end":4654,"line_start":109,"line_end":127,"column_start":1,"column_end":3}},{"value":"allow(clippy :: redundant_pub_crate, clippy :: option_if_let_else, clippy ::\nunused_peekable, clippy :: std_instead_of_core,)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":4655,"byte_end":4960,"line_start":128,"line_end":133,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":2903},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12609,"byte_end":12613,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"Date","qualname":"::date::Date","value":"Date {  }","parent":null,"children":[{"krate":0,"index":2904}],"decl_id":null,"docs":" Date in the proleptic Gregorian calendar.","sig":null,"attributes":[{"value":"/ Date in the proleptic Gregorian calendar.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12240,"byte_end":12285,"line_start":29,"line_end":29,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12286,"byte_end":12289,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ By default, years between ±9999 inclusive are representable. This can be expanded to ±999,999","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12290,"byte_end":12389,"line_start":31,"line_end":31,"column_start":1,"column_end":98}},{"value":"/ inclusive by enabling the `large-dates` crate feature. Doing so has performance implications","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12390,"byte_end":12486,"line_start":32,"line_end":32,"column_start":1,"column_end":97}},{"value":"/ and introduces some ambiguities when parsing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12487,"byte_end":12536,"line_start":33,"line_end":33,"column_start":1,"column_end":50}}]},{"kind":"Const","id":{"krate":0,"index":73},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13076,"byte_end":13079,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"MIN","qualname":"::date::Date::MIN","value":"Self","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" The minimum valid `Date`.","sig":null,"attributes":[{"value":"/ The minimum valid `Date`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12949,"byte_end":12978,"line_start":45,"line_end":45,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12983,"byte_end":12986,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12991,"byte_end":13061,"line_start":47,"line_end":47,"column_start":5,"column_end":75}}]},{"kind":"Const","id":{"krate":0,"index":74},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13270,"byte_end":13273,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"MAX","qualname":"::date::Date::MAX","value":"Self","parent":{"krate":0,"index":72},"children":[],"decl_id":null,"docs":" The maximum valid `Date`.","sig":null,"attributes":[{"value":"/ The maximum valid `Date`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13143,"byte_end":13172,"line_start":50,"line_end":50,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13177,"byte_end":13180,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ The value of this may vary depending on the feature flags enabled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13185,"byte_end":13255,"line_start":52,"line_end":52,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":75},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13543,"byte_end":13572,"line_start":59,"line_end":59,"column_start":18,"column_end":47},"name":"__from_ordinal_date_unchecked","qualname":"<Date>::__from_ordinal_date_unchecked","value":"const fn __from_ordinal_date_unchecked(i32, u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `Date` from the year and ordinal values, the validity of which must be\n guaranteed by the caller.\n","sig":null,"attributes":[{"value":"/ Construct a `Date` from the year and ordinal values, the validity of which must be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13386,"byte_end":13472,"line_start":56,"line_end":56,"column_start":5,"column_end":91}},{"value":"/ guaranteed by the caller.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13477,"byte_end":13506,"line_start":57,"line_end":57,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":14348,"byte_end":14366,"line_start":82,"line_end":82,"column_start":18,"column_end":36},"name":"from_calendar_date","qualname":"<Date>::from_calendar_date","value":"const fn from_calendar_date(i32, Month, u8)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year, month, and day.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year, month, and day.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13867,"byte_end":13928,"line_start":70,"line_end":70,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13933,"byte_end":13936,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13941,"byte_end":13952,"line_start":72,"line_end":72,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13957,"byte_end":13987,"line_start":73,"line_end":73,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::January, 1).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":13992,"byte_end":14063,"line_start":74,"line_end":74,"column_start":5,"column_end":76}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::December, 31).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":14068,"byte_end":14141,"line_start":75,"line_end":75,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":14146,"byte_end":14153,"line_start":76,"line_end":76,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":14158,"byte_end":14161,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":14166,"byte_end":14177,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Month};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":14182,"byte_end":14212,"line_start":79,"line_end":79,"column_start":5,"column_end":35}},{"value":"/ assert!(Date::from_calendar_date(2019, Month::February, 29).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":14217,"byte_end":14318,"line_start":80,"line_end":80,"column_start":5,"column_end":106}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":14323,"byte_end":14330,"line_start":81,"line_end":81,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15557,"byte_end":15574,"line_start":115,"line_end":115,"column_start":18,"column_end":35},"name":"from_ordinal_date","qualname":"<Date>::from_ordinal_date","value":"const fn from_ordinal_date(i32, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the year and ordinal day number.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15138,"byte_end":15206,"line_start":103,"line_end":103,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15211,"byte_end":15214,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15219,"byte_end":15230,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15235,"byte_end":15256,"line_start":106,"line_end":106,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 1).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15261,"byte_end":15315,"line_start":107,"line_end":107,"column_start":5,"column_end":59}},{"value":"/ assert!(Date::from_ordinal_date(2019, 365).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15320,"byte_end":15376,"line_start":108,"line_end":108,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15381,"byte_end":15388,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15393,"byte_end":15396,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15401,"byte_end":15412,"line_start":111,"line_end":111,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15417,"byte_end":15438,"line_start":112,"line_end":112,"column_start":5,"column_end":26}},{"value":"/ assert!(Date::from_ordinal_date(2019, 366).is_err()); // 2019 isn't a leap year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15443,"byte_end":15527,"line_start":113,"line_end":113,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15532,"byte_end":15539,"line_start":114,"line_end":114,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":16404,"byte_end":16422,"line_start":134,"line_end":134,"column_start":18,"column_end":36},"name":"from_iso_week_date","qualname":"<Date>::from_iso_week_date","value":"const fn from_iso_week_date(i32, u8, Weekday)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Date` from the ISO year, week, and weekday.","sig":null,"attributes":[{"value":"/ Attempt to create a `Date` from the ISO year, week, and weekday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15859,"byte_end":15927,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15932,"byte_end":15935,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15940,"byte_end":15951,"line_start":123,"line_end":123,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15956,"byte_end":15991,"line_start":124,"line_end":124,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Monday).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":15996,"byte_end":16059,"line_start":125,"line_end":125,"column_start":5,"column_end":68}},{"value":"/ assert!(Date::from_iso_week_date(2019, 1, Tuesday).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":16064,"byte_end":16128,"line_start":126,"line_end":126,"column_start":5,"column_end":69}},{"value":"/ assert!(Date::from_iso_week_date(2020, 53, Friday).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":16133,"byte_end":16197,"line_start":127,"line_end":127,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":16202,"byte_end":16209,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":16214,"byte_end":16217,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":16222,"byte_end":16233,"line_start":130,"line_end":130,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, Weekday::*};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":16238,"byte_end":16273,"line_start":131,"line_end":131,"column_start":5,"column_end":40}},{"value":"/ assert!(Date::from_iso_week_date(2019, 53, Monday).is_err()); // 2019 doesn't have 53 weeks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":16278,"byte_end":16374,"line_start":132,"line_end":132,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":16379,"byte_end":16386,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":18314,"byte_end":18329,"line_start":182,"line_end":182,"column_start":18,"column_end":33},"name":"from_julian_day","qualname":"<Date>::from_julian_day","value":"const fn from_julian_day(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `Date` from the Julian day.","sig":null,"attributes":[{"value":"/ Create a `Date` from the Julian day.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":17597,"byte_end":17637,"line_start":168,"line_end":168,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":17642,"byte_end":17645,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":17650,"byte_end":17744,"line_start":170,"line_end":170,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":17749,"byte_end":17845,"line_start":171,"line_end":171,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":17850,"byte_end":17853,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":17858,"byte_end":17869,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":17874,"byte_end":17895,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":17900,"byte_end":17928,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Date::from_julian_day(0), Ok(date!(-4713 - 11 - 24)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":17933,"byte_end":18002,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(Date::from_julian_day(2_451_545), Ok(date!(2000 - 01 - 01)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":18007,"byte_end":18083,"line_start":177,"line_end":177,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_485), Ok(date!(2019 - 01 - 01)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":18088,"byte_end":18164,"line_start":178,"line_end":178,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(Date::from_julian_day(2_458_849), Ok(date!(2019 - 12 - 31)));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":18169,"byte_end":18245,"line_start":179,"line_end":179,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":18250,"byte_end":18257,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20449,"byte_end":20453,"line_start":238,"line_end":238,"column_start":18,"column_end":22},"name":"year","qualname":"<Date>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20165,"byte_end":20194,"line_start":230,"line_end":230,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20199,"byte_end":20202,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20207,"byte_end":20218,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20223,"byte_end":20251,"line_start":233,"line_end":233,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).year(), 2019);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20256,"byte_end":20307,"line_start":234,"line_end":234,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).year(), 2019);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20312,"byte_end":20363,"line_start":235,"line_end":235,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).year(), 2020);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20368,"byte_end":20419,"line_start":236,"line_end":236,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20424,"byte_end":20431,"line_start":237,"line_end":237,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20771,"byte_end":20776,"line_start":250,"line_end":250,"column_start":18,"column_end":23},"name":"month","qualname":"<Date>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month.","sig":null,"attributes":[{"value":"/ Get the month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20504,"byte_end":20522,"line_start":242,"line_end":242,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20527,"byte_end":20530,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20535,"byte_end":20546,"line_start":244,"line_end":244,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20551,"byte_end":20573,"line_start":245,"line_end":245,"column_start":5,"column_end":27}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20578,"byte_end":20606,"line_start":246,"line_end":246,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).month(), Month::January);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20611,"byte_end":20673,"line_start":247,"line_end":247,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).month(), Month::December);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20678,"byte_end":20741,"line_start":248,"line_end":248,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20746,"byte_end":20753,"line_start":249,"line_end":249,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":21126,"byte_end":21129,"line_start":263,"line_end":263,"column_start":18,"column_end":21},"name":"day","qualname":"<Date>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the month.","sig":null,"attributes":[{"value":"/ Get the day of the month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20832,"byte_end":20861,"line_start":254,"line_end":254,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20866,"byte_end":20869,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20874,"byte_end":20934,"line_start":256,"line_end":256,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20939,"byte_end":20942,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20947,"byte_end":20958,"line_start":258,"line_end":258,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20963,"byte_end":20991,"line_start":259,"line_end":259,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).day(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":20996,"byte_end":21043,"line_start":260,"line_end":260,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).day(), 31);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":21048,"byte_end":21096,"line_start":261,"line_end":261,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":21101,"byte_end":21108,"line_start":262,"line_end":262,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23373,"byte_end":23380,"line_start":317,"line_end":317,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<Date>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23041,"byte_end":23069,"line_start":308,"line_end":308,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23074,"byte_end":23077,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23082,"byte_end":23172,"line_start":310,"line_end":310,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23177,"byte_end":23180,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23185,"byte_end":23196,"line_start":312,"line_end":312,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23201,"byte_end":23229,"line_start":313,"line_end":313,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).ordinal(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23234,"byte_end":23285,"line_start":314,"line_end":314,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).ordinal(), 365);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23290,"byte_end":23343,"line_start":315,"line_end":315,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23348,"byte_end":23355,"line_start":316,"line_end":316,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24332,"byte_end":24340,"line_start":344,"line_end":344,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<Date>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23856,"byte_end":23884,"line_start":332,"line_end":332,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23889,"byte_end":23892,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23897,"byte_end":23957,"line_start":334,"line_end":334,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23962,"byte_end":23965,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23970,"byte_end":23981,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":23986,"byte_end":24014,"line_start":337,"line_end":337,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).iso_week(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24019,"byte_end":24071,"line_start":338,"line_end":338,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).iso_week(), 40);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24076,"byte_end":24129,"line_start":339,"line_end":339,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).iso_week(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24134,"byte_end":24186,"line_start":340,"line_end":340,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).iso_week(), 53);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24191,"byte_end":24244,"line_start":341,"line_end":341,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).iso_week(), 53);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24249,"byte_end":24302,"line_start":342,"line_end":342,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24307,"byte_end":24314,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24886,"byte_end":24903,"line_start":359,"line_end":359,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<Date>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24397,"byte_end":24461,"line_start":348,"line_end":348,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24466,"byte_end":24469,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24474,"byte_end":24534,"line_start":350,"line_end":350,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24539,"byte_end":24542,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24547,"byte_end":24558,"line_start":352,"line_end":352,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24563,"byte_end":24591,"line_start":353,"line_end":353,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24596,"byte_end":24657,"line_start":354,"line_end":354,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24662,"byte_end":24723,"line_start":355,"line_end":355,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).sunday_based_week(), 52);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24728,"byte_end":24790,"line_start":356,"line_end":356,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).sunday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24795,"byte_end":24856,"line_start":357,"line_end":357,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":24861,"byte_end":24868,"line_start":358,"line_end":358,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25515,"byte_end":25532,"line_start":374,"line_end":374,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<Date>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25026,"byte_end":25090,"line_start":363,"line_end":363,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25095,"byte_end":25098,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25103,"byte_end":25163,"line_start":365,"line_end":365,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25168,"byte_end":25171,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25176,"byte_end":25187,"line_start":367,"line_end":367,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25192,"byte_end":25220,"line_start":368,"line_end":368,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25225,"byte_end":25286,"line_start":369,"line_end":369,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25291,"byte_end":25352,"line_start":370,"line_end":370,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(date!(2020 - 12 - 31).monday_based_week(), 52);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25357,"byte_end":25419,"line_start":371,"line_end":371,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).monday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25424,"byte_end":25485,"line_start":372,"line_end":372,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25490,"byte_end":25497,"line_start":373,"line_end":373,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25925,"byte_end":25941,"line_start":388,"line_end":388,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<Date>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25655,"byte_end":25688,"line_start":378,"line_end":378,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25693,"byte_end":25696,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25701,"byte_end":25712,"line_start":380,"line_end":380,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25717,"byte_end":25739,"line_start":381,"line_end":381,"column_start":5,"column_end":27}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25744,"byte_end":25772,"line_start":382,"line_end":382,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25777,"byte_end":25792,"line_start":383,"line_end":383,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).to_calendar_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25797,"byte_end":25846,"line_start":384,"line_end":384,"column_start":5,"column_end":54}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25851,"byte_end":25884,"line_start":385,"line_end":385,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25889,"byte_end":25895,"line_start":386,"line_end":386,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":25900,"byte_end":25907,"line_start":387,"line_end":387,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26259,"byte_end":26274,"line_start":399,"line_end":399,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<Date>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26060,"byte_end":26100,"line_start":393,"line_end":393,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26105,"byte_end":26108,"line_start":394,"line_end":394,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26113,"byte_end":26124,"line_start":395,"line_end":395,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26129,"byte_end":26157,"line_start":396,"line_end":396,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_ordinal_date(), (2019, 1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26162,"byte_end":26229,"line_start":397,"line_end":397,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26234,"byte_end":26241,"line_start":398,"line_end":398,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26999,"byte_end":27015,"line_start":420,"line_end":420,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<Date>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26346,"byte_end":26398,"line_start":403,"line_end":403,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26403,"byte_end":26406,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26411,"byte_end":26422,"line_start":405,"line_end":405,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26427,"byte_end":26454,"line_start":406,"line_end":406,"column_start":5,"column_end":32}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26459,"byte_end":26487,"line_start":407,"line_end":407,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_iso_week_date(), (2019, 1, Tuesday));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26492,"byte_end":26569,"line_start":408,"line_end":408,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(date!(2019 - 10 - 04).to_iso_week_date(), (2019, 40, Friday));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26574,"byte_end":26651,"line_start":409,"line_end":409,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26656,"byte_end":26671,"line_start":410,"line_end":410,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26676,"byte_end":26725,"line_start":411,"line_end":411,"column_start":5,"column_end":54}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26730,"byte_end":26758,"line_start":412,"line_end":412,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26763,"byte_end":26769,"line_start":413,"line_end":413,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26774,"byte_end":26789,"line_start":414,"line_end":414,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26794,"byte_end":26843,"line_start":415,"line_end":415,"column_start":5,"column_end":54}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26848,"byte_end":26876,"line_start":416,"line_end":416,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26881,"byte_end":26887,"line_start":417,"line_end":417,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(date!(2021 - 01 - 01).to_iso_week_date(), (2020, 53, Friday));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26892,"byte_end":26969,"line_start":418,"line_end":418,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":26974,"byte_end":26981,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28304,"byte_end":28311,"line_start":449,"line_end":449,"column_start":18,"column_end":25},"name":"weekday","qualname":"<Date>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27424,"byte_end":27444,"line_start":431,"line_end":431,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27449,"byte_end":27452,"line_start":432,"line_end":432,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27457,"byte_end":27468,"line_start":433,"line_end":433,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27473,"byte_end":27500,"line_start":434,"line_end":434,"column_start":5,"column_end":32}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27505,"byte_end":27533,"line_start":435,"line_end":435,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).weekday(), Tuesday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27538,"byte_end":27595,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 02 - 01).weekday(), Friday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27600,"byte_end":27656,"line_start":437,"line_end":437,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 03 - 01).weekday(), Friday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27661,"byte_end":27717,"line_start":438,"line_end":438,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 04 - 01).weekday(), Monday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27722,"byte_end":27778,"line_start":439,"line_end":439,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 05 - 01).weekday(), Wednesday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27783,"byte_end":27842,"line_start":440,"line_end":440,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(date!(2019 - 06 - 01).weekday(), Saturday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27847,"byte_end":27905,"line_start":441,"line_end":441,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 07 - 01).weekday(), Monday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27910,"byte_end":27966,"line_start":442,"line_end":442,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 08 - 01).weekday(), Thursday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":27971,"byte_end":28029,"line_start":443,"line_end":443,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2019 - 09 - 01).weekday(), Sunday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28034,"byte_end":28090,"line_start":444,"line_end":444,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 10 - 01).weekday(), Tuesday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28095,"byte_end":28152,"line_start":445,"line_end":445,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(date!(2019 - 11 - 01).weekday(), Friday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28157,"byte_end":28213,"line_start":446,"line_end":446,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(date!(2019 - 12 - 01).weekday(), Sunday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28218,"byte_end":28274,"line_start":447,"line_end":447,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28279,"byte_end":28286,"line_start":448,"line_end":448,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29286,"byte_end":29294,"line_start":483,"line_end":483,"column_start":18,"column_end":26},"name":"next_day","qualname":"<Date>::next_day","value":"const fn next_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the next calendar date.","sig":null,"attributes":[{"value":"/ Get the next calendar date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28743,"byte_end":28774,"line_start":464,"line_end":464,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28779,"byte_end":28782,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28787,"byte_end":28798,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28803,"byte_end":28824,"line_start":467,"line_end":467,"column_start":5,"column_end":26}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28829,"byte_end":28857,"line_start":468,"line_end":468,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28862,"byte_end":28877,"line_start":469,"line_end":469,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 01).next_day(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28882,"byte_end":28923,"line_start":470,"line_end":470,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 01 - 02))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28928,"byte_end":28963,"line_start":471,"line_end":471,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28968,"byte_end":28974,"line_start":472,"line_end":472,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28979,"byte_end":28994,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 31).next_day(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":28999,"byte_end":29040,"line_start":474,"line_end":474,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2019 - 02 - 01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29045,"byte_end":29080,"line_start":475,"line_end":475,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29085,"byte_end":29091,"line_start":476,"line_end":476,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29096,"byte_end":29111,"line_start":477,"line_end":477,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 12 - 31).next_day(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29116,"byte_end":29157,"line_start":478,"line_end":478,"column_start":5,"column_end":46}},{"value":"/     Some(date!(2020 - 01 - 01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29162,"byte_end":29197,"line_start":479,"line_end":479,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29202,"byte_end":29208,"line_start":480,"line_end":480,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MAX.next_day(), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29213,"byte_end":29256,"line_start":481,"line_end":481,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29261,"byte_end":29268,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30271,"byte_end":30283,"line_start":516,"line_end":516,"column_start":18,"column_end":30},"name":"previous_day","qualname":"<Date>::previous_day","value":"const fn previous_day(Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Get the previous calendar date.","sig":null,"attributes":[{"value":"/ Get the previous calendar date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29708,"byte_end":29743,"line_start":497,"line_end":497,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29748,"byte_end":29751,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29756,"byte_end":29767,"line_start":499,"line_end":499,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29772,"byte_end":29793,"line_start":500,"line_end":500,"column_start":5,"column_end":26}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29798,"byte_end":29826,"line_start":501,"line_end":501,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29831,"byte_end":29846,"line_start":502,"line_end":502,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 01 - 02).previous_day(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29851,"byte_end":29896,"line_start":503,"line_end":503,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29901,"byte_end":29936,"line_start":504,"line_end":504,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29941,"byte_end":29947,"line_start":505,"line_end":505,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29952,"byte_end":29967,"line_start":506,"line_end":506,"column_start":5,"column_end":20}},{"value":"/     date!(2019 - 02 - 01).previous_day(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":29972,"byte_end":30017,"line_start":507,"line_end":507,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 01 - 31))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30022,"byte_end":30057,"line_start":508,"line_end":508,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30062,"byte_end":30068,"line_start":509,"line_end":509,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30073,"byte_end":30088,"line_start":510,"line_end":510,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 01 - 01).previous_day(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30093,"byte_end":30138,"line_start":511,"line_end":511,"column_start":5,"column_end":50}},{"value":"/     Some(date!(2019 - 12 - 31))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30143,"byte_end":30178,"line_start":512,"line_end":512,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30183,"byte_end":30189,"line_start":513,"line_end":513,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(Date::MIN.previous_day(), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30194,"byte_end":30241,"line_start":514,"line_end":514,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30246,"byte_end":30253,"line_start":515,"line_end":515,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31277,"byte_end":31290,"line_start":543,"line_end":543,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<Date>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30673,"byte_end":30709,"line_start":531,"line_end":531,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30714,"byte_end":30717,"line_start":532,"line_end":532,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30722,"byte_end":30816,"line_start":533,"line_end":533,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30821,"byte_end":30917,"line_start":534,"line_end":534,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30922,"byte_end":30925,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30930,"byte_end":30941,"line_start":536,"line_end":536,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30946,"byte_end":30974,"line_start":537,"line_end":537,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(date!(-4713 - 11 - 24).to_julian_day(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":30979,"byte_end":31037,"line_start":538,"line_end":538,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(date!(2000 - 01 - 01).to_julian_day(), 2_451_545);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31042,"byte_end":31107,"line_start":539,"line_end":539,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 01 - 01).to_julian_day(), 2_458_485);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31112,"byte_end":31177,"line_start":540,"line_end":540,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(date!(2019 - 12 - 31).to_julian_day(), 2_458_849);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31182,"byte_end":31247,"line_start":541,"line_end":541,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31252,"byte_end":31259,"line_start":542,"line_end":542,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32671,"byte_end":32682,"line_start":585,"line_end":585,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Date>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31593,"byte_end":31666,"line_start":554,"line_end":554,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31671,"byte_end":31674,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31679,"byte_end":31690,"line_start":556,"line_end":556,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31695,"byte_end":31742,"line_start":557,"line_end":557,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31747,"byte_end":31775,"line_start":558,"line_end":558,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Date::MAX.checked_add(1.days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31780,"byte_end":31834,"line_start":559,"line_end":559,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(Date::MIN.checked_add((-2).days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31839,"byte_end":31896,"line_start":560,"line_end":560,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31901,"byte_end":31916,"line_start":561,"line_end":561,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(2.days()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31921,"byte_end":31973,"line_start":562,"line_end":562,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2021 - 01 - 02))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":31978,"byte_end":32013,"line_start":563,"line_end":563,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32018,"byte_end":32024,"line_start":564,"line_end":564,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32029,"byte_end":32036,"line_start":565,"line_end":565,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32041,"byte_end":32044,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32049,"byte_end":32059,"line_start":567,"line_end":567,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32064,"byte_end":32067,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32072,"byte_end":32125,"line_start":569,"line_end":569,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32130,"byte_end":32133,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32138,"byte_end":32149,"line_start":571,"line_end":571,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32154,"byte_end":32201,"line_start":572,"line_end":572,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32206,"byte_end":32234,"line_start":573,"line_end":573,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Date::MAX.checked_add(23.hours()), Some(Date::MAX));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32239,"byte_end":32306,"line_start":574,"line_end":574,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Date::MIN.checked_add((-23).hours()), Some(Date::MIN));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32311,"byte_end":32381,"line_start":575,"line_end":575,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32386,"byte_end":32401,"line_start":576,"line_end":576,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(23.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32406,"byte_end":32460,"line_start":577,"line_end":577,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32465,"byte_end":32500,"line_start":578,"line_end":578,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32505,"byte_end":32511,"line_start":579,"line_end":579,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32516,"byte_end":32531,"line_start":580,"line_end":580,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_add(47.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32536,"byte_end":32590,"line_start":581,"line_end":581,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2021 - 01 - 01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32595,"byte_end":32630,"line_start":582,"line_end":582,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32635,"byte_end":32641,"line_start":583,"line_end":583,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":32646,"byte_end":32653,"line_start":584,"line_end":584,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34187,"byte_end":34198,"line_start":630,"line_end":630,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Date>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33117,"byte_end":33190,"line_start":599,"line_end":599,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33195,"byte_end":33198,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33203,"byte_end":33210,"line_start":601,"line_end":601,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33215,"byte_end":33262,"line_start":602,"line_end":602,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33267,"byte_end":33295,"line_start":603,"line_end":603,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-2).days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33300,"byte_end":33357,"line_start":604,"line_end":604,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Date::MIN.checked_sub(1.days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33362,"byte_end":33416,"line_start":605,"line_end":605,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33421,"byte_end":33436,"line_start":606,"line_end":606,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(2.days()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33441,"byte_end":33493,"line_start":607,"line_end":607,"column_start":5,"column_end":57}},{"value":"/     Some(date!(2020 - 12 - 29))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33498,"byte_end":33533,"line_start":608,"line_end":608,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33538,"byte_end":33544,"line_start":609,"line_end":609,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33549,"byte_end":33556,"line_start":610,"line_end":610,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33561,"byte_end":33564,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33569,"byte_end":33579,"line_start":612,"line_end":612,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33584,"byte_end":33587,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33592,"byte_end":33645,"line_start":614,"line_end":614,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33650,"byte_end":33653,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33658,"byte_end":33665,"line_start":616,"line_end":616,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33670,"byte_end":33717,"line_start":617,"line_end":617,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33722,"byte_end":33750,"line_start":618,"line_end":618,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Date::MAX.checked_sub((-23).hours()), Some(Date::MAX));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33755,"byte_end":33825,"line_start":619,"line_end":619,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Date::MIN.checked_sub(23.hours()), Some(Date::MIN));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33830,"byte_end":33897,"line_start":620,"line_end":620,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33902,"byte_end":33917,"line_start":621,"line_end":621,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(23.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33922,"byte_end":33976,"line_start":622,"line_end":622,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 31))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":33981,"byte_end":34016,"line_start":623,"line_end":623,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34021,"byte_end":34027,"line_start":624,"line_end":624,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34032,"byte_end":34047,"line_start":625,"line_end":625,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).checked_sub(47.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34052,"byte_end":34106,"line_start":626,"line_end":626,"column_start":5,"column_end":59}},{"value":"/     Some(date!(2020 - 12 - 30))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34111,"byte_end":34146,"line_start":627,"line_end":627,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34151,"byte_end":34157,"line_start":628,"line_end":628,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34162,"byte_end":34169,"line_start":629,"line_end":629,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35625,"byte_end":35639,"line_start":675,"line_end":675,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Date>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34707,"byte_end":34768,"line_start":646,"line_end":646,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34773,"byte_end":34776,"line_start":647,"line_end":647,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34781,"byte_end":34792,"line_start":648,"line_end":648,"column_start":5,"column_end":16}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34797,"byte_end":34844,"line_start":649,"line_end":649,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34849,"byte_end":34877,"line_start":650,"line_end":650,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Date::MAX.saturating_add(1.days()), Date::MAX);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34882,"byte_end":34944,"line_start":651,"line_end":651,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Date::MIN.saturating_add((-2).days()), Date::MIN);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":34949,"byte_end":35014,"line_start":652,"line_end":652,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35019,"byte_end":35034,"line_start":653,"line_end":653,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(2.days()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35039,"byte_end":35094,"line_start":654,"line_end":654,"column_start":5,"column_end":60}},{"value":"/     date!(2021 - 01 - 02)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35099,"byte_end":35128,"line_start":655,"line_end":655,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35133,"byte_end":35139,"line_start":656,"line_end":656,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35144,"byte_end":35151,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35156,"byte_end":35159,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35164,"byte_end":35174,"line_start":659,"line_end":659,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35179,"byte_end":35182,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35187,"byte_end":35240,"line_start":661,"line_end":661,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35245,"byte_end":35248,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35253,"byte_end":35264,"line_start":663,"line_end":663,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35269,"byte_end":35308,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35313,"byte_end":35341,"line_start":665,"line_end":665,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35346,"byte_end":35361,"line_start":666,"line_end":666,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(23.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35366,"byte_end":35423,"line_start":667,"line_end":667,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35428,"byte_end":35457,"line_start":668,"line_end":668,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35462,"byte_end":35468,"line_start":669,"line_end":669,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35473,"byte_end":35488,"line_start":670,"line_end":670,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_add(47.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35493,"byte_end":35550,"line_start":671,"line_end":671,"column_start":5,"column_end":62}},{"value":"/     date!(2021 - 01 - 01)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35555,"byte_end":35584,"line_start":672,"line_end":672,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35589,"byte_end":35595,"line_start":673,"line_end":673,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35600,"byte_end":35607,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36844,"byte_end":36858,"line_start":715,"line_end":715,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Date>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":35934,"byte_end":35995,"line_start":686,"line_end":686,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36000,"byte_end":36003,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36008,"byte_end":36015,"line_start":688,"line_end":688,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36020,"byte_end":36067,"line_start":689,"line_end":689,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36072,"byte_end":36100,"line_start":690,"line_end":690,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Date::MAX.saturating_sub((-2).days()), Date::MAX);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36105,"byte_end":36170,"line_start":691,"line_end":691,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Date::MIN.saturating_sub(1.days()), Date::MIN);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36175,"byte_end":36237,"line_start":692,"line_end":692,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36242,"byte_end":36257,"line_start":693,"line_end":693,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(2.days()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36262,"byte_end":36317,"line_start":694,"line_end":694,"column_start":5,"column_end":60}},{"value":"/     date!(2020 - 12 - 29)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36322,"byte_end":36351,"line_start":695,"line_end":695,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36356,"byte_end":36362,"line_start":696,"line_end":696,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36367,"byte_end":36374,"line_start":697,"line_end":697,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36379,"byte_end":36382,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36387,"byte_end":36397,"line_start":699,"line_end":699,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36402,"byte_end":36405,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ This function only takes whole days into account.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36410,"byte_end":36463,"line_start":701,"line_end":701,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36468,"byte_end":36471,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36476,"byte_end":36483,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36488,"byte_end":36527,"line_start":704,"line_end":704,"column_start":5,"column_end":44}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36532,"byte_end":36560,"line_start":705,"line_end":705,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36565,"byte_end":36580,"line_start":706,"line_end":706,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(23.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36585,"byte_end":36642,"line_start":707,"line_end":707,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 31)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36647,"byte_end":36676,"line_start":708,"line_end":708,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36681,"byte_end":36687,"line_start":709,"line_end":709,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36692,"byte_end":36707,"line_start":710,"line_end":710,"column_start":5,"column_end":20}},{"value":"/     date!(2020 - 12 - 31).saturating_sub(47.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36712,"byte_end":36769,"line_start":711,"line_end":711,"column_start":5,"column_end":62}},{"value":"/     date!(2020 - 12 - 30)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36774,"byte_end":36803,"line_start":712,"line_end":712,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36808,"byte_end":36814,"line_start":713,"line_end":713,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":36819,"byte_end":36826,"line_start":714,"line_end":714,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":107},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37782,"byte_end":37794,"line_start":740,"line_end":740,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<Date>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37217,"byte_end":37275,"line_start":728,"line_end":728,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37280,"byte_end":37283,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37288,"byte_end":37299,"line_start":730,"line_end":730,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37304,"byte_end":37332,"line_start":731,"line_end":731,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37337,"byte_end":37352,"line_start":732,"line_end":732,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_year(2019),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37357,"byte_end":37406,"line_start":733,"line_end":733,"column_start":5,"column_end":54}},{"value":"/     Ok(date!(2019 - 02 - 18))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37411,"byte_end":37444,"line_start":734,"line_end":734,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37449,"byte_end":37455,"line_start":735,"line_end":735,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37460,"byte_end":37570,"line_start":736,"line_end":736,"column_start":5,"column_end":115}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37575,"byte_end":37683,"line_start":737,"line_end":737,"column_start":5,"column_end":113}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37688,"byte_end":37695,"line_start":738,"line_end":738,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":37700,"byte_end":37764,"line_start":739,"line_end":739,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":108},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39574,"byte_end":39587,"line_start":785,"line_end":785,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<Date>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39051,"byte_end":39085,"line_start":769,"line_end":769,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39090,"byte_end":39093,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39098,"byte_end":39109,"line_start":771,"line_end":771,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39114,"byte_end":39142,"line_start":772,"line_end":772,"column_start":5,"column_end":33}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39147,"byte_end":39169,"line_start":773,"line_end":773,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39174,"byte_end":39189,"line_start":774,"line_end":774,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_month(Month::January),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39194,"byte_end":39254,"line_start":775,"line_end":775,"column_start":5,"column_end":65}},{"value":"/     Ok(date!(2022 - 01 - 18))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39259,"byte_end":39292,"line_start":776,"line_end":776,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39297,"byte_end":39303,"line_start":777,"line_end":777,"column_start":5,"column_end":11}},{"value":"/ assert!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39308,"byte_end":39320,"line_start":778,"line_end":778,"column_start":5,"column_end":17}},{"value":"/     date!(2022 - 01 - 30)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39325,"byte_end":39354,"line_start":779,"line_end":779,"column_start":5,"column_end":34}},{"value":"/         .replace_month(Month::February)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39359,"byte_end":39402,"line_start":780,"line_end":780,"column_start":5,"column_end":48}},{"value":"/         .is_err()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39407,"byte_end":39428,"line_start":781,"line_end":781,"column_start":5,"column_end":26}},{"value":"/ ); // 30 isn't a valid day in February","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39433,"byte_end":39475,"line_start":782,"line_end":782,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39480,"byte_end":39487,"line_start":783,"line_end":783,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39492,"byte_end":39556,"line_start":784,"line_end":784,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":40261,"byte_end":40272,"line_start":802,"line_end":802,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<Date>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39765,"byte_end":39798,"line_start":790,"line_end":790,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39803,"byte_end":39806,"line_start":791,"line_end":791,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39811,"byte_end":39822,"line_start":792,"line_end":792,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39827,"byte_end":39855,"line_start":793,"line_end":793,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39860,"byte_end":39875,"line_start":794,"line_end":794,"column_start":5,"column_end":20}},{"value":"/     date!(2022 - 02 - 18).replace_day(1),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39880,"byte_end":39925,"line_start":795,"line_end":795,"column_start":5,"column_end":50}},{"value":"/     Ok(date!(2022 - 02 - 01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39930,"byte_end":39963,"line_start":796,"line_end":796,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39968,"byte_end":39974,"line_start":797,"line_end":797,"column_start":5,"column_end":11}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(0).is_err()); // 0 isn't a valid day","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":39979,"byte_end":40061,"line_start":798,"line_end":798,"column_start":5,"column_end":87}},{"value":"/ assert!(date!(2022 - 02 - 18).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":40066,"byte_end":40162,"line_start":799,"line_end":799,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":40167,"byte_end":40174,"line_start":800,"line_end":800,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Date`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":40179,"byte_end":40243,"line_start":801,"line_end":801,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41195,"byte_end":41203,"line_start":828,"line_end":828,"column_start":18,"column_end":26},"name":"midnight","qualname":"<Date>::midnight","value":"const fn midnight(Self) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set\n to midnight.","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date. The [`Time`] component will be set","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":40903,"byte_end":40997,"line_start":821,"line_end":821,"column_start":5,"column_end":99}},{"value":"/ to midnight.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41002,"byte_end":41018,"line_start":822,"line_end":822,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41023,"byte_end":41026,"line_start":823,"line_end":823,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41031,"byte_end":41042,"line_start":824,"line_end":824,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{date, datetime};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41047,"byte_end":41087,"line_start":825,"line_end":825,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(date!(1970-01-01).midnight(), datetime!(1970-01-01 0:00));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41092,"byte_end":41165,"line_start":826,"line_end":826,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41170,"byte_end":41177,"line_start":827,"line_end":827,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41612,"byte_end":41621,"line_start":841,"line_end":841,"column_start":18,"column_end":27},"name":"with_time","qualname":"<Date>::with_time","value":"const fn with_time(Self, Time) -> PrimitiveDateTime","parent":null,"children":[],"decl_id":null,"docs":" Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","sig":null,"attributes":[{"value":"/ Create a [`PrimitiveDateTime`] using the existing date and the provided [`Time`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41297,"byte_end":41382,"line_start":832,"line_end":832,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41387,"byte_end":41390,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41395,"byte_end":41406,"line_start":834,"line_end":834,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{date, datetime, time};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41411,"byte_end":41457,"line_start":835,"line_end":835,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41462,"byte_end":41477,"line_start":836,"line_end":836,"column_start":5,"column_end":20}},{"value":"/     date!(1970-01-01).with_time(time!(0:00)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41482,"byte_end":41531,"line_start":837,"line_end":837,"column_start":5,"column_end":54}},{"value":"/     datetime!(1970-01-01 0:00),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41536,"byte_end":41571,"line_start":838,"line_end":838,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41576,"byte_end":41582,"line_start":839,"line_end":839,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41587,"byte_end":41594,"line_start":840,"line_end":840,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":113},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42030,"byte_end":42038,"line_start":852,"line_end":852,"column_start":18,"column_end":26},"name":"with_hms","qualname":"<Date>::with_hms","value":"const fn with_hms(Self, u8, u8, u8)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41717,"byte_end":41809,"line_start":845,"line_end":845,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41814,"byte_end":41817,"line_start":846,"line_end":846,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41822,"byte_end":41833,"line_start":847,"line_end":847,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41838,"byte_end":41866,"line_start":848,"line_end":848,"column_start":5,"column_end":33}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(0, 0, 0).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41871,"byte_end":41932,"line_start":849,"line_end":849,"column_start":5,"column_end":66}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms(24, 0, 0).is_err());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":41937,"byte_end":42000,"line_start":850,"line_end":850,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42005,"byte_end":42012,"line_start":851,"line_end":851,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":114},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42640,"byte_end":42654,"line_start":871,"line_end":871,"column_start":18,"column_end":32},"name":"with_hms_milli","qualname":"<Date>::with_hms_milli","value":"const fn with_hms_milli(Self, u8, u8, u8, u16)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42309,"byte_end":42401,"line_start":864,"line_end":864,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42406,"byte_end":42409,"line_start":865,"line_end":865,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42414,"byte_end":42425,"line_start":866,"line_end":866,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42430,"byte_end":42458,"line_start":867,"line_end":867,"column_start":5,"column_end":33}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(0, 0, 0, 0).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42463,"byte_end":42533,"line_start":868,"line_end":868,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_milli(24, 0, 0, 0).is_err());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42538,"byte_end":42610,"line_start":869,"line_end":869,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42615,"byte_end":42622,"line_start":870,"line_end":870,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43301,"byte_end":43315,"line_start":891,"line_end":891,"column_start":18,"column_end":32},"name":"with_hms_micro","qualname":"<Date>::with_hms_micro","value":"const fn with_hms_micro(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":42970,"byte_end":43062,"line_start":884,"line_end":884,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43067,"byte_end":43070,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43075,"byte_end":43086,"line_start":886,"line_end":886,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43091,"byte_end":43119,"line_start":887,"line_end":887,"column_start":5,"column_end":33}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(0, 0, 0, 0).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43124,"byte_end":43194,"line_start":888,"line_end":888,"column_start":5,"column_end":75}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_micro(24, 0, 0, 0).is_err());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43199,"byte_end":43271,"line_start":889,"line_end":889,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43276,"byte_end":43283,"line_start":890,"line_end":890,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":116},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43960,"byte_end":43973,"line_start":911,"line_end":911,"column_start":18,"column_end":31},"name":"with_hms_nano","qualname":"<Date>::with_hms_nano","value":"const fn with_hms_nano(Self, u8, u8, u8, u32)\n-> Result<PrimitiveDateTime, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","sig":null,"attributes":[{"value":"/ Attempt to create a [`PrimitiveDateTime`] using the existing date and the provided time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43631,"byte_end":43723,"line_start":904,"line_end":904,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43728,"byte_end":43731,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43736,"byte_end":43747,"line_start":906,"line_end":906,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43752,"byte_end":43780,"line_start":907,"line_end":907,"column_start":5,"column_end":33}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(0, 0, 0, 0).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43785,"byte_end":43854,"line_start":908,"line_end":908,"column_start":5,"column_end":74}},{"value":"/ assert!(date!(1970 - 01 - 01).with_hms_nano(24, 0, 0, 0).is_err());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43859,"byte_end":43930,"line_start":909,"line_end":909,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":43935,"byte_end":43942,"line_start":910,"line_end":910,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":118},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44489,"byte_end":44500,"line_start":930,"line_end":930,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Date>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44388,"byte_end":44477,"line_start":929,"line_end":929,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45103,"byte_end":45109,"line_start":947,"line_end":947,"column_start":12,"column_end":18},"name":"format","qualname":"<Date>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Date` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Date` using the provided [format description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44709,"byte_end":44798,"line_start":938,"line_end":938,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44803,"byte_end":44806,"line_start":939,"line_end":939,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44811,"byte_end":44822,"line_start":940,"line_end":940,"column_start":5,"column_end":16}},{"value":"/ # use time::{format_description};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44827,"byte_end":44864,"line_start":941,"line_end":941,"column_start":5,"column_end":42}},{"value":"/ # use time_macros::date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44869,"byte_end":44897,"line_start":942,"line_end":942,"column_start":5,"column_end":33}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day]\")?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44902,"byte_end":44970,"line_start":943,"line_end":943,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(date!(2020 - 01 - 02).format(&format)?, \"2020-01-02\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44975,"byte_end":45044,"line_start":944,"line_end":944,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45049,"byte_end":45079,"line_start":945,"line_end":945,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45084,"byte_end":45091,"line_start":946,"line_end":946,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45707,"byte_end":45712,"line_start":964,"line_end":964,"column_start":12,"column_end":17},"name":"parse","qualname":"<Date>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Date` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Date` from the input using the provided [format","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45288,"byte_end":45348,"line_start":954,"line_end":954,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45353,"byte_end":45397,"line_start":955,"line_end":955,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45402,"byte_end":45405,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45410,"byte_end":45421,"line_start":957,"line_end":957,"column_start":5,"column_end":16}},{"value":"/ # use time::Date;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45426,"byte_end":45447,"line_start":958,"line_end":958,"column_start":5,"column_end":26}},{"value":"/ # use time_macros::{date, format_description};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45452,"byte_end":45502,"line_start":959,"line_end":959,"column_start":5,"column_end":55}},{"value":"/ let format = format_description!(\"[year]-[month]-[day]\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45507,"byte_end":45568,"line_start":960,"line_end":960,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(Date::parse(\"2020-01-02\", &format)?, date!(2020 - 01 - 02));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45573,"byte_end":45648,"line_start":961,"line_end":961,"column_start":5,"column_end":80}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45653,"byte_end":45683,"line_start":962,"line_end":962,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45688,"byte_end":45695,"line_start":963,"line_end":963,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45915,"byte_end":45918,"line_start":973,"line_end":973,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":46539,"byte_end":46542,"line_start":996,"line_end":996,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Date as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> Result<(), fmt::Error>","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":46769,"byte_end":46772,"line_start":1006,"line_end":1006,"column_start":8,"column_end":11},"name":"add","qualname":"<Date as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":135},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":46982,"byte_end":46985,"line_start":1015,"line_end":1015,"column_start":8,"column_end":11},"name":"add","qualname":"<Date as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":47299,"byte_end":47302,"line_start":1026,"line_end":1026,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":141},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":47519,"byte_end":47522,"line_start":1035,"line_end":1035,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":47837,"byte_end":47840,"line_start":1046,"line_end":1046,"column_start":8,"column_end":11},"name":"sub","qualname":"<Date as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2951},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49009,"byte_end":49017,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"Duration","qualname":"::duration::Duration","value":"Duration {  }","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953},{"krate":0,"index":2954}],"decl_id":null,"docs":" A span of time with nanosecond precision.","sig":null,"attributes":[{"value":"/ A span of time with nanosecond precision.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":48671,"byte_end":48716,"line_start":28,"line_end":28,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":48717,"byte_end":48720,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Each `Duration` is composed of a whole number of seconds and a fractional part represented in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":48721,"byte_end":48818,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ nanoseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":48819,"byte_end":48835,"line_start":31,"line_end":31,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":48836,"byte_end":48839,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for negative durations, unlike [`core::time::Duration`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":48840,"byte_end":48927,"line_start":33,"line_end":33,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49339,"byte_end":49342,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":191},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49792,"byte_end":49796,"line_start":61,"line_end":61,"column_start":15,"column_end":19},"name":"ZERO","qualname":"::duration::Duration::ZERO","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Equivalent to `0.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `0.seconds()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49604,"byte_end":49636,"line_start":55,"line_end":55,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49641,"byte_end":49644,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49649,"byte_end":49660,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49665,"byte_end":49716,"line_start":58,"line_end":58,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::ZERO, 0.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49721,"byte_end":49765,"line_start":59,"line_end":59,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49770,"byte_end":49777,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":192},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50030,"byte_end":50040,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"name":"NANOSECOND","qualname":"::duration::Duration::NANOSECOND","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Equivalent to `1.nanoseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.nanoseconds()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49828,"byte_end":49864,"line_start":63,"line_end":63,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49869,"byte_end":49872,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49877,"byte_end":49888,"line_start":65,"line_end":65,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49893,"byte_end":49944,"line_start":66,"line_end":66,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::NANOSECOND, 1.nanoseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49949,"byte_end":50003,"line_start":67,"line_end":67,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50008,"byte_end":50015,"line_start":68,"line_end":68,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":193},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50281,"byte_end":50292,"line_start":77,"line_end":77,"column_start":15,"column_end":26},"name":"MICROSECOND","qualname":"::duration::Duration::MICROSECOND","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Equivalent to `1.microseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.microseconds()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50076,"byte_end":50113,"line_start":71,"line_end":71,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50118,"byte_end":50121,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50126,"byte_end":50137,"line_start":73,"line_end":73,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50142,"byte_end":50193,"line_start":74,"line_end":74,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MICROSECOND, 1.microseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50198,"byte_end":50254,"line_start":75,"line_end":75,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50259,"byte_end":50266,"line_start":76,"line_end":76,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":194},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50534,"byte_end":50545,"line_start":85,"line_end":85,"column_start":15,"column_end":26},"name":"MILLISECOND","qualname":"::duration::Duration::MILLISECOND","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Equivalent to `1.milliseconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.milliseconds()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50329,"byte_end":50366,"line_start":79,"line_end":79,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50371,"byte_end":50374,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50379,"byte_end":50390,"line_start":81,"line_end":81,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50395,"byte_end":50446,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MILLISECOND, 1.milliseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50451,"byte_end":50507,"line_start":83,"line_end":83,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50512,"byte_end":50519,"line_start":84,"line_end":84,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":195},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50772,"byte_end":50778,"line_start":93,"line_end":93,"column_start":15,"column_end":21},"name":"SECOND","qualname":"::duration::Duration::SECOND","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Equivalent to `1.seconds()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.seconds()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50582,"byte_end":50614,"line_start":87,"line_end":87,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50619,"byte_end":50622,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50627,"byte_end":50638,"line_start":89,"line_end":89,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50643,"byte_end":50694,"line_start":90,"line_end":90,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::SECOND, 1.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50699,"byte_end":50745,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50750,"byte_end":50757,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":196},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51000,"byte_end":51006,"line_start":101,"line_end":101,"column_start":15,"column_end":21},"name":"MINUTE","qualname":"::duration::Duration::MINUTE","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Equivalent to `1.minutes()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.minutes()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50810,"byte_end":50842,"line_start":95,"line_end":95,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50847,"byte_end":50850,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50855,"byte_end":50866,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50871,"byte_end":50922,"line_start":98,"line_end":98,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MINUTE, 1.minutes());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50927,"byte_end":50973,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":50978,"byte_end":50985,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":197},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51222,"byte_end":51226,"line_start":109,"line_end":109,"column_start":15,"column_end":19},"name":"HOUR","qualname":"::duration::Duration::HOUR","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Equivalent to `1.hours()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.hours()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51038,"byte_end":51068,"line_start":103,"line_end":103,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51073,"byte_end":51076,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51081,"byte_end":51092,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51097,"byte_end":51148,"line_start":106,"line_end":106,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::HOUR, 1.hours());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51153,"byte_end":51195,"line_start":107,"line_end":107,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51200,"byte_end":51207,"line_start":108,"line_end":108,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":198},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51437,"byte_end":51440,"line_start":117,"line_end":117,"column_start":15,"column_end":18},"name":"DAY","qualname":"::duration::Duration::DAY","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Equivalent to `1.days()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.days()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51256,"byte_end":51285,"line_start":111,"line_end":111,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51290,"byte_end":51293,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51298,"byte_end":51309,"line_start":113,"line_end":113,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51314,"byte_end":51365,"line_start":114,"line_end":114,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::DAY, 1.days());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51370,"byte_end":51410,"line_start":115,"line_end":115,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51415,"byte_end":51422,"line_start":116,"line_end":116,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":199},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51653,"byte_end":51657,"line_start":125,"line_end":125,"column_start":15,"column_end":19},"name":"WEEK","qualname":"::duration::Duration::WEEK","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" Equivalent to `1.weeks()`.","sig":null,"attributes":[{"value":"/ Equivalent to `1.weeks()`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51469,"byte_end":51499,"line_start":119,"line_end":119,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51504,"byte_end":51507,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51512,"byte_end":51523,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51528,"byte_end":51579,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::WEEK, 1.weeks());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51584,"byte_end":51626,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51631,"byte_end":51638,"line_start":124,"line_end":124,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":200},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51797,"byte_end":51800,"line_start":128,"line_end":128,"column_start":15,"column_end":18},"name":"MIN","qualname":"::duration::Duration::MIN","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" The minimum possible duration. Adding any negative duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The minimum possible duration. Adding any negative duration to this will cause an overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51687,"byte_end":51782,"line_start":127,"line_end":127,"column_start":5,"column_end":100}}]},{"kind":"Const","id":{"krate":0,"index":201},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51969,"byte_end":51972,"line_start":131,"line_end":131,"column_start":15,"column_end":18},"name":"MAX","qualname":"::duration::Duration::MAX","value":"Self","parent":{"krate":0,"index":190},"children":[],"decl_id":null,"docs":" The maximum possible duration. Adding any positive duration to this will cause an overflow.\n","sig":null,"attributes":[{"value":"/ The maximum possible duration. Adding any positive duration to this will cause an overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":51859,"byte_end":51954,"line_start":130,"line_end":130,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52305,"byte_end":52312,"line_start":142,"line_end":142,"column_start":18,"column_end":25},"name":"is_zero","qualname":"<Duration>::is_zero","value":"const fn is_zero(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is exactly zero.","sig":null,"attributes":[{"value":"/ Check if a duration is exactly zero.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52082,"byte_end":52122,"line_start":135,"line_end":135,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52127,"byte_end":52130,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52135,"byte_end":52146,"line_start":137,"line_end":137,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52151,"byte_end":52190,"line_start":138,"line_end":138,"column_start":5,"column_end":44}},{"value":"/ assert!(0.seconds().is_zero());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52195,"byte_end":52230,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/ assert!(!1.nanoseconds().is_zero());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52235,"byte_end":52275,"line_start":140,"line_end":140,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52280,"byte_end":52287,"line_start":141,"line_end":141,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52662,"byte_end":52673,"line_start":154,"line_end":154,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<Duration>::is_negative","value":"const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is negative.","sig":null,"attributes":[{"value":"/ Check if a duration is negative.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52391,"byte_end":52427,"line_start":146,"line_end":146,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52432,"byte_end":52435,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52440,"byte_end":52451,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52456,"byte_end":52495,"line_start":149,"line_end":149,"column_start":5,"column_end":44}},{"value":"/ assert!((-1).seconds().is_negative());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52500,"byte_end":52542,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ assert!(!0.seconds().is_negative());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52547,"byte_end":52587,"line_start":151,"line_end":151,"column_start":5,"column_end":45}},{"value":"/ assert!(!1.seconds().is_negative());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52592,"byte_end":52632,"line_start":152,"line_end":152,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52637,"byte_end":52644,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53021,"byte_end":53032,"line_start":166,"line_end":166,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<Duration>::is_positive","value":"const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a duration is positive.","sig":null,"attributes":[{"value":"/ Check if a duration is positive.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52750,"byte_end":52786,"line_start":158,"line_end":158,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52791,"byte_end":52794,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52799,"byte_end":52810,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52815,"byte_end":52854,"line_start":161,"line_end":161,"column_start":5,"column_end":44}},{"value":"/ assert!(1.seconds().is_positive());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52859,"byte_end":52898,"line_start":162,"line_end":162,"column_start":5,"column_end":44}},{"value":"/ assert!(!0.seconds().is_positive());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52903,"byte_end":52943,"line_start":163,"line_end":163,"column_start":5,"column_end":45}},{"value":"/ assert!(!(-1).seconds().is_positive());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52948,"byte_end":52991,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":52996,"byte_end":53003,"line_start":165,"line_end":165,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53544,"byte_end":53547,"line_start":182,"line_end":182,"column_start":18,"column_end":21},"name":"abs","qualname":"<Duration>::abs","value":"const fn abs(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the absolute value of the duration.","sig":null,"attributes":[{"value":"/ Get the absolute value of the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53155,"byte_end":53198,"line_start":172,"line_end":172,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53203,"byte_end":53206,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This method saturates the returned value if it would otherwise overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53211,"byte_end":53287,"line_start":174,"line_end":174,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53292,"byte_end":53295,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53300,"byte_end":53311,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53316,"byte_end":53355,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().abs(), 1.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53360,"byte_end":53407,"line_start":178,"line_end":178,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(0.seconds().abs(), 0.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53412,"byte_end":53459,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().abs(), 1.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53464,"byte_end":53514,"line_start":180,"line_end":180,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53519,"byte_end":53526,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":54170,"byte_end":54182,"line_start":195,"line_end":195,"column_start":18,"column_end":30},"name":"unsigned_abs","qualname":"<Duration>::unsigned_abs","value":"const fn unsigned_abs(Self) -> StdDuration","parent":null,"children":[],"decl_id":null,"docs":" Convert the existing `Duration` to a `std::time::Duration` and its sign. This returns a\n [`std::time::Duration`] and does not saturate the returned value (unlike [`Duration::abs`]).","sig":null,"attributes":[{"value":"/ Convert the existing `Duration` to a `std::time::Duration` and its sign. This returns a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53658,"byte_end":53749,"line_start":186,"line_end":186,"column_start":5,"column_end":96}},{"value":"/ [`std::time::Duration`] and does not saturate the returned value (unlike [`Duration::abs`]).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53754,"byte_end":53850,"line_start":187,"line_end":187,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53855,"byte_end":53858,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53863,"byte_end":53874,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::{NumericalDuration, NumericalStdDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53879,"byte_end":53942,"line_start":190,"line_end":190,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(1.seconds().unsigned_abs(), 1.std_seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":53947,"byte_end":54007,"line_start":191,"line_end":191,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(0.seconds().unsigned_abs(), 0.std_seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":54012,"byte_end":54072,"line_start":192,"line_end":192,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).seconds().unsigned_abs(), 1.std_seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":54077,"byte_end":54140,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":54145,"byte_end":54152,"line_start":194,"line_end":194,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":208},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":55441,"byte_end":55444,"line_start":229,"line_end":229,"column_start":18,"column_end":21},"name":"new","qualname":"<Duration>::new","value":"const fn new(i64, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at\n least ±10<sup>9</sup>, it will wrap to the number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the provided seconds and nanoseconds. If nanoseconds is at","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":54991,"byte_end":55082,"line_start":220,"line_end":220,"column_start":5,"column_end":96}},{"value":"/ least ±10<sup>9</sup>, it will wrap to the number of seconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":55087,"byte_end":55153,"line_start":221,"line_end":221,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":55158,"byte_end":55161,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":55166,"byte_end":55177,"line_start":223,"line_end":223,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":55182,"byte_end":55233,"line_start":224,"line_end":224,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::new(1, 0), 1.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":55238,"byte_end":55287,"line_start":225,"line_end":225,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(Duration::new(-1, 0), (-1).seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":55292,"byte_end":55345,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(Duration::new(1, 2_000_000_000), 3.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":55350,"byte_end":55411,"line_start":227,"line_end":227,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":55416,"byte_end":55423,"line_start":228,"line_end":228,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":209},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56429,"byte_end":56434,"line_start":256,"line_end":256,"column_start":18,"column_end":23},"name":"weeks","qualname":"<Duration>::weeks","value":"const fn weeks(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of weeks. Equivalent to\n `Duration::seconds(weeks * 604_800)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of weeks. Equivalent to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56141,"byte_end":56214,"line_start":249,"line_end":249,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(weeks * 604_800)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56219,"byte_end":56260,"line_start":250,"line_end":250,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56265,"byte_end":56268,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56273,"byte_end":56284,"line_start":252,"line_end":252,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56289,"byte_end":56340,"line_start":253,"line_end":253,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::weeks(1), 604_800.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56345,"byte_end":56399,"line_start":254,"line_end":254,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56404,"byte_end":56411,"line_start":255,"line_end":255,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":210},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56890,"byte_end":56894,"line_start":270,"line_end":270,"column_start":18,"column_end":22},"name":"days","qualname":"<Duration>::days","value":"const fn days(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of days. Equivalent to\n `Duration::seconds(days * 86_400)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of days. Equivalent to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56607,"byte_end":56679,"line_start":263,"line_end":263,"column_start":5,"column_end":77}},{"value":"/ `Duration::seconds(days * 86_400)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56684,"byte_end":56723,"line_start":264,"line_end":264,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56728,"byte_end":56731,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56736,"byte_end":56747,"line_start":266,"line_end":266,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56752,"byte_end":56803,"line_start":267,"line_end":267,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::days(1), 86_400.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56808,"byte_end":56860,"line_start":268,"line_end":268,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":56865,"byte_end":56872,"line_start":269,"line_end":269,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":211},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57348,"byte_end":57353,"line_start":284,"line_end":284,"column_start":18,"column_end":23},"name":"hours","qualname":"<Duration>::hours","value":"const fn hours(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of hours. Equivalent to\n `Duration::seconds(hours * 3_600)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of hours. Equivalent to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57064,"byte_end":57137,"line_start":277,"line_end":277,"column_start":5,"column_end":78}},{"value":"/ `Duration::seconds(hours * 3_600)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57142,"byte_end":57181,"line_start":278,"line_end":278,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57186,"byte_end":57189,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57194,"byte_end":57205,"line_start":280,"line_end":280,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57210,"byte_end":57261,"line_start":281,"line_end":281,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::hours(1), 3_600.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57266,"byte_end":57318,"line_start":282,"line_end":282,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57323,"byte_end":57330,"line_start":283,"line_end":283,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":212},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57808,"byte_end":57815,"line_start":298,"line_end":298,"column_start":18,"column_end":25},"name":"minutes","qualname":"<Duration>::minutes","value":"const fn minutes(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of minutes. Equivalent to\n `Duration::seconds(minutes * 60)`.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of minutes. Equivalent to","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57524,"byte_end":57599,"line_start":291,"line_end":291,"column_start":5,"column_end":80}},{"value":"/ `Duration::seconds(minutes * 60)`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57604,"byte_end":57642,"line_start":292,"line_end":292,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57647,"byte_end":57650,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57655,"byte_end":57666,"line_start":294,"line_end":294,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57671,"byte_end":57722,"line_start":295,"line_end":295,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::minutes(1), 60.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57727,"byte_end":57778,"line_start":296,"line_end":296,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57783,"byte_end":57790,"line_start":297,"line_end":297,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":213},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58222,"byte_end":58229,"line_start":311,"line_end":311,"column_start":18,"column_end":25},"name":"seconds","qualname":"<Duration>::seconds","value":"const fn seconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of seconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of seconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":57987,"byte_end":58048,"line_start":305,"line_end":305,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58053,"byte_end":58056,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58061,"byte_end":58072,"line_start":307,"line_end":307,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58077,"byte_end":58128,"line_start":308,"line_end":308,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds(1), 1_000.milliseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58133,"byte_end":58192,"line_start":309,"line_end":309,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58197,"byte_end":58204,"line_start":310,"line_end":310,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58624,"byte_end":58635,"line_start":322,"line_end":322,"column_start":12,"column_end":23},"name":"seconds_f64","qualname":"<Duration>::seconds_f64","value":"fn seconds_f64(f64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f64`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f64`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58305,"byte_end":58392,"line_start":315,"line_end":315,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58397,"byte_end":58400,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58405,"byte_end":58416,"line_start":317,"line_end":317,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58421,"byte_end":58472,"line_start":318,"line_end":318,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f64(0.5), 0.5.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58477,"byte_end":58535,"line_start":319,"line_end":319,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f64(-0.5), -0.5.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58540,"byte_end":58600,"line_start":320,"line_end":320,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":58605,"byte_end":58612,"line_start":321,"line_end":321,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59349,"byte_end":59360,"line_start":339,"line_end":339,"column_start":12,"column_end":23},"name":"seconds_f32","qualname":"<Duration>::seconds_f32","value":"fn seconds_f32(f32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Duration` from the specified number of seconds represented as `f32`.","sig":null,"attributes":[{"value":"/ Creates a new `Duration` from the specified number of seconds represented as `f32`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59028,"byte_end":59115,"line_start":332,"line_end":332,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59120,"byte_end":59123,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59128,"byte_end":59139,"line_start":334,"line_end":334,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59144,"byte_end":59195,"line_start":335,"line_end":335,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::seconds_f32(0.5), 0.5.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59200,"byte_end":59258,"line_start":336,"line_end":336,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Duration::seconds_f32(-0.5), (-0.5).seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59263,"byte_end":59325,"line_start":337,"line_end":337,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59330,"byte_end":59337,"line_start":338,"line_end":338,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60071,"byte_end":60083,"line_start":356,"line_end":356,"column_start":18,"column_end":30},"name":"milliseconds","qualname":"<Duration>::milliseconds","value":"const fn milliseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of milliseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of milliseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59753,"byte_end":59819,"line_start":349,"line_end":349,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59824,"byte_end":59827,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59832,"byte_end":59843,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59848,"byte_end":59899,"line_start":352,"line_end":352,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::milliseconds(1), 1_000.microseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59904,"byte_end":59968,"line_start":353,"line_end":353,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::milliseconds(-1), (-1_000).microseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":59973,"byte_end":60041,"line_start":354,"line_end":354,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60046,"byte_end":60053,"line_start":355,"line_end":355,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60568,"byte_end":60580,"line_start":370,"line_end":370,"column_start":18,"column_end":30},"name":"microseconds","qualname":"<Duration>::microseconds","value":"const fn microseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of microseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of microseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60252,"byte_end":60318,"line_start":363,"line_end":363,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60323,"byte_end":60326,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60331,"byte_end":60342,"line_start":365,"line_end":365,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60347,"byte_end":60398,"line_start":366,"line_end":366,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::microseconds(1), 1_000.nanoseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60403,"byte_end":60466,"line_start":367,"line_end":367,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::microseconds(-1), (-1_000).nanoseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60471,"byte_end":60538,"line_start":368,"line_end":368,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60543,"byte_end":60550,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":61076,"byte_end":61087,"line_start":384,"line_end":384,"column_start":18,"column_end":29},"name":"nanoseconds","qualname":"<Duration>::nanoseconds","value":"const fn nanoseconds(i64) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `Duration` with the given number of nanoseconds.","sig":null,"attributes":[{"value":"/ Create a new `Duration` with the given number of nanoseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60753,"byte_end":60818,"line_start":377,"line_end":377,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60823,"byte_end":60826,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60831,"byte_end":60842,"line_start":379,"line_end":379,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60847,"byte_end":60898,"line_start":380,"line_end":380,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::nanoseconds(1), 1.microseconds() / 1_000);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60903,"byte_end":60970,"line_start":381,"line_end":381,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(Duration::nanoseconds(-1), (-1).microseconds() / 1_000);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":60975,"byte_end":61046,"line_start":382,"line_end":382,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":61051,"byte_end":61058,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62275,"byte_end":62286,"line_start":417,"line_end":417,"column_start":18,"column_end":29},"name":"whole_weeks","qualname":"<Duration>::whole_weeks","value":"const fn whole_weeks(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole weeks in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole weeks in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":61930,"byte_end":61980,"line_start":408,"line_end":408,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":61985,"byte_end":61988,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":61993,"byte_end":62004,"line_start":410,"line_end":410,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62009,"byte_end":62048,"line_start":411,"line_end":411,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.weeks().whole_weeks(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62053,"byte_end":62096,"line_start":412,"line_end":412,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).weeks().whole_weeks(), -1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62101,"byte_end":62148,"line_start":413,"line_end":413,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(6.days().whole_weeks(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62153,"byte_end":62195,"line_start":414,"line_end":414,"column_start":5,"column_end":47}},{"value":"/ assert_eq!((-6).days().whole_weeks(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62200,"byte_end":62245,"line_start":415,"line_end":415,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62250,"byte_end":62257,"line_start":416,"line_end":416,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62694,"byte_end":62704,"line_start":430,"line_end":430,"column_start":18,"column_end":28},"name":"whole_days","qualname":"<Duration>::whole_days","value":"const fn whole_days(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole days in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole days in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62352,"byte_end":62401,"line_start":421,"line_end":421,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62406,"byte_end":62409,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62414,"byte_end":62425,"line_start":423,"line_end":423,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62430,"byte_end":62469,"line_start":424,"line_end":424,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.days().whole_days(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62474,"byte_end":62515,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/ assert_eq!((-1).days().whole_days(), -1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62520,"byte_end":62565,"line_start":426,"line_end":426,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(23.hours().whole_days(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62570,"byte_end":62613,"line_start":427,"line_end":427,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-23).hours().whole_days(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62618,"byte_end":62664,"line_start":428,"line_end":428,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62669,"byte_end":62676,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63122,"byte_end":63133,"line_start":443,"line_end":443,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<Duration>::whole_hours","value":"const fn whole_hours(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole hours in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole hours in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62769,"byte_end":62819,"line_start":434,"line_end":434,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62824,"byte_end":62827,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62832,"byte_end":62843,"line_start":436,"line_end":436,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62848,"byte_end":62887,"line_start":437,"line_end":437,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.hours().whole_hours(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62892,"byte_end":62935,"line_start":438,"line_end":438,"column_start":5,"column_end":48}},{"value":"/ assert_eq!((-1).hours().whole_hours(), -1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62940,"byte_end":62987,"line_start":439,"line_end":439,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(59.minutes().whole_hours(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":62992,"byte_end":63038,"line_start":440,"line_end":440,"column_start":5,"column_end":51}},{"value":"/ assert_eq!((-59).minutes().whole_hours(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63043,"byte_end":63092,"line_start":441,"line_end":441,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63097,"byte_end":63104,"line_start":442,"line_end":442,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63564,"byte_end":63577,"line_start":456,"line_end":456,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<Duration>::whole_minutes","value":"const fn whole_minutes(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole minutes in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole minutes in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63197,"byte_end":63249,"line_start":447,"line_end":447,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63254,"byte_end":63257,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63262,"byte_end":63273,"line_start":449,"line_end":449,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63278,"byte_end":63317,"line_start":450,"line_end":450,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.minutes().whole_minutes(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63322,"byte_end":63369,"line_start":451,"line_end":451,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).minutes().whole_minutes(), -1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63374,"byte_end":63425,"line_start":452,"line_end":452,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(59.seconds().whole_minutes(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63430,"byte_end":63478,"line_start":453,"line_end":453,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-59).seconds().whole_minutes(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63483,"byte_end":63534,"line_start":454,"line_end":454,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63539,"byte_end":63546,"line_start":455,"line_end":455,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64006,"byte_end":64019,"line_start":469,"line_end":469,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<Duration>::whole_seconds","value":"const fn whole_seconds(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole seconds in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63638,"byte_end":63690,"line_start":460,"line_end":460,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63695,"byte_end":63698,"line_start":461,"line_end":461,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63703,"byte_end":63714,"line_start":462,"line_end":462,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63719,"byte_end":63758,"line_start":463,"line_end":463,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_seconds(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63763,"byte_end":63810,"line_start":464,"line_end":464,"column_start":5,"column_end":52}},{"value":"/ assert_eq!((-1).seconds().whole_seconds(), -1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63815,"byte_end":63866,"line_start":465,"line_end":465,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(1.minutes().whole_seconds(), 60);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63871,"byte_end":63919,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/ assert_eq!((-1).minutes().whole_seconds(), -60);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63924,"byte_end":63976,"line_start":467,"line_end":467,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":63981,"byte_end":63988,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64334,"byte_end":64348,"line_start":480,"line_end":480,"column_start":12,"column_end":26},"name":"as_seconds_f64","qualname":"<Duration>::as_seconds_f64","value":"fn as_seconds_f64(Self) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64067,"byte_end":64124,"line_start":473,"line_end":473,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64129,"byte_end":64132,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64137,"byte_end":64148,"line_start":475,"line_end":475,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64153,"byte_end":64192,"line_start":476,"line_end":476,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f64(), 1.5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64197,"byte_end":64249,"line_start":477,"line_end":477,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f64(), -1.5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64254,"byte_end":64310,"line_start":478,"line_end":478,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64315,"byte_end":64322,"line_start":479,"line_end":479,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64713,"byte_end":64727,"line_start":491,"line_end":491,"column_start":12,"column_end":26},"name":"as_seconds_f32","qualname":"<Duration>::as_seconds_f32","value":"fn as_seconds_f32(Self) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of fractional seconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of fractional seconds in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64446,"byte_end":64503,"line_start":484,"line_end":484,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64508,"byte_end":64511,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64516,"byte_end":64527,"line_start":486,"line_end":486,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64532,"byte_end":64571,"line_start":487,"line_end":487,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.5.seconds().as_seconds_f32(), 1.5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64576,"byte_end":64628,"line_start":488,"line_end":488,"column_start":5,"column_end":57}},{"value":"/ assert_eq!((-1.5).seconds().as_seconds_f32(), -1.5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64633,"byte_end":64689,"line_start":489,"line_end":489,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64694,"byte_end":64701,"line_start":490,"line_end":490,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65234,"byte_end":65252,"line_start":504,"line_end":504,"column_start":18,"column_end":36},"name":"whole_milliseconds","qualname":"<Duration>::whole_milliseconds","value":"const fn whole_milliseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole milliseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole milliseconds in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64825,"byte_end":64882,"line_start":495,"line_end":495,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64887,"byte_end":64890,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64895,"byte_end":64906,"line_start":497,"line_end":497,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64911,"byte_end":64950,"line_start":498,"line_end":498,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.seconds().whole_milliseconds(), 1_000);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":64955,"byte_end":65011,"line_start":499,"line_end":499,"column_start":5,"column_end":61}},{"value":"/ assert_eq!((-1).seconds().whole_milliseconds(), -1_000);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65016,"byte_end":65076,"line_start":500,"line_end":500,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(1.milliseconds().whole_milliseconds(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65081,"byte_end":65138,"line_start":501,"line_end":501,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).milliseconds().whole_milliseconds(), -1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65143,"byte_end":65204,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65209,"byte_end":65216,"line_start":503,"line_end":503,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":228},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65775,"byte_end":65794,"line_start":518,"line_end":518,"column_start":18,"column_end":37},"name":"subsec_milliseconds","qualname":"<Duration>::subsec_milliseconds","value":"const fn subsec_milliseconds(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Get the number of milliseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of milliseconds past the number of whole seconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65356,"byte_end":65424,"line_start":508,"line_end":508,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65429,"byte_end":65432,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000..1_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65437,"byte_end":65477,"line_start":510,"line_end":510,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65482,"byte_end":65485,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65490,"byte_end":65501,"line_start":512,"line_end":512,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65506,"byte_end":65545,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.4.seconds().subsec_milliseconds(), 400);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65550,"byte_end":65607,"line_start":514,"line_end":514,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1.4).seconds().subsec_milliseconds(), -400);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65612,"byte_end":65673,"line_start":515,"line_end":515,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65678,"byte_end":65685,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":229},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66284,"byte_end":66302,"line_start":531,"line_end":531,"column_start":18,"column_end":36},"name":"whole_microseconds","qualname":"<Duration>::whole_microseconds","value":"const fn whole_microseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of whole microseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of whole microseconds in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65865,"byte_end":65922,"line_start":522,"line_end":522,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65927,"byte_end":65930,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65935,"byte_end":65946,"line_start":524,"line_end":524,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65951,"byte_end":65990,"line_start":525,"line_end":525,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.milliseconds().whole_microseconds(), 1_000);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":65995,"byte_end":66056,"line_start":526,"line_end":526,"column_start":5,"column_end":66}},{"value":"/ assert_eq!((-1).milliseconds().whole_microseconds(), -1_000);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66061,"byte_end":66126,"line_start":527,"line_end":527,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(1.microseconds().whole_microseconds(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66131,"byte_end":66188,"line_start":528,"line_end":528,"column_start":5,"column_end":62}},{"value":"/ assert_eq!((-1).microseconds().whole_microseconds(), -1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66193,"byte_end":66254,"line_start":529,"line_end":529,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66259,"byte_end":66266,"line_start":530,"line_end":530,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":230},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66767,"byte_end":66786,"line_start":544,"line_end":544,"column_start":18,"column_end":37},"name":"subsec_microseconds","qualname":"<Duration>::subsec_microseconds","value":"const fn subsec_microseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of microseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of microseconds past the number of whole seconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66406,"byte_end":66474,"line_start":535,"line_end":535,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66479,"byte_end":66482,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ Always in the range `-1_000_000..1_000_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66487,"byte_end":66535,"line_start":537,"line_end":537,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66540,"byte_end":66543,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66548,"byte_end":66559,"line_start":539,"line_end":539,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66564,"byte_end":66603,"line_start":540,"line_end":540,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.0004.seconds().subsec_microseconds(), 400);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66608,"byte_end":66668,"line_start":541,"line_end":541,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1.0004).seconds().subsec_microseconds(), -400);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66673,"byte_end":66737,"line_start":542,"line_end":542,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66742,"byte_end":66749,"line_start":543,"line_end":543,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67252,"byte_end":67269,"line_start":557,"line_end":557,"column_start":18,"column_end":35},"name":"whole_nanoseconds","qualname":"<Duration>::whole_nanoseconds","value":"const fn whole_nanoseconds(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds in the duration.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds in the duration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66846,"byte_end":66896,"line_start":548,"line_end":548,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66901,"byte_end":66904,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66909,"byte_end":66920,"line_start":550,"line_end":550,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66925,"byte_end":66964,"line_start":551,"line_end":551,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.microseconds().whole_nanoseconds(), 1_000);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":66969,"byte_end":67029,"line_start":552,"line_end":552,"column_start":5,"column_end":65}},{"value":"/ assert_eq!((-1).microseconds().whole_nanoseconds(), -1_000);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67034,"byte_end":67098,"line_start":553,"line_end":553,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(1.nanoseconds().whole_nanoseconds(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67103,"byte_end":67158,"line_start":554,"line_end":554,"column_start":5,"column_end":60}},{"value":"/ assert_eq!((-1).nanoseconds().whole_nanoseconds(), -1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67163,"byte_end":67222,"line_start":555,"line_end":555,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67227,"byte_end":67234,"line_start":556,"line_end":556,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67776,"byte_end":67794,"line_start":570,"line_end":570,"column_start":18,"column_end":36},"name":"subsec_nanoseconds","qualname":"<Duration>::subsec_nanoseconds","value":"const fn subsec_nanoseconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the number of nanoseconds past the number of whole seconds.","sig":null,"attributes":[{"value":"/ Get the number of nanoseconds past the number of whole seconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67369,"byte_end":67436,"line_start":561,"line_end":561,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67441,"byte_end":67444,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `-1_000_000_000..1_000_000_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67449,"byte_end":67532,"line_start":563,"line_end":563,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67537,"byte_end":67540,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67545,"byte_end":67556,"line_start":565,"line_end":565,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67561,"byte_end":67600,"line_start":566,"line_end":566,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(1.000_000_400.seconds().subsec_nanoseconds(), 400);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67605,"byte_end":67671,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/ assert_eq!((-1.000_000_400).seconds().subsec_nanoseconds(), -400);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67676,"byte_end":67746,"line_start":568,"line_end":568,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67751,"byte_end":67758,"line_start":569,"line_end":569,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":68311,"byte_end":68322,"line_start":584,"line_end":584,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<Duration>::checked_add","value":"const fn checked_add(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67905,"byte_end":67973,"line_start":576,"line_end":576,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67978,"byte_end":67981,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":67986,"byte_end":67997,"line_start":578,"line_end":578,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":68002,"byte_end":68053,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_add(5.seconds()), Some(10.seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":68058,"byte_end":68131,"line_start":580,"line_end":580,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(Duration::MAX.checked_add(1.nanoseconds()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":68136,"byte_end":68201,"line_start":581,"line_end":581,"column_start":5,"column_end":70}},{"value":"/ assert_eq!((-5).seconds().checked_add(5.seconds()), Some(0.seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":68206,"byte_end":68281,"line_start":582,"line_end":582,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":68286,"byte_end":68293,"line_start":583,"line_end":583,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":69361,"byte_end":69372,"line_start":607,"line_end":607,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<Duration>::checked_sub","value":"const fn checked_sub(Self, Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":68952,"byte_end":69020,"line_start":599,"line_end":599,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":69025,"byte_end":69028,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":69033,"byte_end":69044,"line_start":601,"line_end":601,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":69049,"byte_end":69100,"line_start":602,"line_end":602,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_sub(5.seconds()), Some(Duration::ZERO));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":69105,"byte_end":69180,"line_start":603,"line_end":603,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(Duration::MIN.checked_sub(1.nanoseconds()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":69185,"byte_end":69250,"line_start":604,"line_end":604,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(5.seconds().checked_sub(10.seconds()), Some((-5).seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":69255,"byte_end":69331,"line_start":605,"line_end":605,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":69336,"byte_end":69343,"line_start":606,"line_end":606,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70499,"byte_end":70510,"line_start":632,"line_end":632,"column_start":18,"column_end":29},"name":"checked_mul","qualname":"<Duration>::checked_mul","value":"const fn checked_mul(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, returning `None` if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70002,"byte_end":70070,"line_start":622,"line_end":622,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70075,"byte_end":70078,"line_start":623,"line_end":623,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70083,"byte_end":70094,"line_start":624,"line_end":624,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70099,"byte_end":70150,"line_start":625,"line_end":625,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().checked_mul(2), Some(10.seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70155,"byte_end":70218,"line_start":626,"line_end":626,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(5.seconds().checked_mul(-2), Some((-10).seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70223,"byte_end":70290,"line_start":627,"line_end":627,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(5.seconds().checked_mul(0), Some(0.seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70295,"byte_end":70357,"line_start":628,"line_end":628,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.checked_mul(2), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70362,"byte_end":70413,"line_start":629,"line_end":629,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(Duration::MIN.checked_mul(2), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70418,"byte_end":70469,"line_start":630,"line_end":630,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":70474,"byte_end":70481,"line_start":631,"line_end":631,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71388,"byte_end":71399,"line_start":652,"line_end":652,"column_start":18,"column_end":29},"name":"checked_div","qualname":"<Duration>::checked_div","value":"const fn checked_div(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","sig":null,"attributes":[{"value":"/ Computes `self / rhs`, returning `None` if `rhs == 0` or if the result would overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71006,"byte_end":71096,"line_start":644,"line_end":644,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71101,"byte_end":71104,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71109,"byte_end":71120,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71125,"byte_end":71164,"line_start":647,"line_end":647,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(10.seconds().checked_div(2), Some(5.seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71169,"byte_end":71232,"line_start":648,"line_end":648,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(10.seconds().checked_div(-2), Some((-5).seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71237,"byte_end":71304,"line_start":649,"line_end":649,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(1.seconds().checked_div(0), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71309,"byte_end":71358,"line_start":650,"line_end":650,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71363,"byte_end":71370,"line_start":651,"line_end":651,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":72429,"byte_end":72443,"line_start":675,"line_end":675,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<Duration>::saturating_add","value":"const fn saturating_add(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + rhs`, saturating if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71901,"byte_end":71963,"line_start":663,"line_end":663,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71968,"byte_end":71971,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71976,"byte_end":71987,"line_start":665,"line_end":665,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":71992,"byte_end":72043,"line_start":666,"line_end":666,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_add(5.seconds()), 10.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":72048,"byte_end":72118,"line_start":667,"line_end":667,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(Duration::MAX.saturating_add(1.nanoseconds()), Duration::MAX);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":72123,"byte_end":72200,"line_start":668,"line_end":668,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":72205,"byte_end":72220,"line_start":669,"line_end":669,"column_start":5,"column_end":20}},{"value":"/     Duration::MIN.saturating_add((-1).nanoseconds()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":72225,"byte_end":72282,"line_start":670,"line_end":670,"column_start":5,"column_end":62}},{"value":"/     Duration::MIN","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":72287,"byte_end":72308,"line_start":671,"line_end":671,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":72313,"byte_end":72319,"line_start":672,"line_end":672,"column_start":5,"column_end":11}},{"value":"/ assert_eq!((-5).seconds().saturating_add(5.seconds()), Duration::ZERO);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":72324,"byte_end":72399,"line_start":673,"line_end":673,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":72404,"byte_end":72411,"line_start":674,"line_end":674,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73911,"byte_end":73925,"line_start":714,"line_end":714,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<Duration>::saturating_sub","value":"const fn saturating_sub(Self, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - rhs`, saturating if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73383,"byte_end":73445,"line_start":702,"line_end":702,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73450,"byte_end":73453,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73458,"byte_end":73469,"line_start":704,"line_end":704,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73474,"byte_end":73525,"line_start":705,"line_end":705,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_sub(5.seconds()), Duration::ZERO);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73530,"byte_end":73602,"line_start":706,"line_end":706,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(Duration::MIN.saturating_sub(1.nanoseconds()), Duration::MIN);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73607,"byte_end":73684,"line_start":707,"line_end":707,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73689,"byte_end":73704,"line_start":708,"line_end":708,"column_start":5,"column_end":20}},{"value":"/     Duration::MAX.saturating_sub((-1).nanoseconds()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73709,"byte_end":73766,"line_start":709,"line_end":709,"column_start":5,"column_end":62}},{"value":"/     Duration::MAX","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73771,"byte_end":73792,"line_start":710,"line_end":710,"column_start":5,"column_end":26}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73797,"byte_end":73803,"line_start":711,"line_end":711,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(5.seconds().saturating_sub(10.seconds()), (-5).seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73808,"byte_end":73881,"line_start":712,"line_end":712,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":73886,"byte_end":73893,"line_start":713,"line_end":713,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":75512,"byte_end":75526,"line_start":753,"line_end":753,"column_start":18,"column_end":32},"name":"saturating_mul","qualname":"<Duration>::saturating_mul","value":"const fn saturating_mul(Self, i32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self * rhs`, saturating if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self * rhs`, saturating if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":74865,"byte_end":74927,"line_start":741,"line_end":741,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":74932,"byte_end":74935,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":74940,"byte_end":74951,"line_start":743,"line_end":743,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":74956,"byte_end":75007,"line_start":744,"line_end":744,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(5.seconds().saturating_mul(2), 10.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":75012,"byte_end":75072,"line_start":745,"line_end":745,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(5.seconds().saturating_mul(-2), (-10).seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":75077,"byte_end":75141,"line_start":746,"line_end":746,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(5.seconds().saturating_mul(0), Duration::ZERO);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":75146,"byte_end":75208,"line_start":747,"line_end":747,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(2), Duration::MAX);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":75213,"byte_end":75276,"line_start":748,"line_end":748,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(2), Duration::MIN);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":75281,"byte_end":75344,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(Duration::MAX.saturating_mul(-2), Duration::MIN);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":75349,"byte_end":75413,"line_start":750,"line_end":750,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(Duration::MIN.saturating_mul(-2), Duration::MAX);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":75418,"byte_end":75482,"line_start":751,"line_end":751,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":75487,"byte_end":75494,"line_start":752,"line_end":752,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":240},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":76592,"byte_end":76599,"line_start":780,"line_end":780,"column_start":12,"column_end":19},"name":"time_fn","qualname":"<Duration>::time_fn","value":"fn time_fn<T, impl FnOnce() -> T>(impl FnOnce() -> T) -> (Self, T) where\nimpl FnOnce() -> T: FnOnce() -> T","parent":null,"children":[],"decl_id":null,"docs":" Runs a closure, returning the duration of time it took to run. The return value of the\n closure is provided in the second part of the tuple.\n","sig":null,"attributes":[{"value":"/ Runs a closure, returning the duration of time it took to run. The return value of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":76401,"byte_end":76491,"line_start":777,"line_end":777,"column_start":5,"column_end":95}},{"value":"/ closure is provided in the second part of the tuple.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":76496,"byte_end":76552,"line_start":778,"line_end":778,"column_start":5,"column_end":61}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":76557,"byte_end":76580,"line_start":779,"line_end":779,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":77361,"byte_end":77364,"line_start":805,"line_end":805,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Duration as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":250},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":79677,"byte_end":79685,"line_start":874,"line_end":874,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Duration as std::convert::TryFrom>::try_from","value":"fn try_from(StdDuration) -> Result<Self, error::ConversionRange>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":254},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80056,"byte_end":80064,"line_start":888,"line_end":888,"column_start":8,"column_end":16},"name":"try_from","qualname":"<StdDuration as std::convert::TryFrom>::try_from","value":"fn try_from(Duration) -> Result<Self, error::ConversionRange>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80487,"byte_end":80490,"line_start":905,"line_end":905,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as std::ops::Add>::add","value":"fn add(Self, Self) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80688,"byte_end":80691,"line_start":914,"line_end":914,"column_start":8,"column_end":11},"name":"add","qualname":"<Duration as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80954,"byte_end":80957,"line_start":923,"line_end":923,"column_start":8,"column_end":11},"name":"add","qualname":"<StdDuration as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81123,"byte_end":81133,"line_start":931,"line_end":931,"column_start":8,"column_end":18},"name":"add_assign","qualname":"<StdDuration as std::ops::AddAssign>::add_assign","value":"fn add_assign(&mut Self, Duration)","parent":{"krate":2,"index":3249},"children":[],"decl_id":{"krate":2,"index":3251},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81415,"byte_end":81418,"line_start":942,"line_end":942,"column_start":8,"column_end":11},"name":"neg","qualname":"<Duration as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3245},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81570,"byte_end":81573,"line_start":950,"line_end":950,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81776,"byte_end":81779,"line_start":959,"line_end":959,"column_start":8,"column_end":11},"name":"sub","qualname":"<Duration as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":82024,"byte_end":82027,"line_start":968,"line_end":968,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdDuration as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":82310,"byte_end":82320,"line_start":978,"line_end":978,"column_start":8,"column_end":18},"name":"sub_assign","qualname":"<StdDuration as std::ops::SubAssign>::sub_assign","value":"fn sub_assign(&mut Self, Duration)","parent":{"krate":2,"index":3253},"children":[],"decl_id":{"krate":2,"index":3255},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":83599,"byte_end":83602,"line_start":1023,"line_end":1023,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as std::ops::Mul>::mul","value":"fn mul(Self, f32) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":83766,"byte_end":83769,"line_start":1031,"line_end":1031,"column_start":8,"column_end":11},"name":"mul","qualname":"<f32 as std::ops::Mul>::mul","value":"fn mul(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":83898,"byte_end":83901,"line_start":1039,"line_end":1039,"column_start":8,"column_end":11},"name":"mul","qualname":"<Duration as std::ops::Mul>::mul","value":"fn mul(Self, f64) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84065,"byte_end":84068,"line_start":1047,"line_end":1047,"column_start":8,"column_end":11},"name":"mul","qualname":"<f64 as std::ops::Mul>::mul","value":"fn mul(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3228},"children":[],"decl_id":{"krate":2,"index":3231},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":297},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84264,"byte_end":84267,"line_start":1057,"line_end":1057,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, f32) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84427,"byte_end":84430,"line_start":1065,"line_end":1065,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, f64) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84651,"byte_end":84654,"line_start":1075,"line_end":1075,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, Self) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84820,"byte_end":84823,"line_start":1083,"line_end":1083,"column_start":8,"column_end":11},"name":"div","qualname":"<Duration as std::ops::Div>::div","value":"fn div(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84993,"byte_end":84996,"line_start":1091,"line_end":1091,"column_start":8,"column_end":11},"name":"div","qualname":"<StdDuration as std::ops::Div>::div","value":"fn div(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3233},"children":[],"decl_id":{"krate":2,"index":3236},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85145,"byte_end":85147,"line_start":1097,"line_end":1097,"column_start":8,"column_end":10},"name":"eq","qualname":"<Duration as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &StdDuration) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85285,"byte_end":85287,"line_start":1103,"line_end":1103,"column_start":8,"column_end":10},"name":"eq","qualname":"<StdDuration as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Duration) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85401,"byte_end":85412,"line_start":1109,"line_end":1109,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Duration as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &StdDuration) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":318},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85790,"byte_end":85801,"line_start":1123,"line_end":1123,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<StdDuration as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Duration) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85940,"byte_end":85943,"line_start":1129,"line_end":1129,"column_start":8,"column_end":11},"name":"sum","qualname":"<Duration as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = Self>","parent":{"krate":2,"index":7950},"children":[],"decl_id":{"krate":2,"index":7952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":325},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":86097,"byte_end":86100,"line_start":1135,"line_end":1135,"column_start":8,"column_end":11},"name":"sum","qualname":"<Duration as std::iter::Sum>::sum","value":"fn sum<I>(I) -> Self where I: Iterator<Item = &'a Self>","parent":{"krate":2,"index":7950},"children":[],"decl_id":{"krate":2,"index":7952},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":327},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":346},{"krate":0,"index":361},{"krate":0,"index":373},{"krate":0,"index":397},{"krate":0,"index":416},{"krate":0,"index":428},{"krate":0,"index":461},{"krate":0,"index":476},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":512},{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":518},{"krate":0,"index":521},{"krate":0,"index":524},{"krate":0,"index":3232},{"krate":0,"index":3259},{"krate":0,"index":527},{"krate":0,"index":529}],"decl_id":null,"docs":" Various error types returned by methods in the time crate.\n","sig":null,"attributes":[{"value":"/ Various error types returned by methods in the time crate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":86212,"byte_end":86274,"line_start":1,"line_end":1,"column_start":1,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":3082},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":90835,"byte_end":90849,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"ComponentRange","qualname":"::error::component_range::ComponentRange","value":"ComponentRange {  }","parent":null,"children":[{"krate":0,"index":3083},{"krate":0,"index":3084},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087}],"decl_id":null,"docs":" An error type indicating that a component provided to a method was out of range, causing a\n failure.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a component provided to a method was out of range, causing a","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":90566,"byte_end":90660,"line_start":7,"line_end":7,"column_start":1,"column_end":95}},{"value":"/ failure.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":90661,"byte_end":90673,"line_start":8,"line_end":8,"column_start":1,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91371,"byte_end":91375,"line_start":27,"line_end":27,"column_start":18,"column_end":22},"name":"name","qualname":"<ComponentRange>::name","value":"const fn name(Self) -> &'static str","parent":null,"children":[],"decl_id":null,"docs":" Obtain the name of the component whose value was out of range.\n","sig":null,"attributes":[{"value":"/ Obtain the name of the component whose value was out of range.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91287,"byte_end":91353,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91619,"byte_end":91633,"line_start":33,"line_end":33,"column_start":18,"column_end":32},"name":"is_conditional","qualname":"<ComponentRange>::is_conditional","value":"const fn is_conditional(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the value's permitted range is conditional, i.e. whether an input with this\n value could have succeeded if the values of other components were different.\n","sig":null,"attributes":[{"value":"/ Whether the value's permitted range is conditional, i.e. whether an input with this","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91429,"byte_end":91516,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"/ value could have succeeded if the values of other components were different.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91521,"byte_end":91601,"line_start":32,"line_end":32,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91736,"byte_end":91739,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ComponentRange as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":92120,"byte_end":92124,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ComponentRange) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":344},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":92307,"byte_end":92315,"line_start":63,"line_end":63,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ComponentRange as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3103},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93434,"byte_end":93449,"line_start":10,"line_end":10,"column_start":12,"column_end":27},"name":"ConversionRange","qualname":"::error::conversion_range::ConversionRange","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a conversion failed because the target type could not store the\n initial value.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a conversion failed because the target type could not store the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93261,"byte_end":93358,"line_start":7,"line_end":7,"column_start":1,"column_end":98}},{"value":"/ initial value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93359,"byte_end":93377,"line_start":8,"line_end":8,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":354},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93499,"byte_end":93502,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ConversionRange as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93760,"byte_end":93764,"line_start":22,"line_end":22,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ConversionRange) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":360},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93940,"byte_end":93948,"line_start":30,"line_end":30,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ConversionRange as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3116},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94388,"byte_end":94404,"line_start":8,"line_end":8,"column_start":12,"column_end":28},"name":"DifferentVariant","qualname":"::error::different_variant::DifferentVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the\n original value was of a different variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`TryFrom`](core::convert::TryFrom) call failed because the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94189,"byte_end":94284,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/ original value was of a different variant.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94285,"byte_end":94331,"line_start":6,"line_end":6,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94455,"byte_end":94458,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"fmt","qualname":"<DifferentVariant as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":369},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94714,"byte_end":94718,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(DifferentVariant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94878,"byte_end":94886,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"try_from","qualname":"<DifferentVariant as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3130},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95396,"byte_end":95423,"line_start":15,"line_end":15,"column_start":5,"column_end":32},"name":"InsufficientTypeInformation","qualname":"::error::format::Format::InsufficientTypeInformation","value":"Format::InsufficientTypeInformation","parent":{"krate":0,"index":3129},"children":[],"decl_id":null,"docs":" The type being formatted does not contain sufficient information to format a component.\n","sig":null,"attributes":[{"value":"/ The type being formatted does not contain sufficient information to format a component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95278,"byte_end":95369,"line_start":13,"line_end":13,"column_start":5,"column_end":96}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95374,"byte_end":95391,"line_start":14,"line_end":14,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3132},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95598,"byte_end":95614,"line_start":19,"line_end":19,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::format::Format::InvalidComponent","value":"Format::InvalidComponent(&'static str)","parent":{"krate":0,"index":3129},"children":[],"decl_id":null,"docs":" The component named has a value that cannot be formatted into the requested format.","sig":null,"attributes":[{"value":"/ The component named has a value that cannot be formatted into the requested format.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95429,"byte_end":95516,"line_start":16,"line_end":16,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95521,"byte_end":95524,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ This variant is only returned when using well-known formats.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95529,"byte_end":95593,"line_start":18,"line_end":18,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":3134},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95615,"byte_end":95627,"line_start":19,"line_end":19,"column_start":22,"column_end":34},"name":"0","qualname":"::error::format::Format::InvalidComponent::0","value":"&'static str","parent":{"krate":0,"index":3132},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3135},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95695,"byte_end":95700,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"StdIo","qualname":"::error::format::Format::StdIo","value":"Format::StdIo(io::Error)","parent":{"krate":0,"index":3129},"children":[],"decl_id":null,"docs":" A value of `std::io::Error` was returned internally.\n","sig":null,"attributes":[{"value":"/ A value of `std::io::Error` was returned internally.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95634,"byte_end":95690,"line_start":20,"line_end":20,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3137},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95701,"byte_end":95710,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"0","qualname":"::error::format::Format::StdIo::0","value":"std::io::Error","parent":{"krate":0,"index":3135},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3129},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95265,"byte_end":95271,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Format","qualname":"::error::format::Format","value":"enum Format {\n    InsufficientTypeInformation,\n    InvalidComponent(&'static str),\n    StdIo(io::Error),\n}","parent":null,"children":[{"krate":0,"index":3130},{"krate":0,"index":3132},{"krate":0,"index":3135}],"decl_id":null,"docs":" An error occurred when formatting.\n","sig":null,"attributes":[{"value":"/ An error occurred when formatting.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95143,"byte_end":95181,"line_start":8,"line_end":8,"column_start":1,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95182,"byte_end":95199,"line_start":9,"line_end":9,"column_start":1,"column_end":18}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95200,"byte_end":95238,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":384},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95754,"byte_end":95757,"line_start":25,"line_end":25,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Format as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":386},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96320,"byte_end":96324,"line_start":41,"line_end":41,"column_start":8,"column_end":12},"name":"from","qualname":"<Format as std::convert::From>::from","value":"fn from(io::Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96472,"byte_end":96480,"line_start":49,"line_end":49,"column_start":8,"column_end":16},"name":"try_from","qualname":"<io::Error as std::convert::TryFrom>::try_from","value":"fn try_from(Format) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96721,"byte_end":96727,"line_start":59,"line_end":59,"column_start":8,"column_end":14},"name":"source","qualname":"<Format as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96998,"byte_end":97002,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(Format) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":97161,"byte_end":97169,"line_start":76,"line_end":76,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Format as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3141},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":97996,"byte_end":98018,"line_start":14,"line_end":14,"column_start":5,"column_end":27},"name":"UnclosedOpeningBracket","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket","value":"InvalidFormatDescription::UnclosedOpeningBracket { index }","parent":{"krate":0,"index":3140},"children":[],"decl_id":null,"docs":" There was a bracket pair that was opened but not closed.\n","sig":null,"attributes":[{"value":"/ There was a bracket pair that was opened but not closed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":97909,"byte_end":97969,"line_start":12,"line_end":12,"column_start":5,"column_end":65}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":97974,"byte_end":97991,"line_start":13,"line_end":13,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3142},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98086,"byte_end":98091,"line_start":16,"line_end":16,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::UnclosedOpeningBracket::index","value":"usize","parent":{"krate":0,"index":3141},"children":[],"decl_id":null,"docs":" The zero-based index of the opening bracket.\n","sig":null,"attributes":[{"value":"/ The zero-based index of the opening bracket.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98029,"byte_end":98077,"line_start":15,"line_end":15,"column_start":9,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":3143},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98172,"byte_end":98192,"line_start":20,"line_end":20,"column_start":5,"column_end":25},"name":"InvalidComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName","value":"InvalidFormatDescription::InvalidComponentName { name, index }","parent":{"krate":0,"index":3140},"children":[],"decl_id":null,"docs":" A component name is not valid.\n","sig":null,"attributes":[{"value":"/ A component name is not valid.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98111,"byte_end":98145,"line_start":18,"line_end":18,"column_start":5,"column_end":39}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98150,"byte_end":98167,"line_start":19,"line_end":19,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3144},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98255,"byte_end":98259,"line_start":22,"line_end":22,"column_start":9,"column_end":13},"name":"name","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName::name","value":"std::string::String","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":" The name of the invalid component name.\n","sig":null,"attributes":[{"value":"/ The name of the invalid component name.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98203,"byte_end":98246,"line_start":21,"line_end":21,"column_start":9,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3145},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98340,"byte_end":98345,"line_start":24,"line_end":24,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidComponentName::index","value":"usize","parent":{"krate":0,"index":3143},"children":[],"decl_id":null,"docs":" The zero-based index the component name starts at.\n","sig":null,"attributes":[{"value":"/ The zero-based index the component name starts at.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98277,"byte_end":98331,"line_start":23,"line_end":23,"column_start":9,"column_end":63}}]},{"kind":"StructVariant","id":{"krate":0,"index":3146},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98420,"byte_end":98435,"line_start":28,"line_end":28,"column_start":5,"column_end":20},"name":"InvalidModifier","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier","value":"InvalidFormatDescription::InvalidModifier { value, index }","parent":{"krate":0,"index":3140},"children":[],"decl_id":null,"docs":" A modifier is not valid.\n","sig":null,"attributes":[{"value":"/ A modifier is not valid.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98365,"byte_end":98393,"line_start":26,"line_end":26,"column_start":5,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98398,"byte_end":98415,"line_start":27,"line_end":27,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3147},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98493,"byte_end":98498,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"value","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier::value","value":"std::string::String","parent":{"krate":0,"index":3146},"children":[],"decl_id":null,"docs":" The value of the invalid modifier.\n","sig":null,"attributes":[{"value":"/ The value of the invalid modifier.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98446,"byte_end":98484,"line_start":29,"line_end":29,"column_start":9,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":3148},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98573,"byte_end":98578,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::InvalidModifier::index","value":"usize","parent":{"krate":0,"index":3146},"children":[],"decl_id":null,"docs":" The zero-based index the modifier starts at.\n","sig":null,"attributes":[{"value":"/ The zero-based index the modifier starts at.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98516,"byte_end":98564,"line_start":31,"line_end":31,"column_start":9,"column_end":57}}]},{"kind":"StructVariant","id":{"krate":0,"index":3149},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98657,"byte_end":98677,"line_start":36,"line_end":36,"column_start":5,"column_end":25},"name":"MissingComponentName","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName","value":"InvalidFormatDescription::MissingComponentName { index }","parent":{"krate":0,"index":3140},"children":[],"decl_id":null,"docs":" A component name is missing.\n","sig":null,"attributes":[{"value":"/ A component name is missing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98598,"byte_end":98630,"line_start":34,"line_end":34,"column_start":5,"column_end":37}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98635,"byte_end":98652,"line_start":35,"line_end":35,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":3150},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98760,"byte_end":98765,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"name":"index","qualname":"::error::invalid_format_description::InvalidFormatDescription::MissingComponentName::index","value":"usize","parent":{"krate":0,"index":3149},"children":[],"decl_id":null,"docs":" The zero-based index where the component name should start.\n","sig":null,"attributes":[{"value":"/ The zero-based index where the component name should start.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98688,"byte_end":98751,"line_start":37,"line_end":37,"column_start":9,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":3140},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":97878,"byte_end":97902,"line_start":11,"line_end":11,"column_start":10,"column_end":34},"name":"InvalidFormatDescription","qualname":"::error::invalid_format_description::InvalidFormatDescription","value":"enum InvalidFormatDescription {\n    UnclosedOpeningBracket {\n            index: usize,\n        },\n    InvalidComponentName {\n            name: String,\n            index: usize,\n        },\n    InvalidModifier {\n            value: String,\n            index: usize,\n        },\n    MissingComponentName {\n            index: usize,\n        },\n}","parent":null,"children":[{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3146},{"krate":0,"index":3149}],"decl_id":null,"docs":" The format description provided was not valid.\n","sig":null,"attributes":[{"value":"/ The format description provided was not valid.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":97761,"byte_end":97811,"line_start":8,"line_end":8,"column_start":1,"column_end":51}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":97812,"byte_end":97829,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":408},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98846,"byte_end":98850,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(InvalidFormatDescription) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":99063,"byte_end":99071,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"try_from","qualname":"<InvalidFormatDescription as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":99332,"byte_end":99335,"line_start":60,"line_end":60,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidFormatDescription as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3162},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100344,"byte_end":100358,"line_start":8,"line_end":8,"column_start":12,"column_end":26},"name":"InvalidVariant","qualname":"::error::invalid_variant::InvalidVariant","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value\n was not a valid variant.\n","sig":null,"attributes":[{"value":"/ An error type indicating that a [`FromStr`](core::str::FromStr) call failed because the value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100161,"byte_end":100258,"line_start":5,"line_end":5,"column_start":1,"column_end":98}},{"value":"/ was not a valid variant.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100259,"byte_end":100287,"line_start":6,"line_end":6,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":421},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100407,"byte_end":100410,"line_start":11,"line_end":11,"column_start":8,"column_end":11},"name":"fmt","qualname":"<InvalidVariant as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":424},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100645,"byte_end":100649,"line_start":20,"line_end":20,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(InvalidVariant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100829,"byte_end":100837,"line_start":28,"line_end":28,"column_start":8,"column_end":16},"name":"try_from","qualname":"<InvalidVariant as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3176},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101393,"byte_end":101406,"line_start":13,"line_end":13,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::parse::Parse::TryFromParsed","value":"Parse::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":3175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101341,"byte_end":101388,"line_start":12,"line_end":12,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3178},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101407,"byte_end":101420,"line_start":13,"line_end":13,"column_start":19,"column_end":32},"name":"0","qualname":"::error::parse::Parse::TryFromParsed::0","value":"error::try_from_parsed::TryFromParsed","parent":{"krate":0,"index":3176},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3179},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101479,"byte_end":101499,"line_start":15,"line_end":15,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::parse::Parse::ParseFromDescription","value":"Parse::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":3175},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101427,"byte_end":101474,"line_start":14,"line_end":14,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3181},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101500,"byte_end":101520,"line_start":15,"line_end":15,"column_start":26,"column_end":46},"name":"0","qualname":"::error::parse::Parse::ParseFromDescription::0","value":"error::parse_from_description::ParseFromDescription","parent":{"krate":0,"index":3179},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3182},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101623,"byte_end":101651,"line_start":18,"line_end":18,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::parse::Parse::UnexpectedTrailingCharacters","value":"Parse::UnexpectedTrailingCharacters","parent":{"krate":0,"index":3175},"children":[],"decl_id":null,"docs":" The input should have ended, but there were characters remaining.\n","sig":null,"attributes":[{"value":"/ The input should have ended, but there were characters remaining.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101527,"byte_end":101596,"line_start":16,"line_end":16,"column_start":5,"column_end":74}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101601,"byte_end":101618,"line_start":17,"line_end":17,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":3175},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101329,"byte_end":101334,"line_start":11,"line_end":11,"column_start":10,"column_end":15},"name":"Parse","qualname":"::error::parse::Parse","value":"enum Parse {\n    TryFromParsed(TryFromParsed),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n}","parent":null,"children":[{"krate":0,"index":3176},{"krate":0,"index":3179},{"krate":0,"index":3182}],"decl_id":null,"docs":" An error that occurred at some stage of parsing.\n","sig":null,"attributes":[{"value":"/ An error that occurred at some stage of parsing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101169,"byte_end":101221,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"allow(variant_size_differences)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101222,"byte_end":101256,"line_start":8,"line_end":8,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101257,"byte_end":101274,"line_start":9,"line_end":9,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":443},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101693,"byte_end":101696,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Parse as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102063,"byte_end":102069,"line_start":33,"line_end":33,"column_start":8,"column_end":14},"name":"source","qualname":"<Parse as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102374,"byte_end":102378,"line_start":43,"line_end":43,"column_start":8,"column_end":12},"name":"from","qualname":"<Parse as std::convert::From>::from","value":"fn from(TryFromParsed) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":450},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102541,"byte_end":102549,"line_start":51,"line_end":51,"column_start":8,"column_end":16},"name":"try_from","qualname":"<TryFromParsed as std::convert::TryFrom>::try_from","value":"fn try_from(Parse) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102780,"byte_end":102784,"line_start":60,"line_end":60,"column_start":8,"column_end":12},"name":"from","qualname":"<Parse as std::convert::From>::from","value":"fn from(ParseFromDescription) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":455},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102968,"byte_end":102976,"line_start":68,"line_end":68,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ParseFromDescription as std::convert::TryFrom>::try_from","value":"fn try_from(Parse) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":103206,"byte_end":103210,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(Parse) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":103596,"byte_end":103604,"line_start":89,"line_end":89,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Parse as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3197},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104395,"byte_end":104409,"line_start":13,"line_end":13,"column_start":5,"column_end":19},"name":"InvalidLiteral","qualname":"::error::parse_from_description::ParseFromDescription::InvalidLiteral","value":"ParseFromDescription::InvalidLiteral","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":" A string literal was not what was expected.\n","sig":null,"attributes":[{"value":"/ A string literal was not what was expected.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104321,"byte_end":104368,"line_start":11,"line_end":11,"column_start":5,"column_end":52}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104373,"byte_end":104390,"line_start":12,"line_end":12,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3199},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104458,"byte_end":104474,"line_start":15,"line_end":15,"column_start":5,"column_end":21},"name":"InvalidComponent","qualname":"::error::parse_from_description::ParseFromDescription::InvalidComponent","value":"ParseFromDescription::InvalidComponent(&'static str)","parent":{"krate":0,"index":3196},"children":[],"decl_id":null,"docs":" A dynamic component was not valid.\n","sig":null,"attributes":[{"value":"/ A dynamic component was not valid.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104415,"byte_end":104453,"line_start":14,"line_end":14,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":3201},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104475,"byte_end":104487,"line_start":15,"line_end":15,"column_start":22,"column_end":34},"name":"0","qualname":"::error::parse_from_description::ParseFromDescription::InvalidComponent::0","value":"&'static str","parent":{"krate":0,"index":3199},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3196},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104294,"byte_end":104314,"line_start":10,"line_end":10,"column_start":10,"column_end":30},"name":"ParseFromDescription","qualname":"::error::parse_from_description::ParseFromDescription","value":"enum ParseFromDescription { InvalidLiteral, InvalidComponent(&'static str), }","parent":null,"children":[{"krate":0,"index":3197},{"krate":0,"index":3199}],"decl_id":null,"docs":" An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.\n","sig":null,"attributes":[{"value":"/ An error that occurred while parsing the input into a [`Parsed`](crate::parsing::Parsed) struct.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104121,"byte_end":104221,"line_start":7,"line_end":7,"column_start":1,"column_end":101}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104222,"byte_end":104239,"line_start":8,"line_end":8,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104545,"byte_end":104548,"line_start":19,"line_end":19,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ParseFromDescription as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":472},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104993,"byte_end":104997,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(ParseFromDescription) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":105198,"byte_end":105206,"line_start":41,"line_end":41,"column_start":8,"column_end":16},"name":"try_from","qualname":"<ParseFromDescription as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3215},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105826,"byte_end":105849,"line_start":13,"line_end":13,"column_start":5,"column_end":28},"name":"InsufficientInformation","qualname":"::error::try_from_parsed::TryFromParsed::InsufficientInformation","value":"TryFromParsed::InsufficientInformation","parent":{"krate":0,"index":3214},"children":[],"decl_id":null,"docs":" The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the\n type.\n","sig":null,"attributes":[{"value":"/ The [`Parsed`](crate::parsing::Parsed) did not include enough information to construct the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105713,"byte_end":105807,"line_start":11,"line_end":11,"column_start":5,"column_end":99}},{"value":"/ type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105812,"byte_end":105821,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3217},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105919,"byte_end":105933,"line_start":15,"line_end":15,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::try_from_parsed::TryFromParsed::ComponentRange","value":"TryFromParsed::ComponentRange(error::ComponentRange)","parent":{"krate":0,"index":3214},"children":[],"decl_id":null,"docs":" Some component contained an invalid value for the type.\n","sig":null,"attributes":[{"value":"/ Some component contained an invalid value for the type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105855,"byte_end":105914,"line_start":14,"line_end":14,"column_start":5,"column_end":64}}]},{"kind":"Field","id":{"krate":0,"index":3219},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105934,"byte_end":105955,"line_start":15,"line_end":15,"column_start":20,"column_end":41},"name":"0","qualname":"::error::try_from_parsed::TryFromParsed::ComponentRange::0","value":"error::component_range::ComponentRange","parent":{"krate":0,"index":3217},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3214},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105693,"byte_end":105706,"line_start":10,"line_end":10,"column_start":10,"column_end":23},"name":"TryFromParsed","qualname":"::error::try_from_parsed::TryFromParsed","value":"enum TryFromParsed {\n    InsufficientInformation,\n    ComponentRange(error::ComponentRange),\n}","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3217}],"decl_id":null,"docs":" An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.\n","sig":null,"attributes":[{"value":"/ An error that occurred when converting a [`Parsed`](crate::parsing::Parsed) to another type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105524,"byte_end":105620,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105621,"byte_end":105638,"line_start":8,"line_end":8,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":484},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106006,"byte_end":106009,"line_start":19,"line_end":19,"column_start":8,"column_end":11},"name":"fmt","qualname":"<TryFromParsed as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":486},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106384,"byte_end":106388,"line_start":30,"line_end":30,"column_start":8,"column_end":12},"name":"from","qualname":"<TryFromParsed as std::convert::From>::from","value":"fn from(error::ComponentRange) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106572,"byte_end":106580,"line_start":38,"line_end":38,"column_start":8,"column_end":16},"name":"try_from","qualname":"<error::ComponentRange as std::convert::TryFrom>::try_from","value":"fn try_from(TryFromParsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":491},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106851,"byte_end":106857,"line_start":48,"line_end":48,"column_start":8,"column_end":14},"name":"source","qualname":"<TryFromParsed as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":493},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":107107,"byte_end":107111,"line_start":57,"line_end":57,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::Error as std::convert::From>::from","value":"fn from(TryFromParsed) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":107291,"byte_end":107299,"line_start":65,"line_end":65,"column_start":8,"column_end":16},"name":"try_from","qualname":"<TryFromParsed as std::convert::TryFrom>::try_from","value":"fn try_from(crate::Error) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3233},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87847,"byte_end":87862,"line_start":48,"line_end":48,"column_start":5,"column_end":20},"name":"ConversionRange","qualname":"::error::Error::ConversionRange","value":"Error::ConversionRange(ConversionRange)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3235},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87863,"byte_end":87878,"line_start":48,"line_end":48,"column_start":21,"column_end":36},"name":"0","qualname":"::error::Error::ConversionRange::0","value":"error::conversion_range::ConversionRange","parent":{"krate":0,"index":3233},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3236},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87885,"byte_end":87899,"line_start":49,"line_end":49,"column_start":5,"column_end":19},"name":"ComponentRange","qualname":"::error::Error::ComponentRange","value":"Error::ComponentRange(ComponentRange)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3238},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87900,"byte_end":87914,"line_start":49,"line_end":49,"column_start":20,"column_end":34},"name":"0","qualname":"::error::Error::ComponentRange::0","value":"error::component_range::ComponentRange","parent":{"krate":0,"index":3236},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3239},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88039,"byte_end":88045,"line_start":53,"line_end":53,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::Error::Format","value":"Error::Format(Format)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88004,"byte_end":88034,"line_start":52,"line_end":52,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3241},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88046,"byte_end":88052,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"0","qualname":"::error::Error::Format::0","value":"error::format::Format","parent":{"krate":0,"index":3239},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3242},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88091,"byte_end":88111,"line_start":55,"line_end":55,"column_start":5,"column_end":25},"name":"ParseFromDescription","qualname":"::error::Error::ParseFromDescription","value":"Error::ParseFromDescription(ParseFromDescription)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88059,"byte_end":88086,"line_start":54,"line_end":54,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3244},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88112,"byte_end":88132,"line_start":55,"line_end":55,"column_start":26,"column_end":46},"name":"0","qualname":"::error::Error::ParseFromDescription::0","value":"error::parse_from_description::ParseFromDescription","parent":{"krate":0,"index":3242},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3245},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88193,"byte_end":88221,"line_start":58,"line_end":58,"column_start":5,"column_end":33},"name":"UnexpectedTrailingCharacters","qualname":"::error::Error::UnexpectedTrailingCharacters","value":"Error::UnexpectedTrailingCharacters","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88139,"byte_end":88166,"line_start":56,"line_end":56,"column_start":5,"column_end":32}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88171,"byte_end":88188,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3247},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88259,"byte_end":88272,"line_start":60,"line_end":60,"column_start":5,"column_end":18},"name":"TryFromParsed","qualname":"::error::Error::TryFromParsed","value":"Error::TryFromParsed(TryFromParsed)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88227,"byte_end":88254,"line_start":59,"line_end":59,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3249},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88273,"byte_end":88286,"line_start":60,"line_end":60,"column_start":19,"column_end":32},"name":"0","qualname":"::error::Error::TryFromParsed::0","value":"error::try_from_parsed::TryFromParsed","parent":{"krate":0,"index":3247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3250},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88378,"byte_end":88402,"line_start":62,"line_end":62,"column_start":5,"column_end":29},"name":"InvalidFormatDescription","qualname":"::error::Error::InvalidFormatDescription","value":"Error::InvalidFormatDescription(InvalidFormatDescription)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(all(any(feature = \"formatting\", feature = \"parsing\"), feature =\n\"alloc\"))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88293,"byte_end":88373,"line_start":61,"line_end":61,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3252},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88403,"byte_end":88427,"line_start":62,"line_end":62,"column_start":30,"column_end":54},"name":"0","qualname":"::error::Error::InvalidFormatDescription::0","value":"error::invalid_format_description::InvalidFormatDescription","parent":{"krate":0,"index":3250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3253},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88434,"byte_end":88450,"line_start":63,"line_end":63,"column_start":5,"column_end":21},"name":"DifferentVariant","qualname":"::error::Error::DifferentVariant","value":"Error::DifferentVariant(DifferentVariant)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3255},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88451,"byte_end":88467,"line_start":63,"line_end":63,"column_start":22,"column_end":38},"name":"0","qualname":"::error::Error::DifferentVariant::0","value":"error::different_variant::DifferentVariant","parent":{"krate":0,"index":3253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3256},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88474,"byte_end":88488,"line_start":64,"line_end":64,"column_start":5,"column_end":19},"name":"InvalidVariant","qualname":"::error::Error::InvalidVariant","value":"Error::InvalidVariant(InvalidVariant)","parent":{"krate":0,"index":3232},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3258},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88489,"byte_end":88503,"line_start":64,"line_end":64,"column_start":20,"column_end":34},"name":"0","qualname":"::error::Error::InvalidVariant::0","value":"error::invalid_variant::InvalidVariant","parent":{"krate":0,"index":3256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3232},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87835,"byte_end":87840,"line_start":47,"line_end":47,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error {\n    ConversionRange(ConversionRange),\n    ComponentRange(ComponentRange),\n    Format(Format),\n    ParseFromDescription(ParseFromDescription),\n    UnexpectedTrailingCharacters,\n    TryFromParsed(TryFromParsed),\n    InvalidFormatDescription(InvalidFormatDescription),\n    DifferentVariant(DifferentVariant),\n    InvalidVariant(InvalidVariant),\n}","parent":null,"children":[{"krate":0,"index":3233},{"krate":0,"index":3236},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3245},{"krate":0,"index":3247},{"krate":0,"index":3250},{"krate":0,"index":3253},{"krate":0,"index":3256}],"decl_id":null,"docs":" A unified error type for anything returned by a method in the time crate.","sig":null,"attributes":[{"value":"/ A unified error type for anything returned by a method in the time crate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87392,"byte_end":87469,"line_start":39,"line_end":39,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87470,"byte_end":87473,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This can be used when you either don't know or don't care about the exact error returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87474,"byte_end":87567,"line_start":41,"line_end":41,"column_start":1,"column_end":94}},{"value":"/ `Result<_, time::Error>` (or its alias `time::Result<_>`) will work in these situations.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87568,"byte_end":87660,"line_start":42,"line_end":42,"column_start":1,"column_end":93}},{"value":"allow(missing_copy_implementations, variant_size_differences)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87661,"byte_end":87725,"line_start":43,"line_end":43,"column_start":1,"column_end":65}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87726,"byte_end":87773,"line_start":44,"line_end":44,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":87791,"byte_end":87808,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":528},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88546,"byte_end":88549,"line_start":68,"line_end":68,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":530},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":89562,"byte_end":89568,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"source","qualname":"<Error as std::error::Error>::source","value":"fn source(&Self) -> Option<&dyn std::error::Error + 'static>","parent":{"krate":1,"index":2555},"children":[],"decl_id":{"krate":1,"index":2556},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":531},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ext","qualname":"::ext","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","parent":null,"children":[{"krate":0,"index":532},{"krate":0,"index":535},{"krate":0,"index":538},{"krate":0,"index":543},{"krate":0,"index":552},{"krate":0,"index":561},{"krate":0,"index":570},{"krate":0,"index":579},{"krate":0,"index":588}],"decl_id":null,"docs":" Extension traits.\n","sig":null,"attributes":[{"value":"/ Extension traits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107493,"byte_end":107514,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":539},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107727,"byte_end":107733,"line_start":10,"line_end":10,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::ext::sealed::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" A trait that cannot be implemented by downstream users.\n","sig":null,"attributes":[{"value":"/ A trait that cannot be implemented by downstream users.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107653,"byte_end":107712,"line_start":9,"line_end":9,"column_start":5,"column_end":64}}]},{"kind":"Trait","id":{"krate":0,"index":543},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109532,"byte_end":109549,"line_start":60,"line_end":60,"column_start":11,"column_end":28},"name":"NumericalDuration","qualname":"::ext::NumericalDuration","value":"NumericalDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"decl_id":null,"docs":" Create [`Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`Duration`]s from numeric literals.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107850,"byte_end":107897,"line_start":17,"line_end":17,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107898,"byte_end":107901,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107902,"byte_end":107916,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107917,"byte_end":107920,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`Duration`]s.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107921,"byte_end":107961,"line_start":21,"line_end":21,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107962,"byte_end":107965,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107966,"byte_end":107977,"line_start":23,"line_end":23,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":107978,"byte_end":108029,"line_start":24,"line_end":24,"column_start":1,"column_end":52}},{"value":"/ assert_eq!(5.nanoseconds(), Duration::nanoseconds(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108030,"byte_end":108088,"line_start":25,"line_end":25,"column_start":1,"column_end":59}},{"value":"/ assert_eq!(5.microseconds(), Duration::microseconds(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108089,"byte_end":108149,"line_start":26,"line_end":26,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.milliseconds(), Duration::milliseconds(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108150,"byte_end":108210,"line_start":27,"line_end":27,"column_start":1,"column_end":61}},{"value":"/ assert_eq!(5.seconds(), Duration::seconds(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108211,"byte_end":108261,"line_start":28,"line_end":28,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.minutes(), Duration::minutes(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108262,"byte_end":108312,"line_start":29,"line_end":29,"column_start":1,"column_end":51}},{"value":"/ assert_eq!(5.hours(), Duration::hours(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108313,"byte_end":108359,"line_start":30,"line_end":30,"column_start":1,"column_end":47}},{"value":"/ assert_eq!(5.days(), Duration::days(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108360,"byte_end":108404,"line_start":31,"line_end":31,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(5.weeks(), Duration::weeks(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108405,"byte_end":108451,"line_start":32,"line_end":32,"column_start":1,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108452,"byte_end":108459,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108460,"byte_end":108463,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Signed integers work as well!","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108464,"byte_end":108497,"line_start":35,"line_end":35,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108498,"byte_end":108501,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108502,"byte_end":108513,"line_start":37,"line_end":37,"column_start":1,"column_end":12}},{"value":"/ # use time::{Duration, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108514,"byte_end":108565,"line_start":38,"line_end":38,"column_start":1,"column_end":52}},{"value":"/ assert_eq!((-5).nanoseconds(), Duration::nanoseconds(-5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108566,"byte_end":108628,"line_start":39,"line_end":39,"column_start":1,"column_end":63}},{"value":"/ assert_eq!((-5).microseconds(), Duration::microseconds(-5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108629,"byte_end":108693,"line_start":40,"line_end":40,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).milliseconds(), Duration::milliseconds(-5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108694,"byte_end":108758,"line_start":41,"line_end":41,"column_start":1,"column_end":65}},{"value":"/ assert_eq!((-5).seconds(), Duration::seconds(-5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108759,"byte_end":108813,"line_start":42,"line_end":42,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).minutes(), Duration::minutes(-5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108814,"byte_end":108868,"line_start":43,"line_end":43,"column_start":1,"column_end":55}},{"value":"/ assert_eq!((-5).hours(), Duration::hours(-5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108869,"byte_end":108919,"line_start":44,"line_end":44,"column_start":1,"column_end":51}},{"value":"/ assert_eq!((-5).days(), Duration::days(-5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108920,"byte_end":108968,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ assert_eq!((-5).weeks(), Duration::weeks(-5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":108969,"byte_end":109019,"line_start":46,"line_end":46,"column_start":1,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109020,"byte_end":109027,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109028,"byte_end":109031,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`Duration`], they can be added, subtracted, etc.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109032,"byte_end":109105,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109106,"byte_end":109109,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109110,"byte_end":109121,"line_start":51,"line_end":51,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109122,"byte_end":109161,"line_start":52,"line_end":52,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(2.seconds() + 500.milliseconds(), 2_500.milliseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109162,"byte_end":109233,"line_start":53,"line_end":53,"column_start":1,"column_end":72}},{"value":"/ assert_eq!(2.seconds() - 500.milliseconds(), 1_500.milliseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109234,"byte_end":109305,"line_start":54,"line_end":54,"column_start":1,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109306,"byte_end":109313,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109314,"byte_end":109317,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109318,"byte_end":109409,"line_start":57,"line_end":57,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109410,"byte_end":109507,"line_start":58,"line_end":58,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109508,"byte_end":109521,"line_start":59,"line_end":59,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109637,"byte_end":109648,"line_start":62,"line_end":62,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"::ext::NumericalDuration::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of nanoseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109572,"byte_end":109629,"line_start":61,"line_end":61,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":545},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109738,"byte_end":109750,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"microseconds","qualname":"::ext::NumericalDuration::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of microseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109672,"byte_end":109730,"line_start":63,"line_end":63,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":546},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109840,"byte_end":109852,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"::ext::NumericalDuration::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of milliseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109774,"byte_end":109832,"line_start":65,"line_end":65,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":547},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109937,"byte_end":109944,"line_start":68,"line_end":68,"column_start":8,"column_end":15},"name":"seconds","qualname":"::ext::NumericalDuration::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of seconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109876,"byte_end":109929,"line_start":67,"line_end":67,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":548},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110029,"byte_end":110036,"line_start":70,"line_end":70,"column_start":8,"column_end":15},"name":"minutes","qualname":"::ext::NumericalDuration::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of minutes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109968,"byte_end":110021,"line_start":69,"line_end":69,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110119,"byte_end":110124,"line_start":72,"line_end":72,"column_start":8,"column_end":13},"name":"hours","qualname":"::ext::NumericalDuration::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of hours.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110060,"byte_end":110111,"line_start":71,"line_end":71,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110206,"byte_end":110210,"line_start":74,"line_end":74,"column_start":8,"column_end":12},"name":"days","qualname":"::ext::NumericalDuration::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of days.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110148,"byte_end":110198,"line_start":73,"line_end":73,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110293,"byte_end":110298,"line_start":76,"line_end":76,"column_start":8,"column_end":13},"name":"weeks","qualname":"::ext::NumericalDuration::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":null,"docs":" Create a [`Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`Duration`] from the number of weeks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110234,"byte_end":110285,"line_start":75,"line_end":75,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110361,"byte_end":110372,"line_start":80,"line_end":80,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"<i64 as ext::NumericalDuration>::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":554},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110443,"byte_end":110455,"line_start":84,"line_end":84,"column_start":8,"column_end":20},"name":"microseconds","qualname":"<i64 as ext::NumericalDuration>::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":545},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":555},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110527,"byte_end":110539,"line_start":88,"line_end":88,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"<i64 as ext::NumericalDuration>::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":556},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110611,"byte_end":110618,"line_start":92,"line_end":92,"column_start":8,"column_end":15},"name":"seconds","qualname":"<i64 as ext::NumericalDuration>::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":547},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110685,"byte_end":110692,"line_start":96,"line_end":96,"column_start":8,"column_end":15},"name":"minutes","qualname":"<i64 as ext::NumericalDuration>::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110759,"byte_end":110764,"line_start":100,"line_end":100,"column_start":8,"column_end":13},"name":"hours","qualname":"<i64 as ext::NumericalDuration>::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":559},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110829,"byte_end":110833,"line_start":104,"line_end":104,"column_start":8,"column_end":12},"name":"days","qualname":"<i64 as ext::NumericalDuration>::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":550},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":560},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":110897,"byte_end":110902,"line_start":108,"line_end":108,"column_start":8,"column_end":13},"name":"weeks","qualname":"<i64 as ext::NumericalDuration>::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":551},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":562},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111002,"byte_end":111013,"line_start":114,"line_end":114,"column_start":8,"column_end":19},"name":"nanoseconds","qualname":"<f64 as ext::NumericalDuration>::nanoseconds","value":"fn nanoseconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":544},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":563},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111089,"byte_end":111101,"line_start":118,"line_end":118,"column_start":8,"column_end":20},"name":"microseconds","qualname":"<f64 as ext::NumericalDuration>::microseconds","value":"fn microseconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":545},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":564},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111188,"byte_end":111200,"line_start":122,"line_end":122,"column_start":8,"column_end":20},"name":"milliseconds","qualname":"<f64 as ext::NumericalDuration>::milliseconds","value":"fn milliseconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":546},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111291,"byte_end":111298,"line_start":126,"line_end":126,"column_start":8,"column_end":15},"name":"seconds","qualname":"<f64 as ext::NumericalDuration>::seconds","value":"fn seconds(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":547},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111393,"byte_end":111400,"line_start":130,"line_end":130,"column_start":8,"column_end":15},"name":"minutes","qualname":"<f64 as ext::NumericalDuration>::minutes","value":"fn minutes(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":548},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111496,"byte_end":111501,"line_start":134,"line_end":134,"column_start":8,"column_end":13},"name":"hours","qualname":"<f64 as ext::NumericalDuration>::hours","value":"fn hours(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":549},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111600,"byte_end":111604,"line_start":138,"line_end":138,"column_start":8,"column_end":12},"name":"days","qualname":"<f64 as ext::NumericalDuration>::days","value":"fn days(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":550},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":569},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111704,"byte_end":111709,"line_start":142,"line_end":142,"column_start":8,"column_end":13},"name":"weeks","qualname":"<f64 as ext::NumericalDuration>::weeks","value":"fn weeks(Self) -> Duration","parent":{"krate":0,"index":543},"children":[],"decl_id":{"krate":0,"index":551},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":570},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113187,"byte_end":113207,"line_start":185,"line_end":185,"column_start":11,"column_end":31},"name":"NumericalStdDuration","qualname":"::ext::NumericalStdDuration","value":"NumericalStdDuration: sealed::Sealed","parent":null,"children":[{"krate":0,"index":571},{"krate":0,"index":572},{"krate":0,"index":573},{"krate":0,"index":574},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":577},{"krate":0,"index":578}],"decl_id":null,"docs":" Create [`std::time::Duration`]s from numeric literals.","sig":null,"attributes":[{"value":"/ Create [`std::time::Duration`]s from numeric literals.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111868,"byte_end":111926,"line_start":149,"line_end":149,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111927,"byte_end":111930,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111931,"byte_end":111945,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111946,"byte_end":111949,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ Basic construction of [`std::time::Duration`]s.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":111950,"byte_end":112001,"line_start":153,"line_end":153,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112002,"byte_end":112005,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112006,"byte_end":112017,"line_start":155,"line_end":155,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112018,"byte_end":112060,"line_start":156,"line_end":156,"column_start":1,"column_end":43}},{"value":"/ # use core::time::Duration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112061,"byte_end":112092,"line_start":157,"line_end":157,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(5.std_nanoseconds(), Duration::from_nanos(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112093,"byte_end":112154,"line_start":158,"line_end":158,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_microseconds(), Duration::from_micros(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112155,"byte_end":112218,"line_start":159,"line_end":159,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_milliseconds(), Duration::from_millis(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112219,"byte_end":112282,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"/ assert_eq!(5.std_seconds(), Duration::from_secs(5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112283,"byte_end":112339,"line_start":161,"line_end":161,"column_start":1,"column_end":57}},{"value":"/ assert_eq!(5.std_minutes(), Duration::from_secs(5 * 60));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112340,"byte_end":112401,"line_start":162,"line_end":162,"column_start":1,"column_end":62}},{"value":"/ assert_eq!(5.std_hours(), Duration::from_secs(5 * 3_600));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112402,"byte_end":112464,"line_start":163,"line_end":163,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_days(), Duration::from_secs(5 * 86_400));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112465,"byte_end":112527,"line_start":164,"line_end":164,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(5.std_weeks(), Duration::from_secs(5 * 604_800));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112528,"byte_end":112592,"line_start":165,"line_end":165,"column_start":1,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112593,"byte_end":112600,"line_start":166,"line_end":166,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112601,"byte_end":112604,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ Just like any other [`std::time::Duration`], they can be added, subtracted, etc.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112605,"byte_end":112689,"line_start":168,"line_end":168,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112690,"byte_end":112693,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112694,"byte_end":112705,"line_start":170,"line_end":170,"column_start":1,"column_end":12}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112706,"byte_end":112748,"line_start":171,"line_end":171,"column_start":1,"column_end":43}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112749,"byte_end":112764,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() + 500.std_milliseconds(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112765,"byte_end":112814,"line_start":173,"line_end":173,"column_start":1,"column_end":50}},{"value":"/     2_500.std_milliseconds()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112815,"byte_end":112847,"line_start":174,"line_end":174,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112848,"byte_end":112854,"line_start":175,"line_end":175,"column_start":1,"column_end":7}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112855,"byte_end":112870,"line_start":176,"line_end":176,"column_start":1,"column_end":16}},{"value":"/     2.std_seconds() - 500.std_milliseconds(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112871,"byte_end":112920,"line_start":177,"line_end":177,"column_start":1,"column_end":50}},{"value":"/     1_500.std_milliseconds()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112921,"byte_end":112953,"line_start":178,"line_end":178,"column_start":1,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112954,"byte_end":112960,"line_start":179,"line_end":179,"column_start":1,"column_end":7}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112961,"byte_end":112968,"line_start":180,"line_end":180,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112969,"byte_end":112972,"line_start":181,"line_end":181,"column_start":1,"column_end":4}},{"value":"/ When called on floating point values, any remainder of the floating point value will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":112973,"byte_end":113064,"line_start":182,"line_end":182,"column_start":1,"column_end":92}},{"value":"/ truncated. Keep in mind that floating point numbers are inherently imprecise and have limited","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113065,"byte_end":113162,"line_start":183,"line_end":183,"column_start":1,"column_end":98}},{"value":"/ capacity.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113163,"byte_end":113176,"line_start":184,"line_end":184,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":571},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113306,"byte_end":113321,"line_start":187,"line_end":187,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"::ext::NumericalStdDuration::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of nanoseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of nanoseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113230,"byte_end":113298,"line_start":186,"line_end":186,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113425,"byte_end":113441,"line_start":189,"line_end":189,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"::ext::NumericalStdDuration::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of microseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of microseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113348,"byte_end":113417,"line_start":188,"line_end":188,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":573},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113545,"byte_end":113561,"line_start":191,"line_end":191,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"::ext::NumericalStdDuration::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of milliseconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of milliseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113468,"byte_end":113537,"line_start":190,"line_end":190,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113660,"byte_end":113671,"line_start":193,"line_end":193,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"::ext::NumericalStdDuration::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of seconds.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of seconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113588,"byte_end":113652,"line_start":192,"line_end":192,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":575},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113770,"byte_end":113781,"line_start":195,"line_end":195,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"::ext::NumericalStdDuration::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of minutes.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of minutes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113698,"byte_end":113762,"line_start":194,"line_end":194,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":576},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113878,"byte_end":113887,"line_start":197,"line_end":197,"column_start":8,"column_end":17},"name":"std_hours","qualname":"::ext::NumericalStdDuration::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of hours.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of hours.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113808,"byte_end":113870,"line_start":196,"line_end":196,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113983,"byte_end":113991,"line_start":199,"line_end":199,"column_start":8,"column_end":16},"name":"std_days","qualname":"::ext::NumericalStdDuration::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of days.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of days.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113914,"byte_end":113975,"line_start":198,"line_end":198,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":578},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114088,"byte_end":114097,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"::ext::NumericalStdDuration::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":null,"docs":" Create a [`std::time::Duration`] from the number of weeks.\n","sig":null,"attributes":[{"value":"/ Create a [`std::time::Duration`] from the number of weeks.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114018,"byte_end":114080,"line_start":200,"line_end":200,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":580},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114166,"byte_end":114181,"line_start":205,"line_end":205,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":571},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114257,"byte_end":114273,"line_start":209,"line_end":209,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":572},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":582},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114350,"byte_end":114366,"line_start":213,"line_end":213,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"<u64 as ext::NumericalStdDuration>::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":573},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114443,"byte_end":114454,"line_start":217,"line_end":217,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"<u64 as ext::NumericalStdDuration>::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":584},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114529,"byte_end":114540,"line_start":221,"line_end":221,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"<u64 as ext::NumericalStdDuration>::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":575},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114620,"byte_end":114629,"line_start":225,"line_end":225,"column_start":8,"column_end":17},"name":"std_hours","qualname":"<u64 as ext::NumericalStdDuration>::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":576},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":586},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114712,"byte_end":114720,"line_start":229,"line_end":229,"column_start":8,"column_end":16},"name":"std_days","qualname":"<u64 as ext::NumericalStdDuration>::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114804,"byte_end":114813,"line_start":233,"line_end":233,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"<u64 as ext::NumericalStdDuration>::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":578},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":114936,"byte_end":114951,"line_start":239,"line_end":239,"column_start":8,"column_end":23},"name":"std_nanoseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_nanoseconds","value":"fn std_nanoseconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":571},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":590},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":115061,"byte_end":115077,"line_start":244,"line_end":244,"column_start":8,"column_end":24},"name":"std_microseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_microseconds","value":"fn std_microseconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":572},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":115198,"byte_end":115214,"line_start":249,"line_end":249,"column_start":8,"column_end":24},"name":"std_milliseconds","qualname":"<f64 as ext::NumericalStdDuration>::std_milliseconds","value":"fn std_milliseconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":573},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":592},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":115339,"byte_end":115350,"line_start":254,"line_end":254,"column_start":8,"column_end":19},"name":"std_seconds","qualname":"<f64 as ext::NumericalStdDuration>::std_seconds","value":"fn std_seconds(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":574},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":115479,"byte_end":115490,"line_start":259,"line_end":259,"column_start":8,"column_end":19},"name":"std_minutes","qualname":"<f64 as ext::NumericalStdDuration>::std_minutes","value":"fn std_minutes(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":575},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":594},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":115620,"byte_end":115629,"line_start":264,"line_end":264,"column_start":8,"column_end":17},"name":"std_hours","qualname":"<f64 as ext::NumericalStdDuration>::std_hours","value":"fn std_hours(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":576},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":595},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":115762,"byte_end":115770,"line_start":269,"line_end":269,"column_start":8,"column_end":16},"name":"std_days","qualname":"<f64 as ext::NumericalStdDuration>::std_days","value":"fn std_days(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":577},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":115904,"byte_end":115913,"line_start":274,"line_end":274,"column_start":8,"column_end":17},"name":"std_weeks","qualname":"<f64 as ext::NumericalStdDuration>::std_weeks","value":"fn std_weeks(Self) -> StdDuration","parent":{"krate":0,"index":570},"children":[],"decl_id":{"krate":0,"index":578},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":597},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"format_description","qualname":"::format_description","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":598},{"krate":0,"index":633},{"krate":0,"index":637},{"krate":0,"index":640},{"krate":0,"index":693},{"krate":0,"index":886},{"krate":0,"index":889},{"krate":0,"index":892},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":899},{"krate":0,"index":902}],"decl_id":null,"docs":" Description of how types should be formatted and parsed.","sig":null,"attributes":[{"value":"cfg(any(feature = \"formatting\", feature = \"parsing\"))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10214,"byte_end":10270,"line_start":308,"line_end":308,"column_start":1,"column_end":57}},{"value":"/ Description of how types should be formatted and parsed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116077,"byte_end":116137,"line_start":1,"line_end":1,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116138,"byte_end":116141,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The formatted value will be output to the provided writer. Format descriptions can be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116142,"byte_end":116231,"line_start":3,"line_end":3,"column_start":1,"column_end":90}},{"value":"/ [well-known](crate::format_description::well_known) or obtained by using the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116232,"byte_end":116312,"line_start":4,"line_end":4,"column_start":1,"column_end":81}},{"value":"/ [`format_description!`](crate::macros::format_description) macro, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116313,"byte_end":116386,"line_start":5,"line_end":5,"column_start":1,"column_end":74}},{"value":"/ [`format_description::parse`](crate::format_description::parse()) function.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116387,"byte_end":116466,"line_start":6,"line_end":6,"column_start":1,"column_end":80}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3263},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117678,"byte_end":117685,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::Literal","value":"BorrowedFormatItem::Literal(&'a [u8])","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" Bytes that are formatted as-is.","sig":null,"attributes":[{"value":"/ Bytes that are formatted as-is.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117485,"byte_end":117520,"line_start":16,"line_end":16,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117525,"byte_end":117528,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you call the `format` method that returns a `String`, these bytes will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117533,"byte_end":117623,"line_start":18,"line_end":18,"column_start":5,"column_end":95}},{"value":"/ passed through `String::from_utf8_lossy`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117628,"byte_end":117673,"line_start":19,"line_end":19,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3265},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117686,"byte_end":117694,"line_start":20,"line_end":20,"column_start":13,"column_end":21},"name":"0","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::Literal::0","value":"&'a [u8]","parent":{"krate":0,"index":3263},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3266},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117764,"byte_end":117773,"line_start":22,"line_end":22,"column_start":5,"column_end":14},"name":"Component","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::Component","value":"BorrowedFormatItem::Component(Component)","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" A minimal representation of a single non-literal item.\n","sig":null,"attributes":[{"value":"/ A minimal representation of a single non-literal item.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117701,"byte_end":117759,"line_start":21,"line_end":21,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3268},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117774,"byte_end":117783,"line_start":22,"line_end":22,"column_start":15,"column_end":24},"name":"0","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::Component::0","value":"format_description::component::Component","parent":{"krate":0,"index":3266},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3269},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117899,"byte_end":117907,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"Compound","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::Compound","value":"BorrowedFormatItem::Compound(&'a [Self])","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" A series of literals or components that collectively form a partial or complete\n description.\n","sig":null,"attributes":[{"value":"/ A series of literals or components that collectively form a partial or complete","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117790,"byte_end":117873,"line_start":23,"line_end":23,"column_start":5,"column_end":88}},{"value":"/ description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117878,"byte_end":117894,"line_start":24,"line_end":24,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3271},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117908,"byte_end":117918,"line_start":25,"line_end":25,"column_start":14,"column_end":24},"name":"0","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::Compound::0","value":"&'a [format_description::borrowed_format_item::BorrowedFormatItem<'a>]","parent":{"krate":0,"index":3269},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3272},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118170,"byte_end":118178,"line_start":30,"line_end":30,"column_start":5,"column_end":13},"name":"Optional","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::Optional","value":"BorrowedFormatItem::Optional(&'a Self)","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" A `FormatItem` that may or may not be present when parsing. If parsing fails, there\n will be no effect on the resulting `struct`.","sig":null,"attributes":[{"value":"/ A `FormatItem` that may or may not be present when parsing. If parsing fails, there","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117925,"byte_end":118012,"line_start":26,"line_end":26,"column_start":5,"column_end":92}},{"value":"/ will be no effect on the resulting `struct`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118017,"byte_end":118065,"line_start":27,"line_end":27,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118070,"byte_end":118073,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ This variant has no effect on formatting, as the value is guaranteed to be present.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118078,"byte_end":118165,"line_start":29,"line_end":29,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":3274},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118179,"byte_end":118187,"line_start":30,"line_end":30,"column_start":14,"column_end":22},"name":"0","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::Optional::0","value":"&'a format_description::borrowed_format_item::BorrowedFormatItem<'a>","parent":{"krate":0,"index":3272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3275},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118413,"byte_end":118418,"line_start":34,"line_end":34,"column_start":5,"column_end":10},"name":"First","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::First","value":"BorrowedFormatItem::First(&'a [Self])","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" A series of `FormatItem`s where, when parsing, the first successful parse is used. When\n formatting, the first element of the slice is used.  An empty slice is a no-op when\n formatting or parsing.\n","sig":null,"attributes":[{"value":"/ A series of `FormatItem`s where, when parsing, the first successful parse is used. When","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118194,"byte_end":118285,"line_start":31,"line_end":31,"column_start":5,"column_end":96}},{"value":"/ formatting, the first element of the slice is used.  An empty slice is a no-op when","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118290,"byte_end":118377,"line_start":32,"line_end":32,"column_start":5,"column_end":92}},{"value":"/ formatting or parsing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118382,"byte_end":118408,"line_start":33,"line_end":33,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3277},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118419,"byte_end":118429,"line_start":34,"line_end":34,"column_start":11,"column_end":21},"name":"0","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem::First::0","value":"&'a [format_description::borrowed_format_item::BorrowedFormatItem<'a>]","parent":{"krate":0,"index":3275},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3261},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117456,"byte_end":117474,"line_start":15,"line_end":15,"column_start":10,"column_end":28},"name":"BorrowedFormatItem","qualname":"::format_description::borrowed_format_item::BorrowedFormatItem","value":"enum BorrowedFormatItem<'a> {\n    Literal(&'a [u8]),\n    Component(Component),\n    Compound(&'a [Self]),\n    Optional(&'a Self),\n    First(&'a [Self]),\n}","parent":null,"children":[{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3272},{"krate":0,"index":3275}],"decl_id":null,"docs":" A complete description of how to format and parse a type.\n","sig":null,"attributes":[{"value":"/ A complete description of how to format and parse a type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117284,"byte_end":117345,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":117346,"byte_end":117363,"line_start":12,"line_end":12,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118513,"byte_end":118516,"line_start":39,"line_end":39,"column_start":8,"column_end":11},"name":"fmt","qualname":"<BorrowedFormatItem as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119033,"byte_end":119037,"line_start":51,"line_end":51,"column_start":8,"column_end":12},"name":"from","qualname":"<BorrowedFormatItem as std::convert::From>::from","value":"fn from(Component) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119217,"byte_end":119225,"line_start":59,"line_end":59,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Component as std::convert::TryFrom>::try_from","value":"fn try_from(BorrowedFormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":620},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119527,"byte_end":119531,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"from","qualname":"<BorrowedFormatItem as std::convert::From>::from","value":"fn from(&'a [BorrowedFormatItem]) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119741,"byte_end":119749,"line_start":76,"line_end":76,"column_start":8,"column_end":16},"name":"try_from","qualname":"<&'_ [BorrowedFormatItem] as std::convert::TryFrom>::try_from","value":"fn try_from(BorrowedFormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":120024,"byte_end":120026,"line_start":85,"line_end":85,"column_start":8,"column_end":10},"name":"eq","qualname":"<BorrowedFormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Component) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":120203,"byte_end":120205,"line_start":91,"line_end":91,"column_start":8,"column_end":10},"name":"eq","qualname":"<Component as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &BorrowedFormatItem) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":630},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":120342,"byte_end":120344,"line_start":97,"line_end":97,"column_start":8,"column_end":10},"name":"eq","qualname":"<BorrowedFormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&[Self]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":632},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":120532,"byte_end":120534,"line_start":103,"line_end":103,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'_ [BorrowedFormatItem] as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &BorrowedFormatItem) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3293},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120850,"byte_end":120853,"line_start":10,"line_end":10,"column_start":5,"column_end":8},"name":"Day","qualname":"::format_description::component::Component::Day","value":"Component::Day(modifier::Day)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120824,"byte_end":120845,"line_start":9,"line_end":9,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3295},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120854,"byte_end":120867,"line_start":10,"line_end":10,"column_start":9,"column_end":22},"name":"0","qualname":"::format_description::component::Component::Day::0","value":"format_description::modifier::Day","parent":{"krate":0,"index":3293},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3296},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120901,"byte_end":120906,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"Month","qualname":"::format_description::component::Component::Month","value":"Component::Month(modifier::Month)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120874,"byte_end":120896,"line_start":11,"line_end":11,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":3298},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120907,"byte_end":120922,"line_start":12,"line_end":12,"column_start":11,"column_end":26},"name":"0","qualname":"::format_description::component::Component::Month::0","value":"format_description::modifier::Month","parent":{"krate":0,"index":3296},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3299},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120962,"byte_end":120969,"line_start":14,"line_end":14,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::component::Component::Ordinal","value":"Component::Ordinal(modifier::Ordinal)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120929,"byte_end":120957,"line_start":13,"line_end":13,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3301},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120970,"byte_end":120987,"line_start":14,"line_end":14,"column_start":13,"column_end":30},"name":"0","qualname":"::format_description::component::Component::Ordinal::0","value":"format_description::modifier::Ordinal","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3302},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121019,"byte_end":121026,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"name":"Weekday","qualname":"::format_description::component::Component::Weekday","value":"Component::Weekday(modifier::Weekday)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120994,"byte_end":121014,"line_start":15,"line_end":15,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3304},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121027,"byte_end":121044,"line_start":16,"line_end":16,"column_start":13,"column_end":30},"name":"0","qualname":"::format_description::component::Component::Weekday::0","value":"format_description::modifier::Weekday","parent":{"krate":0,"index":3302},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3305},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121081,"byte_end":121091,"line_start":18,"line_end":18,"column_start":5,"column_end":15},"name":"WeekNumber","qualname":"::format_description::component::Component::WeekNumber","value":"Component::WeekNumber(modifier::WeekNumber)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121051,"byte_end":121076,"line_start":17,"line_end":17,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":3307},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121092,"byte_end":121112,"line_start":18,"line_end":18,"column_start":16,"column_end":36},"name":"0","qualname":"::format_description::component::Component::WeekNumber::0","value":"format_description::modifier::WeekNumber","parent":{"krate":0,"index":3305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3308},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121145,"byte_end":121149,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Year","qualname":"::format_description::component::Component::Year","value":"Component::Year(modifier::Year)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121119,"byte_end":121140,"line_start":19,"line_end":19,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":3310},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121150,"byte_end":121164,"line_start":20,"line_end":20,"column_start":10,"column_end":24},"name":"0","qualname":"::format_description::component::Component::Year::0","value":"format_description::modifier::Year","parent":{"krate":0,"index":3308},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3311},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121196,"byte_end":121200,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::component::Component::Hour","value":"Component::Hour(modifier::Hour)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121171,"byte_end":121191,"line_start":21,"line_end":21,"column_start":5,"column_end":25}}]},{"kind":"Field","id":{"krate":0,"index":3313},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121201,"byte_end":121215,"line_start":22,"line_end":22,"column_start":10,"column_end":24},"name":"0","qualname":"::format_description::component::Component::Hour::0","value":"format_description::modifier::Hour","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3314},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121254,"byte_end":121260,"line_start":24,"line_end":24,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::component::Component::Minute","value":"Component::Minute(modifier::Minute)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121222,"byte_end":121249,"line_start":23,"line_end":23,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3316},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121261,"byte_end":121277,"line_start":24,"line_end":24,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Minute::0","value":"format_description::modifier::Minute","parent":{"krate":0,"index":3314},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3317},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121316,"byte_end":121322,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Period","qualname":"::format_description::component::Component::Period","value":"Component::Period(modifier::Period)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121284,"byte_end":121311,"line_start":25,"line_end":25,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3319},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121323,"byte_end":121339,"line_start":26,"line_end":26,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Period::0","value":"format_description::modifier::Period","parent":{"krate":0,"index":3317},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3320},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121380,"byte_end":121386,"line_start":28,"line_end":28,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::component::Component::Second","value":"Component::Second(modifier::Second)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121346,"byte_end":121375,"line_start":27,"line_end":27,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":3322},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121387,"byte_end":121403,"line_start":28,"line_end":28,"column_start":12,"column_end":28},"name":"0","qualname":"::format_description::component::Component::Second::0","value":"format_description::modifier::Second","parent":{"krate":0,"index":3320},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3323},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121447,"byte_end":121456,"line_start":30,"line_end":30,"column_start":5,"column_end":14},"name":"Subsecond","qualname":"::format_description::component::Component::Subsecond","value":"Component::Subsecond(modifier::Subsecond)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121410,"byte_end":121442,"line_start":29,"line_end":29,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3325},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121457,"byte_end":121476,"line_start":30,"line_end":30,"column_start":15,"column_end":34},"name":"0","qualname":"::format_description::component::Component::Subsecond::0","value":"format_description::modifier::Subsecond","parent":{"krate":0,"index":3323},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3326},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121515,"byte_end":121525,"line_start":32,"line_end":32,"column_start":5,"column_end":15},"name":"OffsetHour","qualname":"::format_description::component::Component::OffsetHour","value":"Component::OffsetHour(modifier::OffsetHour)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121483,"byte_end":121510,"line_start":31,"line_end":31,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":3328},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121526,"byte_end":121546,"line_start":32,"line_end":32,"column_start":16,"column_end":36},"name":"0","qualname":"::format_description::component::Component::OffsetHour::0","value":"format_description::modifier::OffsetHour","parent":{"krate":0,"index":3326},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3329},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121603,"byte_end":121615,"line_start":34,"line_end":34,"column_start":5,"column_end":17},"name":"OffsetMinute","qualname":"::format_description::component::Component::OffsetMinute","value":"Component::OffsetMinute(modifier::OffsetMinute)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121553,"byte_end":121598,"line_start":33,"line_end":33,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3331},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121616,"byte_end":121638,"line_start":34,"line_end":34,"column_start":18,"column_end":40},"name":"0","qualname":"::format_description::component::Component::OffsetMinute::0","value":"format_description::modifier::OffsetMinute","parent":{"krate":0,"index":3329},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3332},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121697,"byte_end":121709,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"name":"OffsetSecond","qualname":"::format_description::component::Component::OffsetSecond","value":"Component::OffsetSecond(modifier::OffsetSecond)","parent":{"krate":0,"index":3292},"children":[],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121645,"byte_end":121692,"line_start":35,"line_end":35,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3334},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":121710,"byte_end":121732,"line_start":36,"line_end":36,"column_start":18,"column_end":40},"name":"0","qualname":"::format_description::component::Component::OffsetSecond::0","value":"format_description::modifier::OffsetSecond","parent":{"krate":0,"index":3332},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3292},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120808,"byte_end":120817,"line_start":8,"line_end":8,"column_start":10,"column_end":19},"name":"Component","qualname":"::format_description::component::Component","value":"enum Component {\n    Day(modifier::Day),\n    Month(modifier::Month),\n    Ordinal(modifier::Ordinal),\n    Weekday(modifier::Weekday),\n    WeekNumber(modifier::WeekNumber),\n    Year(modifier::Year),\n    Hour(modifier::Hour),\n    Minute(modifier::Minute),\n    Period(modifier::Period),\n    Second(modifier::Second),\n    Subsecond(modifier::Subsecond),\n    OffsetHour(modifier::OffsetHour),\n    OffsetMinute(modifier::OffsetMinute),\n    OffsetSecond(modifier::OffsetSecond),\n}","parent":null,"children":[{"krate":0,"index":3293},{"krate":0,"index":3296},{"krate":0,"index":3299},{"krate":0,"index":3302},{"krate":0,"index":3305},{"krate":0,"index":3308},{"krate":0,"index":3311},{"krate":0,"index":3314},{"krate":0,"index":3317},{"krate":0,"index":3320},{"krate":0,"index":3323},{"krate":0,"index":3326},{"krate":0,"index":3329},{"krate":0,"index":3332}],"decl_id":null,"docs":" A component of a larger format description.\n","sig":null,"attributes":[{"value":"/ A component of a larger format description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120688,"byte_end":120735,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/component.rs","byte_start":120736,"byte_end":120753,"line_start":6,"line_end":6,"column_start":1,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":637},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"modifier","qualname":"::format_description::modifier","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","parent":null,"children":[{"krate":0,"index":3347},{"krate":0,"index":3349},{"krate":0,"index":3351},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355},{"krate":0,"index":3358},{"krate":0,"index":3359},{"krate":0,"index":3361},{"krate":0,"index":3368},{"krate":0,"index":3370},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":3374},{"krate":0,"index":3376},{"krate":0,"index":3377},{"krate":0,"index":3379},{"krate":0,"index":3383},{"krate":0,"index":3385},{"krate":0,"index":3387},{"krate":0,"index":3388},{"krate":0,"index":3389},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3395},{"krate":0,"index":3397},{"krate":0,"index":3399},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3409},{"krate":0,"index":3418},{"krate":0,"index":3420},{"krate":0,"index":3422},{"krate":0,"index":3423},{"krate":0,"index":3424},{"krate":0,"index":3426},{"krate":0,"index":3427},{"krate":0,"index":3429},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3437},{"krate":0,"index":3438},{"krate":0,"index":3439},{"krate":0,"index":3442},{"krate":0,"index":3443},{"krate":0,"index":3445},{"krate":0,"index":3452},{"krate":0,"index":3454},{"krate":0,"index":3456},{"krate":0,"index":3457},{"krate":0,"index":3458},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3463},{"krate":0,"index":3466},{"krate":0,"index":3468},{"krate":0,"index":3470},{"krate":0,"index":3471},{"krate":0,"index":3472},{"krate":0,"index":3475},{"krate":0,"index":3476},{"krate":0,"index":3478},{"krate":0,"index":3483},{"krate":0,"index":3485},{"krate":0,"index":3487},{"krate":0,"index":3488},{"krate":0,"index":3489},{"krate":0,"index":3491},{"krate":0,"index":3492},{"krate":0,"index":3494},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":3518},{"krate":0,"index":3519},{"krate":0,"index":3520},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3533},{"krate":0,"index":3534},{"krate":0,"index":3537},{"krate":0,"index":3538},{"krate":0,"index":3540},{"krate":0,"index":3543},{"krate":0,"index":3545},{"krate":0,"index":3547},{"krate":0,"index":3548},{"krate":0,"index":3549},{"krate":0,"index":3552},{"krate":0,"index":3553},{"krate":0,"index":3555},{"krate":0,"index":3557},{"krate":0,"index":3559},{"krate":0,"index":3561},{"krate":0,"index":3562},{"krate":0,"index":3563},{"krate":0,"index":3566},{"krate":0,"index":3567},{"krate":0,"index":3569},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3594},{"krate":0,"index":3595},{"krate":0,"index":3596},{"krate":0,"index":3598},{"krate":0,"index":3599},{"krate":0,"index":3601},{"krate":0,"index":3603},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":3608},{"krate":0,"index":3609},{"krate":0,"index":3612},{"krate":0,"index":3613},{"krate":0,"index":3615},{"krate":0,"index":3618},{"krate":0,"index":3620},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3624},{"krate":0,"index":3627},{"krate":0,"index":3628},{"krate":0,"index":3630},{"krate":0,"index":3632},{"krate":0,"index":3634},{"krate":0,"index":3636},{"krate":0,"index":3637},{"krate":0,"index":3638},{"krate":0,"index":3641},{"krate":0,"index":3642},{"krate":0,"index":3644},{"krate":0,"index":3646},{"krate":0,"index":3648},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3652},{"krate":0,"index":3655},{"krate":0,"index":3656},{"krate":0,"index":3658},{"krate":0,"index":3665},{"krate":0,"index":3667},{"krate":0,"index":3669},{"krate":0,"index":3670},{"krate":0,"index":3671},{"krate":0,"index":3673},{"krate":0,"index":3674},{"krate":0,"index":638},{"krate":0,"index":639},{"krate":0,"index":3676},{"krate":0,"index":3677},{"krate":0,"index":3679},{"krate":0,"index":3680},{"krate":0,"index":3682},{"krate":0,"index":3683},{"krate":0,"index":3685},{"krate":0,"index":3686},{"krate":0,"index":3688},{"krate":0,"index":3689},{"krate":0,"index":3691},{"krate":0,"index":3692},{"krate":0,"index":3694},{"krate":0,"index":3695},{"krate":0,"index":3697},{"krate":0,"index":3698},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3706},{"krate":0,"index":3707},{"krate":0,"index":3709},{"krate":0,"index":3710},{"krate":0,"index":3712},{"krate":0,"index":3713},{"krate":0,"index":3715},{"krate":0,"index":3716},{"krate":0,"index":3718},{"krate":0,"index":3719},{"krate":0,"index":3721},{"krate":0,"index":3722},{"krate":0,"index":3724},{"krate":0,"index":3725},{"krate":0,"index":3727},{"krate":0,"index":3728},{"krate":0,"index":3730},{"krate":0,"index":3731},{"krate":0,"index":3733},{"krate":0,"index":3734}],"decl_id":null,"docs":" Various modifiers for components.\n","sig":null,"attributes":[{"value":"/ Various modifiers for components.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":121738,"byte_end":121775,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":3347},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":121899,"byte_end":121902,"line_start":7,"line_end":7,"column_start":12,"column_end":15},"name":"Day","qualname":"::format_description::modifier::Day","value":"Day { padding }","parent":null,"children":[{"krate":0,"index":3348}],"decl_id":null,"docs":" Day of the month.\n","sig":null,"attributes":[{"value":"/ Day of the month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":121803,"byte_end":121824,"line_start":4,"line_end":4,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":121825,"byte_end":121842,"line_start":5,"line_end":5,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3348},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":121962,"byte_end":121969,"line_start":9,"line_end":9,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Day::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3347},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":121909,"byte_end":121953,"line_start":8,"line_end":8,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3362},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122170,"byte_end":122179,"line_start":17,"line_end":17,"column_start":5,"column_end":14},"name":"Numerical","qualname":"::format_description::modifier::MonthRepr::Numerical","value":"MonthRepr::Numerical","parent":{"krate":0,"index":3361},"children":[],"decl_id":null,"docs":" The number of the month (January is 1, December is 12).\n","sig":null,"attributes":[{"value":"/ The number of the month (January is 1, December is 12).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122106,"byte_end":122165,"line_start":16,"line_end":16,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3364},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122243,"byte_end":122247,"line_start":19,"line_end":19,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::MonthRepr::Long","value":"MonthRepr::Long","parent":{"krate":0,"index":3361},"children":[],"decl_id":null,"docs":" The long form of the month name (e.g. \"January\").\n","sig":null,"attributes":[{"value":"/ The long form of the month name (e.g. \"January\").","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122185,"byte_end":122238,"line_start":18,"line_end":18,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3366},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122308,"byte_end":122313,"line_start":21,"line_end":21,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::MonthRepr::Short","value":"MonthRepr::Short","parent":{"krate":0,"index":3361},"children":[],"decl_id":null,"docs":" The short form of the month name (e.g. \"Jan\").\n","sig":null,"attributes":[{"value":"/ The short form of the month name (e.g. \"Jan\").","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122253,"byte_end":122303,"line_start":20,"line_end":20,"column_start":5,"column_end":55}}]},{"kind":"Enum","id":{"krate":0,"index":3361},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122090,"byte_end":122099,"line_start":15,"line_end":15,"column_start":10,"column_end":19},"name":"MonthRepr","qualname":"::format_description::modifier::MonthRepr","value":"enum MonthRepr { Numerical, Long, Short, }","parent":null,"children":[{"krate":0,"index":3362},{"krate":0,"index":3364},{"krate":0,"index":3366}],"decl_id":null,"docs":" The representation of a month.\n","sig":null,"attributes":[{"value":"/ The representation of a month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":121983,"byte_end":122017,"line_start":12,"line_end":12,"column_start":1,"column_end":35}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122018,"byte_end":122035,"line_start":13,"line_end":13,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3379},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122415,"byte_end":122420,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"Month","qualname":"::format_description::modifier::Month","value":"Month { padding, repr, case_sensitive }","parent":null,"children":[{"krate":0,"index":3380},{"krate":0,"index":3381},{"krate":0,"index":3382}],"decl_id":null,"docs":" Month of the year.\n","sig":null,"attributes":[{"value":"/ Month of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122318,"byte_end":122340,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122341,"byte_end":122358,"line_start":25,"line_end":25,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3380},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122480,"byte_end":122487,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Month::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3379},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122427,"byte_end":122471,"line_start":28,"line_end":28,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3381},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122558,"byte_end":122562,"line_start":31,"line_end":31,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Month::repr","value":"format_description::modifier::MonthRepr","parent":{"krate":0,"index":3379},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122502,"byte_end":122549,"line_start":30,"line_end":30,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3382},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122633,"byte_end":122647,"line_start":33,"line_end":33,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Month::case_sensitive","value":"bool","parent":{"krate":0,"index":3379},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122579,"byte_end":122624,"line_start":32,"line_end":32,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":3395},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122761,"byte_end":122768,"line_start":39,"line_end":39,"column_start":12,"column_end":19},"name":"Ordinal","qualname":"::format_description::modifier::Ordinal","value":"Ordinal { padding }","parent":null,"children":[{"krate":0,"index":3396}],"decl_id":null,"docs":" Ordinal day of the year.\n","sig":null,"attributes":[{"value":"/ Ordinal day of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122658,"byte_end":122686,"line_start":36,"line_end":36,"column_start":1,"column_end":29}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122687,"byte_end":122704,"line_start":37,"line_end":37,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3396},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122828,"byte_end":122835,"line_start":41,"line_end":41,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Ordinal::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3395},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122775,"byte_end":122819,"line_start":40,"line_end":40,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3410},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123044,"byte_end":123049,"line_start":49,"line_end":49,"column_start":5,"column_end":10},"name":"Short","qualname":"::format_description::modifier::WeekdayRepr::Short","value":"WeekdayRepr::Short","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" The short form of the weekday (e.g. \"Mon\").\n","sig":null,"attributes":[{"value":"/ The short form of the weekday (e.g. \"Mon\").","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122992,"byte_end":123039,"line_start":48,"line_end":48,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3412},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123109,"byte_end":123113,"line_start":51,"line_end":51,"column_start":5,"column_end":9},"name":"Long","qualname":"::format_description::modifier::WeekdayRepr::Long","value":"WeekdayRepr::Long","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" The long form of the weekday (e.g. \"Monday\").\n","sig":null,"attributes":[{"value":"/ The long form of the weekday (e.g. \"Monday\").","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123055,"byte_end":123104,"line_start":50,"line_end":50,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3414},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123279,"byte_end":123285,"line_start":55,"line_end":55,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekdayRepr::Sunday","value":"WeekdayRepr::Sunday","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" A numerical representation using Sunday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Sunday as the first day of the week.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123119,"byte_end":123192,"line_start":52,"line_end":52,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123197,"byte_end":123200,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ Sunday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123205,"byte_end":123274,"line_start":54,"line_end":54,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3416},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123451,"byte_end":123457,"line_start":59,"line_end":59,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekdayRepr::Monday","value":"WeekdayRepr::Monday","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" A numerical representation using Monday as the first day of the week.","sig":null,"attributes":[{"value":"/ A numerical representation using Monday as the first day of the week.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123291,"byte_end":123364,"line_start":56,"line_end":56,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123369,"byte_end":123372,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Monday is either 0 or 1, depending on the other modifier's value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123377,"byte_end":123446,"line_start":58,"line_end":58,"column_start":5,"column_end":74}}]},{"kind":"Enum","id":{"krate":0,"index":3409},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122974,"byte_end":122985,"line_start":47,"line_end":47,"column_start":10,"column_end":21},"name":"WeekdayRepr","qualname":"::format_description::modifier::WeekdayRepr","value":"enum WeekdayRepr { Short, Long, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":3410},{"krate":0,"index":3412},{"krate":0,"index":3414},{"krate":0,"index":3416}],"decl_id":null,"docs":" The representation used for the day of the week.\n","sig":null,"attributes":[{"value":"/ The representation used for the day of the week.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122849,"byte_end":122901,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":122902,"byte_end":122919,"line_start":45,"line_end":45,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3429},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123557,"byte_end":123564,"line_start":65,"line_end":65,"column_start":12,"column_end":19},"name":"Weekday","qualname":"::format_description::modifier::Weekday","value":"Weekday { repr, one_indexed, case_sensitive }","parent":null,"children":[{"krate":0,"index":3430},{"krate":0,"index":3431},{"krate":0,"index":3432}],"decl_id":null,"docs":" Day of the week.\n","sig":null,"attributes":[{"value":"/ Day of the week.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123462,"byte_end":123482,"line_start":62,"line_end":62,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123483,"byte_end":123500,"line_start":63,"line_end":63,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3430},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123627,"byte_end":123631,"line_start":67,"line_end":67,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Weekday::repr","value":"format_description::modifier::WeekdayRepr","parent":{"krate":0,"index":3429},"children":[],"decl_id":null,"docs":" What form of representation should be used?\n","sig":null,"attributes":[{"value":"/ What form of representation should be used?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123571,"byte_end":123618,"line_start":66,"line_end":66,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3431},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123735,"byte_end":123746,"line_start":69,"line_end":69,"column_start":9,"column_end":20},"name":"one_indexed","qualname":"::format_description::modifier::Weekday::one_indexed","value":"bool","parent":{"krate":0,"index":3429},"children":[],"decl_id":null,"docs":" When using a numerical representation, should it be zero or one-indexed?\n","sig":null,"attributes":[{"value":"/ When using a numerical representation, should it be zero or one-indexed?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123650,"byte_end":123726,"line_start":68,"line_end":68,"column_start":5,"column_end":81}}]},{"kind":"Field","id":{"krate":0,"index":3432},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123812,"byte_end":123826,"line_start":71,"line_end":71,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Weekday::case_sensitive","value":"bool","parent":{"krate":0,"index":3429},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?\n","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123758,"byte_end":123803,"line_start":70,"line_end":70,"column_start":5,"column_end":50}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3446},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124031,"byte_end":124034,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"Iso","qualname":"::format_description::modifier::WeekNumberRepr::Iso","value":"WeekNumberRepr::Iso","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Week 1 is the week that contains January 4.\n","sig":null,"attributes":[{"value":"/ Week 1 is the week that contains January 4.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123979,"byte_end":124026,"line_start":78,"line_end":78,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3448},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124104,"byte_end":124110,"line_start":81,"line_end":81,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::format_description::modifier::WeekNumberRepr::Sunday","value":"WeekNumberRepr::Sunday","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Sunday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Sunday of the calendar year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124040,"byte_end":124099,"line_start":80,"line_end":80,"column_start":5,"column_end":64}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3450},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124180,"byte_end":124186,"line_start":83,"line_end":83,"column_start":5,"column_end":11},"name":"Monday","qualname":"::format_description::modifier::WeekNumberRepr::Monday","value":"WeekNumberRepr::Monday","parent":{"krate":0,"index":3445},"children":[],"decl_id":null,"docs":" Week 1 begins on the first Monday of the calendar year.\n","sig":null,"attributes":[{"value":"/ Week 1 begins on the first Monday of the calendar year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124116,"byte_end":124175,"line_start":82,"line_end":82,"column_start":5,"column_end":64}}]},{"kind":"Enum","id":{"krate":0,"index":3445},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123958,"byte_end":123972,"line_start":77,"line_end":77,"column_start":10,"column_end":24},"name":"WeekNumberRepr","qualname":"::format_description::modifier::WeekNumberRepr","value":"enum WeekNumberRepr { Iso, Sunday, Monday, }","parent":null,"children":[{"krate":0,"index":3446},{"krate":0,"index":3448},{"krate":0,"index":3450}],"decl_id":null,"docs":" The representation used for the week number.\n","sig":null,"attributes":[{"value":"/ The representation used for the week number.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123837,"byte_end":123885,"line_start":74,"line_end":74,"column_start":1,"column_end":49}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":123886,"byte_end":123903,"line_start":75,"line_end":75,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3463},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124291,"byte_end":124301,"line_start":89,"line_end":89,"column_start":12,"column_end":22},"name":"WeekNumber","qualname":"::format_description::modifier::WeekNumber","value":"WeekNumber { padding, repr }","parent":null,"children":[{"krate":0,"index":3464},{"krate":0,"index":3465}],"decl_id":null,"docs":" Week within the year.\n","sig":null,"attributes":[{"value":"/ Week within the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124191,"byte_end":124216,"line_start":86,"line_end":86,"column_start":1,"column_end":26}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124217,"byte_end":124234,"line_start":87,"line_end":87,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3464},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124361,"byte_end":124368,"line_start":91,"line_end":91,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::WeekNumber::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124308,"byte_end":124352,"line_start":90,"line_end":90,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3465},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124439,"byte_end":124443,"line_start":93,"line_end":93,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::WeekNumber::repr","value":"format_description::modifier::WeekNumberRepr","parent":{"krate":0,"index":3463},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124383,"byte_end":124430,"line_start":92,"line_end":92,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3479},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124633,"byte_end":124637,"line_start":101,"line_end":101,"column_start":5,"column_end":9},"name":"Full","qualname":"::format_description::modifier::YearRepr::Full","value":"YearRepr::Full","parent":{"krate":0,"index":3478},"children":[],"decl_id":null,"docs":" The full value of the year.\n","sig":null,"attributes":[{"value":"/ The full value of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124597,"byte_end":124628,"line_start":100,"line_end":100,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3481},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124689,"byte_end":124696,"line_start":103,"line_end":103,"column_start":5,"column_end":12},"name":"LastTwo","qualname":"::format_description::modifier::YearRepr::LastTwo","value":"YearRepr::LastTwo","parent":{"krate":0,"index":3478},"children":[],"decl_id":null,"docs":" Only the last two digits of the year.\n","sig":null,"attributes":[{"value":"/ Only the last two digits of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124643,"byte_end":124684,"line_start":102,"line_end":102,"column_start":5,"column_end":46}}]},{"kind":"Enum","id":{"krate":0,"index":3478},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124582,"byte_end":124590,"line_start":99,"line_end":99,"column_start":10,"column_end":18},"name":"YearRepr","qualname":"::format_description::modifier::YearRepr","value":"enum YearRepr { Full, LastTwo, }","parent":null,"children":[{"krate":0,"index":3479},{"krate":0,"index":3481}],"decl_id":null,"docs":" The representation used for a year value.\n","sig":null,"attributes":[{"value":"/ The representation used for a year value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124464,"byte_end":124509,"line_start":96,"line_end":96,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124510,"byte_end":124527,"line_start":97,"line_end":97,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3494},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124797,"byte_end":124801,"line_start":109,"line_end":109,"column_start":12,"column_end":16},"name":"Year","qualname":"::format_description::modifier::Year","value":"Year { padding, repr, iso_week_based, sign_is_mandatory }","parent":null,"children":[{"krate":0,"index":3495},{"krate":0,"index":3496},{"krate":0,"index":3497},{"krate":0,"index":3498}],"decl_id":null,"docs":" Year of the date.\n","sig":null,"attributes":[{"value":"/ Year of the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124701,"byte_end":124722,"line_start":106,"line_end":106,"column_start":1,"column_end":22}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124723,"byte_end":124740,"line_start":107,"line_end":107,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3495},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124861,"byte_end":124868,"line_start":111,"line_end":111,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Year::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124808,"byte_end":124852,"line_start":110,"line_end":110,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3496},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124939,"byte_end":124943,"line_start":113,"line_end":113,"column_start":9,"column_end":13},"name":"repr","qualname":"::format_description::modifier::Year::repr","value":"format_description::modifier::YearRepr","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" What kind of representation should be used?\n","sig":null,"attributes":[{"value":"/ What kind of representation should be used?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124883,"byte_end":124930,"line_start":112,"line_end":112,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":3497},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125048,"byte_end":125062,"line_start":115,"line_end":115,"column_start":9,"column_end":23},"name":"iso_week_based","qualname":"::format_description::modifier::Year::iso_week_based","value":"bool","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" Whether the value is based on the ISO week number or the Gregorian calendar.\n","sig":null,"attributes":[{"value":"/ Whether the value is based on the ISO week number or the Gregorian calendar.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":124959,"byte_end":125039,"line_start":114,"line_end":114,"column_start":5,"column_end":85}}]},{"kind":"Field","id":{"krate":0,"index":3498},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125172,"byte_end":125189,"line_start":117,"line_end":117,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::Year::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present when a positive year contains fewer than five digits.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present when a positive year contains fewer than five digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125074,"byte_end":125163,"line_start":116,"line_end":116,"column_start":5,"column_end":94}}]},{"kind":"Struct","id":{"krate":0,"index":3511},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125349,"byte_end":125353,"line_start":125,"line_end":125,"column_start":12,"column_end":16},"name":"Hour","qualname":"::format_description::modifier::Hour","value":"Hour { padding, is_12_hour_clock }","parent":null,"children":[{"krate":0,"index":3512},{"krate":0,"index":3513}],"decl_id":null,"docs":" Hour of the day.\n","sig":null,"attributes":[{"value":"/ Hour of the day.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125254,"byte_end":125274,"line_start":122,"line_end":122,"column_start":1,"column_end":21}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125275,"byte_end":125292,"line_start":123,"line_end":123,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3512},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125413,"byte_end":125420,"line_start":127,"line_end":127,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Hour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3511},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125360,"byte_end":125404,"line_start":126,"line_end":126,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":3513},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125498,"byte_end":125514,"line_start":129,"line_end":129,"column_start":9,"column_end":25},"name":"is_12_hour_clock","qualname":"::format_description::modifier::Hour::is_12_hour_clock","value":"bool","parent":{"krate":0,"index":3511},"children":[],"decl_id":null,"docs":" Is the hour displayed using a 12 or 24-hour clock?\n","sig":null,"attributes":[{"value":"/ Is the hour displayed using a 12 or 24-hour clock?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125435,"byte_end":125489,"line_start":128,"line_end":128,"column_start":5,"column_end":59}}]},{"kind":"Struct","id":{"krate":0,"index":3526},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125627,"byte_end":125633,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"Minute","qualname":"::format_description::modifier::Minute","value":"Minute { padding }","parent":null,"children":[{"krate":0,"index":3527}],"decl_id":null,"docs":" Minute within the hour.\n","sig":null,"attributes":[{"value":"/ Minute within the hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125525,"byte_end":125552,"line_start":132,"line_end":132,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125553,"byte_end":125570,"line_start":133,"line_end":133,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3527},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125693,"byte_end":125700,"line_start":137,"line_end":137,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Minute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3526},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125640,"byte_end":125684,"line_start":136,"line_end":136,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3540},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125816,"byte_end":125822,"line_start":143,"line_end":143,"column_start":12,"column_end":18},"name":"Period","qualname":"::format_description::modifier::Period","value":"Period { is_uppercase, case_sensitive }","parent":null,"children":[{"krate":0,"index":3541},{"krate":0,"index":3542}],"decl_id":null,"docs":" AM/PM part of the time.\n","sig":null,"attributes":[{"value":"/ AM/PM part of the time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125714,"byte_end":125741,"line_start":140,"line_end":140,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125742,"byte_end":125759,"line_start":141,"line_end":141,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3541},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125879,"byte_end":125891,"line_start":145,"line_end":145,"column_start":9,"column_end":21},"name":"is_uppercase","qualname":"::format_description::modifier::Period::is_uppercase","value":"bool","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Is the period uppercase or lowercase?\n","sig":null,"attributes":[{"value":"/ Is the period uppercase or lowercase?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125829,"byte_end":125870,"line_start":144,"line_end":144,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3542},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126057,"byte_end":126071,"line_start":149,"line_end":149,"column_start":9,"column_end":23},"name":"case_sensitive","qualname":"::format_description::modifier::Period::case_sensitive","value":"bool","parent":{"krate":0,"index":3540},"children":[],"decl_id":null,"docs":" Is the value case sensitive when parsing?","sig":null,"attributes":[{"value":"/ Is the value case sensitive when parsing?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125903,"byte_end":125948,"line_start":146,"line_end":146,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125953,"byte_end":125956,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ Note that when `false`, the `is_uppercase` field has no effect on parsing behavior.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":125961,"byte_end":126048,"line_start":148,"line_end":148,"column_start":5,"column_end":92}}]},{"kind":"Struct","id":{"krate":0,"index":3555},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126186,"byte_end":126192,"line_start":155,"line_end":155,"column_start":12,"column_end":18},"name":"Second","qualname":"::format_description::modifier::Second","value":"Second { padding }","parent":null,"children":[{"krate":0,"index":3556}],"decl_id":null,"docs":" Second within the minute.\n","sig":null,"attributes":[{"value":"/ Second within the minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126082,"byte_end":126111,"line_start":152,"line_end":152,"column_start":1,"column_end":30}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126112,"byte_end":126129,"line_start":153,"line_end":153,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3556},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126252,"byte_end":126259,"line_start":157,"line_end":157,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::Second::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3555},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126199,"byte_end":126243,"line_start":156,"line_end":156,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3570},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126458,"byte_end":126461,"line_start":165,"line_end":165,"column_start":5,"column_end":8},"name":"One","qualname":"::format_description::modifier::SubsecondDigits::One","value":"SubsecondDigits::One","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Exactly one digit.\n","sig":null,"attributes":[{"value":"/ Exactly one digit.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126431,"byte_end":126453,"line_start":164,"line_end":164,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3572},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126495,"byte_end":126498,"line_start":167,"line_end":167,"column_start":5,"column_end":8},"name":"Two","qualname":"::format_description::modifier::SubsecondDigits::Two","value":"SubsecondDigits::Two","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Exactly two digits.\n","sig":null,"attributes":[{"value":"/ Exactly two digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126467,"byte_end":126490,"line_start":166,"line_end":166,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3574},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126534,"byte_end":126539,"line_start":169,"line_end":169,"column_start":5,"column_end":10},"name":"Three","qualname":"::format_description::modifier::SubsecondDigits::Three","value":"SubsecondDigits::Three","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Exactly three digits.\n","sig":null,"attributes":[{"value":"/ Exactly three digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126504,"byte_end":126529,"line_start":168,"line_end":168,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3576},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126574,"byte_end":126578,"line_start":171,"line_end":171,"column_start":5,"column_end":9},"name":"Four","qualname":"::format_description::modifier::SubsecondDigits::Four","value":"SubsecondDigits::Four","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Exactly four digits.\n","sig":null,"attributes":[{"value":"/ Exactly four digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126545,"byte_end":126569,"line_start":170,"line_end":170,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3578},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126613,"byte_end":126617,"line_start":173,"line_end":173,"column_start":5,"column_end":9},"name":"Five","qualname":"::format_description::modifier::SubsecondDigits::Five","value":"SubsecondDigits::Five","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Exactly five digits.\n","sig":null,"attributes":[{"value":"/ Exactly five digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126584,"byte_end":126608,"line_start":172,"line_end":172,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3580},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126651,"byte_end":126654,"line_start":175,"line_end":175,"column_start":5,"column_end":8},"name":"Six","qualname":"::format_description::modifier::SubsecondDigits::Six","value":"SubsecondDigits::Six","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Exactly six digits.\n","sig":null,"attributes":[{"value":"/ Exactly six digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126623,"byte_end":126646,"line_start":174,"line_end":174,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3582},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126690,"byte_end":126695,"line_start":177,"line_end":177,"column_start":5,"column_end":10},"name":"Seven","qualname":"::format_description::modifier::SubsecondDigits::Seven","value":"SubsecondDigits::Seven","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Exactly seven digits.\n","sig":null,"attributes":[{"value":"/ Exactly seven digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126660,"byte_end":126685,"line_start":176,"line_end":176,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3584},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126731,"byte_end":126736,"line_start":179,"line_end":179,"column_start":5,"column_end":10},"name":"Eight","qualname":"::format_description::modifier::SubsecondDigits::Eight","value":"SubsecondDigits::Eight","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Exactly eight digits.\n","sig":null,"attributes":[{"value":"/ Exactly eight digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126701,"byte_end":126726,"line_start":178,"line_end":178,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3586},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126771,"byte_end":126775,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Nine","qualname":"::format_description::modifier::SubsecondDigits::Nine","value":"SubsecondDigits::Nine","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Exactly nine digits.\n","sig":null,"attributes":[{"value":"/ Exactly nine digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126742,"byte_end":126766,"line_start":180,"line_end":180,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3588},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126913,"byte_end":126922,"line_start":184,"line_end":184,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::format_description::modifier::SubsecondDigits::OneOrMore","value":"SubsecondDigits::OneOrMore","parent":{"krate":0,"index":3569},"children":[],"decl_id":null,"docs":" Any number of digits (up to nine) that is at least one. When formatting, the minimum digits\n necessary will be used.\n","sig":null,"attributes":[{"value":"/ Any number of digits (up to nine) that is at least one. When formatting, the minimum digits","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126781,"byte_end":126876,"line_start":182,"line_end":182,"column_start":5,"column_end":100}},{"value":"/ necessary will be used.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126881,"byte_end":126908,"line_start":183,"line_end":183,"column_start":5,"column_end":32}}]},{"kind":"Enum","id":{"krate":0,"index":3569},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126409,"byte_end":126424,"line_start":163,"line_end":163,"column_start":10,"column_end":25},"name":"SubsecondDigits","qualname":"::format_description::modifier::SubsecondDigits","value":"enum SubsecondDigits {\n    One,\n    Two,\n    Three,\n    Four,\n    Five,\n    Six,\n    Seven,\n    Eight,\n    Nine,\n    OneOrMore,\n}","parent":null,"children":[{"krate":0,"index":3570},{"krate":0,"index":3572},{"krate":0,"index":3574},{"krate":0,"index":3576},{"krate":0,"index":3578},{"krate":0,"index":3580},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3586},{"krate":0,"index":3588}],"decl_id":null,"docs":" The number of digits present in a subsecond representation.\n","sig":null,"attributes":[{"value":"/ The number of digits present in a subsecond representation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126273,"byte_end":126336,"line_start":160,"line_end":160,"column_start":1,"column_end":64}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126337,"byte_end":126354,"line_start":161,"line_end":161,"column_start":1,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":3601},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127034,"byte_end":127043,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"Subsecond","qualname":"::format_description::modifier::Subsecond","value":"Subsecond { digits }","parent":null,"children":[{"krate":0,"index":3602}],"decl_id":null,"docs":" Subsecond within the second.\n","sig":null,"attributes":[{"value":"/ Subsecond within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126927,"byte_end":126959,"line_start":187,"line_end":187,"column_start":1,"column_end":33}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":126960,"byte_end":126977,"line_start":188,"line_end":188,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3602},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127108,"byte_end":127114,"line_start":192,"line_end":192,"column_start":9,"column_end":15},"name":"digits","qualname":"::format_description::modifier::Subsecond::digits","value":"format_description::modifier::SubsecondDigits","parent":{"krate":0,"index":3601},"children":[],"decl_id":null,"docs":" How many digits are present in the component?\n","sig":null,"attributes":[{"value":"/ How many digits are present in the component?","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127050,"byte_end":127099,"line_start":191,"line_end":191,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":3615},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127294,"byte_end":127304,"line_start":200,"line_end":200,"column_start":12,"column_end":22},"name":"OffsetHour","qualname":"::format_description::modifier::OffsetHour","value":"OffsetHour { sign_is_mandatory, padding }","parent":null,"children":[{"krate":0,"index":3616},{"krate":0,"index":3617}],"decl_id":null,"docs":" Hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Hour of the UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127192,"byte_end":127219,"line_start":197,"line_end":197,"column_start":1,"column_end":28}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127220,"byte_end":127237,"line_start":198,"line_end":198,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3616},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127375,"byte_end":127392,"line_start":202,"line_end":202,"column_start":9,"column_end":26},"name":"sign_is_mandatory","qualname":"::format_description::modifier::OffsetHour::sign_is_mandatory","value":"bool","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" Whether the `+` sign is present on positive values.\n","sig":null,"attributes":[{"value":"/ Whether the `+` sign is present on positive values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127311,"byte_end":127366,"line_start":201,"line_end":201,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":3617},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127457,"byte_end":127464,"line_start":204,"line_end":204,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetHour::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3615},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127404,"byte_end":127448,"line_start":203,"line_end":203,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3630},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127598,"byte_end":127610,"line_start":210,"line_end":210,"column_start":12,"column_end":24},"name":"OffsetMinute","qualname":"::format_description::modifier::OffsetMinute","value":"OffsetMinute { padding }","parent":null,"children":[{"krate":0,"index":3631}],"decl_id":null,"docs":" Minute within the hour of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Minute within the hour of the UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127478,"byte_end":127523,"line_start":207,"line_end":207,"column_start":1,"column_end":46}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127524,"byte_end":127541,"line_start":208,"line_end":208,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3631},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127670,"byte_end":127677,"line_start":212,"line_end":212,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetMinute::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3630},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127617,"byte_end":127661,"line_start":211,"line_end":211,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":3644},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127813,"byte_end":127825,"line_start":218,"line_end":218,"column_start":12,"column_end":24},"name":"OffsetSecond","qualname":"::format_description::modifier::OffsetSecond","value":"OffsetSecond { padding }","parent":null,"children":[{"krate":0,"index":3645}],"decl_id":null,"docs":" Second within the minute of the UTC offset.\n","sig":null,"attributes":[{"value":"/ Second within the minute of the UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127691,"byte_end":127738,"line_start":215,"line_end":215,"column_start":1,"column_end":48}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127739,"byte_end":127756,"line_start":216,"line_end":216,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":3645},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127885,"byte_end":127892,"line_start":220,"line_end":220,"column_start":9,"column_end":16},"name":"padding","qualname":"::format_description::modifier::OffsetSecond::padding","value":"format_description::modifier::Padding","parent":{"krate":0,"index":3644},"children":[],"decl_id":null,"docs":" The padding to obtain the minimum width.\n","sig":null,"attributes":[{"value":"/ The padding to obtain the minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127832,"byte_end":127876,"line_start":219,"line_end":219,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3659},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":128128,"byte_end":128133,"line_start":229,"line_end":229,"column_start":5,"column_end":10},"name":"Space","qualname":"::format_description::modifier::Padding::Space","value":"Padding::Space","parent":{"krate":0,"index":3658},"children":[],"decl_id":null,"docs":" A space character (` `) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A space character (` `) should be used as padding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":128069,"byte_end":128123,"line_start":228,"line_end":228,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3661},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":128197,"byte_end":128201,"line_start":231,"line_end":231,"column_start":5,"column_end":9},"name":"Zero","qualname":"::format_description::modifier::Padding::Zero","value":"Padding::Zero","parent":{"krate":0,"index":3658},"children":[],"decl_id":null,"docs":" A zero character (`0`) should be used as padding.\n","sig":null,"attributes":[{"value":"/ A zero character (`0`) should be used as padding.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":128139,"byte_end":128192,"line_start":230,"line_end":230,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3663},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":128321,"byte_end":128325,"line_start":234,"line_end":234,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::modifier::Padding::None","value":"Padding::None","parent":{"krate":0,"index":3658},"children":[],"decl_id":null,"docs":" There is no padding. This can result in a width below the otherwise minimum number of\n characters.\n","sig":null,"attributes":[{"value":"/ There is no padding. This can result in a width below the otherwise minimum number of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":128207,"byte_end":128296,"line_start":232,"line_end":232,"column_start":5,"column_end":94}},{"value":"/ characters.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":128301,"byte_end":128316,"line_start":233,"line_end":233,"column_start":5,"column_end":20}}]},{"kind":"Enum","id":{"krate":0,"index":3658},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":128055,"byte_end":128062,"line_start":227,"line_end":227,"column_start":10,"column_end":17},"name":"Padding","qualname":"::format_description::modifier::Padding","value":"enum Padding { Space, Zero, None, }","parent":null,"children":[{"krate":0,"index":3659},{"krate":0,"index":3661},{"krate":0,"index":3663}],"decl_id":null,"docs":" Type of padding to ensure a minimum width.\n","sig":null,"attributes":[{"value":"/ Type of padding to ensure a minimum width.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127936,"byte_end":127982,"line_start":224,"line_end":224,"column_start":1,"column_end":47}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/modifier.rs","byte_start":127983,"byte_end":128000,"line_start":225,"line_end":225,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3751},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134310,"byte_end":134317,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Literal","qualname":"::format_description::owned_format_item::OwnedFormatItem::Literal","value":"OwnedFormatItem::Literal(Box<[u8]>)","parent":{"krate":0,"index":3750},"children":[],"decl_id":null,"docs":" Bytes that are formatted as-is.","sig":null,"attributes":[{"value":"/ Bytes that are formatted as-is.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134117,"byte_end":134152,"line_start":15,"line_end":15,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134157,"byte_end":134160,"line_start":16,"line_end":16,"column_start":5,"column_end":8}},{"value":"/ **Note**: If you call the `format` method that returns a `String`, these bytes will be","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134165,"byte_end":134255,"line_start":17,"line_end":17,"column_start":5,"column_end":95}},{"value":"/ passed through `String::from_utf8_lossy`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134260,"byte_end":134305,"line_start":18,"line_end":18,"column_start":5,"column_end":50}}]},{"kind":"Field","id":{"krate":0,"index":3753},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134318,"byte_end":134327,"line_start":19,"line_end":19,"column_start":13,"column_end":22},"name":"0","qualname":"::format_description::owned_format_item::OwnedFormatItem::Literal::0","value":"std::boxed::Box<[u8]>","parent":{"krate":0,"index":3751},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3754},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134397,"byte_end":134406,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Component","qualname":"::format_description::owned_format_item::OwnedFormatItem::Component","value":"OwnedFormatItem::Component(Component)","parent":{"krate":0,"index":3750},"children":[],"decl_id":null,"docs":" A minimal representation of a single non-literal item.\n","sig":null,"attributes":[{"value":"/ A minimal representation of a single non-literal item.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134334,"byte_end":134392,"line_start":20,"line_end":20,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":3756},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134407,"byte_end":134416,"line_start":21,"line_end":21,"column_start":15,"column_end":24},"name":"0","qualname":"::format_description::owned_format_item::OwnedFormatItem::Component::0","value":"format_description::component::Component","parent":{"krate":0,"index":3754},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3757},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134532,"byte_end":134540,"line_start":24,"line_end":24,"column_start":5,"column_end":13},"name":"Compound","qualname":"::format_description::owned_format_item::OwnedFormatItem::Compound","value":"OwnedFormatItem::Compound(Box<[Self]>)","parent":{"krate":0,"index":3750},"children":[],"decl_id":null,"docs":" A series of literals or components that collectively form a partial or complete\n description.\n","sig":null,"attributes":[{"value":"/ A series of literals or components that collectively form a partial or complete","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134423,"byte_end":134506,"line_start":22,"line_end":22,"column_start":5,"column_end":88}},{"value":"/ description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134511,"byte_end":134527,"line_start":23,"line_end":23,"column_start":5,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":3759},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134541,"byte_end":134552,"line_start":24,"line_end":24,"column_start":14,"column_end":25},"name":"0","qualname":"::format_description::owned_format_item::OwnedFormatItem::Compound::0","value":"std::boxed::Box<[format_description::owned_format_item::OwnedFormatItem]>","parent":{"krate":0,"index":3757},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3760},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134804,"byte_end":134812,"line_start":29,"line_end":29,"column_start":5,"column_end":13},"name":"Optional","qualname":"::format_description::owned_format_item::OwnedFormatItem::Optional","value":"OwnedFormatItem::Optional(Box<Self>)","parent":{"krate":0,"index":3750},"children":[],"decl_id":null,"docs":" A `FormatItem` that may or may not be present when parsing. If parsing fails, there\n will be no effect on the resulting `struct`.","sig":null,"attributes":[{"value":"/ A `FormatItem` that may or may not be present when parsing. If parsing fails, there","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134559,"byte_end":134646,"line_start":25,"line_end":25,"column_start":5,"column_end":92}},{"value":"/ will be no effect on the resulting `struct`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134651,"byte_end":134699,"line_start":26,"line_end":26,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134704,"byte_end":134707,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This variant has no effect on formatting, as the value is guaranteed to be present.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134712,"byte_end":134799,"line_start":28,"line_end":28,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":3762},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134813,"byte_end":134822,"line_start":29,"line_end":29,"column_start":14,"column_end":23},"name":"0","qualname":"::format_description::owned_format_item::OwnedFormatItem::Optional::0","value":"std::boxed::Box<format_description::owned_format_item::OwnedFormatItem>","parent":{"krate":0,"index":3760},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3763},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135051,"byte_end":135056,"line_start":33,"line_end":33,"column_start":5,"column_end":10},"name":"First","qualname":"::format_description::owned_format_item::OwnedFormatItem::First","value":"OwnedFormatItem::First(Box<[Self]>)","parent":{"krate":0,"index":3750},"children":[],"decl_id":null,"docs":" A series of `FormatItem`s where, when parsing, the first successful parse is used. When\n formatting, the first element of the [`Vec`] is used. An empty [`Vec`] is a no-op when\n formatting or parsing.\n","sig":null,"attributes":[{"value":"/ A series of `FormatItem`s where, when parsing, the first successful parse is used. When","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134829,"byte_end":134920,"line_start":30,"line_end":30,"column_start":5,"column_end":96}},{"value":"/ formatting, the first element of the [`Vec`] is used. An empty [`Vec`] is a no-op when","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134925,"byte_end":135015,"line_start":31,"line_end":31,"column_start":5,"column_end":95}},{"value":"/ formatting or parsing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135020,"byte_end":135046,"line_start":32,"line_end":32,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":3765},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135057,"byte_end":135068,"line_start":33,"line_end":33,"column_start":11,"column_end":22},"name":"0","qualname":"::format_description::owned_format_item::OwnedFormatItem::First::0","value":"std::boxed::Box<[format_description::owned_format_item::OwnedFormatItem]>","parent":{"krate":0,"index":3763},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3750},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134095,"byte_end":134110,"line_start":14,"line_end":14,"column_start":10,"column_end":25},"name":"OwnedFormatItem","qualname":"::format_description::owned_format_item::OwnedFormatItem","value":"enum OwnedFormatItem {\n    Literal(Box<[u8]>),\n    Component(Component),\n    Compound(Box<[Self]>),\n    Optional(Box<Self>),\n    First(Box<[Self]>),\n}","parent":null,"children":[{"krate":0,"index":3751},{"krate":0,"index":3754},{"krate":0,"index":3757},{"krate":0,"index":3760},{"krate":0,"index":3763}],"decl_id":null,"docs":" A complete description of how to format and parse a type.\n","sig":null,"attributes":[{"value":"/ A complete description of how to format and parse a type.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":133974,"byte_end":134035,"line_start":11,"line_end":11,"column_start":1,"column_end":62}},{"value":"non_exhaustive","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":134036,"byte_end":134053,"line_start":12,"line_end":12,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":664},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135119,"byte_end":135122,"line_start":37,"line_end":37,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OwnedFormatItem as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":666},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135676,"byte_end":135680,"line_start":50,"line_end":50,"column_start":8,"column_end":12},"name":"from","qualname":"<OwnedFormatItem as std::convert::From>::from","value":"fn from(FormatItem) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":668},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135801,"byte_end":135805,"line_start":56,"line_end":56,"column_start":8,"column_end":12},"name":"from","qualname":"<OwnedFormatItem as std::convert::From>::from","value":"fn from(&FormatItem) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":670},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":136742,"byte_end":136746,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"from","qualname":"<OwnedFormatItem as std::convert::From>::from","value":"fn from(Vec<FormatItem>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":674},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":136910,"byte_end":136914,"line_start":88,"line_end":88,"column_start":8,"column_end":12},"name":"from","qualname":"<OwnedFormatItem as std::convert::From>::from","value":"fn from(&T) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137296,"byte_end":137300,"line_start":104,"line_end":104,"column_start":8,"column_end":12},"name":"from","qualname":"<OwnedFormatItem as std::convert::From>::from","value":"fn from(Component) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":679},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137473,"byte_end":137481,"line_start":112,"line_end":112,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Component as std::convert::TryFrom>::try_from","value":"fn try_from(OwnedFormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137743,"byte_end":137747,"line_start":121,"line_end":121,"column_start":8,"column_end":12},"name":"from","qualname":"<OwnedFormatItem as std::convert::From>::from","value":"fn from(Vec<Self>) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137941,"byte_end":137949,"line_start":129,"line_end":129,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Vec<OwnedFormatItem> as std::convert::TryFrom>::try_from","value":"fn try_from(OwnedFormatItem) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138265,"byte_end":138267,"line_start":140,"line_end":140,"column_start":8,"column_end":10},"name":"eq","qualname":"<OwnedFormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Component) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138437,"byte_end":138439,"line_start":146,"line_end":146,"column_start":8,"column_end":10},"name":"eq","qualname":"<Component as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &OwnedFormatItem) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138562,"byte_end":138564,"line_start":152,"line_end":152,"column_start":8,"column_end":10},"name":"eq","qualname":"<OwnedFormatItem as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &&[Self]) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138742,"byte_end":138744,"line_start":158,"line_end":158,"column_start":8,"column_end":10},"name":"eq","qualname":"<&'_ [OwnedFormatItem] as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &OwnedFormatItem) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":806},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/format_item.rs","byte_start":154700,"byte_end":154704,"line_start":45,"line_end":45,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::format_description::FormatItem as std::convert::From>::from","value":"fn from(Item) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":808},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/format_item.rs","byte_start":154986,"byte_end":154990,"line_start":54,"line_end":54,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::format_description::OwnedFormatItem as std::convert::From>::from","value":"fn from(Item) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":857},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139174,"byte_end":139179,"line_start":14,"line_end":14,"column_start":8,"column_end":13},"name":"parse","qualname":"::format_description::parse::parse","value":"fn parse(&str)\n->\n    Result<Vec<crate::format_description::FormatItem>,\n    crate::error::InvalidFormatDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of items from the format description.","sig":null,"attributes":[{"value":"/ Parse a sequence of items from the format description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":138970,"byte_end":139028,"line_start":10,"line_end":10,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139029,"byte_end":139032,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ The syntax for the format description can be found in [the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139033,"byte_end":139095,"line_start":12,"line_end":12,"column_start":1,"column_end":63}},{"value":"/ book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139096,"byte_end":139166,"line_start":13,"line_end":13,"column_start":1,"column_end":71}}]},{"kind":"Function","id":{"krate":0,"index":859},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139961,"byte_end":139972,"line_start":35,"line_end":35,"column_start":8,"column_end":19},"name":"parse_owned","qualname":"::format_description::parse::parse_owned","value":"fn parse_owned(&str)\n->\n    Result<crate::format_description::OwnedFormatItem,\n    crate::error::InvalidFormatDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of items from the format description.","sig":null,"attributes":[{"value":"/ Parse a sequence of items from the format description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139524,"byte_end":139582,"line_start":26,"line_end":26,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139583,"byte_end":139586,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ The syntax for the format description can be found in [the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139587,"byte_end":139649,"line_start":28,"line_end":28,"column_start":1,"column_end":63}},{"value":"/ book](https://time-rs.github.io/book/api/format-description.html).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139650,"byte_end":139720,"line_start":29,"line_end":29,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139721,"byte_end":139724,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Unlike [`parse`], this function returns [`OwnedFormatItem`], which owns its contents. This means","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139725,"byte_end":139825,"line_start":31,"line_end":31,"column_start":1,"column_end":101}},{"value":"/ that there is no lifetime that needs to be handled.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139826,"byte_end":139881,"line_start":32,"line_end":32,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139882,"byte_end":139885,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ [`OwnedFormatItem`]: crate::format_description::OwnedFormatItem","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":139886,"byte_end":139953,"line_start":34,"line_end":34,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":144319,"byte_end":144323,"line_start":190,"line_end":190,"column_start":8,"column_end":12},"name":"from","qualname":"<crate::error::InvalidFormatDescription as std::convert::From>::from","value":"fn from(Error) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":902},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116908,"byte_end":116918,"line_start":25,"line_end":25,"column_start":9,"column_end":19},"name":"well_known","qualname":"::format_description::well_known","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","parent":null,"children":[{"krate":0,"index":903},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":976},{"krate":0,"index":977},{"krate":0,"index":979},{"krate":0,"index":980}],"decl_id":null,"docs":" Well-known formats, typically standards.\n","sig":null,"attributes":[{"value":"/ Well-known formats, typically standards.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116855,"byte_end":116899,"line_start":24,"line_end":24,"column_start":1,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":903},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iso8601","qualname":"::format_description::well_known::iso8601","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","parent":null,"children":[{"krate":0,"index":904},{"krate":0,"index":944},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":954},{"krate":0,"index":955},{"krate":0,"index":4081},{"krate":0,"index":4085},{"krate":0,"index":4090},{"krate":0,"index":4093},{"krate":0,"index":4096},{"krate":0,"index":4101},{"krate":0,"index":4104},{"krate":0,"index":956},{"krate":0,"index":959},{"krate":0,"index":961},{"krate":0,"index":4108},{"krate":0,"index":4123},{"krate":0,"index":4125},{"krate":0,"index":4127},{"krate":0,"index":4128},{"krate":0,"index":4129},{"krate":0,"index":4131},{"krate":0,"index":4132},{"krate":0,"index":4134},{"krate":0,"index":4141},{"krate":0,"index":4143},{"krate":0,"index":4145},{"krate":0,"index":4146},{"krate":0,"index":4147},{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4152},{"krate":0,"index":4159},{"krate":0,"index":4161},{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165},{"krate":0,"index":4168},{"krate":0,"index":4169},{"krate":0,"index":4171},{"krate":0,"index":4176},{"krate":0,"index":4178},{"krate":0,"index":4180},{"krate":0,"index":4181},{"krate":0,"index":4182},{"krate":0,"index":4184},{"krate":0,"index":4185},{"krate":0,"index":4187},{"krate":0,"index":4194},{"krate":0,"index":963}],"decl_id":null,"docs":" The format described in ISO 8601.\n","sig":null,"attributes":[{"value":"/ The format described in ISO 8601.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":170823,"byte_end":170860,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":927},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":179225,"byte_end":179246,"line_start":12,"line_end":12,"column_start":10,"column_end":31},"name":"DoNotRelyOnWhatThisIs","qualname":"::format_description::well_known::iso8601::adt_hack::DoNotRelyOnWhatThisIs","value":"u128","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":928},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":179455,"byte_end":179468,"line_start":18,"line_end":18,"column_start":10,"column_end":23},"name":"EncodedConfig","qualname":"::format_description::well_known::iso8601::adt_hack::EncodedConfig","value":"DoNotRelyOnWhatThisIs","parent":null,"children":[],"decl_id":null,"docs":" An encoded [`Config`] that can be used as a const parameter to [`Iso8601`].","sig":null,"attributes":[{"value":"/ An encoded [`Config`] that can be used as a const parameter to [`Iso8601`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":179256,"byte_end":179335,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":179336,"byte_end":179339,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ The type this is aliased to must not be relied upon. It can change in any release without","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":179340,"byte_end":179433,"line_start":16,"line_end":16,"column_start":1,"column_end":94}},{"value":"/ notice.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":179434,"byte_end":179445,"line_start":17,"line_end":17,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":941},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":181263,"byte_end":181269,"line_start":56,"line_end":56,"column_start":18,"column_end":24},"name":"encode","qualname":"<Config>::encode","value":"const fn encode(&Self) -> EncodedConfig","parent":null,"children":[],"decl_id":null,"docs":" Encode the configuration, permitting it to be used as a const parameter of [`Iso8601`].","sig":null,"attributes":[{"value":"/ Encode the configuration, permitting it to be used as a const parameter of [`Iso8601`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":181000,"byte_end":181091,"line_start":52,"line_end":52,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":181096,"byte_end":181099,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ The value returned by this method must only be used as a const parameter to [`Iso8601`]. Any","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":181104,"byte_end":181200,"line_start":54,"line_end":54,"column_start":5,"column_end":101}},{"value":"/ other usage is unspecified behavior.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":181205,"byte_end":181245,"line_start":55,"line_end":55,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":4081},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172328,"byte_end":172335,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"Iso8601","qualname":"::format_description::well_known::iso8601::Iso8601","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).","sig":null,"attributes":[{"value":"/ The format described in [ISO 8601](https://www.iso.org/iso-8601-date-and-time-format.html).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171471,"byte_end":171566,"line_start":25,"line_end":25,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171567,"byte_end":171570,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ This implementation is of ISO 8601-1:2019. It may not be compatible with other versions.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171571,"byte_end":171663,"line_start":27,"line_end":27,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171664,"byte_end":171667,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ The const parameter `CONFIG` **must** be a value that was returned by [`Config::encode`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171668,"byte_end":171761,"line_start":29,"line_end":29,"column_start":1,"column_end":94}},{"value":"/ Passing any other value is **unspecified behavior**.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171762,"byte_end":171818,"line_start":30,"line_end":30,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171819,"byte_end":171822,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Example: 1997-11-21T09:55:06.000000000-06:00","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171823,"byte_end":171871,"line_start":32,"line_end":32,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171872,"byte_end":171875,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":171876,"byte_end":171890,"line_start":34,"line_end":34,"column_start":1,"column_end":15}},{"value":"/ # use time::format_description::well_known::Iso8601;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172009,"byte_end":172065,"line_start":37,"line_end":37,"column_start":1,"column_end":57}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172066,"byte_end":172098,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172099,"byte_end":172114,"line_start":39,"line_end":39,"column_start":1,"column_end":16}},{"value":"/     datetime!(1997-11-12 9:55:06 -6:00).format(&Iso8601::DEFAULT)?,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172115,"byte_end":172186,"line_start":40,"line_end":40,"column_start":1,"column_end":72}},{"value":"/     \"1997-11-12T09:55:06.000000000-06:00\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172187,"byte_end":172232,"line_start":41,"line_end":41,"column_start":1,"column_end":46}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172233,"byte_end":172239,"line_start":42,"line_end":42,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172240,"byte_end":172270,"line_start":43,"line_end":43,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172271,"byte_end":172278,"line_start":44,"line_end":44,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":958},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172464,"byte_end":172467,"line_start":49,"line_end":49,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Iso8601<CONFIG> as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut core::fmt::Formatter) -> core::fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":960},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173402,"byte_end":173409,"line_start":71,"line_end":71,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::format_description::well_known::iso8601::Iso8601::<DEFAULT_CONFIG>::DEFAULT","value":"Self","parent":{"krate":0,"index":959},"children":[],"decl_id":null,"docs":" An [`Iso8601`] with the default configuration.","sig":null,"attributes":[{"value":"/ An [`Iso8601`] with the default configuration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172686,"byte_end":172736,"line_start":57,"line_end":57,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172741,"byte_end":172744,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ The following is the default behavior:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172749,"byte_end":172791,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172796,"byte_end":172799,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ - The configuration can be used for both formatting and parsing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172804,"byte_end":172872,"line_start":61,"line_end":61,"column_start":5,"column_end":73}},{"value":"/ - The date, time, and UTC offset are all formatted.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172877,"byte_end":172932,"line_start":62,"line_end":62,"column_start":5,"column_end":60}},{"value":"/ - Separators (such as `-` and `:`) are included.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172937,"byte_end":172989,"line_start":63,"line_end":63,"column_start":5,"column_end":57}},{"value":"/ - The year contains four digits, such that the year must be between 0 and 9999.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172994,"byte_end":173077,"line_start":64,"line_end":64,"column_start":5,"column_end":88}},{"value":"/ - The date uses the calendar format.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173082,"byte_end":173122,"line_start":65,"line_end":65,"column_start":5,"column_end":45}},{"value":"/ - The time has precision to the second and nine decimal digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173127,"byte_end":173194,"line_start":66,"line_end":66,"column_start":5,"column_end":72}},{"value":"/ - The UTC offset has precision to the minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173199,"byte_end":173248,"line_start":67,"line_end":67,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173253,"byte_end":173256,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ If you need different behavior, use [`Config::DEFAULT`] and [`Config`]'s methods to create","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173261,"byte_end":173355,"line_start":69,"line_end":69,"column_start":5,"column_end":99}},{"value":"/ a custom configuration.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173360,"byte_end":173387,"line_start":70,"line_end":70,"column_start":5,"column_end":32}}]},{"kind":"Const","id":{"krate":0,"index":962},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173590,"byte_end":173597,"line_start":77,"line_end":77,"column_start":15,"column_end":22},"name":"PARSING","qualname":"::format_description::well_known::iso8601::Iso8601::<PARSING_ONLY>::PARSING","value":"Self","parent":{"krate":0,"index":961},"children":[],"decl_id":null,"docs":" An [`Iso8601`] that can only be used for parsing. Using this to format a value is\n unspecified behavior.\n","sig":null,"attributes":[{"value":"/ An [`Iso8601`] that can only be used for parsing. Using this to format a value is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173460,"byte_end":173545,"line_start":75,"line_end":75,"column_start":5,"column_end":90}},{"value":"/ unspecified behavior.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173550,"byte_end":173575,"line_start":76,"line_end":76,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4109},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173845,"byte_end":173849,"line_start":85,"line_end":85,"column_start":5,"column_end":9},"name":"None","qualname":"::format_description::well_known::iso8601::FormattedComponents::None","value":"FormattedComponents::None","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" The configuration can only be used for parsing. Using this to format a value is\n unspecified behavior.\n","sig":null,"attributes":[{"value":"/ The configuration can only be used for parsing. Using this to format a value is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173727,"byte_end":173810,"line_start":83,"line_end":83,"column_start":5,"column_end":88}},{"value":"/ unspecified behavior.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173815,"byte_end":173840,"line_start":84,"line_end":84,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4111},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173885,"byte_end":173889,"line_start":87,"line_end":87,"column_start":5,"column_end":9},"name":"Date","qualname":"::format_description::well_known::iso8601::FormattedComponents::Date","value":"FormattedComponents::Date","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Format only the date.\n","sig":null,"attributes":[{"value":"/ Format only the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173855,"byte_end":173880,"line_start":86,"line_end":86,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4113},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173925,"byte_end":173929,"line_start":89,"line_end":89,"column_start":5,"column_end":9},"name":"Time","qualname":"::format_description::well_known::iso8601::FormattedComponents::Time","value":"FormattedComponents::Time","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Format only the time.\n","sig":null,"attributes":[{"value":"/ Format only the time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173895,"byte_end":173920,"line_start":88,"line_end":88,"column_start":5,"column_end":30}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4115},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173971,"byte_end":173977,"line_start":91,"line_end":91,"column_start":5,"column_end":11},"name":"Offset","qualname":"::format_description::well_known::iso8601::FormattedComponents::Offset","value":"FormattedComponents::Offset","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Format only the UTC offset.\n","sig":null,"attributes":[{"value":"/ Format only the UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173935,"byte_end":173966,"line_start":90,"line_end":90,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4117},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174017,"byte_end":174025,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"DateTime","qualname":"::format_description::well_known::iso8601::FormattedComponents::DateTime","value":"FormattedComponents::DateTime","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Format the date and time.\n","sig":null,"attributes":[{"value":"/ Format the date and time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173983,"byte_end":174012,"line_start":92,"line_end":92,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4119},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174078,"byte_end":174092,"line_start":95,"line_end":95,"column_start":5,"column_end":19},"name":"DateTimeOffset","qualname":"::format_description::well_known::iso8601::FormattedComponents::DateTimeOffset","value":"FormattedComponents::DateTimeOffset","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Format the date, time, and UTC offset.\n","sig":null,"attributes":[{"value":"/ Format the date, time, and UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174031,"byte_end":174073,"line_start":94,"line_end":94,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4121},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174138,"byte_end":174148,"line_start":97,"line_end":97,"column_start":5,"column_end":15},"name":"TimeOffset","qualname":"::format_description::well_known::iso8601::FormattedComponents::TimeOffset","value":"FormattedComponents::TimeOffset","parent":{"krate":0,"index":4108},"children":[],"decl_id":null,"docs":" Format the time and UTC offset.\n","sig":null,"attributes":[{"value":"/ Format the time and UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174098,"byte_end":174133,"line_start":96,"line_end":96,"column_start":5,"column_end":40}}]},{"kind":"Enum","id":{"krate":0,"index":4108},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173701,"byte_end":173720,"line_start":82,"line_end":82,"column_start":10,"column_end":29},"name":"FormattedComponents","qualname":"::format_description::well_known::iso8601::FormattedComponents","value":"enum FormattedComponents {\n    None,\n    Date,\n    Time,\n    Offset,\n    DateTime,\n    DateTimeOffset,\n    TimeOffset,\n}","parent":null,"children":[{"krate":0,"index":4109},{"krate":0,"index":4111},{"krate":0,"index":4113},{"krate":0,"index":4115},{"krate":0,"index":4117},{"krate":0,"index":4119},{"krate":0,"index":4121}],"decl_id":null,"docs":" Which components to format.\n","sig":null,"attributes":[{"value":"/ Which components to format.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173615,"byte_end":173646,"line_start":80,"line_end":80,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4135},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174299,"byte_end":174307,"line_start":104,"line_end":104,"column_start":5,"column_end":13},"name":"Calendar","qualname":"::format_description::well_known::iso8601::DateKind::Calendar","value":"DateKind::Calendar","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":" Use the year-month-day format.\n","sig":null,"attributes":[{"value":"/ Use the year-month-day format.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174260,"byte_end":174294,"line_start":103,"line_end":103,"column_start":5,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4137},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174355,"byte_end":174359,"line_start":106,"line_end":106,"column_start":5,"column_end":9},"name":"Week","qualname":"::format_description::well_known::iso8601::DateKind::Week","value":"DateKind::Week","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":" Use the year-week-weekday format.\n","sig":null,"attributes":[{"value":"/ Use the year-week-weekday format.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174313,"byte_end":174350,"line_start":105,"line_end":105,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4139},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174402,"byte_end":174409,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Ordinal","qualname":"::format_description::well_known::iso8601::DateKind::Ordinal","value":"DateKind::Ordinal","parent":{"krate":0,"index":4134},"children":[],"decl_id":null,"docs":" Use the week-ordinal format.\n","sig":null,"attributes":[{"value":"/ Use the week-ordinal format.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174365,"byte_end":174397,"line_start":107,"line_end":107,"column_start":5,"column_end":37}}]},{"kind":"Enum","id":{"krate":0,"index":4134},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174245,"byte_end":174253,"line_start":102,"line_end":102,"column_start":10,"column_end":18},"name":"DateKind","qualname":"::format_description::well_known::iso8601::DateKind","value":"enum DateKind { Calendar, Week, Ordinal, }","parent":null,"children":[{"krate":0,"index":4135},{"krate":0,"index":4137},{"krate":0,"index":4139}],"decl_id":null,"docs":" Which format to use for the date.\n","sig":null,"attributes":[{"value":"/ Which format to use for the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174153,"byte_end":174190,"line_start":100,"line_end":100,"column_start":1,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":4153},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174702,"byte_end":174706,"line_start":116,"line_end":116,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::well_known::iso8601::TimePrecision::Hour","value":"TimePrecision::Hour { decimal_digits }","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":" Format the hour only. Minutes, seconds, and nanoseconds will be represented with the\n specified number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour only. Minutes, seconds, and nanoseconds will be represented with the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174557,"byte_end":174645,"line_start":114,"line_end":114,"column_start":5,"column_end":93}},{"value":"/ specified number of decimal digits, if any.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174650,"byte_end":174697,"line_start":115,"line_end":115,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":4154},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174773,"byte_end":174787,"line_start":118,"line_end":118,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Hour::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":4153},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174717,"byte_end":174764,"line_start":117,"line_end":117,"column_start":9,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":4155},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174960,"byte_end":174966,"line_start":122,"line_end":122,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::well_known::iso8601::TimePrecision::Minute","value":"TimePrecision::Minute { decimal_digits }","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":" Format the hour and minute. Seconds and nanoseconds will be represented with the specified\n number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour and minute. Seconds and nanoseconds will be represented with the specified","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174819,"byte_end":174913,"line_start":120,"line_end":120,"column_start":5,"column_end":99}},{"value":"/ number of decimal digits, if any.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174918,"byte_end":174955,"line_start":121,"line_end":121,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4156},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175033,"byte_end":175047,"line_start":124,"line_end":124,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Minute::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":4155},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174977,"byte_end":175024,"line_start":123,"line_end":123,"column_start":9,"column_end":56}}]},{"kind":"StructVariant","id":{"krate":0,"index":4157},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175217,"byte_end":175223,"line_start":128,"line_end":128,"column_start":5,"column_end":11},"name":"Second","qualname":"::format_description::well_known::iso8601::TimePrecision::Second","value":"TimePrecision::Second { decimal_digits }","parent":{"krate":0,"index":4152},"children":[],"decl_id":null,"docs":" Format the hour, minute, and second. Nanoseconds will be represented with the specified\n number of decimal digits, if any.\n","sig":null,"attributes":[{"value":"/ Format the hour, minute, and second. Nanoseconds will be represented with the specified","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175079,"byte_end":175170,"line_start":126,"line_end":126,"column_start":5,"column_end":96}},{"value":"/ number of decimal digits, if any.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175175,"byte_end":175212,"line_start":127,"line_end":127,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":4158},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175290,"byte_end":175304,"line_start":130,"line_end":130,"column_start":9,"column_end":23},"name":"decimal_digits","qualname":"::format_description::well_known::iso8601::TimePrecision::Second::decimal_digits","value":"std::option::Option<std::num::NonZeroU8>","parent":{"krate":0,"index":4157},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175234,"byte_end":175281,"line_start":129,"line_end":129,"column_start":9,"column_end":56}}]},{"kind":"Enum","id":{"krate":0,"index":4152},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174537,"byte_end":174550,"line_start":113,"line_end":113,"column_start":10,"column_end":23},"name":"TimePrecision","qualname":"::format_description::well_known::iso8601::TimePrecision","value":"enum TimePrecision {\n    Hour {\n            decimal_digits: Option<NonZeroU8>,\n        },\n    Minute {\n            decimal_digits: Option<NonZeroU8>,\n        },\n    Second {\n            decimal_digits: Option<NonZeroU8>,\n        },\n}","parent":null,"children":[{"krate":0,"index":4153},{"krate":0,"index":4155},{"krate":0,"index":4157}],"decl_id":null,"docs":" The precision and number of decimal digits present for the time.\n","sig":null,"attributes":[{"value":"/ The precision and number of decimal digits present for the time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":174414,"byte_end":174482,"line_start":111,"line_end":111,"column_start":1,"column_end":69}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4172},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175525,"byte_end":175529,"line_start":138,"line_end":138,"column_start":5,"column_end":9},"name":"Hour","qualname":"::format_description::well_known::iso8601::OffsetPrecision::Hour","value":"OffsetPrecision::Hour","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" Format only the offset hour. Requires the offset minute to be zero.\n","sig":null,"attributes":[{"value":"/ Format only the offset hour. Requires the offset minute to be zero.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175449,"byte_end":175520,"line_start":137,"line_end":137,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4174},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175583,"byte_end":175589,"line_start":140,"line_end":140,"column_start":5,"column_end":11},"name":"Minute","qualname":"::format_description::well_known::iso8601::OffsetPrecision::Minute","value":"OffsetPrecision::Minute","parent":{"krate":0,"index":4171},"children":[],"decl_id":null,"docs":" Format both the offset hour and minute.\n","sig":null,"attributes":[{"value":"/ Format both the offset hour and minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175535,"byte_end":175578,"line_start":139,"line_end":139,"column_start":5,"column_end":48}}]},{"kind":"Enum","id":{"krate":0,"index":4171},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175427,"byte_end":175442,"line_start":136,"line_end":136,"column_start":10,"column_end":25},"name":"OffsetPrecision","qualname":"::format_description::well_known::iso8601::OffsetPrecision","value":"enum OffsetPrecision { Hour, Minute, }","parent":null,"children":[{"krate":0,"index":4172},{"krate":0,"index":4174}],"decl_id":null,"docs":" The precision for the UTC offset.\n","sig":null,"attributes":[{"value":"/ The precision for the UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175335,"byte_end":175372,"line_start":134,"line_end":134,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":4187},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175903,"byte_end":175909,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"Config","qualname":"::format_description::well_known::iso8601::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":4188},{"krate":0,"index":4189},{"krate":0,"index":4190},{"krate":0,"index":4191},{"krate":0,"index":4192},{"krate":0,"index":4193}],"decl_id":null,"docs":" Configuration for [`Iso8601`].\n","sig":null,"attributes":[{"value":"/ Configuration for [`Iso8601`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175594,"byte_end":175628,"line_start":143,"line_end":143,"column_start":1,"column_end":35}},{"value":"allow(missing_copy_implementations)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":175735,"byte_end":175773,"line_start":146,"line_end":146,"column_start":1,"column_end":39}}]},{"kind":"Const","id":{"krate":0,"index":964},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":177177,"byte_end":177184,"line_start":178,"line_end":178,"column_start":15,"column_end":22},"name":"DEFAULT","qualname":"::format_description::well_known::iso8601::Config::DEFAULT","value":"Self","parent":{"krate":0,"index":963},"children":[],"decl_id":null,"docs":" A configuration for the [`Iso8601`] format.","sig":null,"attributes":[{"value":"/ A configuration for the [`Iso8601`] format.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176516,"byte_end":176563,"line_start":165,"line_end":165,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176568,"byte_end":176571,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ The following is the default behavior:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176576,"byte_end":176618,"line_start":167,"line_end":167,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176623,"byte_end":176626,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ - The configuration can be used for both formatting and parsing.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176631,"byte_end":176699,"line_start":169,"line_end":169,"column_start":5,"column_end":73}},{"value":"/ - The date, time, and UTC offset are all formatted.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176704,"byte_end":176759,"line_start":170,"line_end":170,"column_start":5,"column_end":60}},{"value":"/ - Separators (such as `-` and `:`) are included.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176764,"byte_end":176816,"line_start":171,"line_end":171,"column_start":5,"column_end":57}},{"value":"/ - The year contains four digits, such that the year must be between 0 and 9999.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176821,"byte_end":176904,"line_start":172,"line_end":172,"column_start":5,"column_end":88}},{"value":"/ - The date uses the calendar format.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176909,"byte_end":176949,"line_start":173,"line_end":173,"column_start":5,"column_end":45}},{"value":"/ - The time has precision to the second and nine decimal digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176954,"byte_end":177021,"line_start":174,"line_end":174,"column_start":5,"column_end":72}},{"value":"/ - The UTC offset has precision to the minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":177026,"byte_end":177075,"line_start":175,"line_end":175,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":177080,"byte_end":177083,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ If you need different behavior, use the setter methods on this struct.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":177088,"byte_end":177162,"line_start":177,"line_end":177,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":965},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":177619,"byte_end":177643,"line_start":190,"line_end":190,"column_start":18,"column_end":42},"name":"set_formatted_components","qualname":"<Config>::set_formatted_components","value":"const fn set_formatted_components(Self, FormattedComponents) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the format the date, time, and/or UTC offset.\n","sig":null,"attributes":[{"value":"/ Set whether the format the date, time, and/or UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":177540,"byte_end":177601,"line_start":189,"line_end":189,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":966},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":177878,"byte_end":177896,"line_start":198,"line_end":198,"column_start":18,"column_end":36},"name":"set_use_separators","qualname":"<Config>::set_use_separators","value":"const fn set_use_separators(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the format contains separators (such as `-` or `:`).\n","sig":null,"attributes":[{"value":"/ Set whether the format contains separators (such as `-` or `:`).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":177792,"byte_end":177860,"line_start":197,"line_end":197,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":967},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":178075,"byte_end":178097,"line_start":206,"line_end":206,"column_start":18,"column_end":40},"name":"set_year_is_six_digits","qualname":"<Config>::set_year_is_six_digits","value":"const fn set_year_is_six_digits(Self, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set whether the year is six digits.\n","sig":null,"attributes":[{"value":"/ Set whether the year is six digits.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":178018,"byte_end":178057,"line_start":205,"line_end":205,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":968},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":178282,"byte_end":178295,"line_start":214,"line_end":214,"column_start":18,"column_end":31},"name":"set_date_kind","qualname":"<Config>::set_date_kind","value":"const fn set_date_kind(Self, DateKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the format used for the date.\n","sig":null,"attributes":[{"value":"/ Set the format used for the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":178227,"byte_end":178264,"line_start":213,"line_end":213,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":178469,"byte_end":178487,"line_start":219,"line_end":219,"column_start":18,"column_end":36},"name":"set_time_precision","qualname":"<Config>::set_time_precision","value":"const fn set_time_precision(Self, TimePrecision) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the precision and number of decimal digits present for the time.\n","sig":null,"attributes":[{"value":"/ Set the precision and number of decimal digits present for the time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":178379,"byte_end":178451,"line_start":218,"line_end":218,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":970},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":178677,"byte_end":178697,"line_start":227,"line_end":227,"column_start":18,"column_end":38},"name":"set_offset_precision","qualname":"<Config>::set_offset_precision","value":"const fn set_offset_precision(Self, OffsetPrecision) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Set the precision for the UTC offset.\n","sig":null,"attributes":[{"value":"/ Set the precision for the UTC offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":178618,"byte_end":178659,"line_start":226,"line_end":226,"column_start":5,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":4196},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189657,"byte_end":189664,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Rfc2822","qualname":"::format_description::well_known::rfc2822::Rfc2822","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","sig":null,"attributes":[{"value":"/ The format described in [RFC 2822](https://tools.ietf.org/html/rfc2822#section-3.3).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":188662,"byte_end":188750,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":188751,"byte_end":188754,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Example: Fri, 21 Nov 1997 09:55:06 -0600","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":188755,"byte_end":188799,"line_start":5,"line_end":5,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":188800,"byte_end":188803,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":188804,"byte_end":188818,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/ # use time::{format_description::well_known::Rfc2822, OffsetDateTime};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":188931,"byte_end":189005,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189006,"byte_end":189036,"line_start":11,"line_end":11,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189037,"byte_end":189052,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/     OffsetDateTime::parse(\"Sat, 12 Jun 1993 13:25:19 GMT\", &Rfc2822)?,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189053,"byte_end":189127,"line_start":13,"line_end":13,"column_start":1,"column_end":75}},{"value":"/     datetime!(1993-06-12 13:25:19 +00:00)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189128,"byte_end":189173,"line_start":14,"line_end":14,"column_start":1,"column_end":46}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189174,"byte_end":189180,"line_start":15,"line_end":15,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189181,"byte_end":189211,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189212,"byte_end":189219,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189220,"byte_end":189223,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # use time::format_description::well_known::Rfc2822;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189342,"byte_end":189398,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189399,"byte_end":189431,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189432,"byte_end":189447,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     datetime!(1997-11-21 09:55:06 -06:00).format(&Rfc2822)?,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189448,"byte_end":189512,"line_start":24,"line_end":24,"column_start":1,"column_end":65}},{"value":"/     \"Fri, 21 Nov 1997 09:55:06 -0600\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189513,"byte_end":189554,"line_start":25,"line_end":25,"column_start":1,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189555,"byte_end":189561,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189562,"byte_end":189592,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc2822.rs","byte_start":189593,"byte_end":189600,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4209},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190694,"byte_end":190701,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Rfc3339","qualname":"::format_description::well_known::rfc3339::Rfc3339","value":"","parent":null,"children":[],"decl_id":null,"docs":" The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","sig":null,"attributes":[{"value":"/ The format described in [RFC 3339](https://tools.ietf.org/html/rfc3339#section-5.6).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":189706,"byte_end":189794,"line_start":3,"line_end":3,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":189795,"byte_end":189798,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Format example: 1985-04-12T23:20:50.52Z","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":189799,"byte_end":189842,"line_start":5,"line_end":5,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":189843,"byte_end":189846,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":189847,"byte_end":189861,"line_start":7,"line_end":7,"column_start":1,"column_end":15}},{"value":"/ # use time::{format_description::well_known::Rfc3339, OffsetDateTime};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":189974,"byte_end":190048,"line_start":10,"line_end":10,"column_start":1,"column_end":75}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190049,"byte_end":190081,"line_start":11,"line_end":11,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190082,"byte_end":190097,"line_start":12,"line_end":12,"column_start":1,"column_end":16}},{"value":"/     OffsetDateTime::parse(\"1985-04-12T23:20:50.52Z\", &Rfc3339)?,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190098,"byte_end":190166,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190167,"byte_end":190215,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190216,"byte_end":190222,"line_start":15,"line_end":15,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190223,"byte_end":190253,"line_start":16,"line_end":16,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190254,"byte_end":190261,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190262,"byte_end":190265,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # use time::format_description::well_known::Rfc3339;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190384,"byte_end":190440,"line_start":21,"line_end":21,"column_start":1,"column_end":57}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190441,"byte_end":190473,"line_start":22,"line_end":22,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190474,"byte_end":190489,"line_start":23,"line_end":23,"column_start":1,"column_end":16}},{"value":"/     datetime!(1985-04-12 23:20:50.52 +00:00).format(&Rfc3339)?,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190490,"byte_end":190557,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/     \"1985-04-12T23:20:50.52Z\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190558,"byte_end":190591,"line_start":25,"line_end":25,"column_start":1,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190592,"byte_end":190598,"line_start":26,"line_end":26,"column_start":1,"column_end":7}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190599,"byte_end":190629,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/rfc3339.rs","byte_start":190630,"byte_end":190637,"line_start":28,"line_end":28,"column_start":1,"column_end":8}}]},{"kind":"Mod","id":{"krate":0,"index":982},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"formatting","qualname":"::formatting","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/mod.rs","parent":null,"children":[{"krate":0,"index":983},{"krate":0,"index":1111},{"krate":0,"index":1185},{"krate":0,"index":1188},{"krate":0,"index":1191},{"krate":0,"index":1194},{"krate":0,"index":1195},{"krate":0,"index":1198},{"krate":0,"index":1201},{"krate":0,"index":1202},{"krate":0,"index":1205},{"krate":0,"index":1208},{"krate":0,"index":1211},{"krate":0,"index":1214},{"krate":0,"index":1216},{"krate":0,"index":1218},{"krate":0,"index":1220},{"krate":0,"index":1222},{"krate":0,"index":1224},{"krate":0,"index":1227},{"krate":0,"index":1229},{"krate":0,"index":1231},{"krate":0,"index":1233},{"krate":0,"index":1235},{"krate":0,"index":1239},{"krate":0,"index":1243},{"krate":0,"index":1247},{"krate":0,"index":1250},{"krate":0,"index":1253},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":1263},{"krate":0,"index":1266},{"krate":0,"index":1270},{"krate":0,"index":1273},{"krate":0,"index":1276},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":1293},{"krate":0,"index":1296},{"krate":0,"index":1299}],"decl_id":null,"docs":" Formatting for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"formatting\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10299,"byte_end":10329,"line_start":310,"line_end":310,"column_start":1,"column_end":31}},{"value":"/ Formatting for various types.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/mod.rs","byte_start":190704,"byte_end":190737,"line_start":1,"line_end":1,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":1042},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208077,"byte_end":208088,"line_start":16,"line_end":16,"column_start":11,"column_end":22},"name":"Formattable","qualname":"::formatting::formattable::Formattable","value":"Formattable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be formatted.\n","sig":null,"attributes":[{"value":"/ A type that can be formatted.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":207985,"byte_end":208018,"line_start":14,"line_end":14,"column_start":1,"column_end":34}}]},{"kind":"Trait","id":{"krate":0,"index":1055},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208724,"byte_end":208730,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::formatting::formattable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":1056},{"krate":0,"index":1058}],"decl_id":null,"docs":" Format the item using a format description, the intended output, and the various components.\n","sig":null,"attributes":[{"value":"/ Format the item using a format description, the intended output, and the various components.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208613,"byte_end":208709,"line_start":31,"line_end":31,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208837,"byte_end":208848,"line_start":34,"line_end":34,"column_start":12,"column_end":23},"name":"format_into","qualname":"::formatting::formattable::sealed::Sealed::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":" Format the item into the provided output, returning the number of bytes written.\n","sig":null,"attributes":[{"value":"/ Format the item into the provided output, returning the number of bytes written.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208741,"byte_end":208825,"line_start":33,"line_end":33,"column_start":9,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":209120,"byte_end":209126,"line_start":43,"line_end":43,"column_start":12,"column_end":18},"name":"format","qualname":"::formatting::formattable::sealed::Sealed::format","value":"fn format(&Self, Option<Date>, Option<Time>, Option<UtcOffset>)\n-> Result<String, error::Format>","parent":{"krate":0,"index":1055},"children":[],"decl_id":null,"docs":" Format the item directly to a `String`.\n","sig":null,"attributes":[{"value":"/ Format the item directly to a `String`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":209065,"byte_end":209108,"line_start":42,"line_end":42,"column_start":9,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1061},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":209550,"byte_end":209561,"line_start":58,"line_end":58,"column_start":8,"column_end":19},"name":"format_into","qualname":"<FormatItem as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":1055},"children":[],"decl_id":{"krate":0,"index":1056},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":210341,"byte_end":210352,"line_start":79,"line_end":79,"column_start":8,"column_end":19},"name":"format_into","qualname":"<[FormatItem] as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":1055},"children":[],"decl_id":{"krate":0,"index":1056},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1068},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":210752,"byte_end":210763,"line_start":95,"line_end":95,"column_start":8,"column_end":19},"name":"format_into","qualname":"<OwnedFormatItem as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":1055},"children":[],"decl_id":{"krate":0,"index":1056},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":211543,"byte_end":211554,"line_start":116,"line_end":116,"column_start":8,"column_end":19},"name":"format_into","qualname":"<[OwnedFormatItem] as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":1055},"children":[],"decl_id":{"krate":0,"index":1056},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":211987,"byte_end":211998,"line_start":135,"line_end":135,"column_start":8,"column_end":19},"name":"format_into","qualname":"<T as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":1055},"children":[],"decl_id":{"krate":0,"index":1056},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":212352,"byte_end":212363,"line_start":149,"line_end":149,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Rfc2822 as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":1055},"children":[],"decl_id":{"krate":0,"index":1056},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1088},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":214316,"byte_end":214327,"line_start":198,"line_end":198,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Rfc3339 as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":1055},"children":[],"decl_id":{"krate":0,"index":1056},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":217536,"byte_end":217547,"line_start":273,"line_end":273,"column_start":8,"column_end":19},"name":"format_into","qualname":"<Iso8601<CONFIG> as formatting::formattable::sealed::Sealed>::format_into","value":"fn format_into<impl io::Write>(&Self, &mut impl io::Write, Option<Date>,\nOption<Time>, Option<UtcOffset>) -> Result<usize, error::Format> where\nimpl io::Write: io::Write","parent":{"krate":0,"index":1055},"children":[],"decl_id":{"krate":0,"index":1056},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4222},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226036,"byte_end":226043,"line_start":30,"line_end":30,"column_start":12,"column_end":19},"name":"Instant","qualname":"::instant::Instant","value":"","parent":null,"children":[],"decl_id":null,"docs":" A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","sig":null,"attributes":[{"value":"/ A measurement of a monotonically non-decreasing clock. Opaque and useful only with [`Duration`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":224917,"byte_end":225017,"line_start":11,"line_end":11,"column_start":1,"column_end":101}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225018,"byte_end":225021,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Instants are always guaranteed to be no less than any previously measured instant when created,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225022,"byte_end":225121,"line_start":13,"line_end":13,"column_start":1,"column_end":100}},{"value":"/ and are often useful for tasks such as measuring benchmarks or timing how long an operation","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225122,"byte_end":225217,"line_start":14,"line_end":14,"column_start":1,"column_end":96}},{"value":"/ takes.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225218,"byte_end":225228,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225229,"byte_end":225232,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Note, however, that instants are not guaranteed to be **steady**. In other words, each tick of","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225233,"byte_end":225331,"line_start":17,"line_end":17,"column_start":1,"column_end":99}},{"value":"/ the underlying clock may not be the same length (e.g. some seconds may be longer than others).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225332,"byte_end":225430,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ An instant may jump forwards or experience time dilation (slow down or speed up), but it will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225431,"byte_end":225528,"line_start":19,"line_end":19,"column_start":1,"column_end":98}},{"value":"/ never go backwards.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225529,"byte_end":225552,"line_start":20,"line_end":20,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225553,"byte_end":225556,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ Instants are opaque types that can only be compared to one another. There is no method to get","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225557,"byte_end":225654,"line_start":22,"line_end":22,"column_start":1,"column_end":98}},{"value":"/ \"the number of seconds\" from an instant. Instead, it only allows measuring the duration between","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225655,"byte_end":225754,"line_start":23,"line_end":23,"column_start":1,"column_end":100}},{"value":"/ two instants (or comparing two instants).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225755,"byte_end":225800,"line_start":24,"line_end":24,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225801,"byte_end":225804,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This implementation allows for operations with signed [`Duration`]s, but is otherwise identical","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225805,"byte_end":225904,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ to [`std::time::Instant`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225905,"byte_end":225935,"line_start":27,"line_end":27,"column_start":1,"column_end":31}},{"value":"repr(transparent)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":225936,"byte_end":225956,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":4224},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226044,"byte_end":226058,"line_start":30,"line_end":30,"column_start":20,"column_end":34},"name":"0","qualname":"::instant::Instant::0","value":"std::time::Instant","parent":{"krate":0,"index":4222},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226274,"byte_end":226277,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"now","qualname":"<Instant>::now","value":"fn now() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns an `Instant` corresponding to \"now\".","sig":null,"attributes":[{"value":"/ Returns an `Instant` corresponding to \"now\".","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226107,"byte_end":226155,"line_start":34,"line_end":34,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226160,"byte_end":226163,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226168,"byte_end":226179,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226184,"byte_end":226208,"line_start":37,"line_end":37,"column_start":5,"column_end":29}},{"value":"/ println!(\"{:?}\", Instant::now());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226213,"byte_end":226250,"line_start":38,"line_end":38,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226255,"byte_end":226262,"line_start":39,"line_end":39,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226789,"byte_end":226796,"line_start":54,"line_end":54,"column_start":12,"column_end":19},"name":"elapsed","qualname":"<Instant>::elapsed","value":"fn elapsed(Self) -> Duration","parent":null,"children":[],"decl_id":null,"docs":" Returns the amount of time elapsed since this instant was created. The duration will always\n be nonnegative if the instant is not synthetically created.","sig":null,"attributes":[{"value":"/ Returns the amount of time elapsed since this instant was created. The duration will always","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226333,"byte_end":226428,"line_start":44,"line_end":44,"column_start":5,"column_end":100}},{"value":"/ be nonnegative if the instant is not synthetically created.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226433,"byte_end":226496,"line_start":45,"line_end":45,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226501,"byte_end":226504,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226509,"byte_end":226520,"line_start":47,"line_end":47,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::{NumericalStdDuration, NumericalDuration}};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226525,"byte_end":226599,"line_start":48,"line_end":48,"column_start":5,"column_end":79}},{"value":"/ # use std::thread;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226604,"byte_end":226626,"line_start":49,"line_end":49,"column_start":5,"column_end":27}},{"value":"/ let instant = Instant::now();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226631,"byte_end":226664,"line_start":50,"line_end":50,"column_start":5,"column_end":38}},{"value":"/ thread::sleep(1.std_milliseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226669,"byte_end":226709,"line_start":51,"line_end":51,"column_start":5,"column_end":45}},{"value":"/ assert!(instant.elapsed() >= 1.milliseconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226714,"byte_end":226765,"line_start":52,"line_end":52,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226770,"byte_end":226777,"line_start":53,"line_end":53,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1338},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227415,"byte_end":227426,"line_start":70,"line_end":70,"column_start":12,"column_end":23},"name":"checked_add","qualname":"<Instant>::checked_add","value":"fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self + duration` if `t` can be represented as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226917,"byte_end":227007,"line_start":60,"line_end":60,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227012,"byte_end":227103,"line_start":61,"line_end":61,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227108,"byte_end":227122,"line_start":62,"line_end":62,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227127,"byte_end":227130,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227135,"byte_end":227146,"line_start":64,"line_end":64,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227151,"byte_end":227201,"line_start":65,"line_end":65,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227206,"byte_end":227235,"line_start":66,"line_end":66,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_add(5.seconds()), Some(now + 5.seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227240,"byte_end":227310,"line_start":67,"line_end":67,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_add((-5).seconds()), Some(now + (-5).seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227315,"byte_end":227391,"line_start":68,"line_end":68,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227396,"byte_end":227403,"line_start":69,"line_end":69,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1339},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228288,"byte_end":228299,"line_start":91,"line_end":91,"column_start":12,"column_end":23},"name":"checked_sub","qualname":"<Instant>::checked_sub","value":"fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as\n `Instant` (which means it's inside the bounds of the underlying data structure), `None`\n otherwise.","sig":null,"attributes":[{"value":"/ Returns `Some(t)` where `t` is the time `self - duration` if `t` can be represented as","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227790,"byte_end":227880,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ `Instant` (which means it's inside the bounds of the underlying data structure), `None`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227885,"byte_end":227976,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ otherwise.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":227981,"byte_end":227995,"line_start":83,"line_end":83,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228000,"byte_end":228003,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228008,"byte_end":228019,"line_start":85,"line_end":85,"column_start":5,"column_end":16}},{"value":"/ # use time::{Instant, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228024,"byte_end":228074,"line_start":86,"line_end":86,"column_start":5,"column_end":55}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228079,"byte_end":228108,"line_start":87,"line_end":87,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.checked_sub(5.seconds()), Some(now - 5.seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228113,"byte_end":228183,"line_start":88,"line_end":88,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(now.checked_sub((-5).seconds()), Some(now - (-5).seconds()));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228188,"byte_end":228264,"line_start":89,"line_end":89,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228269,"byte_end":228276,"line_start":90,"line_end":90,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1340},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228905,"byte_end":228915,"line_start":110,"line_end":110,"column_start":18,"column_end":28},"name":"into_inner","qualname":"<Instant>::into_inner","value":"const fn into_inner(Self) -> StdInstant","parent":null,"children":[],"decl_id":null,"docs":" Obtain the inner [`std::time::Instant`].","sig":null,"attributes":[{"value":"/ Obtain the inner [`std::time::Instant`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228699,"byte_end":228743,"line_start":103,"line_end":103,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228748,"byte_end":228751,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228756,"byte_end":228767,"line_start":105,"line_end":105,"column_start":5,"column_end":16}},{"value":"/ # use time::Instant;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228772,"byte_end":228796,"line_start":106,"line_end":106,"column_start":5,"column_end":29}},{"value":"/ let now = Instant::now();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228801,"byte_end":228830,"line_start":107,"line_end":107,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(now.into_inner(), now.0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228835,"byte_end":228875,"line_start":108,"line_end":108,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":228880,"byte_end":228887,"line_start":109,"line_end":109,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1342},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229028,"byte_end":229032,"line_start":117,"line_end":117,"column_start":8,"column_end":12},"name":"from","qualname":"<Instant as std::convert::From>::from","value":"fn from(StdInstant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1344},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229138,"byte_end":229142,"line_start":123,"line_end":123,"column_start":8,"column_end":12},"name":"from","qualname":"<StdInstant as std::convert::From>::from","value":"fn from(Instant) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1347},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229257,"byte_end":229260,"line_start":131,"line_end":131,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1350},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229800,"byte_end":229803,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, StdInstant) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229954,"byte_end":229957,"line_start":154,"line_end":154,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdInstant as std::ops::Sub>::sub","value":"fn sub(Self, Instant) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230102,"byte_end":230105,"line_start":162,"line_end":162,"column_start":8,"column_end":11},"name":"add","qualname":"<Instant as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230499,"byte_end":230502,"line_start":177,"line_end":177,"column_start":8,"column_end":11},"name":"add","qualname":"<StdInstant as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230661,"byte_end":230664,"line_start":185,"line_end":185,"column_start":8,"column_end":11},"name":"add","qualname":"<Instant as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1365},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230909,"byte_end":230912,"line_start":196,"line_end":196,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1368},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231306,"byte_end":231309,"line_start":211,"line_end":211,"column_start":8,"column_end":11},"name":"sub","qualname":"<StdInstant as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231468,"byte_end":231471,"line_start":219,"line_end":219,"column_start":8,"column_end":11},"name":"sub","qualname":"<Instant as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231699,"byte_end":231701,"line_start":228,"line_end":228,"column_start":8,"column_end":10},"name":"eq","qualname":"<Instant as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &StdInstant) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231817,"byte_end":231819,"line_start":234,"line_end":234,"column_start":8,"column_end":10},"name":"eq","qualname":"<StdInstant as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Instant) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231934,"byte_end":231945,"line_start":240,"line_end":240,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Instant as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &StdInstant) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":232083,"byte_end":232094,"line_start":246,"line_end":246,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<StdInstant as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Instant) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1381},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":232225,"byte_end":232231,"line_start":252,"line_end":252,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Instant as std::convert::AsRef>::as_ref","value":"fn as_ref(&Self) -> &StdInstant","parent":{"krate":2,"index":3047},"children":[],"decl_id":{"krate":2,"index":3049},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1383},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":232326,"byte_end":232332,"line_start":258,"line_end":258,"column_start":8,"column_end":14},"name":"borrow","qualname":"<Instant as std::borrow::Borrow>::borrow","value":"fn borrow(&Self) -> &StdInstant","parent":{"krate":2,"index":2747},"children":[],"decl_id":{"krate":2,"index":2749},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1384},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/macros.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"macros","qualname":"::macros","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/macros.rs","parent":null,"children":[{"krate":0,"index":1385},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":1394},{"krate":0,"index":1397}],"decl_id":null,"docs":" Macros to construct statically known values.\n","sig":null,"attributes":[{"value":"cfg(feature = \"macros\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10387,"byte_end":10413,"line_start":314,"line_end":314,"column_start":1,"column_end":27}},{"value":"/ Macros to construct statically known values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/macros.rs","byte_start":232407,"byte_end":232455,"line_start":1,"line_end":1,"column_start":1,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4257},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238213,"byte_end":238220,"line_start":15,"line_end":15,"column_start":5,"column_end":12},"name":"January","qualname":"::month::Month::January","value":"Month::January","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4260},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238230,"byte_end":238238,"line_start":16,"line_end":16,"column_start":5,"column_end":13},"name":"February","qualname":"::month::Month::February","value":"Month::February","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4263},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238248,"byte_end":238253,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"March","qualname":"::month::Month::March","value":"Month::March","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4266},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238263,"byte_end":238268,"line_start":18,"line_end":18,"column_start":5,"column_end":10},"name":"April","qualname":"::month::Month::April","value":"Month::April","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4269},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238278,"byte_end":238281,"line_start":19,"line_end":19,"column_start":5,"column_end":8},"name":"May","qualname":"::month::Month::May","value":"Month::May","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4272},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238291,"byte_end":238295,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"June","qualname":"::month::Month::June","value":"Month::June","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4275},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238305,"byte_end":238309,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"July","qualname":"::month::Month::July","value":"Month::July","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4278},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238319,"byte_end":238325,"line_start":22,"line_end":22,"column_start":5,"column_end":11},"name":"August","qualname":"::month::Month::August","value":"Month::August","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4281},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238335,"byte_end":238344,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"name":"September","qualname":"::month::Month::September","value":"Month::September","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4284},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238354,"byte_end":238361,"line_start":24,"line_end":24,"column_start":5,"column_end":12},"name":"October","qualname":"::month::Month::October","value":"Month::October","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4287},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238372,"byte_end":238380,"line_start":25,"line_end":25,"column_start":5,"column_end":13},"name":"November","qualname":"::month::Month::November","value":"Month::November","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4290},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238391,"byte_end":238399,"line_start":26,"line_end":26,"column_start":5,"column_end":13},"name":"December","qualname":"::month::Month::December","value":"Month::December","parent":{"krate":0,"index":4256},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4256},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238201,"byte_end":238206,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Month","qualname":"::month::Month","value":"enum Month {\n    January = ,\n    February = ,\n    March = ,\n    April = ,\n    May = ,\n    June = ,\n    July = ,\n    August = ,\n    September = ,\n    October = ,\n    November = ,\n    December = ,\n}","parent":null,"children":[{"krate":0,"index":4257},{"krate":0,"index":4260},{"krate":0,"index":4263},{"krate":0,"index":4266},{"krate":0,"index":4269},{"krate":0,"index":4272},{"krate":0,"index":4275},{"krate":0,"index":4278},{"krate":0,"index":4281},{"krate":0,"index":4284},{"krate":0,"index":4287},{"krate":0,"index":4290}],"decl_id":null,"docs":" Months of the year.\n","sig":null,"attributes":[{"value":"/ Months of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238045,"byte_end":238068,"line_start":10,"line_end":10,"column_start":1,"column_end":24}},{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238069,"byte_end":238116,"line_start":11,"line_end":11,"column_start":1,"column_end":48}},{"value":"repr(u8)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238129,"byte_end":238140,"line_start":12,"line_end":12,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1416},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239356,"byte_end":239364,"line_start":61,"line_end":61,"column_start":18,"column_end":26},"name":"previous","qualname":"<Month>::previous","value":"const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous month.","sig":null,"attributes":[{"value":"/ Get the previous month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239184,"byte_end":239211,"line_start":55,"line_end":55,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239216,"byte_end":239219,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239224,"byte_end":239235,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239240,"byte_end":239262,"line_start":58,"line_end":58,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.previous(), Month::December);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239267,"byte_end":239326,"line_start":59,"line_end":59,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239331,"byte_end":239338,"line_start":60,"line_end":60,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1417},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239951,"byte_end":239955,"line_start":84,"line_end":84,"column_start":18,"column_end":22},"name":"next","qualname":"<Month>::next","value":"const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next month.","sig":null,"attributes":[{"value":"/ Get the next month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239787,"byte_end":239810,"line_start":78,"line_end":78,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239815,"byte_end":239818,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239823,"byte_end":239834,"line_start":80,"line_end":80,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239839,"byte_end":239861,"line_start":81,"line_end":81,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(Month::January.next(), Month::February);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239866,"byte_end":239921,"line_start":82,"line_end":82,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":239926,"byte_end":239933,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":240413,"byte_end":240416,"line_start":103,"line_end":103,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Month as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":240981,"byte_end":240989,"line_start":124,"line_end":124,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Month as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12554},"children":[],"decl_id":{"krate":2,"index":12556},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1424},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":241579,"byte_end":241583,"line_start":144,"line_end":144,"column_start":8,"column_end":12},"name":"from","qualname":"<u8 as std::convert::From>::from","value":"fn from(Month) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":241713,"byte_end":241721,"line_start":152,"line_end":152,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Month as std::convert::TryFrom>::try_from","value":"fn try_from(u8) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4307},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243022,"byte_end":243036,"line_start":31,"line_end":31,"column_start":12,"column_end":26},"name":"OffsetDateTime","qualname":"::offset_date_time::OffsetDateTime","value":"OffsetDateTime {  }","parent":null,"children":[{"krate":0,"index":4308},{"krate":0,"index":4309}],"decl_id":null,"docs":" A [`PrimitiveDateTime`] with a [`UtcOffset`].","sig":null,"attributes":[{"value":"/ A [`PrimitiveDateTime`] with a [`UtcOffset`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":242876,"byte_end":242925,"line_start":27,"line_end":27,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":242926,"byte_end":242929,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ All comparisons are performed using the UTC time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":242930,"byte_end":242983,"line_start":29,"line_end":29,"column_start":1,"column_end":54}}]},{"kind":"Const","id":{"krate":0,"index":1504},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243558,"byte_end":243568,"line_start":46,"line_end":46,"column_start":15,"column_end":25},"name":"UNIX_EPOCH","qualname":"::offset_date_time::OffsetDateTime::UNIX_EPOCH","value":"Self","parent":{"krate":0,"index":1503},"children":[],"decl_id":null,"docs":" Midnight, 1 January, 1970 (UTC).","sig":null,"attributes":[{"value":"/ Midnight, 1 January, 1970 (UTC).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243317,"byte_end":243353,"line_start":39,"line_end":39,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243358,"byte_end":243361,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243366,"byte_end":243377,"line_start":41,"line_end":41,"column_start":5,"column_end":16}},{"value":"/ # use time::OffsetDateTime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243382,"byte_end":243413,"line_start":42,"line_end":42,"column_start":5,"column_end":36}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243418,"byte_end":243450,"line_start":43,"line_end":43,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(OffsetDateTime::UNIX_EPOCH, datetime!(1970-01-01 0:00 UTC),);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243455,"byte_end":243531,"line_start":44,"line_end":44,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243536,"byte_end":243543,"line_start":45,"line_end":45,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":244037,"byte_end":244044,"line_start":60,"line_end":60,"column_start":12,"column_end":19},"name":"now_utc","qualname":"<OffsetDateTime>::now_utc","value":"fn now_utc() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `OffsetDateTime` with the current date and time in UTC.","sig":null,"attributes":[{"value":"/ Create a new `OffsetDateTime` with the current date and time in UTC.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243689,"byte_end":243761,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243766,"byte_end":243769,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243774,"byte_end":243785,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use time::OffsetDateTime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243790,"byte_end":243821,"line_start":54,"line_end":54,"column_start":5,"column_end":36}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243826,"byte_end":243856,"line_start":55,"line_end":55,"column_start":5,"column_end":35}},{"value":"/ assert!(OffsetDateTime::now_utc().year() >= 2019);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243861,"byte_end":243915,"line_start":56,"line_end":56,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(OffsetDateTime::now_utc().offset(), offset!(UTC));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243920,"byte_end":243985,"line_start":57,"line_end":57,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243990,"byte_end":243997,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":244002,"byte_end":244025,"line_start":59,"line_end":59,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":1506},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245997,"byte_end":246006,"line_start":119,"line_end":119,"column_start":18,"column_end":27},"name":"to_offset","qualname":"<OffsetDateTime>::to_offset","value":"const fn to_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Convert the `OffsetDateTime` from the current [`UtcOffset`] to the provided [`UtcOffset`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245061,"byte_end":245155,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245160,"byte_end":245163,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245168,"byte_end":245179,"line_start":96,"line_end":96,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245184,"byte_end":245226,"line_start":97,"line_end":97,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245231,"byte_end":245246,"line_start":98,"line_end":98,"column_start":5,"column_end":20}},{"value":"/     datetime!(2000-01-01 0:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245251,"byte_end":245289,"line_start":99,"line_end":99,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245294,"byte_end":245329,"line_start":100,"line_end":100,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245334,"byte_end":245354,"line_start":101,"line_end":101,"column_start":5,"column_end":25}},{"value":"/     1999,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245359,"byte_end":245372,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245377,"byte_end":245383,"line_start":103,"line_end":103,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245388,"byte_end":245391,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ // Let's see what time Sydney's new year's celebration is in New York and Los Angeles.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245396,"byte_end":245486,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245491,"byte_end":245494,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ // Construct midnight on new year's in Sydney.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245499,"byte_end":245549,"line_start":107,"line_end":107,"column_start":5,"column_end":55}},{"value":"/ let sydney = datetime!(2000-01-01 0:00 +11);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245554,"byte_end":245602,"line_start":108,"line_end":108,"column_start":5,"column_end":53}},{"value":"/ let new_york = sydney.to_offset(offset!(-5));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245607,"byte_end":245656,"line_start":109,"line_end":109,"column_start":5,"column_end":54}},{"value":"/ let los_angeles = sydney.to_offset(offset!(-8));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245661,"byte_end":245713,"line_start":110,"line_end":110,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(sydney.hour(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245718,"byte_end":245751,"line_start":111,"line_end":111,"column_start":5,"column_end":38}},{"value":"/ assert_eq!(new_york.hour(), 8);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245756,"byte_end":245791,"line_start":112,"line_end":112,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(los_angeles.hour(), 5);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245796,"byte_end":245834,"line_start":113,"line_end":113,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245839,"byte_end":245846,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245851,"byte_end":245854,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245859,"byte_end":245871,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245876,"byte_end":245879,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ This method panics if the local date-time in the new offset is outside the supported range.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":245884,"byte_end":245979,"line_start":118,"line_end":118,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":1508},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249523,"byte_end":249542,"line_start":213,"line_end":213,"column_start":18,"column_end":37},"name":"from_unix_timestamp","qualname":"<OffsetDateTime>::from_unix_timestamp","value":"const fn from_unix_timestamp(i64) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the\n resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Create an `OffsetDateTime` from the provided Unix timestamp. Calling `.offset()` on the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248489,"byte_end":248580,"line_start":185,"line_end":185,"column_start":5,"column_end":96}},{"value":"/ resulting value is guaranteed to return UTC.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248585,"byte_end":248633,"line_start":186,"line_end":186,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248638,"byte_end":248641,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248646,"byte_end":248657,"line_start":188,"line_end":188,"column_start":5,"column_end":16}},{"value":"/ # use time::OffsetDateTime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248662,"byte_end":248693,"line_start":189,"line_end":189,"column_start":5,"column_end":36}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248698,"byte_end":248730,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248735,"byte_end":248750,"line_start":191,"line_end":191,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(0),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248755,"byte_end":248802,"line_start":192,"line_end":192,"column_start":5,"column_end":52}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248807,"byte_end":248846,"line_start":193,"line_end":193,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248851,"byte_end":248857,"line_start":194,"line_end":194,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248862,"byte_end":248877,"line_start":195,"line_end":195,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(1_546_300_800),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248882,"byte_end":248941,"line_start":196,"line_end":196,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248946,"byte_end":248989,"line_start":197,"line_end":197,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":248994,"byte_end":249000,"line_start":198,"line_end":198,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249005,"byte_end":249012,"line_start":199,"line_end":199,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249017,"byte_end":249020,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ If you have a timestamp-nanosecond pair, you can use something along the lines of the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249025,"byte_end":249114,"line_start":201,"line_end":201,"column_start":5,"column_end":94}},{"value":"/ following:","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249119,"byte_end":249133,"line_start":202,"line_end":202,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249138,"byte_end":249141,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249146,"byte_end":249157,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/ # use time::{Duration, OffsetDateTime, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249162,"byte_end":249229,"line_start":205,"line_end":205,"column_start":5,"column_end":72}},{"value":"/ let (timestamp, nanos) = (1, 500_000_000);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249234,"byte_end":249280,"line_start":206,"line_end":206,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249285,"byte_end":249300,"line_start":207,"line_end":207,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp(timestamp)? + Duration::nanoseconds(nanos),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249305,"byte_end":249392,"line_start":208,"line_end":208,"column_start":5,"column_end":92}},{"value":"/     OffsetDateTime::UNIX_EPOCH + 1.5.seconds()","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249397,"byte_end":249447,"line_start":209,"line_end":209,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249452,"byte_end":249458,"line_start":210,"line_end":210,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249463,"byte_end":249493,"line_start":211,"line_end":211,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":249498,"byte_end":249505,"line_start":212,"line_end":212,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1511},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251235,"byte_end":251260,"line_start":255,"line_end":255,"column_start":18,"column_end":43},"name":"from_unix_timestamp_nanos","qualname":"<OffsetDateTime>::from_unix_timestamp_nanos","value":"const fn from_unix_timestamp_nanos(i128)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling\n `.offset()` on the resulting value is guaranteed to return UTC.","sig":null,"attributes":[{"value":"/ Construct an `OffsetDateTime` from the provided Unix timestamp (in nanoseconds). Calling","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":250650,"byte_end":250742,"line_start":240,"line_end":240,"column_start":5,"column_end":97}},{"value":"/ `.offset()` on the resulting value is guaranteed to return UTC.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":250747,"byte_end":250814,"line_start":241,"line_end":241,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":250819,"byte_end":250822,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":250827,"byte_end":250838,"line_start":243,"line_end":243,"column_start":5,"column_end":16}},{"value":"/ # use time::OffsetDateTime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":250843,"byte_end":250874,"line_start":244,"line_end":244,"column_start":5,"column_end":36}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":250879,"byte_end":250911,"line_start":245,"line_end":245,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":250916,"byte_end":250931,"line_start":246,"line_end":246,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(0),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":250936,"byte_end":250989,"line_start":247,"line_end":247,"column_start":5,"column_end":58}},{"value":"/     Ok(OffsetDateTime::UNIX_EPOCH),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":250994,"byte_end":251033,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251038,"byte_end":251044,"line_start":249,"line_end":249,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251049,"byte_end":251064,"line_start":250,"line_end":250,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::from_unix_timestamp_nanos(1_546_300_800_000_000_000),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251069,"byte_end":251146,"line_start":251,"line_end":251,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2019-01-01 0:00 UTC)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251151,"byte_end":251194,"line_start":252,"line_end":252,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251199,"byte_end":251205,"line_start":253,"line_end":253,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251210,"byte_end":251217,"line_start":254,"line_end":254,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1512},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252146,"byte_end":252152,"line_start":280,"line_end":280,"column_start":18,"column_end":24},"name":"offset","qualname":"<OffsetDateTime>::offset","value":"const fn offset(Self) -> UtcOffset","parent":null,"children":[],"decl_id":null,"docs":" Get the [`UtcOffset`].","sig":null,"attributes":[{"value":"/ Get the [`UtcOffset`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251871,"byte_end":251897,"line_start":273,"line_end":273,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251902,"byte_end":251905,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251910,"byte_end":251921,"line_start":275,"line_end":275,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251926,"byte_end":251968,"line_start":276,"line_end":276,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).offset(), offset!(UTC));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":251973,"byte_end":252043,"line_start":277,"line_end":277,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 +1).offset(), offset!(+1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252048,"byte_end":252116,"line_start":278,"line_end":278,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252121,"byte_end":252128,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1513},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252513,"byte_end":252527,"line_start":291,"line_end":291,"column_start":18,"column_end":32},"name":"unix_timestamp","qualname":"<OffsetDateTime>::unix_timestamp","value":"const fn unix_timestamp(Self) -> i64","parent":null,"children":[],"decl_id":null,"docs":" Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","sig":null,"attributes":[{"value":"/ Get the [Unix timestamp](https://en.wikipedia.org/wiki/Unix_time).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252205,"byte_end":252275,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252280,"byte_end":252283,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252288,"byte_end":252299,"line_start":286,"line_end":286,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252304,"byte_end":252336,"line_start":287,"line_end":287,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252341,"byte_end":252408,"line_start":288,"line_end":288,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 -1).unix_timestamp(), 3_600);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252413,"byte_end":252483,"line_start":289,"line_end":289,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252488,"byte_end":252495,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1514},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253302,"byte_end":253322,"line_start":312,"line_end":312,"column_start":18,"column_end":38},"name":"unix_timestamp_nanos","qualname":"<OffsetDateTime>::unix_timestamp_nanos","value":"const fn unix_timestamp_nanos(Self) -> i128","parent":null,"children":[],"decl_id":null,"docs":" Get the Unix timestamp in nanoseconds.","sig":null,"attributes":[{"value":"/ Get the Unix timestamp in nanoseconds.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":252965,"byte_end":253007,"line_start":302,"line_end":302,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253012,"byte_end":253015,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253020,"byte_end":253031,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/ use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253036,"byte_end":253066,"line_start":305,"line_end":305,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(datetime!(1970-01-01 0:00 UTC).unix_timestamp_nanos(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253071,"byte_end":253144,"line_start":306,"line_end":306,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253149,"byte_end":253164,"line_start":307,"line_end":307,"column_start":5,"column_end":20}},{"value":"/     datetime!(1970-01-01 0:00 -1).unix_timestamp_nanos(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253169,"byte_end":253230,"line_start":308,"line_end":308,"column_start":5,"column_end":66}},{"value":"/     3_600_000_000_000,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253235,"byte_end":253261,"line_start":309,"line_end":309,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253266,"byte_end":253272,"line_start":310,"line_end":310,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253277,"byte_end":253284,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1515},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253829,"byte_end":253833,"line_start":328,"line_end":328,"column_start":18,"column_end":22},"name":"date","qualname":"<OffsetDateTime>::date","value":"const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Date`] in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253432,"byte_end":253474,"line_start":316,"line_end":316,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253479,"byte_end":253482,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253487,"byte_end":253498,"line_start":318,"line_end":318,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{date, datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253503,"byte_end":253551,"line_start":319,"line_end":319,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).date(), date!(2019-01-01));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253556,"byte_end":253629,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253634,"byte_end":253649,"line_start":321,"line_end":321,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253654,"byte_end":253692,"line_start":322,"line_end":322,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253697,"byte_end":253732,"line_start":323,"line_end":323,"column_start":5,"column_end":40}},{"value":"/         .date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253737,"byte_end":253757,"line_start":324,"line_end":324,"column_start":5,"column_end":25}},{"value":"/     date!(2018-12-31),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253762,"byte_end":253788,"line_start":325,"line_end":325,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253793,"byte_end":253799,"line_start":326,"line_end":326,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253804,"byte_end":253811,"line_start":327,"line_end":327,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1516},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254281,"byte_end":254285,"line_start":344,"line_end":344,"column_start":18,"column_end":22},"name":"time","qualname":"<OffsetDateTime>::time","value":"const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] in the stored offset.","sig":null,"attributes":[{"value":"/ Get the [`Time`] in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253896,"byte_end":253938,"line_start":332,"line_end":332,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253943,"byte_end":253946,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253951,"byte_end":253962,"line_start":334,"line_end":334,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset, time};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":253967,"byte_end":254015,"line_start":335,"line_end":335,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).time(), time!(0:00));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254020,"byte_end":254087,"line_start":336,"line_end":336,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254092,"byte_end":254107,"line_start":337,"line_end":337,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254112,"byte_end":254150,"line_start":338,"line_end":338,"column_start":5,"column_end":43}},{"value":"/         .to_offset(offset!(-1))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254155,"byte_end":254190,"line_start":339,"line_end":339,"column_start":5,"column_end":40}},{"value":"/         .time(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254195,"byte_end":254215,"line_start":340,"line_end":340,"column_start":5,"column_end":25}},{"value":"/     time!(23:00)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254220,"byte_end":254240,"line_start":341,"line_end":341,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254245,"byte_end":254251,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254256,"byte_end":254263,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1517},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254815,"byte_end":254819,"line_start":362,"line_end":362,"column_start":18,"column_end":22},"name":"year","qualname":"<OffsetDateTime>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the year of the date in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254376,"byte_end":254426,"line_start":349,"line_end":349,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254431,"byte_end":254434,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254439,"byte_end":254450,"line_start":351,"line_end":351,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254455,"byte_end":254497,"line_start":352,"line_end":352,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).year(), 2019);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254502,"byte_end":254562,"line_start":353,"line_end":353,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254567,"byte_end":254582,"line_start":354,"line_end":354,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254587,"byte_end":254626,"line_start":355,"line_end":355,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254631,"byte_end":254666,"line_start":356,"line_end":356,"column_start":5,"column_end":40}},{"value":"/         .year(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254671,"byte_end":254691,"line_start":357,"line_end":357,"column_start":5,"column_end":25}},{"value":"/     2020,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254696,"byte_end":254709,"line_start":358,"line_end":358,"column_start":5,"column_end":18}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254714,"byte_end":254720,"line_start":359,"line_end":359,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).year(), 2020);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254725,"byte_end":254785,"line_start":360,"line_end":360,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254790,"byte_end":254797,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1518},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255297,"byte_end":255302,"line_start":379,"line_end":379,"column_start":18,"column_end":23},"name":"month","qualname":"<OffsetDateTime>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the month of the date in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254873,"byte_end":254924,"line_start":366,"line_end":366,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254929,"byte_end":254932,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254937,"byte_end":254948,"line_start":368,"line_end":368,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254953,"byte_end":254975,"line_start":369,"line_end":369,"column_start":5,"column_end":27}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":254980,"byte_end":255022,"line_start":370,"line_end":370,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).month(), Month::January);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255027,"byte_end":255098,"line_start":371,"line_end":371,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255103,"byte_end":255118,"line_start":372,"line_end":372,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255123,"byte_end":255162,"line_start":373,"line_end":373,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255167,"byte_end":255202,"line_start":374,"line_end":374,"column_start":5,"column_end":40}},{"value":"/         .month(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255207,"byte_end":255228,"line_start":375,"line_end":375,"column_start":5,"column_end":26}},{"value":"/     Month::January,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255233,"byte_end":255256,"line_start":376,"line_end":376,"column_start":5,"column_end":28}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255261,"byte_end":255267,"line_start":377,"line_end":377,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255272,"byte_end":255279,"line_start":378,"line_end":378,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1519},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255797,"byte_end":255800,"line_start":397,"line_end":397,"column_start":18,"column_end":21},"name":"day","qualname":"<OffsetDateTime>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the date in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255359,"byte_end":255408,"line_start":383,"line_end":383,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255413,"byte_end":255416,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255421,"byte_end":255481,"line_start":385,"line_end":385,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255486,"byte_end":255489,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255494,"byte_end":255505,"line_start":387,"line_end":387,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255510,"byte_end":255552,"line_start":388,"line_end":388,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).day(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255557,"byte_end":255613,"line_start":389,"line_end":389,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255618,"byte_end":255633,"line_start":390,"line_end":390,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255638,"byte_end":255677,"line_start":391,"line_end":391,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255682,"byte_end":255717,"line_start":392,"line_end":392,"column_start":5,"column_end":40}},{"value":"/         .day(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255722,"byte_end":255741,"line_start":393,"line_end":393,"column_start":5,"column_end":24}},{"value":"/     1,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255746,"byte_end":255756,"line_start":394,"line_end":394,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255761,"byte_end":255767,"line_start":395,"line_end":395,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255772,"byte_end":255779,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1520},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256311,"byte_end":256318,"line_start":415,"line_end":415,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<OffsetDateTime>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the day of the year of the date in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255852,"byte_end":255913,"line_start":401,"line_end":401,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255918,"byte_end":255921,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255926,"byte_end":255987,"line_start":403,"line_end":403,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":255992,"byte_end":255995,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256000,"byte_end":256011,"line_start":405,"line_end":405,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256016,"byte_end":256058,"line_start":406,"line_end":406,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).ordinal(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256063,"byte_end":256123,"line_start":407,"line_end":407,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256128,"byte_end":256143,"line_start":408,"line_end":408,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-12-31 23:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256148,"byte_end":256187,"line_start":409,"line_end":409,"column_start":5,"column_end":44}},{"value":"/         .to_offset(offset!(+1))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256192,"byte_end":256227,"line_start":410,"line_end":410,"column_start":5,"column_end":40}},{"value":"/         .ordinal(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256232,"byte_end":256255,"line_start":411,"line_end":411,"column_start":5,"column_end":28}},{"value":"/     1,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256260,"byte_end":256270,"line_start":412,"line_end":412,"column_start":5,"column_end":15}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256275,"byte_end":256281,"line_start":413,"line_end":413,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256286,"byte_end":256293,"line_start":414,"line_end":414,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1521},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256866,"byte_end":256874,"line_start":430,"line_end":430,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<OffsetDateTime>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the ISO week number of the date in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256375,"byte_end":256436,"line_start":419,"line_end":419,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256441,"byte_end":256444,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256449,"byte_end":256509,"line_start":421,"line_end":421,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256514,"byte_end":256517,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256522,"byte_end":256533,"line_start":423,"line_end":423,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256538,"byte_end":256570,"line_start":424,"line_end":424,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256575,"byte_end":256636,"line_start":425,"line_end":425,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).iso_week(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256641,"byte_end":256702,"line_start":426,"line_end":426,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).iso_week(), 53);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256707,"byte_end":256769,"line_start":427,"line_end":427,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).iso_week(), 53);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256774,"byte_end":256836,"line_start":428,"line_end":428,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256841,"byte_end":256848,"line_start":429,"line_end":429,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1522},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257460,"byte_end":257477,"line_start":445,"line_end":445,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<OffsetDateTime>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":256931,"byte_end":256995,"line_start":434,"line_end":434,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257000,"byte_end":257003,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257008,"byte_end":257068,"line_start":436,"line_end":436,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257073,"byte_end":257076,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257081,"byte_end":257092,"line_start":438,"line_end":438,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257097,"byte_end":257129,"line_start":439,"line_end":439,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257134,"byte_end":257204,"line_start":440,"line_end":440,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257209,"byte_end":257279,"line_start":441,"line_end":441,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).sunday_based_week(), 52);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257284,"byte_end":257355,"line_start":442,"line_end":442,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).sunday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257360,"byte_end":257430,"line_start":443,"line_end":443,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257435,"byte_end":257442,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1523},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258072,"byte_end":258089,"line_start":460,"line_end":460,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<OffsetDateTime>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257543,"byte_end":257607,"line_start":449,"line_end":449,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257612,"byte_end":257615,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257620,"byte_end":257680,"line_start":451,"line_end":451,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257685,"byte_end":257688,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257693,"byte_end":257704,"line_start":453,"line_end":453,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257709,"byte_end":257741,"line_start":454,"line_end":454,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257746,"byte_end":257816,"line_start":455,"line_end":455,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257821,"byte_end":257891,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00 UTC).monday_based_week(), 52);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257896,"byte_end":257967,"line_start":457,"line_end":457,"column_start":5,"column_end":76}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00 UTC).monday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":257972,"byte_end":258042,"line_start":458,"line_end":458,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258047,"byte_end":258054,"line_start":459,"line_end":459,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1524},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258438,"byte_end":258454,"line_start":474,"line_end":474,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<OffsetDateTime>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258155,"byte_end":258188,"line_start":464,"line_end":464,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258193,"byte_end":258196,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258201,"byte_end":258212,"line_start":466,"line_end":466,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258217,"byte_end":258239,"line_start":467,"line_end":467,"column_start":5,"column_end":27}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258244,"byte_end":258276,"line_start":468,"line_end":468,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258281,"byte_end":258296,"line_start":469,"line_end":469,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_calendar_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258301,"byte_end":258359,"line_start":470,"line_end":470,"column_start":5,"column_end":63}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258364,"byte_end":258397,"line_start":471,"line_end":471,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258402,"byte_end":258408,"line_start":472,"line_end":472,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258413,"byte_end":258420,"line_start":473,"line_end":473,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1525},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258779,"byte_end":258794,"line_start":487,"line_end":487,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<OffsetDateTime>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258533,"byte_end":258573,"line_start":478,"line_end":478,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258578,"byte_end":258581,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258586,"byte_end":258597,"line_start":480,"line_end":480,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258602,"byte_end":258634,"line_start":481,"line_end":481,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258639,"byte_end":258654,"line_start":482,"line_end":482,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_ordinal_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258659,"byte_end":258716,"line_start":483,"line_end":483,"column_start":5,"column_end":62}},{"value":"/     (2019, 1)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258721,"byte_end":258738,"line_start":484,"line_end":484,"column_start":5,"column_end":22}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258743,"byte_end":258749,"line_start":485,"line_end":485,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258754,"byte_end":258761,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1526},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259670,"byte_end":259686,"line_start":517,"line_end":517,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<OffsetDateTime>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258866,"byte_end":258918,"line_start":491,"line_end":491,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258923,"byte_end":258926,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258931,"byte_end":258942,"line_start":493,"line_end":493,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258947,"byte_end":258974,"line_start":494,"line_end":494,"column_start":5,"column_end":32}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":258979,"byte_end":259011,"line_start":495,"line_end":495,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259016,"byte_end":259031,"line_start":496,"line_end":496,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259036,"byte_end":259094,"line_start":497,"line_end":497,"column_start":5,"column_end":63}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259099,"byte_end":259125,"line_start":498,"line_end":498,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259130,"byte_end":259136,"line_start":499,"line_end":499,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259141,"byte_end":259156,"line_start":500,"line_end":500,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259161,"byte_end":259219,"line_start":501,"line_end":501,"column_start":5,"column_end":63}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259224,"byte_end":259250,"line_start":502,"line_end":502,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259255,"byte_end":259261,"line_start":503,"line_end":503,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259266,"byte_end":259281,"line_start":504,"line_end":504,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259286,"byte_end":259344,"line_start":505,"line_end":505,"column_start":5,"column_end":63}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259349,"byte_end":259377,"line_start":506,"line_end":506,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259382,"byte_end":259388,"line_start":507,"line_end":507,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259393,"byte_end":259408,"line_start":508,"line_end":508,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259413,"byte_end":259471,"line_start":509,"line_end":509,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259476,"byte_end":259504,"line_start":510,"line_end":510,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259509,"byte_end":259515,"line_start":511,"line_end":511,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259520,"byte_end":259535,"line_start":512,"line_end":512,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00 UTC).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259540,"byte_end":259598,"line_start":513,"line_end":513,"column_start":5,"column_end":63}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259603,"byte_end":259629,"line_start":514,"line_end":514,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259634,"byte_end":259640,"line_start":515,"line_end":515,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259645,"byte_end":259652,"line_start":516,"line_end":516,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1527},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260154,"byte_end":260161,"line_start":530,"line_end":530,"column_start":18,"column_end":25},"name":"weekday","qualname":"<OffsetDateTime>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday of the date in the stored offset.","sig":null,"attributes":[{"value":"/ Get the weekday of the date in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259767,"byte_end":259820,"line_start":521,"line_end":521,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259825,"byte_end":259828,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259833,"byte_end":259844,"line_start":523,"line_end":523,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259849,"byte_end":259876,"line_start":524,"line_end":524,"column_start":5,"column_end":32}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259881,"byte_end":259913,"line_start":525,"line_end":525,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).weekday(), Tuesday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259918,"byte_end":259984,"line_start":526,"line_end":526,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":259989,"byte_end":260054,"line_start":527,"line_end":527,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00 UTC).weekday(), Friday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260059,"byte_end":260124,"line_start":528,"line_end":528,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260129,"byte_end":260136,"line_start":529,"line_end":529,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1528},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260923,"byte_end":260936,"line_start":546,"line_end":546,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<OffsetDateTime>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260222,"byte_end":260315,"line_start":534,"line_end":534,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260320,"byte_end":260323,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260328,"byte_end":260422,"line_start":536,"line_end":536,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260427,"byte_end":260523,"line_start":537,"line_end":537,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260528,"byte_end":260531,"line_start":538,"line_end":538,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260536,"byte_end":260547,"line_start":539,"line_end":539,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260552,"byte_end":260584,"line_start":540,"line_end":540,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00 UTC).to_julian_day(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260589,"byte_end":260656,"line_start":541,"line_end":541,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00 UTC).to_julian_day(), 2_451_545);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260661,"byte_end":260735,"line_start":542,"line_end":542,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).to_julian_day(), 2_458_485);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260740,"byte_end":260814,"line_start":543,"line_end":543,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00 UTC).to_julian_day(), 2_458_849);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260819,"byte_end":260893,"line_start":544,"line_end":544,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":260898,"byte_end":260905,"line_start":545,"line_end":545,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1529},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261345,"byte_end":261351,"line_start":559,"line_end":559,"column_start":18,"column_end":24},"name":"to_hms","qualname":"<OffsetDateTime>::to_hms","value":"const fn to_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261057,"byte_end":261100,"line_start":552,"line_end":552,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261105,"byte_end":261108,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261113,"byte_end":261124,"line_start":554,"line_end":554,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261129,"byte_end":261161,"line_start":555,"line_end":555,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00 UTC).to_hms(), (0, 0, 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261166,"byte_end":261236,"line_start":556,"line_end":556,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59 UTC).to_hms(), (23, 59, 59));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261241,"byte_end":261315,"line_start":557,"line_end":557,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261320,"byte_end":261327,"line_start":558,"line_end":558,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1530},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261809,"byte_end":261821,"line_start":576,"line_end":576,"column_start":18,"column_end":30},"name":"to_hms_milli","qualname":"<OffsetDateTime>::to_hms_milli","value":"const fn to_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261416,"byte_end":261472,"line_start":563,"line_end":563,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261477,"byte_end":261480,"line_start":564,"line_end":564,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261485,"byte_end":261496,"line_start":565,"line_end":565,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261501,"byte_end":261533,"line_start":566,"line_end":566,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261538,"byte_end":261553,"line_start":567,"line_end":567,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_milli(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261558,"byte_end":261615,"line_start":568,"line_end":568,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261620,"byte_end":261640,"line_start":569,"line_end":569,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261645,"byte_end":261651,"line_start":570,"line_end":570,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261656,"byte_end":261671,"line_start":571,"line_end":571,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999 UTC).to_hms_milli(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261676,"byte_end":261738,"line_start":572,"line_end":572,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261743,"byte_end":261768,"line_start":573,"line_end":573,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261773,"byte_end":261779,"line_start":574,"line_end":574,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261784,"byte_end":261791,"line_start":575,"line_end":575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1531},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262298,"byte_end":262310,"line_start":593,"line_end":593,"column_start":18,"column_end":30},"name":"to_hms_micro","qualname":"<OffsetDateTime>::to_hms_micro","value":"const fn to_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261897,"byte_end":261953,"line_start":580,"line_end":580,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261958,"byte_end":261961,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261966,"byte_end":261977,"line_start":582,"line_end":582,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":261982,"byte_end":262014,"line_start":583,"line_end":583,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262019,"byte_end":262034,"line_start":584,"line_end":584,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_micro(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262039,"byte_end":262096,"line_start":585,"line_end":585,"column_start":5,"column_end":62}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262101,"byte_end":262121,"line_start":586,"line_end":586,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262126,"byte_end":262132,"line_start":587,"line_end":587,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262137,"byte_end":262152,"line_start":588,"line_end":588,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999 UTC).to_hms_micro(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262157,"byte_end":262223,"line_start":589,"line_end":589,"column_start":5,"column_end":71}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262228,"byte_end":262257,"line_start":590,"line_end":590,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262262,"byte_end":262268,"line_start":591,"line_end":591,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262273,"byte_end":262280,"line_start":592,"line_end":592,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1532},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262792,"byte_end":262803,"line_start":610,"line_end":610,"column_start":18,"column_end":29},"name":"to_hms_nano","qualname":"<OffsetDateTime>::to_hms_nano","value":"const fn to_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262386,"byte_end":262441,"line_start":597,"line_end":597,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262446,"byte_end":262449,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262454,"byte_end":262465,"line_start":599,"line_end":599,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262470,"byte_end":262502,"line_start":600,"line_end":600,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262507,"byte_end":262522,"line_start":601,"line_end":601,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00:00 UTC).to_hms_nano(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262527,"byte_end":262583,"line_start":602,"line_end":602,"column_start":5,"column_end":61}},{"value":"/     (0, 0, 0, 0)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262588,"byte_end":262608,"line_start":603,"line_end":603,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262613,"byte_end":262619,"line_start":604,"line_end":604,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262624,"byte_end":262639,"line_start":605,"line_end":605,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999 UTC).to_hms_nano(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262644,"byte_end":262713,"line_start":606,"line_end":606,"column_start":5,"column_end":74}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262718,"byte_end":262751,"line_start":607,"line_end":607,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262756,"byte_end":262762,"line_start":608,"line_end":608,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262767,"byte_end":262774,"line_start":609,"line_end":609,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1533},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263316,"byte_end":263320,"line_start":628,"line_end":628,"column_start":18,"column_end":22},"name":"hour","qualname":"<OffsetDateTime>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the clock hour in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262878,"byte_end":262922,"line_start":614,"line_end":614,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262927,"byte_end":262930,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262935,"byte_end":262994,"line_start":616,"line_end":616,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":262999,"byte_end":263002,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263007,"byte_end":263018,"line_start":618,"line_end":618,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263023,"byte_end":263065,"line_start":619,"line_end":619,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).hour(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263070,"byte_end":263127,"line_start":620,"line_end":620,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263132,"byte_end":263147,"line_start":621,"line_end":621,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263152,"byte_end":263194,"line_start":622,"line_end":622,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(-2))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263199,"byte_end":263234,"line_start":623,"line_end":623,"column_start":5,"column_end":40}},{"value":"/         .hour(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263239,"byte_end":263259,"line_start":624,"line_end":624,"column_start":5,"column_end":25}},{"value":"/     21,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263264,"byte_end":263275,"line_start":625,"line_end":625,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263280,"byte_end":263286,"line_start":626,"line_end":626,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263291,"byte_end":263298,"line_start":627,"line_end":627,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1534},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263830,"byte_end":263836,"line_start":646,"line_end":646,"column_start":18,"column_end":24},"name":"minute","qualname":"<OffsetDateTime>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour in the stored offset.","sig":null,"attributes":[{"value":"/ Get the minute within the hour in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263373,"byte_end":263429,"line_start":632,"line_end":632,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263434,"byte_end":263437,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263442,"byte_end":263501,"line_start":634,"line_end":634,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263506,"byte_end":263509,"line_start":635,"line_end":635,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263514,"byte_end":263525,"line_start":636,"line_end":636,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263530,"byte_end":263572,"line_start":637,"line_end":637,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).minute(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263577,"byte_end":263636,"line_start":638,"line_end":638,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263641,"byte_end":263656,"line_start":639,"line_end":639,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263661,"byte_end":263703,"line_start":640,"line_end":640,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:30))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263708,"byte_end":263746,"line_start":641,"line_end":641,"column_start":5,"column_end":43}},{"value":"/         .minute(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263751,"byte_end":263773,"line_start":642,"line_end":642,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263778,"byte_end":263789,"line_start":643,"line_end":643,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263794,"byte_end":263800,"line_start":644,"line_end":644,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263805,"byte_end":263812,"line_start":645,"line_end":645,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1535},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264353,"byte_end":264359,"line_start":664,"line_end":664,"column_start":18,"column_end":24},"name":"second","qualname":"<OffsetDateTime>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute in the stored offset.","sig":null,"attributes":[{"value":"/ Get the second within the minute in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263891,"byte_end":263949,"line_start":650,"line_end":650,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263954,"byte_end":263957,"line_start":651,"line_end":651,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":263962,"byte_end":264021,"line_start":652,"line_end":652,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264026,"byte_end":264029,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264034,"byte_end":264045,"line_start":654,"line_end":654,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264050,"byte_end":264092,"line_start":655,"line_end":655,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).second(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264097,"byte_end":264156,"line_start":656,"line_end":656,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264161,"byte_end":264176,"line_start":657,"line_end":657,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264181,"byte_end":264223,"line_start":658,"line_end":658,"column_start":5,"column_end":47}},{"value":"/         .to_offset(offset!(+0:00:30))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264228,"byte_end":264269,"line_start":659,"line_end":659,"column_start":5,"column_end":46}},{"value":"/         .second(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264274,"byte_end":264296,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/     29,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264301,"byte_end":264312,"line_start":661,"line_end":661,"column_start":5,"column_end":16}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264317,"byte_end":264323,"line_start":662,"line_end":662,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264328,"byte_end":264335,"line_start":663,"line_end":663,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264936,"byte_end":264947,"line_start":680,"line_end":680,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<OffsetDateTime>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264558,"byte_end":264622,"line_start":671,"line_end":671,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264627,"byte_end":264630,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264635,"byte_end":264697,"line_start":673,"line_end":673,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264702,"byte_end":264705,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264710,"byte_end":264721,"line_start":675,"line_end":675,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264726,"byte_end":264758,"line_start":676,"line_end":676,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).millisecond(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264763,"byte_end":264827,"line_start":677,"line_end":677,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999 UTC).millisecond(), 999);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264832,"byte_end":264906,"line_start":678,"line_end":678,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":264911,"byte_end":264918,"line_start":679,"line_end":679,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265433,"byte_end":265444,"line_start":696,"line_end":696,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<OffsetDateTime>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265008,"byte_end":265072,"line_start":684,"line_end":684,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265077,"byte_end":265080,"line_start":685,"line_end":685,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265085,"byte_end":265151,"line_start":686,"line_end":686,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265156,"byte_end":265159,"line_start":687,"line_end":687,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265164,"byte_end":265175,"line_start":688,"line_end":688,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265180,"byte_end":265212,"line_start":689,"line_end":689,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).microsecond(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265217,"byte_end":265281,"line_start":690,"line_end":690,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265286,"byte_end":265301,"line_start":691,"line_end":691,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999 UTC).microsecond(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265306,"byte_end":265371,"line_start":692,"line_end":692,"column_start":5,"column_end":70}},{"value":"/     999_999,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265376,"byte_end":265392,"line_start":693,"line_end":693,"column_start":5,"column_end":21}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265397,"byte_end":265403,"line_start":694,"line_end":694,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265408,"byte_end":265415,"line_start":695,"line_end":695,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265939,"byte_end":265949,"line_start":712,"line_end":712,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<OffsetDateTime>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second in the stored offset.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second in the stored offset.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265505,"byte_end":265568,"line_start":700,"line_end":700,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265573,"byte_end":265576,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265581,"byte_end":265651,"line_start":702,"line_end":702,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265656,"byte_end":265659,"line_start":703,"line_end":703,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265664,"byte_end":265675,"line_start":704,"line_end":704,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265680,"byte_end":265712,"line_start":705,"line_end":705,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00 UTC).nanosecond(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265717,"byte_end":265780,"line_start":706,"line_end":706,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265785,"byte_end":265800,"line_start":707,"line_end":707,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999 UTC).nanosecond(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265805,"byte_end":265873,"line_start":708,"line_end":708,"column_start":5,"column_end":73}},{"value":"/     999_999_999,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265878,"byte_end":265898,"line_start":709,"line_end":709,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265903,"byte_end":265909,"line_start":710,"line_end":710,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":265914,"byte_end":265921,"line_start":711,"line_end":711,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266759,"byte_end":266770,"line_start":735,"line_end":735,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<OffsetDateTime>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266098,"byte_end":266171,"line_start":719,"line_end":719,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266176,"byte_end":266179,"line_start":720,"line_end":720,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266184,"byte_end":266191,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266196,"byte_end":266243,"line_start":722,"line_end":722,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266248,"byte_end":266290,"line_start":723,"line_end":723,"column_start":5,"column_end":47}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266295,"byte_end":266363,"line_start":724,"line_end":724,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266368,"byte_end":266424,"line_start":725,"line_end":725,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266429,"byte_end":266432,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266437,"byte_end":266505,"line_start":727,"line_end":727,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_add(2.days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266510,"byte_end":266563,"line_start":728,"line_end":728,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266568,"byte_end":266571,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266576,"byte_end":266591,"line_start":730,"line_end":730,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_add(27.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266596,"byte_end":266664,"line_start":731,"line_end":731,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30 +10))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266669,"byte_end":266718,"line_start":732,"line_end":732,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266723,"byte_end":266729,"line_start":733,"line_end":733,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266734,"byte_end":266741,"line_start":734,"line_end":734,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267586,"byte_end":267597,"line_start":755,"line_end":755,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<OffsetDateTime>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":266925,"byte_end":266998,"line_start":739,"line_end":739,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267003,"byte_end":267006,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267011,"byte_end":267018,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267023,"byte_end":267070,"line_start":742,"line_end":742,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267075,"byte_end":267117,"line_start":743,"line_end":743,"column_start":5,"column_end":47}},{"value":"/ let datetime = Date::MIN.midnight().assume_offset(offset!(+10));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267122,"byte_end":267190,"line_start":744,"line_end":744,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267195,"byte_end":267248,"line_start":745,"line_end":745,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267253,"byte_end":267256,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight().assume_offset(offset!(+10));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267261,"byte_end":267329,"line_start":747,"line_end":747,"column_start":5,"column_end":73}},{"value":"/ assert_eq!(datetime.checked_sub((-2).days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267334,"byte_end":267390,"line_start":748,"line_end":748,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267395,"byte_end":267398,"line_start":749,"line_end":749,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267403,"byte_end":267418,"line_start":750,"line_end":750,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).checked_sub(27.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267423,"byte_end":267491,"line_start":751,"line_end":751,"column_start":5,"column_end":73}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30 +10))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267496,"byte_end":267545,"line_start":752,"line_end":752,"column_start":5,"column_end":54}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267550,"byte_end":267556,"line_start":753,"line_end":753,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267561,"byte_end":267568,"line_start":754,"line_end":754,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269295,"byte_end":269309,"line_start":806,"line_end":806,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<OffsetDateTime>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267826,"byte_end":267887,"line_start":761,"line_end":761,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267892,"byte_end":267895,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267900,"byte_end":267907,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267912,"byte_end":267951,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267956,"byte_end":267988,"line_start":765,"line_end":765,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":267993,"byte_end":268008,"line_start":766,"line_end":766,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":268495,"byte_end":268501,"line_start":780,"line_end":780,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":268506,"byte_end":268509,"line_start":781,"line_end":781,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":268514,"byte_end":268529,"line_start":782,"line_end":782,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269096,"byte_end":269102,"line_start":799,"line_end":799,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269107,"byte_end":269110,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269115,"byte_end":269130,"line_start":801,"line_end":801,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_add(27.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269135,"byte_end":269206,"line_start":802,"line_end":802,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 26 18:30 +10)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269211,"byte_end":269254,"line_start":803,"line_end":803,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269259,"byte_end":269265,"line_start":804,"line_end":804,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269270,"byte_end":269277,"line_start":805,"line_end":805,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271153,"byte_end":271167,"line_start":862,"line_end":862,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<OffsetDateTime>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269684,"byte_end":269745,"line_start":817,"line_end":817,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269750,"byte_end":269753,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269758,"byte_end":269765,"line_start":819,"line_end":819,"column_start":5,"column_end":12}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269770,"byte_end":269809,"line_start":820,"line_end":820,"column_start":5,"column_end":44}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269814,"byte_end":269846,"line_start":821,"line_end":821,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":269851,"byte_end":269866,"line_start":822,"line_end":822,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":270347,"byte_end":270353,"line_start":836,"line_end":836,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":270358,"byte_end":270361,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":270366,"byte_end":270381,"line_start":838,"line_end":838,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":270954,"byte_end":270960,"line_start":855,"line_end":855,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":270965,"byte_end":270968,"line_start":856,"line_end":856,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":270973,"byte_end":270988,"line_start":857,"line_end":857,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30 +10).saturating_sub(27.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":270993,"byte_end":271064,"line_start":858,"line_end":858,"column_start":5,"column_end":76}},{"value":"/     datetime!(2019 - 11 - 24 12:30 +10)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271069,"byte_end":271112,"line_start":859,"line_end":859,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271117,"byte_end":271123,"line_start":860,"line_end":860,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271128,"byte_end":271135,"line_start":861,"line_end":861,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1544},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272415,"byte_end":272427,"line_start":897,"line_end":897,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<OffsetDateTime>::replace_time","value":"const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, which is assumed to be in the stored offset. The date and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the time, which is assumed to be in the stored offset. The date and offset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271684,"byte_end":271770,"line_start":878,"line_end":878,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271775,"byte_end":271804,"line_start":879,"line_end":879,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271809,"byte_end":271812,"line_start":880,"line_end":880,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271817,"byte_end":271828,"line_start":881,"line_end":881,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, time};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271833,"byte_end":271873,"line_start":882,"line_end":882,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271878,"byte_end":271893,"line_start":883,"line_end":883,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 5:00 UTC).replace_time(time!(12:00)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271898,"byte_end":271964,"line_start":884,"line_end":884,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-01 12:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271969,"byte_end":272008,"line_start":885,"line_end":885,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272013,"byte_end":272019,"line_start":886,"line_end":886,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272024,"byte_end":272039,"line_start":887,"line_end":887,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 -5).replace_time(time!(7:00)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272044,"byte_end":272109,"line_start":888,"line_end":888,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 7:00 -5)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272114,"byte_end":272151,"line_start":889,"line_end":889,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272156,"byte_end":272162,"line_start":890,"line_end":890,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272167,"byte_end":272182,"line_start":891,"line_end":891,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_time(time!(12:00)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272187,"byte_end":272252,"line_start":892,"line_end":892,"column_start":5,"column_end":70}},{"value":"/     datetime!(2020-01-01 12:00 +1)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272257,"byte_end":272295,"line_start":893,"line_end":893,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272300,"byte_end":272306,"line_start":894,"line_end":894,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272311,"byte_end":272318,"line_start":895,"line_end":895,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272323,"byte_end":272397,"line_start":896,"line_end":896,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1545},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273165,"byte_end":273177,"line_start":918,"line_end":918,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<OffsetDateTime>::replace_date","value":"const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, which is assumed to be in the stored offset. The time and offset\n components are unchanged.","sig":null,"attributes":[{"value":"/ Replace the date, which is assumed to be in the stored offset. The time and offset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272567,"byte_end":272653,"line_start":903,"line_end":903,"column_start":5,"column_end":91}},{"value":"/ components are unchanged.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272658,"byte_end":272687,"line_start":904,"line_end":904,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272692,"byte_end":272695,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272700,"byte_end":272711,"line_start":906,"line_end":906,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, date};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272716,"byte_end":272756,"line_start":907,"line_end":907,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272761,"byte_end":272776,"line_start":908,"line_end":908,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date(date!(2020-01-30)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272781,"byte_end":272853,"line_start":909,"line_end":909,"column_start":5,"column_end":77}},{"value":"/     datetime!(2020-01-30 12:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272858,"byte_end":272897,"line_start":910,"line_end":910,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272902,"byte_end":272908,"line_start":911,"line_end":911,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272913,"byte_end":272928,"line_start":912,"line_end":912,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 +1).replace_date(date!(2020-01-30)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":272933,"byte_end":273003,"line_start":913,"line_end":913,"column_start":5,"column_end":75}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273008,"byte_end":273045,"line_start":914,"line_end":914,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273050,"byte_end":273056,"line_start":915,"line_end":915,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273061,"byte_end":273068,"line_start":916,"line_end":916,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273073,"byte_end":273147,"line_start":917,"line_end":917,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1546},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273941,"byte_end":273958,"line_start":939,"line_end":939,"column_start":18,"column_end":35},"name":"replace_date_time","qualname":"<OffsetDateTime>::replace_date_time","value":"const fn replace_date_time(Self, PrimitiveDateTime) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date and time, which are assumed to be in the stored offset. The offset\n component remains unchanged.","sig":null,"attributes":[{"value":"/ Replace the date and time, which are assumed to be in the stored offset. The offset","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273317,"byte_end":273404,"line_start":924,"line_end":924,"column_start":5,"column_end":92}},{"value":"/ component remains unchanged.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273409,"byte_end":273441,"line_start":925,"line_end":925,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273446,"byte_end":273449,"line_start":926,"line_end":926,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273454,"byte_end":273465,"line_start":927,"line_end":927,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273470,"byte_end":273502,"line_start":928,"line_end":928,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273507,"byte_end":273522,"line_start":929,"line_end":929,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 UTC).replace_date_time(datetime!(2020-01-30 16:00)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273527,"byte_end":273614,"line_start":930,"line_end":930,"column_start":5,"column_end":92}},{"value":"/     datetime!(2020-01-30 16:00 UTC)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273619,"byte_end":273658,"line_start":931,"line_end":931,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273663,"byte_end":273669,"line_start":932,"line_end":932,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273674,"byte_end":273689,"line_start":933,"line_end":933,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00 +1).replace_date_time(datetime!(2020-01-30 0:00)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273694,"byte_end":273779,"line_start":934,"line_end":934,"column_start":5,"column_end":90}},{"value":"/     datetime!(2020-01-30 0:00 +1)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273784,"byte_end":273821,"line_start":935,"line_end":935,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273826,"byte_end":273832,"line_start":936,"line_end":936,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273837,"byte_end":273844,"line_start":937,"line_end":937,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":273849,"byte_end":273923,"line_start":938,"line_end":938,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274456,"byte_end":274470,"line_start":953,"line_end":953,"column_start":18,"column_end":32},"name":"replace_offset","qualname":"<OffsetDateTime>::replace_offset","value":"const fn replace_offset(Self, UtcOffset) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the offset. The date and time components remain unchanged.","sig":null,"attributes":[{"value":"/ Replace the offset. The date and time components remain unchanged.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274061,"byte_end":274131,"line_start":943,"line_end":943,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274136,"byte_end":274139,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274144,"byte_end":274155,"line_start":945,"line_end":945,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274160,"byte_end":274202,"line_start":946,"line_end":946,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274207,"byte_end":274222,"line_start":947,"line_end":947,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00 UTC).replace_offset(offset!(-5)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274227,"byte_end":274294,"line_start":948,"line_end":948,"column_start":5,"column_end":72}},{"value":"/     datetime!(2020-01-01 0:00 -5)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274299,"byte_end":274336,"line_start":949,"line_end":949,"column_start":5,"column_end":42}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274341,"byte_end":274347,"line_start":950,"line_end":950,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274352,"byte_end":274359,"line_start":951,"line_end":951,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `OffsetDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274364,"byte_end":274438,"line_start":952,"line_end":952,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275123,"byte_end":275135,"line_start":968,"line_end":968,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<OffsetDateTime>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274567,"byte_end":274625,"line_start":957,"line_end":957,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274630,"byte_end":274633,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274638,"byte_end":274649,"line_start":959,"line_end":959,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274654,"byte_end":274686,"line_start":960,"line_end":960,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274691,"byte_end":274706,"line_start":961,"line_end":961,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_year(2019),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274711,"byte_end":274774,"line_start":962,"line_end":962,"column_start":5,"column_end":68}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00 +01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274779,"byte_end":274826,"line_start":963,"line_end":963,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274831,"byte_end":274837,"line_start":964,"line_end":964,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274842,"byte_end":274966,"line_start":965,"line_end":965,"column_start":5,"column_end":129}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":274971,"byte_end":275093,"line_start":966,"line_end":966,"column_start":5,"column_end":127}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275098,"byte_end":275105,"line_start":967,"line_end":967,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1549},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275739,"byte_end":275752,"line_start":983,"line_end":983,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<OffsetDateTime>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275295,"byte_end":275329,"line_start":972,"line_end":972,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275334,"byte_end":275337,"line_start":973,"line_end":973,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275342,"byte_end":275353,"line_start":974,"line_end":974,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275358,"byte_end":275390,"line_start":975,"line_end":975,"column_start":5,"column_end":37}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275395,"byte_end":275417,"line_start":976,"line_end":976,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275422,"byte_end":275437,"line_start":977,"line_end":977,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_month(Month::January),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275442,"byte_end":275516,"line_start":978,"line_end":978,"column_start":5,"column_end":79}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00 +01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275521,"byte_end":275568,"line_start":979,"line_end":979,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275573,"byte_end":275579,"line_start":980,"line_end":980,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00 +01).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275584,"byte_end":275709,"line_start":981,"line_end":981,"column_start":5,"column_end":130}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275714,"byte_end":275721,"line_start":982,"line_end":982,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1550},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276405,"byte_end":276416,"line_start":998,"line_end":998,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<OffsetDateTime>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275917,"byte_end":275950,"line_start":987,"line_end":987,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275955,"byte_end":275958,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275963,"byte_end":275974,"line_start":989,"line_end":989,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":275979,"byte_end":276011,"line_start":990,"line_end":990,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276016,"byte_end":276031,"line_start":991,"line_end":991,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00 +01).replace_day(1),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276036,"byte_end":276095,"line_start":992,"line_end":992,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00 +01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276100,"byte_end":276147,"line_start":993,"line_end":993,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276152,"byte_end":276158,"line_start":994,"line_end":994,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276163,"byte_end":276260,"line_start":995,"line_end":995,"column_start":5,"column_end":102}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00 +01).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276265,"byte_end":276375,"line_start":996,"line_end":996,"column_start":5,"column_end":115}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276380,"byte_end":276387,"line_start":997,"line_end":997,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1551},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276988,"byte_end":277000,"line_start":1012,"line_end":1012,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<OffsetDateTime>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276572,"byte_end":276599,"line_start":1002,"line_end":1002,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276604,"byte_end":276607,"line_start":1003,"line_end":1003,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276612,"byte_end":276623,"line_start":1004,"line_end":1004,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276628,"byte_end":276660,"line_start":1005,"line_end":1005,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276665,"byte_end":276680,"line_start":1006,"line_end":1006,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276685,"byte_end":276760,"line_start":1007,"line_end":1007,"column_start":5,"column_end":80}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006 +01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276765,"byte_end":276827,"line_start":1008,"line_end":1008,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276832,"byte_end":276838,"line_start":1009,"line_end":1009,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276843,"byte_end":276958,"line_start":1010,"line_end":1010,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":276963,"byte_end":276970,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1552},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277594,"byte_end":277608,"line_start":1026,"line_end":1026,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<OffsetDateTime>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277159,"byte_end":277199,"line_start":1016,"line_end":1016,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277204,"byte_end":277207,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277212,"byte_end":277223,"line_start":1018,"line_end":1018,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277228,"byte_end":277260,"line_start":1019,"line_end":1019,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277265,"byte_end":277280,"line_start":1020,"line_end":1020,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277285,"byte_end":277362,"line_start":1021,"line_end":1021,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006 +01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277367,"byte_end":277429,"line_start":1022,"line_end":1022,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277434,"byte_end":277440,"line_start":1023,"line_end":1023,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277445,"byte_end":277564,"line_start":1024,"line_end":1024,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277569,"byte_end":277576,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278210,"byte_end":278224,"line_start":1040,"line_end":1040,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<OffsetDateTime>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277773,"byte_end":277815,"line_start":1030,"line_end":1030,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277820,"byte_end":277823,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277828,"byte_end":277839,"line_start":1032,"line_end":1032,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277844,"byte_end":277876,"line_start":1033,"line_end":1033,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277881,"byte_end":277896,"line_start":1034,"line_end":1034,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277901,"byte_end":277978,"line_start":1035,"line_end":1035,"column_start":5,"column_end":82}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006 +01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":277983,"byte_end":278045,"line_start":1036,"line_end":1036,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278050,"byte_end":278056,"line_start":1037,"line_end":1037,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278061,"byte_end":278180,"line_start":1038,"line_end":1038,"column_start":5,"column_end":124}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278185,"byte_end":278192,"line_start":1039,"line_end":1039,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1554},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278844,"byte_end":278863,"line_start":1054,"line_end":1054,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<OffsetDateTime>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278389,"byte_end":278436,"line_start":1044,"line_end":1044,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278441,"byte_end":278444,"line_start":1045,"line_end":1045,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278449,"byte_end":278460,"line_start":1046,"line_end":1046,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278465,"byte_end":278497,"line_start":1047,"line_end":1047,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278502,"byte_end":278517,"line_start":1048,"line_end":1048,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278522,"byte_end":278604,"line_start":1049,"line_end":1049,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007 +01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278609,"byte_end":278663,"line_start":1050,"line_end":1050,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278668,"byte_end":278674,"line_start":1051,"line_end":1051,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278679,"byte_end":278814,"line_start":1052,"line_end":1052,"column_start":5,"column_end":140}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":278819,"byte_end":278826,"line_start":1053,"line_end":1053,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279578,"byte_end":279597,"line_start":1074,"line_end":1074,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<OffsetDateTime>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279107,"byte_end":279154,"line_start":1064,"line_end":1064,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279159,"byte_end":279162,"line_start":1065,"line_end":1065,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279167,"byte_end":279178,"line_start":1066,"line_end":1066,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279183,"byte_end":279215,"line_start":1067,"line_end":1067,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279220,"byte_end":279235,"line_start":1068,"line_end":1068,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(7_008),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279240,"byte_end":279326,"line_start":1069,"line_end":1069,"column_start":5,"column_end":91}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008 +01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279331,"byte_end":279389,"line_start":1070,"line_end":1070,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279394,"byte_end":279400,"line_start":1071,"line_end":1071,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279405,"byte_end":279548,"line_start":1072,"line_end":1072,"column_start":5,"column_end":148}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279553,"byte_end":279560,"line_start":1073,"line_end":1073,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1556},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280324,"byte_end":280342,"line_start":1094,"line_end":1094,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<OffsetDateTime>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279841,"byte_end":279887,"line_start":1084,"line_end":1084,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279892,"byte_end":279895,"line_start":1085,"line_end":1085,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279900,"byte_end":279911,"line_start":1086,"line_end":1086,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279916,"byte_end":279948,"line_start":1087,"line_end":1087,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279953,"byte_end":279968,"line_start":1088,"line_end":1088,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(7_008_009),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":279973,"byte_end":280062,"line_start":1089,"line_end":1089,"column_start":5,"column_end":94}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009 +01))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280067,"byte_end":280129,"line_start":1090,"line_end":1090,"column_start":5,"column_end":67}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280134,"byte_end":280140,"line_start":1091,"line_end":1091,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006 +01).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280145,"byte_end":280294,"line_start":1092,"line_end":1092,"column_start":5,"column_end":154}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280299,"byte_end":280306,"line_start":1093,"line_end":1093,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1558},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280791,"byte_end":280802,"line_start":1108,"line_end":1108,"column_start":12,"column_end":23},"name":"format_into","qualname":"<OffsetDateTime>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280672,"byte_end":280730,"line_start":1106,"line_end":1106,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280735,"byte_end":280779,"line_start":1107,"line_end":1107,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1561},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281717,"byte_end":281723,"line_start":1137,"line_end":1137,"column_start":12,"column_end":18},"name":"format","qualname":"<OffsetDateTime>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `OffsetDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `OffsetDateTime` using the provided [format","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281103,"byte_end":281161,"line_start":1121,"line_end":1121,"column_start":5,"column_end":63}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281166,"byte_end":281210,"line_start":1122,"line_end":1122,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281215,"byte_end":281218,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281223,"byte_end":281234,"line_start":1124,"line_end":1124,"column_start":5,"column_end":16}},{"value":"/ # use time::format_description;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281239,"byte_end":281274,"line_start":1125,"line_end":1125,"column_start":5,"column_end":40}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281279,"byte_end":281311,"line_start":1126,"line_end":1126,"column_start":5,"column_end":37}},{"value":"/ let format = format_description::parse(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281316,"byte_end":281359,"line_start":1127,"line_end":1127,"column_start":5,"column_end":48}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281364,"byte_end":281433,"line_start":1128,"line_end":1128,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\",","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281438,"byte_end":281500,"line_start":1129,"line_end":1129,"column_start":5,"column_end":67}},{"value":"/ )?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281505,"byte_end":281512,"line_start":1130,"line_end":1130,"column_start":5,"column_end":12}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281517,"byte_end":281532,"line_start":1131,"line_end":1131,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08).format(&format)?,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281537,"byte_end":281603,"line_start":1132,"line_end":1132,"column_start":5,"column_end":71}},{"value":"/     \"2020-01-02 03:04:05 +06:07:08\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281608,"byte_end":281647,"line_start":1133,"line_end":1133,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281652,"byte_end":281658,"line_start":1134,"line_end":1134,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281663,"byte_end":281693,"line_start":1135,"line_end":1135,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281698,"byte_end":281705,"line_start":1136,"line_end":1136,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1564},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282598,"byte_end":282603,"line_start":1160,"line_end":1160,"column_start":12,"column_end":17},"name":"parse","qualname":"<OffsetDateTime>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse an `OffsetDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse an `OffsetDateTime` from the input using the provided [format","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281945,"byte_end":282016,"line_start":1144,"line_end":1144,"column_start":5,"column_end":76}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282021,"byte_end":282065,"line_start":1145,"line_end":1145,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282070,"byte_end":282073,"line_start":1146,"line_end":1146,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282078,"byte_end":282089,"line_start":1147,"line_end":1147,"column_start":5,"column_end":16}},{"value":"/ # use time::OffsetDateTime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282094,"byte_end":282125,"line_start":1148,"line_end":1148,"column_start":5,"column_end":36}},{"value":"/ # use time_macros::{datetime, format_description};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282130,"byte_end":282184,"line_start":1149,"line_end":1149,"column_start":5,"column_end":59}},{"value":"/ let format = format_description!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282189,"byte_end":282226,"line_start":1150,"line_end":1150,"column_start":5,"column_end":42}},{"value":"/     \"[year]-[month]-[day] [hour]:[minute]:[second] [offset_hour \\","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282231,"byte_end":282300,"line_start":1151,"line_end":1151,"column_start":5,"column_end":74}},{"value":"/          sign:mandatory]:[offset_minute]:[offset_second]\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282305,"byte_end":282366,"line_start":1152,"line_end":1152,"column_start":5,"column_end":66}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282371,"byte_end":282377,"line_start":1153,"line_end":1153,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282382,"byte_end":282397,"line_start":1154,"line_end":1154,"column_start":5,"column_end":20}},{"value":"/     OffsetDateTime::parse(\"2020-01-02 03:04:05 +06:07:08\", &format)?,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282402,"byte_end":282475,"line_start":1155,"line_end":1155,"column_start":5,"column_end":78}},{"value":"/     datetime!(2020-01-02 03:04:05 +06:07:08)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282480,"byte_end":282528,"line_start":1156,"line_end":1156,"column_start":5,"column_end":53}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282533,"byte_end":282539,"line_start":1157,"line_end":1157,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282544,"byte_end":282574,"line_start":1158,"line_end":1158,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":282579,"byte_end":282586,"line_start":1159,"line_end":1159,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1568},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":283754,"byte_end":283757,"line_start":1192,"line_end":1192,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OffsetDateTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1570},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":283932,"byte_end":283935,"line_start":1198,"line_end":1198,"column_start":8,"column_end":11},"name":"fmt","qualname":"<OffsetDateTime as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1572},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284132,"byte_end":284134,"line_start":1206,"line_end":1206,"column_start":8,"column_end":10},"name":"eq","qualname":"<OffsetDateTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &Self) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1574},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284297,"byte_end":284308,"line_start":1212,"line_end":1212,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OffsetDateTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &Self) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1576},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284424,"byte_end":284427,"line_start":1218,"line_end":1218,"column_start":8,"column_end":11},"name":"cmp","qualname":"<OffsetDateTime as std::cmp::Ord>::cmp","value":"fn cmp(&Self, &Self) -> Ordering","parent":{"krate":2,"index":2838},"children":[],"decl_id":{"krate":2,"index":2839},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1578},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284604,"byte_end":284608,"line_start":1225,"line_end":1225,"column_start":8,"column_end":12},"name":"hash","qualname":"<OffsetDateTime as std::hash::Hash>::hash","value":"fn hash<H>(&Self, &mut H) where H: Hasher","parent":{"krate":2,"index":10113},"children":[],"decl_id":{"krate":2,"index":10114},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1583},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284984,"byte_end":284987,"line_start":1238,"line_end":1238,"column_start":8,"column_end":11},"name":"add","qualname":"<OffsetDateTime as std::ops::Add>::add","value":"fn add(Self, T) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1587},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":285283,"byte_end":285286,"line_start":1251,"line_end":1251,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, T) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1590},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":285515,"byte_end":285518,"line_start":1261,"line_end":1261,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1593},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":285840,"byte_end":285843,"line_start":1272,"line_end":1272,"column_start":8,"column_end":11},"name":"add","qualname":"<SystemTime as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1596},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286310,"byte_end":286313,"line_start":1290,"line_end":1290,"column_start":8,"column_end":11},"name":"sub","qualname":"<SystemTime as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1599},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286589,"byte_end":286592,"line_start":1301,"line_end":1301,"column_start":8,"column_end":11},"name":"sub","qualname":"<OffsetDateTime as std::ops::Sub>::sub","value":"fn sub(Self, SystemTime) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1602},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286776,"byte_end":286779,"line_start":1310,"line_end":1310,"column_start":8,"column_end":11},"name":"sub","qualname":"<SystemTime as std::ops::Sub>::sub","value":"fn sub(Self, OffsetDateTime) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1604},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286954,"byte_end":286956,"line_start":1317,"line_end":1317,"column_start":8,"column_end":10},"name":"eq","qualname":"<OffsetDateTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &SystemTime) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1606},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287114,"byte_end":287116,"line_start":1324,"line_end":1324,"column_start":8,"column_end":10},"name":"eq","qualname":"<SystemTime as std::cmp::PartialEq>::eq","value":"fn eq(&Self, &OffsetDateTime) -> bool","parent":{"krate":2,"index":2802},"children":[],"decl_id":{"krate":2,"index":2804},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1608},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287289,"byte_end":287300,"line_start":1331,"line_end":1331,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<OffsetDateTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &SystemTime) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287485,"byte_end":287496,"line_start":1338,"line_end":1338,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<SystemTime as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp(&Self, &OffsetDateTime) -> Option<Ordering>","parent":{"krate":2,"index":2848},"children":[],"decl_id":{"krate":2,"index":2850},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287688,"byte_end":287692,"line_start":1345,"line_end":1345,"column_start":8,"column_end":12},"name":"from","qualname":"<OffsetDateTime as std::convert::From>::from","value":"fn from(SystemTime) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1614},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":288070,"byte_end":288074,"line_start":1356,"line_end":1356,"column_start":8,"column_end":12},"name":"from","qualname":"<SystemTime as std::convert::From>::from","value":"fn from(OffsetDateTime) -> Self","parent":{"krate":2,"index":3056},"children":[],"decl_id":{"krate":2,"index":3058},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1615},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parsing","qualname":"::parsing","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","parent":null,"children":[{"krate":0,"index":1616},{"krate":0,"index":1800},{"krate":0,"index":1890},{"krate":0,"index":1982},{"krate":0,"index":2313},{"krate":0,"index":2521},{"krate":0,"index":2532},{"krate":0,"index":2535},{"krate":0,"index":4450},{"krate":0,"index":4456},{"krate":0,"index":2538},{"krate":0,"index":2549},{"krate":0,"index":2552}],"decl_id":null,"docs":" Parsing for various types.\n","sig":null,"attributes":[{"value":"cfg(feature = \"parsing\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10463,"byte_end":10490,"line_start":318,"line_end":318,"column_start":1,"column_end":28}},{"value":"/ Parsing for various types.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":289413,"byte_end":289443,"line_start":1,"line_end":1,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":2040},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332258,"byte_end":332266,"line_start":16,"line_end":16,"column_start":11,"column_end":19},"name":"Parsable","qualname":"::parsing::parsable::Parsable","value":"Parsable: sealed::Sealed","parent":null,"children":[],"decl_id":null,"docs":" A type that can be parsed.\n","sig":null,"attributes":[{"value":"/ A type that can be parsed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332169,"byte_end":332199,"line_start":14,"line_end":14,"column_start":1,"column_end":31}}]},{"kind":"Trait","id":{"krate":0,"index":2053},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332947,"byte_end":332953,"line_start":36,"line_end":36,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::parsing::parsable::sealed::Sealed","value":"Sealed","parent":null,"children":[{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060},{"krate":0,"index":2061}],"decl_id":null,"docs":" Parse the item using a format description and an input.\n","sig":null,"attributes":[{"value":"/ Parse the item using a format description and an input.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332873,"byte_end":332932,"line_start":35,"line_end":35,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2054},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333139,"byte_end":333149,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"parse_into","qualname":"::parsing::parsable::sealed::Sealed::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Parse the item into the provided [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into the provided [`Parsed`] struct.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332964,"byte_end":333019,"line_start":37,"line_end":37,"column_start":9,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333028,"byte_end":333031,"line_start":38,"line_end":38,"column_start":9,"column_end":12}},{"value":"/ This method can be used to parse a single component without parsing the full value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333040,"byte_end":333127,"line_start":39,"line_end":39,"column_start":9,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":2056},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333519,"byte_end":333524,"line_start":50,"line_end":50,"column_start":12,"column_end":17},"name":"parse","qualname":"::parsing::parsable::sealed::Sealed::parse","value":"fn parse(&Self, &[u8]) -> Result<Parsed, error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Parse the item into a new [`Parsed`] struct.","sig":null,"attributes":[{"value":"/ Parse the item into a new [`Parsed`] struct.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333290,"byte_end":333338,"line_start":46,"line_end":46,"column_start":9,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333347,"byte_end":333350,"line_start":47,"line_end":47,"column_start":9,"column_end":12}},{"value":"/ This method can only be used to parse a complete value of a type. If any characters","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333359,"byte_end":333446,"line_start":48,"line_end":48,"column_start":9,"column_end":96}},{"value":"/ remain after parsing, an error will be returned.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333455,"byte_end":333507,"line_start":49,"line_end":49,"column_start":9,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2057},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333895,"byte_end":333905,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"parse_date","qualname":"::parsing::parsable::sealed::Sealed::parse_date","value":"fn parse_date(&Self, &[u8]) -> Result<Date, error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Parse a [`Date`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Date`] from the format description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":333834,"byte_end":333883,"line_start":59,"line_end":59,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2058},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334086,"byte_end":334096,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"parse_time","qualname":"::parsing::parsable::sealed::Sealed::parse_time","value":"fn parse_time(&Self, &[u8]) -> Result<Time, error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Parse a [`Time`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`Time`] from the format description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334025,"byte_end":334074,"line_start":64,"line_end":64,"column_start":9,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":2059},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334282,"byte_end":334294,"line_start":70,"line_end":70,"column_start":12,"column_end":24},"name":"parse_offset","qualname":"::parsing::parsable::sealed::Sealed::parse_offset","value":"fn parse_offset(&Self, &[u8]) -> Result<UtcOffset, error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Parse a [`UtcOffset`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`UtcOffset`] from the format description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334216,"byte_end":334270,"line_start":69,"line_end":69,"column_start":9,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2060},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334493,"byte_end":334508,"line_start":75,"line_end":75,"column_start":12,"column_end":27},"name":"parse_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_date_time","value":"fn parse_date_time(&Self, &[u8]) -> Result<PrimitiveDateTime, error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Parse a [`PrimitiveDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`PrimitiveDateTime`] from the format description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334419,"byte_end":334481,"line_start":74,"line_end":74,"column_start":9,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2061},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334712,"byte_end":334734,"line_start":80,"line_end":80,"column_start":12,"column_end":34},"name":"parse_offset_date_time","qualname":"::parsing::parsable::sealed::Sealed::parse_offset_date_time","value":"fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":null,"docs":" Parse a [`OffsetDateTime`] from the format description.\n","sig":null,"attributes":[{"value":"/ Parse a [`OffsetDateTime`] from the format description.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334641,"byte_end":334700,"line_start":79,"line_end":79,"column_start":9,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2063},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334938,"byte_end":334948,"line_start":88,"line_end":88,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<FormatItem as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2054},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2066},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":335168,"byte_end":335178,"line_start":98,"line_end":98,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<[FormatItem] as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2054},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":335424,"byte_end":335434,"line_start":109,"line_end":109,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<OwnedFormatItem as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2054},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2072},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":335681,"byte_end":335691,"line_start":120,"line_end":120,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<[OwnedFormatItem] as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2054},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":335944,"byte_end":335954,"line_start":133,"line_end":133,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<T as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2054},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":336226,"byte_end":336236,"line_start":145,"line_end":145,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<Rfc2822 as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2054},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2151},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":342970,"byte_end":342992,"line_start":302,"line_end":302,"column_start":8,"column_end":30},"name":"parse_offset_date_time","qualname":"<Rfc2822 as parsing::parsable::sealed::Sealed>::parse_offset_date_time","value":"fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2061},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2204},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":349999,"byte_end":350009,"line_start":472,"line_end":472,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<Rfc3339 as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2054},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":354455,"byte_end":354477,"line_start":577,"line_end":577,"column_start":8,"column_end":30},"name":"parse_offset_date_time","qualname":"<Rfc3339 as parsing::parsable::sealed::Sealed>::parse_offset_date_time","value":"fn parse_offset_date_time(&Self, &[u8])\n-> Result<OffsetDateTime, error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2061},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":359674,"byte_end":359684,"line_start":698,"line_end":698,"column_start":8,"column_end":18},"name":"parse_into","qualname":"<Iso8601<CONFIG> as parsing::parsable::sealed::Sealed>::parse_into","value":"fn parse_into<'a>(&Self, &'a [u8], &mut Parsed)\n-> Result<&'a [u8], error::Parse>","parent":{"krate":0,"index":2053},"children":[],"decl_id":{"krate":0,"index":2054},"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2420},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":362405,"byte_end":362418,"line_start":24,"line_end":24,"column_start":15,"column_end":28},"name":"AnyFormatItem","qualname":"::parsing::parsed::sealed::AnyFormatItem","value":"AnyFormatItem","parent":null,"children":[{"krate":0,"index":2421}],"decl_id":null,"docs":" A trait to allow `parse_item` to be generic.\n","sig":null,"attributes":[{"value":"/ A trait to allow `parse_item` to be generic.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":362342,"byte_end":362390,"line_start":23,"line_end":23,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":362507,"byte_end":362517,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"parse_item","qualname":"::parsing::parsed::sealed::AnyFormatItem::parse_item","value":"fn parse_item<'a>(&Self, &mut Parsed, &'a [u8])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":{"krate":0,"index":2420},"children":[],"decl_id":null,"docs":" Parse a single item, returning the remaining input on success.\n","sig":null,"attributes":[{"value":"/ Parse a single item, returning the remaining input on success.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":362429,"byte_end":362495,"line_start":25,"line_end":25,"column_start":9,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":362728,"byte_end":362738,"line_start":35,"line_end":35,"column_start":8,"column_end":18},"name":"parse_item","qualname":"<FormatItem as parsing::parsed::sealed::AnyFormatItem>::parse_item","value":"fn parse_item<'a>(&Self, &mut Parsed, &'a [u8])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":{"krate":0,"index":2420},"children":[],"decl_id":{"krate":0,"index":2421},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":364078,"byte_end":364088,"line_start":69,"line_end":69,"column_start":8,"column_end":18},"name":"parse_item","qualname":"<OwnedFormatItem as parsing::parsed::sealed::AnyFormatItem>::parse_item","value":"fn parse_item<'a>(&Self, &mut Parsed, &'a [u8])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":{"krate":0,"index":2420},"children":[],"decl_id":{"krate":0,"index":2421},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4356},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":365680,"byte_end":365686,"line_start":108,"line_end":108,"column_start":12,"column_end":18},"name":"Parsed","qualname":"::parsing::parsed::Parsed","value":"Parsed {  }","parent":null,"children":[{"krate":0,"index":4357},{"krate":0,"index":4358},{"krate":0,"index":4359},{"krate":0,"index":4360},{"krate":0,"index":4361},{"krate":0,"index":4362},{"krate":0,"index":4363},{"krate":0,"index":4364},{"krate":0,"index":4365},{"krate":0,"index":4366},{"krate":0,"index":4367},{"krate":0,"index":4368},{"krate":0,"index":4369},{"krate":0,"index":4370},{"krate":0,"index":4371},{"krate":0,"index":4372},{"krate":0,"index":4373},{"krate":0,"index":4374},{"krate":0,"index":4375},{"krate":0,"index":4376},{"krate":0,"index":4377}],"decl_id":null,"docs":" All information parsed.","sig":null,"attributes":[{"value":"/ All information parsed.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":365354,"byte_end":365381,"line_start":101,"line_end":101,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":365382,"byte_end":365385,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ This information is directly used to construct the final values.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":365386,"byte_end":365454,"line_start":103,"line_end":103,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":365455,"byte_end":365458,"line_start":104,"line_end":104,"column_start":1,"column_end":4}},{"value":"/ Most users will not need think about this struct in any way. It is public to allow for manual","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":365459,"byte_end":365556,"line_start":105,"line_end":105,"column_start":1,"column_end":98}},{"value":"/ control over values, in the instance that the default parser is insufficient.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":365557,"byte_end":365638,"line_start":106,"line_end":106,"column_start":1,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2445},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":368429,"byte_end":368432,"line_start":176,"line_end":176,"column_start":18,"column_end":21},"name":"new","qualname":"<Parsed>::new","value":"const fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new instance of `Parsed` with no information known.\n","sig":null,"attributes":[{"value":"/ Create a new instance of `Parsed` with no information known.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":368347,"byte_end":368411,"line_start":175,"line_end":175,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2446},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":369666,"byte_end":369676,"line_start":207,"line_end":207,"column_start":12,"column_end":22},"name":"parse_item","qualname":"<Parsed>::parse_item","value":"fn parse_item<'a,\nimpl sealed::AnyFormatItem>(&mut Self, &'a [u8], &impl sealed::AnyFormatItem)\n-> Result<&'a [u8], error::ParseFromDescription> where\nimpl sealed::AnyFormatItem: sealed::AnyFormatItem","parent":null,"children":[],"decl_id":null,"docs":" Parse a single [`FormatItem`] or [`OwnedFormatItem`], mutating the struct. The remaining\n input is returned as the `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a single [`FormatItem`] or [`OwnedFormatItem`], mutating the struct. The remaining","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":369324,"byte_end":369416,"line_start":202,"line_end":202,"column_start":5,"column_end":97}},{"value":"/ input is returned as the `Ok` value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":369421,"byte_end":369461,"line_start":203,"line_end":203,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":369466,"byte_end":369469,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ If a [`FormatItem::Optional`] or [`OwnedFormatItem::Optional`] is passed, parsing will not","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":369474,"byte_end":369568,"line_start":205,"line_end":205,"column_start":5,"column_end":99}},{"value":"/ fail; the input will be returned as-is if the expected format is not present.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":369573,"byte_end":369654,"line_start":206,"line_end":206,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":370200,"byte_end":370211,"line_start":220,"line_end":220,"column_start":12,"column_end":23},"name":"parse_items","qualname":"<Parsed>::parse_items","value":"fn parse_items<'a,\nimpl sealed::AnyFormatItem>(&mut Self, &'a [u8],\n&[impl sealed::AnyFormatItem])\n-> Result<&'a [u8], error::ParseFromDescription> where\nimpl sealed::AnyFormatItem: sealed::AnyFormatItem","parent":null,"children":[],"decl_id":null,"docs":" Parse a sequence of [`FormatItem`]s or [`OwnedFormatItem`]s, mutating the struct. The\n remaining input is returned as the `Ok` value.","sig":null,"attributes":[{"value":"/ Parse a sequence of [`FormatItem`]s or [`OwnedFormatItem`]s, mutating the struct. The","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":369874,"byte_end":369963,"line_start":215,"line_end":215,"column_start":5,"column_end":94}},{"value":"/ remaining input is returned as the `Ok` value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":369968,"byte_end":370018,"line_start":216,"line_end":216,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":370023,"byte_end":370026,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ This method will fail if any of the contained [`FormatItem`]s or [`OwnedFormatItem`]s fail","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":370031,"byte_end":370125,"line_start":218,"line_end":218,"column_start":5,"column_end":99}},{"value":"/ to parse. `self` will not be mutated in this instance.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":370130,"byte_end":370188,"line_start":219,"line_end":219,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":2452},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":370752,"byte_end":370765,"line_start":236,"line_end":236,"column_start":12,"column_end":25},"name":"parse_literal","qualname":"<Parsed>::parse_literal","value":"fn parse_literal<'a>(&'a [u8], &[u8])\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a literal byte sequence. The remaining input is returned as the `Ok` value.\n","sig":null,"attributes":[{"value":"/ Parse a literal byte sequence. The remaining input is returned as the `Ok` value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":370655,"byte_end":370740,"line_start":235,"line_end":235,"column_start":5,"column_end":90}}]},{"kind":"Method","id":{"krate":0,"index":2454},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":371122,"byte_end":371137,"line_start":247,"line_end":247,"column_start":12,"column_end":27},"name":"parse_component","qualname":"<Parsed>::parse_component","value":"fn parse_component<'a>(&mut Self, &'a [u8], Component)\n-> Result<&'a [u8], error::ParseFromDescription>","parent":null,"children":[],"decl_id":null,"docs":" Parse a single component, mutating the struct. The remaining input is returned as the `Ok`\n value.\n","sig":null,"attributes":[{"value":"/ Parse a single component, mutating the struct. The remaining input is returned as the `Ok`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":371001,"byte_end":371095,"line_start":245,"line_end":245,"column_start":5,"column_end":99}},{"value":"/ value.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":371100,"byte_end":371110,"line_start":246,"line_end":246,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":4383},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376647,"byte_end":376651,"line_start":361,"line_end":361,"column_start":20,"column_end":24},"name":"year","qualname":"<Parsed>::year","value":"const fn year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4384},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376686,"byte_end":376699,"line_start":362,"line_end":362,"column_start":29,"column_end":42},"name":"year_last_two","qualname":"<Parsed>::year_last_two","value":"const fn year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4385},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376728,"byte_end":376736,"line_start":363,"line_end":363,"column_start":24,"column_end":32},"name":"iso_year","qualname":"<Parsed>::iso_year","value":"const fn iso_year(&Self) -> Option<i32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4386},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376775,"byte_end":376792,"line_start":364,"line_end":364,"column_start":33,"column_end":50},"name":"iso_year_last_two","qualname":"<Parsed>::iso_year_last_two","value":"const fn iso_year_last_two(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4387},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376806,"byte_end":376811,"line_start":365,"line_end":365,"column_start":9,"column_end":14},"name":"month","qualname":"<Parsed>::month","value":"const fn month(&Self) -> Option<Month>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376060,"byte_end":376091,"line_start":340,"line_end":340,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4388},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376853,"byte_end":376871,"line_start":366,"line_end":366,"column_start":34,"column_end":52},"name":"sunday_week_number","qualname":"<Parsed>::sunday_week_number","value":"const fn sunday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4389},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376910,"byte_end":376928,"line_start":367,"line_end":367,"column_start":34,"column_end":52},"name":"monday_week_number","qualname":"<Parsed>::monday_week_number","value":"const fn monday_week_number(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4390},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376942,"byte_end":376957,"line_start":368,"line_end":368,"column_start":9,"column_end":24},"name":"iso_week_number","qualname":"<Parsed>::iso_week_number","value":"const fn iso_week_number(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376060,"byte_end":376091,"line_start":340,"line_end":340,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4391},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376978,"byte_end":376985,"line_start":369,"line_end":369,"column_start":9,"column_end":16},"name":"weekday","qualname":"<Parsed>::weekday","value":"const fn weekday(&Self) -> Option<Weekday>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376060,"byte_end":376091,"line_start":340,"line_end":340,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4392},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377004,"byte_end":377011,"line_start":370,"line_end":370,"column_start":9,"column_end":16},"name":"ordinal","qualname":"<Parsed>::ordinal","value":"const fn ordinal(&Self) -> Option<NonZeroU16>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376060,"byte_end":376091,"line_start":340,"line_end":340,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4393},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377033,"byte_end":377036,"line_start":371,"line_end":371,"column_start":9,"column_end":12},"name":"day","qualname":"<Parsed>::day","value":"const fn day(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376060,"byte_end":376091,"line_start":340,"line_end":340,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4394},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377071,"byte_end":377078,"line_start":372,"line_end":372,"column_start":23,"column_end":30},"name":"hour_24","qualname":"<Parsed>::hour_24","value":"const fn hour_24(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4395},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377092,"byte_end":377099,"line_start":373,"line_end":373,"column_start":9,"column_end":16},"name":"hour_12","qualname":"<Parsed>::hour_12","value":"const fn hour_12(&Self) -> Option<NonZeroU8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376060,"byte_end":376091,"line_start":340,"line_end":340,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4396},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377120,"byte_end":377133,"line_start":374,"line_end":374,"column_start":9,"column_end":22},"name":"hour_12_is_pm","qualname":"<Parsed>::hour_12_is_pm","value":"const fn hour_12_is_pm(&Self) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376060,"byte_end":376091,"line_start":340,"line_end":340,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4397},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377162,"byte_end":377168,"line_start":375,"line_end":375,"column_start":22,"column_end":28},"name":"minute","qualname":"<Parsed>::minute","value":"const fn minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4398},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377195,"byte_end":377201,"line_start":376,"line_end":376,"column_start":22,"column_end":28},"name":"second","qualname":"<Parsed>::second","value":"const fn second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4399},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377231,"byte_end":377240,"line_start":377,"line_end":377,"column_start":25,"column_end":34},"name":"subsecond","qualname":"<Parsed>::subsecond","value":"const fn subsecond(&Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":4400},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377273,"byte_end":377284,"line_start":378,"line_end":378,"column_start":27,"column_end":38},"name":"offset_hour","qualname":"<Parsed>::offset_hour","value":"const fn offset_hour(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the named component.\n","sig":null,"attributes":[{"value":"/ Obtain the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376238,"byte_end":376269,"line_start":346,"line_end":346,"column_start":9,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":2485},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377459,"byte_end":377472,"line_start":383,"line_end":383,"column_start":18,"column_end":31},"name":"offset_minute","qualname":"<Parsed>::offset_minute","value":"const fn offset_minute(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset minute.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377301,"byte_end":377352,"line_start":381,"line_end":381,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_minute_signed()` instead\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377357,"byte_end":377441,"line_start":382,"line_end":382,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2486},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377638,"byte_end":377658,"line_start":388,"line_end":388,"column_start":18,"column_end":38},"name":"offset_minute_signed","qualname":"<Parsed>::offset_minute_signed","value":"const fn offset_minute_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset minute as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset minute as an `i8`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377580,"byte_end":377620,"line_start":387,"line_end":387,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2487},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":378100,"byte_end":378113,"line_start":399,"line_end":399,"column_start":18,"column_end":31},"name":"offset_second","qualname":"<Parsed>::offset_second","value":"const fn offset_second(&Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the absolute value of the offset second.\n","sig":null,"attributes":[{"value":"/ Obtain the absolute value of the offset second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377942,"byte_end":377993,"line_start":397,"line_end":397,"column_start":5,"column_end":56}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.offset_second_signed()` instead\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":377998,"byte_end":378082,"line_start":398,"line_end":398,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2488},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":378279,"byte_end":378299,"line_start":404,"line_end":404,"column_start":18,"column_end":38},"name":"offset_second_signed","qualname":"<Parsed>::offset_second_signed","value":"const fn offset_second_signed(&Self) -> Option<i8>","parent":null,"children":[],"decl_id":null,"docs":" Obtain the offset second as an `i8`.\n","sig":null,"attributes":[{"value":"/ Obtain the offset second as an `i8`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":378221,"byte_end":378261,"line_start":403,"line_end":403,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4401},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379906,"byte_end":379914,"line_start":449,"line_end":449,"column_start":20,"column_end":28},"name":"set_year","qualname":"<Parsed>::set_year","value":"fn set_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4402},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379954,"byte_end":379971,"line_start":450,"line_end":450,"column_start":29,"column_end":46},"name":"set_year_last_two","qualname":"<Parsed>::set_year_last_two","value":"fn set_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4403},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380014,"byte_end":380026,"line_start":451,"line_end":451,"column_start":24,"column_end":36},"name":"set_iso_year","qualname":"<Parsed>::set_iso_year","value":"fn set_iso_year(&mut Self, i32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4404},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380074,"byte_end":380095,"line_start":452,"line_end":452,"column_start":33,"column_end":54},"name":"set_iso_year_last_two","qualname":"<Parsed>::set_iso_year_last_two","value":"fn set_iso_year_last_two(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4405},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380127,"byte_end":380136,"line_start":453,"line_end":453,"column_start":9,"column_end":18},"name":"set_month","qualname":"<Parsed>::set_month","value":"fn set_month(&mut Self, Month) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379182,"byte_end":379210,"line_start":427,"line_end":427,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4406},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380184,"byte_end":380206,"line_start":454,"line_end":454,"column_start":34,"column_end":56},"name":"set_sunday_week_number","qualname":"<Parsed>::set_sunday_week_number","value":"fn set_sunday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4407},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380264,"byte_end":380286,"line_start":455,"line_end":455,"column_start":34,"column_end":56},"name":"set_monday_week_number","qualname":"<Parsed>::set_monday_week_number","value":"fn set_monday_week_number(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4408},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380319,"byte_end":380338,"line_start":456,"line_end":456,"column_start":9,"column_end":28},"name":"set_iso_week_number","qualname":"<Parsed>::set_iso_week_number","value":"fn set_iso_week_number(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379182,"byte_end":379210,"line_start":427,"line_end":427,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4409},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380375,"byte_end":380386,"line_start":457,"line_end":457,"column_start":9,"column_end":20},"name":"set_weekday","qualname":"<Parsed>::set_weekday","value":"fn set_weekday(&mut Self, Weekday) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379182,"byte_end":379210,"line_start":427,"line_end":427,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4410},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380413,"byte_end":380424,"line_start":458,"line_end":458,"column_start":9,"column_end":20},"name":"set_ordinal","qualname":"<Parsed>::set_ordinal","value":"fn set_ordinal(&mut Self, NonZeroU16) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379182,"byte_end":379210,"line_start":427,"line_end":427,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4411},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380454,"byte_end":380461,"line_start":459,"line_end":459,"column_start":9,"column_end":16},"name":"set_day","qualname":"<Parsed>::set_day","value":"fn set_day(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379182,"byte_end":379210,"line_start":427,"line_end":427,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4412},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380500,"byte_end":380511,"line_start":460,"line_end":460,"column_start":23,"column_end":34},"name":"set_hour_24","qualname":"<Parsed>::set_hour_24","value":"fn set_hour_24(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4413},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380533,"byte_end":380544,"line_start":461,"line_end":461,"column_start":9,"column_end":20},"name":"set_hour_12","qualname":"<Parsed>::set_hour_12","value":"fn set_hour_12(&mut Self, NonZeroU8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379182,"byte_end":379210,"line_start":427,"line_end":427,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4414},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380573,"byte_end":380590,"line_start":462,"line_end":462,"column_start":9,"column_end":26},"name":"set_hour_12_is_pm","qualname":"<Parsed>::set_hour_12_is_pm","value":"fn set_hour_12_is_pm(&mut Self, bool) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379182,"byte_end":379210,"line_start":427,"line_end":427,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4415},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380633,"byte_end":380643,"line_start":463,"line_end":463,"column_start":22,"column_end":32},"name":"set_minute","qualname":"<Parsed>::set_minute","value":"fn set_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4416},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380677,"byte_end":380687,"line_start":464,"line_end":464,"column_start":22,"column_end":32},"name":"set_second","qualname":"<Parsed>::set_second","value":"fn set_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4417},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380724,"byte_end":380737,"line_start":465,"line_end":465,"column_start":25,"column_end":38},"name":"set_subsecond","qualname":"<Parsed>::set_subsecond","value":"fn set_subsecond(&mut Self, u32) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4418},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380780,"byte_end":380795,"line_start":466,"line_end":466,"column_start":27,"column_end":42},"name":"set_offset_hour","qualname":"<Parsed>::set_offset_hour","value":"fn set_offset_hour(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379428,"byte_end":379456,"line_start":434,"line_end":434,"column_start":9,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":2492},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380979,"byte_end":380996,"line_start":474,"line_end":474,"column_start":12,"column_end":29},"name":"set_offset_minute","qualname":"<Parsed>::set_offset_minute","value":"fn set_offset_minute(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380824,"byte_end":380852,"line_start":469,"line_end":469,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_minute_signed()` instead\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":380857,"byte_end":380967,"line_start":470,"line_end":473,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2493},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":381229,"byte_end":381253,"line_start":483,"line_end":483,"column_start":12,"column_end":36},"name":"set_offset_minute_signed","qualname":"<Parsed>::set_offset_minute_signed","value":"fn set_offset_minute_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":381179,"byte_end":381217,"line_start":482,"line_end":482,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":2494},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":381577,"byte_end":381594,"line_start":494,"line_end":494,"column_start":12,"column_end":29},"name":"set_offset_second","qualname":"<Parsed>::set_offset_second","value":"fn set_offset_second(&mut Self, u8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component.\n","sig":null,"attributes":[{"value":"/ Set the named component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":381422,"byte_end":381450,"line_start":489,"line_end":489,"column_start":5,"column_end":33}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.set_offset_second_signed()` instead\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":381455,"byte_end":381565,"line_start":490,"line_end":493,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2495},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":381827,"byte_end":381851,"line_start":503,"line_end":503,"column_start":12,"column_end":36},"name":"set_offset_second_signed","qualname":"<Parsed>::set_offset_second_signed","value":"fn set_offset_second_signed(&mut Self, i8) -> Option<()>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":381777,"byte_end":381815,"line_start":502,"line_end":502,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":4419},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383484,"byte_end":383493,"line_start":549,"line_end":549,"column_start":20,"column_end":29},"name":"with_year","qualname":"<Parsed>::with_year","value":"const fn with_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4420},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383533,"byte_end":383551,"line_start":550,"line_end":550,"column_start":29,"column_end":47},"name":"with_year_last_two","qualname":"<Parsed>::with_year_last_two","value":"const fn with_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4421},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383594,"byte_end":383607,"line_start":551,"line_end":551,"column_start":24,"column_end":37},"name":"with_iso_year","qualname":"<Parsed>::with_iso_year","value":"const fn with_iso_year(Self, i32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4422},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383655,"byte_end":383677,"line_start":552,"line_end":552,"column_start":33,"column_end":55},"name":"with_iso_year_last_two","qualname":"<Parsed>::with_iso_year_last_two","value":"const fn with_iso_year_last_two(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4423},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383709,"byte_end":383719,"line_start":553,"line_end":553,"column_start":9,"column_end":19},"name":"with_month","qualname":"<Parsed>::with_month","value":"const fn with_month(Self, Month) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382683,"byte_end":382729,"line_start":527,"line_end":527,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4424},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383767,"byte_end":383790,"line_start":554,"line_end":554,"column_start":34,"column_end":57},"name":"with_sunday_week_number","qualname":"<Parsed>::with_sunday_week_number","value":"const fn with_sunday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4425},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383848,"byte_end":383871,"line_start":555,"line_end":555,"column_start":34,"column_end":57},"name":"with_monday_week_number","qualname":"<Parsed>::with_monday_week_number","value":"const fn with_monday_week_number(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4426},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383904,"byte_end":383924,"line_start":556,"line_end":556,"column_start":9,"column_end":29},"name":"with_iso_week_number","qualname":"<Parsed>::with_iso_week_number","value":"const fn with_iso_week_number(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382683,"byte_end":382729,"line_start":527,"line_end":527,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4427},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383961,"byte_end":383973,"line_start":557,"line_end":557,"column_start":9,"column_end":21},"name":"with_weekday","qualname":"<Parsed>::with_weekday","value":"const fn with_weekday(Self, Weekday) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382683,"byte_end":382729,"line_start":527,"line_end":527,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4428},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384000,"byte_end":384012,"line_start":558,"line_end":558,"column_start":9,"column_end":21},"name":"with_ordinal","qualname":"<Parsed>::with_ordinal","value":"const fn with_ordinal(Self, NonZeroU16) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382683,"byte_end":382729,"line_start":527,"line_end":527,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4429},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384042,"byte_end":384050,"line_start":559,"line_end":559,"column_start":9,"column_end":17},"name":"with_day","qualname":"<Parsed>::with_day","value":"const fn with_day(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382683,"byte_end":382729,"line_start":527,"line_end":527,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4430},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384089,"byte_end":384101,"line_start":560,"line_end":560,"column_start":23,"column_end":35},"name":"with_hour_24","qualname":"<Parsed>::with_hour_24","value":"const fn with_hour_24(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4431},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384123,"byte_end":384135,"line_start":561,"line_end":561,"column_start":9,"column_end":21},"name":"with_hour_12","qualname":"<Parsed>::with_hour_12","value":"const fn with_hour_12(Self, NonZeroU8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382683,"byte_end":382729,"line_start":527,"line_end":527,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4432},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384164,"byte_end":384182,"line_start":562,"line_end":562,"column_start":9,"column_end":27},"name":"with_hour_12_is_pm","qualname":"<Parsed>::with_hour_12_is_pm","value":"const fn with_hour_12_is_pm(Self, bool) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382683,"byte_end":382729,"line_start":527,"line_end":527,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4433},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384225,"byte_end":384236,"line_start":563,"line_end":563,"column_start":22,"column_end":33},"name":"with_minute","qualname":"<Parsed>::with_minute","value":"const fn with_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4434},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384270,"byte_end":384281,"line_start":564,"line_end":564,"column_start":22,"column_end":33},"name":"with_second","qualname":"<Parsed>::with_second","value":"const fn with_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4435},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384318,"byte_end":384332,"line_start":565,"line_end":565,"column_start":25,"column_end":39},"name":"with_subsecond","qualname":"<Parsed>::with_subsecond","value":"const fn with_subsecond(Self, u32) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4436},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384375,"byte_end":384391,"line_start":566,"line_end":566,"column_start":27,"column_end":43},"name":"with_offset_hour","qualname":"<Parsed>::with_offset_hour","value":"const fn with_offset_hour(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":382958,"byte_end":383004,"line_start":534,"line_end":534,"column_start":9,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":2499},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384600,"byte_end":384618,"line_start":574,"line_end":574,"column_start":18,"column_end":36},"name":"with_offset_minute","qualname":"<Parsed>::with_offset_minute","value":"const fn with_offset_minute(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384420,"byte_end":384466,"line_start":569,"line_end":569,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_minute_signed()` instead\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384471,"byte_end":384582,"line_start":570,"line_end":573,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2500},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384873,"byte_end":384898,"line_start":583,"line_end":583,"column_start":18,"column_end":43},"name":"with_offset_minute_signed","qualname":"<Parsed>::with_offset_minute_signed","value":"const fn with_offset_minute_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_minute` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_minute` component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":384799,"byte_end":384855,"line_start":582,"line_end":582,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2501},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":385250,"byte_end":385268,"line_start":594,"line_end":594,"column_start":18,"column_end":36},"name":"with_offset_second","qualname":"<Parsed>::with_offset_second","value":"const fn with_offset_second(Self, u8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the named component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the named component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":385070,"byte_end":385116,"line_start":589,"line_end":589,"column_start":5,"column_end":51}},{"value":"deprecated(since = \"0.3.8\", note =\n\"use `parsed.with_offset_second_signed()` instead\")","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":385121,"byte_end":385232,"line_start":590,"line_end":593,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":385523,"byte_end":385548,"line_start":603,"line_end":603,"column_start":18,"column_end":43},"name":"with_offset_second_signed","qualname":"<Parsed>::with_offset_second_signed","value":"const fn with_offset_second_signed(Self, i8) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Set the `offset_second` component and return `self`.\n","sig":null,"attributes":[{"value":"/ Set the `offset_second` component and return `self`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":385449,"byte_end":385505,"line_start":602,"line_end":602,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":2505},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":385797,"byte_end":385805,"line_start":613,"line_end":613,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Date as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":388083,"byte_end":388091,"line_start":673,"line_end":673,"column_start":8,"column_end":16},"name":"try_from","qualname":"<Time as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":389253,"byte_end":389261,"line_start":701,"line_end":701,"column_start":8,"column_end":16},"name":"try_from","qualname":"<UtcOffset as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":390041,"byte_end":390049,"line_start":723,"line_end":723,"column_start":8,"column_end":16},"name":"try_from","qualname":"<PrimitiveDateTime as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":390329,"byte_end":390337,"line_start":732,"line_end":732,"column_start":8,"column_end":16},"name":"try_from","qualname":"<OffsetDateTime as std::convert::TryFrom>::try_from","value":"fn try_from(Parsed) -> Result<Self, Self::Error>","parent":{"krate":2,"index":3063},"children":[],"decl_id":{"krate":2,"index":3066},"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: unwrap_in_result)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":390254,"byte_end":390288,"line_start":731,"line_end":731,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":4460},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393439,"byte_end":393456,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"PrimitiveDateTime","qualname":"::primitive_date_time::PrimitiveDateTime","value":"PrimitiveDateTime {  }","parent":null,"children":[{"krate":0,"index":4461},{"krate":0,"index":4462}],"decl_id":null,"docs":" Combined date and time.\n","sig":null,"attributes":[{"value":"/ Combined date and time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393339,"byte_end":393366,"line_start":15,"line_end":15,"column_start":1,"column_end":28}}]},{"kind":"Const","id":{"krate":0,"index":2607},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394626,"byte_end":394629,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"MIN","qualname":"::primitive_date_time::PrimitiveDateTime::MIN","value":"Self","parent":{"krate":0,"index":2606},"children":[],"decl_id":null,"docs":" The smallest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The smallest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393649,"byte_end":393719,"line_start":25,"line_end":25,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393724,"byte_end":393727,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393732,"byte_end":393809,"line_start":27,"line_end":27,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393814,"byte_end":393817,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `-9999-01-01 00:00:00.0`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393822,"byte_end":393896,"line_start":29,"line_end":29,"column_start":5,"column_end":79}},{"value":"/ 2. With `large-dates` enabled it is equal to `-999999-01-01 00:00:00.0`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393901,"byte_end":393976,"line_start":30,"line_end":30,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393981,"byte_end":393984,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393989,"byte_end":394000,"line_start":32,"line_end":32,"column_start":5,"column_end":16}},{"value":"/ # use time::PrimitiveDateTime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394005,"byte_end":394039,"line_start":33,"line_end":33,"column_start":5,"column_end":39}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394044,"byte_end":394076,"line_start":34,"line_end":34,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394604,"byte_end":394611,"line_start":51,"line_end":51,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":2608},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395702,"byte_end":395705,"line_start":81,"line_end":81,"column_start":15,"column_end":18},"name":"MAX","qualname":"::primitive_date_time::PrimitiveDateTime::MAX","value":"Self","parent":{"krate":0,"index":2606},"children":[],"decl_id":null,"docs":" The largest value that can be represented by `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ The largest value that can be represented by `PrimitiveDateTime`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394676,"byte_end":394745,"line_start":54,"line_end":54,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394750,"byte_end":394753,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ Depending on `large-dates` feature flag, value of this constant may vary.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394758,"byte_end":394835,"line_start":56,"line_end":56,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394840,"byte_end":394843,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ 1. With `large-dates` disabled it is equal to `9999-12-31 23:59:59.999_999_999`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394848,"byte_end":394931,"line_start":58,"line_end":58,"column_start":5,"column_end":88}},{"value":"/ 2. With `large-dates` enabled it is equal to `999999-12-31 23:59:59.999_999_999`","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":394936,"byte_end":395020,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395025,"byte_end":395028,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395033,"byte_end":395044,"line_start":61,"line_end":61,"column_start":5,"column_end":16}},{"value":"/ # use time::PrimitiveDateTime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395049,"byte_end":395083,"line_start":62,"line_end":62,"column_start":5,"column_end":39}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395088,"byte_end":395120,"line_start":63,"line_end":63,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395680,"byte_end":395687,"line_start":80,"line_end":80,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396112,"byte_end":396115,"line_start":93,"line_end":93,"column_start":18,"column_end":21},"name":"new","qualname":"<PrimitiveDateTime>::new","value":"const fn new(Date, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","sig":null,"attributes":[{"value":"/ Create a new `PrimitiveDateTime` from the provided [`Date`] and [`Time`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395752,"byte_end":395829,"line_start":83,"line_end":83,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395834,"byte_end":395837,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395842,"byte_end":395853,"line_start":85,"line_end":85,"column_start":5,"column_end":16}},{"value":"/ # use time::PrimitiveDateTime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395858,"byte_end":395892,"line_start":86,"line_end":86,"column_start":5,"column_end":39}},{"value":"/ # use time_macros::{date, datetime, time};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395897,"byte_end":395943,"line_start":87,"line_end":87,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395948,"byte_end":395963,"line_start":88,"line_end":88,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::new(date!(2019-01-01), time!(0:00)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":395968,"byte_end":396031,"line_start":89,"line_end":89,"column_start":5,"column_end":68}},{"value":"/     datetime!(2019-01-01 0:00),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396036,"byte_end":396071,"line_start":90,"line_end":90,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396076,"byte_end":396082,"line_start":91,"line_end":91,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396087,"byte_end":396094,"line_start":92,"line_end":92,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396453,"byte_end":396457,"line_start":104,"line_end":104,"column_start":18,"column_end":22},"name":"date","qualname":"<PrimitiveDateTime>::date","value":"const fn date(Self) -> Date","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Date`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Date`] component of the `PrimitiveDateTime`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396222,"byte_end":396280,"line_start":98,"line_end":98,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396285,"byte_end":396288,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396293,"byte_end":396304,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{date, datetime};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396309,"byte_end":396349,"line_start":101,"line_end":101,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).date(), date!(2019-01-01));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396354,"byte_end":396423,"line_start":102,"line_end":102,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396428,"byte_end":396435,"line_start":103,"line_end":103,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2611},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396716,"byte_end":396720,"line_start":113,"line_end":113,"column_start":18,"column_end":22},"name":"time","qualname":"<PrimitiveDateTime>::time","value":"const fn time(Self) -> Time","parent":null,"children":[],"decl_id":null,"docs":" Get the [`Time`] component of the `PrimitiveDateTime`.","sig":null,"attributes":[{"value":"/ Get the [`Time`] component of the `PrimitiveDateTime`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396503,"byte_end":396561,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396566,"byte_end":396569,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396574,"byte_end":396585,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, time};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396590,"byte_end":396630,"line_start":111,"line_end":111,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).time(), time!(0:00));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396635,"byte_end":396698,"line_start":112,"line_end":112,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2612},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397132,"byte_end":397136,"line_start":127,"line_end":127,"column_start":18,"column_end":22},"name":"year","qualname":"<PrimitiveDateTime>::year","value":"const fn year(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the year of the date.","sig":null,"attributes":[{"value":"/ Get the year of the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396829,"byte_end":396858,"line_start":119,"line_end":119,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396863,"byte_end":396866,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396871,"byte_end":396882,"line_start":121,"line_end":121,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396887,"byte_end":396919,"line_start":122,"line_end":122,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).year(), 2019);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396924,"byte_end":396980,"line_start":123,"line_end":123,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).year(), 2019);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":396985,"byte_end":397041,"line_start":124,"line_end":124,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).year(), 2020);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397046,"byte_end":397102,"line_start":125,"line_end":125,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397107,"byte_end":397114,"line_start":126,"line_end":126,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2613},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397481,"byte_end":397486,"line_start":139,"line_end":139,"column_start":18,"column_end":23},"name":"month","qualname":"<PrimitiveDateTime>::month","value":"const fn month(Self) -> Month","parent":null,"children":[],"decl_id":null,"docs":" Get the month of the date.","sig":null,"attributes":[{"value":"/ Get the month of the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397188,"byte_end":397218,"line_start":131,"line_end":131,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397223,"byte_end":397226,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397231,"byte_end":397242,"line_start":133,"line_end":133,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397247,"byte_end":397269,"line_start":134,"line_end":134,"column_start":5,"column_end":27}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397274,"byte_end":397306,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).month(), Month::January);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397311,"byte_end":397378,"line_start":136,"line_end":136,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).month(), Month::December);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397383,"byte_end":397451,"line_start":137,"line_end":137,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397456,"byte_end":397463,"line_start":138,"line_end":138,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2614},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397848,"byte_end":397851,"line_start":152,"line_end":152,"column_start":18,"column_end":21},"name":"day","qualname":"<PrimitiveDateTime>::day","value":"const fn day(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the date.","sig":null,"attributes":[{"value":"/ Get the day of the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397541,"byte_end":397569,"line_start":143,"line_end":143,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397574,"byte_end":397577,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=31`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397582,"byte_end":397642,"line_start":145,"line_end":145,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397647,"byte_end":397650,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397655,"byte_end":397666,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397671,"byte_end":397703,"line_start":148,"line_end":148,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).day(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397708,"byte_end":397760,"line_start":149,"line_end":149,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).day(), 31);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397765,"byte_end":397818,"line_start":150,"line_end":150,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397823,"byte_end":397830,"line_start":151,"line_end":151,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2615},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398247,"byte_end":398254,"line_start":165,"line_end":165,"column_start":18,"column_end":25},"name":"ordinal","qualname":"<PrimitiveDateTime>::ordinal","value":"const fn ordinal(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the day of the year.","sig":null,"attributes":[{"value":"/ Get the day of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397901,"byte_end":397929,"line_start":156,"line_end":156,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397934,"byte_end":397937,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=366` (`1..=365` for common years).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":397942,"byte_end":398032,"line_start":158,"line_end":158,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398037,"byte_end":398040,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398045,"byte_end":398056,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398061,"byte_end":398093,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).ordinal(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398098,"byte_end":398154,"line_start":162,"line_end":162,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).ordinal(), 365);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398159,"byte_end":398217,"line_start":163,"line_end":163,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398222,"byte_end":398229,"line_start":164,"line_end":164,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2616},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398814,"byte_end":398822,"line_start":181,"line_end":181,"column_start":18,"column_end":26},"name":"iso_week","qualname":"<PrimitiveDateTime>::iso_week","value":"const fn iso_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO week number.","sig":null,"attributes":[{"value":"/ Get the ISO week number.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398309,"byte_end":398337,"line_start":169,"line_end":169,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398342,"byte_end":398345,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `1..=53`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398350,"byte_end":398410,"line_start":171,"line_end":171,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398415,"byte_end":398418,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398423,"byte_end":398434,"line_start":173,"line_end":173,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398439,"byte_end":398471,"line_start":174,"line_end":174,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).iso_week(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398476,"byte_end":398533,"line_start":175,"line_end":175,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2019-10-04 0:00).iso_week(), 40);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398538,"byte_end":398596,"line_start":176,"line_end":176,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).iso_week(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398601,"byte_end":398658,"line_start":177,"line_end":177,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).iso_week(), 53);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398663,"byte_end":398721,"line_start":178,"line_end":178,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).iso_week(), 53);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398726,"byte_end":398784,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398789,"byte_end":398796,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2617},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399390,"byte_end":399407,"line_start":196,"line_end":196,"column_start":18,"column_end":35},"name":"sunday_based_week","qualname":"<PrimitiveDateTime>::sunday_based_week","value":"const fn sunday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Sunday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Sunday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398877,"byte_end":398941,"line_start":185,"line_end":185,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398946,"byte_end":398949,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":398954,"byte_end":399014,"line_start":187,"line_end":187,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399019,"byte_end":399022,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399027,"byte_end":399038,"line_start":189,"line_end":189,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399043,"byte_end":399075,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399080,"byte_end":399146,"line_start":191,"line_end":191,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399151,"byte_end":399217,"line_start":192,"line_end":192,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).sunday_based_week(), 52);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399222,"byte_end":399289,"line_start":193,"line_end":193,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).sunday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399294,"byte_end":399360,"line_start":194,"line_end":194,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399365,"byte_end":399372,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2618},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399984,"byte_end":400001,"line_start":211,"line_end":211,"column_start":18,"column_end":35},"name":"monday_based_week","qualname":"<PrimitiveDateTime>::monday_based_week","value":"const fn monday_based_week(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the week number where week 1 begins on the first Monday.","sig":null,"attributes":[{"value":"/ Get the week number where week 1 begins on the first Monday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399471,"byte_end":399535,"line_start":200,"line_end":200,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399540,"byte_end":399543,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..=53`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399548,"byte_end":399608,"line_start":202,"line_end":202,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399613,"byte_end":399616,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399621,"byte_end":399632,"line_start":204,"line_end":204,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399637,"byte_end":399669,"line_start":205,"line_end":205,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399674,"byte_end":399740,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399745,"byte_end":399811,"line_start":207,"line_end":207,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-12-31 0:00).monday_based_week(), 52);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399816,"byte_end":399883,"line_start":208,"line_end":208,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(datetime!(2021-01-01 0:00).monday_based_week(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399888,"byte_end":399954,"line_start":209,"line_end":209,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":399959,"byte_end":399966,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2619},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400344,"byte_end":400360,"line_start":225,"line_end":225,"column_start":18,"column_end":34},"name":"to_calendar_date","qualname":"<PrimitiveDateTime>::to_calendar_date","value":"const fn to_calendar_date(Self) -> (i32, Month, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the year, month, and day.","sig":null,"attributes":[{"value":"/ Get the year, month, and day.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400065,"byte_end":400098,"line_start":215,"line_end":215,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400103,"byte_end":400106,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400111,"byte_end":400122,"line_start":217,"line_end":217,"column_start":5,"column_end":16}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400127,"byte_end":400149,"line_start":218,"line_end":218,"column_start":5,"column_end":27}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400154,"byte_end":400186,"line_start":219,"line_end":219,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400191,"byte_end":400206,"line_start":220,"line_end":220,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_calendar_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400211,"byte_end":400265,"line_start":221,"line_end":221,"column_start":5,"column_end":59}},{"value":"/     (2019, Month::January, 1)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400270,"byte_end":400303,"line_start":222,"line_end":222,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400308,"byte_end":400314,"line_start":223,"line_end":223,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400319,"byte_end":400326,"line_start":224,"line_end":224,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2620},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400645,"byte_end":400660,"line_start":235,"line_end":235,"column_start":18,"column_end":33},"name":"to_ordinal_date","qualname":"<PrimitiveDateTime>::to_ordinal_date","value":"const fn to_ordinal_date(Self) -> (i32, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the year and ordinal day number.","sig":null,"attributes":[{"value":"/ Get the year and ordinal day number.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400437,"byte_end":400477,"line_start":229,"line_end":229,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400482,"byte_end":400485,"line_start":230,"line_end":230,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400490,"byte_end":400501,"line_start":231,"line_end":231,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400506,"byte_end":400538,"line_start":232,"line_end":232,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_ordinal_date(), (2019, 1));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400543,"byte_end":400615,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400620,"byte_end":400627,"line_start":234,"line_end":234,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2621},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401514,"byte_end":401530,"line_start":265,"line_end":265,"column_start":18,"column_end":34},"name":"to_iso_week_date","qualname":"<PrimitiveDateTime>::to_iso_week_date","value":"const fn to_iso_week_date(Self) -> (i32, u8, Weekday)","parent":null,"children":[],"decl_id":null,"docs":" Get the ISO 8601 year, week number, and weekday.","sig":null,"attributes":[{"value":"/ Get the ISO 8601 year, week number, and weekday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400730,"byte_end":400782,"line_start":239,"line_end":239,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400787,"byte_end":400790,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400795,"byte_end":400806,"line_start":241,"line_end":241,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400811,"byte_end":400838,"line_start":242,"line_end":242,"column_start":5,"column_end":32}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400843,"byte_end":400875,"line_start":243,"line_end":243,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400880,"byte_end":400895,"line_start":244,"line_end":244,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400900,"byte_end":400954,"line_start":245,"line_end":245,"column_start":5,"column_end":59}},{"value":"/     (2019, 1, Tuesday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400959,"byte_end":400985,"line_start":246,"line_end":246,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":400990,"byte_end":400996,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401001,"byte_end":401016,"line_start":248,"line_end":248,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-10-04 0:00).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401021,"byte_end":401075,"line_start":249,"line_end":249,"column_start":5,"column_end":59}},{"value":"/     (2019, 40, Friday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401080,"byte_end":401106,"line_start":250,"line_end":250,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401111,"byte_end":401117,"line_start":251,"line_end":251,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401122,"byte_end":401137,"line_start":252,"line_end":252,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401142,"byte_end":401196,"line_start":253,"line_end":253,"column_start":5,"column_end":59}},{"value":"/     (2020, 1, Wednesday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401201,"byte_end":401229,"line_start":254,"line_end":254,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401234,"byte_end":401240,"line_start":255,"line_end":255,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401245,"byte_end":401260,"line_start":256,"line_end":256,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-12-31 0:00).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401265,"byte_end":401319,"line_start":257,"line_end":257,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Thursday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401324,"byte_end":401352,"line_start":258,"line_end":258,"column_start":5,"column_end":33}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401357,"byte_end":401363,"line_start":259,"line_end":259,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401368,"byte_end":401383,"line_start":260,"line_end":260,"column_start":5,"column_end":20}},{"value":"/     datetime!(2021-01-01 0:00).to_iso_week_date(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401388,"byte_end":401442,"line_start":261,"line_end":261,"column_start":5,"column_end":59}},{"value":"/     (2020, 53, Friday)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401447,"byte_end":401473,"line_start":262,"line_end":262,"column_start":5,"column_end":31}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401478,"byte_end":401484,"line_start":263,"line_end":263,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401489,"byte_end":401496,"line_start":264,"line_end":264,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2622},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402553,"byte_end":402560,"line_start":287,"line_end":287,"column_start":18,"column_end":25},"name":"weekday","qualname":"<PrimitiveDateTime>::weekday","value":"const fn weekday(Self) -> Weekday","parent":null,"children":[],"decl_id":null,"docs":" Get the weekday.","sig":null,"attributes":[{"value":"/ Get the weekday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401609,"byte_end":401629,"line_start":269,"line_end":269,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401634,"byte_end":401637,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401642,"byte_end":401653,"line_start":271,"line_end":271,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday::*;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401658,"byte_end":401685,"line_start":272,"line_end":272,"column_start":5,"column_end":32}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401690,"byte_end":401722,"line_start":273,"line_end":273,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).weekday(), Tuesday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401727,"byte_end":401789,"line_start":274,"line_end":274,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-02-01 0:00).weekday(), Friday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401794,"byte_end":401855,"line_start":275,"line_end":275,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-03-01 0:00).weekday(), Friday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401860,"byte_end":401921,"line_start":276,"line_end":276,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-04-01 0:00).weekday(), Monday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401926,"byte_end":401987,"line_start":277,"line_end":277,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-05-01 0:00).weekday(), Wednesday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":401992,"byte_end":402056,"line_start":278,"line_end":278,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(datetime!(2019-06-01 0:00).weekday(), Saturday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402061,"byte_end":402124,"line_start":279,"line_end":279,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-07-01 0:00).weekday(), Monday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402129,"byte_end":402190,"line_start":280,"line_end":280,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-08-01 0:00).weekday(), Thursday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402195,"byte_end":402258,"line_start":281,"line_end":281,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2019-09-01 0:00).weekday(), Sunday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402263,"byte_end":402324,"line_start":282,"line_end":282,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-10-01 0:00).weekday(), Tuesday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402329,"byte_end":402391,"line_start":283,"line_end":283,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(datetime!(2019-11-01 0:00).weekday(), Friday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402396,"byte_end":402457,"line_start":284,"line_end":284,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(datetime!(2019-12-01 0:00).weekday(), Sunday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402462,"byte_end":402523,"line_start":285,"line_end":285,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402528,"byte_end":402535,"line_start":286,"line_end":286,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2623},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403304,"byte_end":403317,"line_start":303,"line_end":303,"column_start":18,"column_end":31},"name":"to_julian_day","qualname":"<PrimitiveDateTime>::to_julian_day","value":"const fn to_julian_day(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Get the Julian day for the date. The time is not taken into account for this calculation.","sig":null,"attributes":[{"value":"/ Get the Julian day for the date. The time is not taken into account for this calculation.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402619,"byte_end":402712,"line_start":291,"line_end":291,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402717,"byte_end":402720,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ The algorithm to perform this conversion is derived from one provided by Peter Baum; it is","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402725,"byte_end":402819,"line_start":293,"line_end":293,"column_start":5,"column_end":99}},{"value":"/ freely available [here](https://www.researchgate.net/publication/316558298_Date_Algorithms).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402824,"byte_end":402920,"line_start":294,"line_end":294,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402925,"byte_end":402928,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402933,"byte_end":402944,"line_start":296,"line_end":296,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402949,"byte_end":402981,"line_start":297,"line_end":297,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(-4713-11-24 0:00).to_julian_day(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":402986,"byte_end":403049,"line_start":298,"line_end":298,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(datetime!(2000-01-01 0:00).to_julian_day(), 2_451_545);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403054,"byte_end":403124,"line_start":299,"line_end":299,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).to_julian_day(), 2_458_485);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403129,"byte_end":403199,"line_start":300,"line_end":300,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(datetime!(2019-12-31 0:00).to_julian_day(), 2_458_849);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403204,"byte_end":403274,"line_start":301,"line_end":301,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403279,"byte_end":403286,"line_start":302,"line_end":302,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2624},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403716,"byte_end":403722,"line_start":316,"line_end":316,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<PrimitiveDateTime>::as_hms","value":"const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403436,"byte_end":403479,"line_start":309,"line_end":309,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403484,"byte_end":403487,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403492,"byte_end":403503,"line_start":311,"line_end":311,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403508,"byte_end":403540,"line_start":312,"line_end":312,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403545,"byte_end":403611,"line_start":313,"line_end":313,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(datetime!(2020-01-01 23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403616,"byte_end":403686,"line_start":314,"line_end":314,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403691,"byte_end":403698,"line_start":315,"line_end":315,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2625},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404136,"byte_end":404148,"line_start":330,"line_end":330,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<PrimitiveDateTime>::as_hms_milli","value":"const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403785,"byte_end":403841,"line_start":320,"line_end":320,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403846,"byte_end":403849,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403854,"byte_end":403865,"line_start":322,"line_end":322,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403870,"byte_end":403902,"line_start":323,"line_end":323,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403907,"byte_end":403982,"line_start":324,"line_end":324,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":403987,"byte_end":404002,"line_start":325,"line_end":325,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999).as_hms_milli(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404007,"byte_end":404065,"line_start":326,"line_end":326,"column_start":5,"column_end":63}},{"value":"/     (23, 59, 59, 999)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404070,"byte_end":404095,"line_start":327,"line_end":327,"column_start":5,"column_end":30}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404100,"byte_end":404106,"line_start":328,"line_end":328,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404111,"byte_end":404118,"line_start":329,"line_end":329,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2626},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404581,"byte_end":404593,"line_start":344,"line_end":344,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<PrimitiveDateTime>::as_hms_micro","value":"const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404222,"byte_end":404278,"line_start":334,"line_end":334,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404283,"byte_end":404286,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404291,"byte_end":404302,"line_start":336,"line_end":336,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404307,"byte_end":404339,"line_start":337,"line_end":337,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404344,"byte_end":404419,"line_start":338,"line_end":338,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404424,"byte_end":404439,"line_start":339,"line_end":339,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404444,"byte_end":404506,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404511,"byte_end":404540,"line_start":341,"line_end":341,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404545,"byte_end":404551,"line_start":342,"line_end":342,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404556,"byte_end":404563,"line_start":343,"line_end":343,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2627},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405031,"byte_end":405042,"line_start":358,"line_end":358,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<PrimitiveDateTime>::as_hms_nano","value":"const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404667,"byte_end":404722,"line_start":348,"line_end":348,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404727,"byte_end":404730,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404735,"byte_end":404746,"line_start":350,"line_end":350,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404751,"byte_end":404783,"line_start":351,"line_end":351,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2020-01-01 0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404788,"byte_end":404862,"line_start":352,"line_end":352,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404867,"byte_end":404882,"line_start":353,"line_end":353,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404887,"byte_end":404952,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404957,"byte_end":404990,"line_start":355,"line_end":355,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":404995,"byte_end":405001,"line_start":356,"line_end":356,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405006,"byte_end":405013,"line_start":357,"line_end":357,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2628},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405422,"byte_end":405426,"line_start":371,"line_end":371,"column_start":18,"column_end":22},"name":"hour","qualname":"<PrimitiveDateTime>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405115,"byte_end":405138,"line_start":362,"line_end":362,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405143,"byte_end":405146,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405151,"byte_end":405210,"line_start":364,"line_end":364,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405215,"byte_end":405218,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405223,"byte_end":405234,"line_start":366,"line_end":366,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405239,"byte_end":405271,"line_start":367,"line_end":367,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).hour(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405276,"byte_end":405329,"line_start":368,"line_end":368,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).hour(), 23);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405334,"byte_end":405392,"line_start":369,"line_end":369,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405397,"byte_end":405404,"line_start":370,"line_end":370,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2629},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405800,"byte_end":405806,"line_start":384,"line_end":384,"column_start":18,"column_end":24},"name":"minute","qualname":"<PrimitiveDateTime>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405477,"byte_end":405512,"line_start":375,"line_end":375,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405517,"byte_end":405520,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405525,"byte_end":405584,"line_start":377,"line_end":377,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405589,"byte_end":405592,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405597,"byte_end":405608,"line_start":379,"line_end":379,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405613,"byte_end":405645,"line_start":380,"line_end":380,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).minute(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405650,"byte_end":405705,"line_start":381,"line_end":381,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).minute(), 59);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405710,"byte_end":405770,"line_start":382,"line_end":382,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405775,"byte_end":405782,"line_start":383,"line_end":383,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2630},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406184,"byte_end":406190,"line_start":397,"line_end":397,"column_start":18,"column_end":24},"name":"second","qualname":"<PrimitiveDateTime>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405859,"byte_end":405896,"line_start":388,"line_end":388,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405901,"byte_end":405904,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405909,"byte_end":405968,"line_start":390,"line_end":390,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405973,"byte_end":405976,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405981,"byte_end":405992,"line_start":392,"line_end":392,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":405997,"byte_end":406029,"line_start":393,"line_end":393,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).second(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406034,"byte_end":406089,"line_start":394,"line_end":394,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59).second(), 59);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406094,"byte_end":406154,"line_start":395,"line_end":395,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406159,"byte_end":406166,"line_start":396,"line_end":396,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2631},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406592,"byte_end":406603,"line_start":410,"line_end":410,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<PrimitiveDateTime>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406243,"byte_end":406286,"line_start":401,"line_end":401,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406291,"byte_end":406294,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406299,"byte_end":406361,"line_start":403,"line_end":403,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406366,"byte_end":406369,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406374,"byte_end":406385,"line_start":405,"line_end":405,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406390,"byte_end":406422,"line_start":406,"line_end":406,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).millisecond(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406427,"byte_end":406487,"line_start":407,"line_end":407,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(datetime!(2019-01-01 23:59:59.999).millisecond(), 999);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406492,"byte_end":406562,"line_start":408,"line_end":408,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406567,"byte_end":406574,"line_start":409,"line_end":409,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2632},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407057,"byte_end":407068,"line_start":426,"line_end":426,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<PrimitiveDateTime>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406662,"byte_end":406705,"line_start":414,"line_end":414,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406710,"byte_end":406713,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406718,"byte_end":406784,"line_start":416,"line_end":416,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406789,"byte_end":406792,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406797,"byte_end":406808,"line_start":418,"line_end":418,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406813,"byte_end":406845,"line_start":419,"line_end":419,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).microsecond(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406850,"byte_end":406910,"line_start":420,"line_end":420,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406915,"byte_end":406930,"line_start":421,"line_end":421,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999).microsecond(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":406935,"byte_end":406996,"line_start":422,"line_end":422,"column_start":5,"column_end":66}},{"value":"/     999_999","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407001,"byte_end":407016,"line_start":423,"line_end":423,"column_start":5,"column_end":20}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407021,"byte_end":407027,"line_start":424,"line_end":424,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407032,"byte_end":407039,"line_start":425,"line_end":425,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2633},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407532,"byte_end":407542,"line_start":442,"line_end":442,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<PrimitiveDateTime>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407127,"byte_end":407169,"line_start":430,"line_end":430,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407174,"byte_end":407177,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407182,"byte_end":407252,"line_start":432,"line_end":432,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407257,"byte_end":407260,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407265,"byte_end":407276,"line_start":434,"line_end":434,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407281,"byte_end":407313,"line_start":435,"line_end":435,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(datetime!(2019-01-01 0:00).nanosecond(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407318,"byte_end":407377,"line_start":436,"line_end":436,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407382,"byte_end":407397,"line_start":437,"line_end":437,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 23:59:59.999_999_999).nanosecond(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407402,"byte_end":407466,"line_start":438,"line_end":438,"column_start":5,"column_end":69}},{"value":"/     999_999_999,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407471,"byte_end":407491,"line_start":439,"line_end":439,"column_start":5,"column_end":25}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407496,"byte_end":407502,"line_start":440,"line_end":440,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407507,"byte_end":407514,"line_start":441,"line_end":441,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2634},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408252,"byte_end":408265,"line_start":466,"line_end":466,"column_start":18,"column_end":31},"name":"assume_offset","qualname":"<PrimitiveDateTime>::assume_offset","value":"const fn assume_offset(Self, UtcOffset) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in the provided\n [`UtcOffset`], return an [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in the provided","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407659,"byte_end":407745,"line_start":448,"line_end":448,"column_start":5,"column_end":91}},{"value":"/ [`UtcOffset`], return an [`OffsetDateTime`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407750,"byte_end":407798,"line_start":449,"line_end":449,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407803,"byte_end":407806,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407811,"byte_end":407822,"line_start":451,"line_end":451,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, offset};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407827,"byte_end":407869,"line_start":452,"line_end":452,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407874,"byte_end":407889,"line_start":453,"line_end":453,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407894,"byte_end":407928,"line_start":454,"line_end":454,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(UTC))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407933,"byte_end":407973,"line_start":455,"line_end":455,"column_start":5,"column_end":45}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":407978,"byte_end":408008,"line_start":456,"line_end":456,"column_start":5,"column_end":35}},{"value":"/     1_546_300_800,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408013,"byte_end":408035,"line_start":457,"line_end":457,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408040,"byte_end":408046,"line_start":458,"line_end":458,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408051,"byte_end":408066,"line_start":459,"line_end":459,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408071,"byte_end":408105,"line_start":460,"line_end":460,"column_start":5,"column_end":39}},{"value":"/         .assume_offset(offset!(-1))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408110,"byte_end":408149,"line_start":461,"line_end":461,"column_start":5,"column_end":44}},{"value":"/         .unix_timestamp(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408154,"byte_end":408184,"line_start":462,"line_end":462,"column_start":5,"column_end":35}},{"value":"/     1_546_304_400,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408189,"byte_end":408211,"line_start":463,"line_end":463,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408216,"byte_end":408222,"line_start":464,"line_end":464,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408227,"byte_end":408234,"line_start":465,"line_end":465,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408746,"byte_end":408756,"line_start":483,"line_end":483,"column_start":18,"column_end":28},"name":"assume_utc","qualname":"<PrimitiveDateTime>::assume_utc","value":"const fn assume_utc(Self) -> OffsetDateTime","parent":null,"children":[],"decl_id":null,"docs":" Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an\n [`OffsetDateTime`].","sig":null,"attributes":[{"value":"/ Assuming that the existing `PrimitiveDateTime` represents a moment in UTC, return an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408411,"byte_end":408499,"line_start":473,"line_end":473,"column_start":5,"column_end":93}},{"value":"/ [`OffsetDateTime`].","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408504,"byte_end":408527,"line_start":474,"line_end":474,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408532,"byte_end":408535,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408540,"byte_end":408551,"line_start":476,"line_end":476,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408556,"byte_end":408588,"line_start":477,"line_end":477,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408593,"byte_end":408608,"line_start":478,"line_end":478,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019-01-01 0:00).assume_utc().unix_timestamp(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408613,"byte_end":408678,"line_start":479,"line_end":479,"column_start":5,"column_end":70}},{"value":"/     1_546_300_800,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408683,"byte_end":408705,"line_start":480,"line_end":480,"column_start":5,"column_end":27}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408710,"byte_end":408716,"line_start":481,"line_end":481,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408721,"byte_end":408728,"line_start":482,"line_end":482,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409489,"byte_end":409500,"line_start":505,"line_end":505,"column_start":18,"column_end":29},"name":"checked_add","qualname":"<PrimitiveDateTime>::checked_add","value":"const fn checked_add(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408902,"byte_end":408975,"line_start":489,"line_end":489,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408980,"byte_end":408983,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":408988,"byte_end":408995,"line_start":491,"line_end":491,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409000,"byte_end":409047,"line_start":492,"line_end":492,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409052,"byte_end":409084,"line_start":493,"line_end":493,"column_start":5,"column_end":37}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409089,"byte_end":409129,"line_start":494,"line_end":494,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add((-2).days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409134,"byte_end":409190,"line_start":495,"line_end":495,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409195,"byte_end":409198,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409203,"byte_end":409243,"line_start":497,"line_end":497,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_add(1.days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409248,"byte_end":409301,"line_start":498,"line_end":498,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409306,"byte_end":409309,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409314,"byte_end":409329,"line_start":500,"line_end":500,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_add(27.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409334,"byte_end":409398,"line_start":501,"line_end":501,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 26 18:30))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409403,"byte_end":409448,"line_start":502,"line_end":502,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409453,"byte_end":409459,"line_start":503,"line_end":503,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":409464,"byte_end":409471,"line_start":504,"line_end":504,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2637},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410609,"byte_end":410620,"line_start":535,"line_end":535,"column_start":18,"column_end":29},"name":"checked_sub","qualname":"<PrimitiveDateTime>::checked_sub","value":"const fn checked_sub(Self, Duration) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, returning `None` if an overflow occurred.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, returning `None` if an overflow occurred.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410022,"byte_end":410095,"line_start":519,"line_end":519,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410100,"byte_end":410103,"line_start":520,"line_end":520,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410108,"byte_end":410115,"line_start":521,"line_end":521,"column_start":5,"column_end":12}},{"value":"/ # use time::{Date, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410120,"byte_end":410167,"line_start":522,"line_end":522,"column_start":5,"column_end":52}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410172,"byte_end":410204,"line_start":523,"line_end":523,"column_start":5,"column_end":37}},{"value":"/ let datetime = Date::MIN.midnight();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410209,"byte_end":410249,"line_start":524,"line_end":524,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub(2.days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410254,"byte_end":410307,"line_start":525,"line_end":525,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410312,"byte_end":410315,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let datetime = Date::MAX.midnight();","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410320,"byte_end":410360,"line_start":527,"line_end":527,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(datetime.checked_sub((-1).days()), None);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410365,"byte_end":410421,"line_start":528,"line_end":528,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410426,"byte_end":410429,"line_start":529,"line_end":529,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410434,"byte_end":410449,"line_start":530,"line_end":530,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).checked_sub(27.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410454,"byte_end":410518,"line_start":531,"line_end":531,"column_start":5,"column_end":69}},{"value":"/     Some(datetime!(2019 - 11 - 24 12:30))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410523,"byte_end":410568,"line_start":532,"line_end":532,"column_start":5,"column_end":50}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410573,"byte_end":410579,"line_start":533,"line_end":533,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":410584,"byte_end":410591,"line_start":534,"line_end":534,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2638},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411849,"byte_end":411863,"line_start":571,"line_end":571,"column_start":18,"column_end":32},"name":"saturating_add","qualname":"<PrimitiveDateTime>::saturating_add","value":"const fn saturating_add(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self + duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self + duration`, saturating value on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411216,"byte_end":411277,"line_start":551,"line_end":551,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411282,"byte_end":411285,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411290,"byte_end":411297,"line_start":553,"line_end":553,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411302,"byte_end":411362,"line_start":554,"line_end":554,"column_start":5,"column_end":65}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411367,"byte_end":411399,"line_start":555,"line_end":555,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411404,"byte_end":411419,"line_start":556,"line_end":556,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_add((-2).days()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411424,"byte_end":411483,"line_start":557,"line_end":557,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411488,"byte_end":411518,"line_start":558,"line_end":558,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411523,"byte_end":411529,"line_start":559,"line_end":559,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411534,"byte_end":411537,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411542,"byte_end":411557,"line_start":561,"line_end":561,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_add(2.days()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411562,"byte_end":411618,"line_start":562,"line_end":562,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411623,"byte_end":411653,"line_start":563,"line_end":563,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411658,"byte_end":411664,"line_start":564,"line_end":564,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411669,"byte_end":411672,"line_start":565,"line_end":565,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411677,"byte_end":411692,"line_start":566,"line_end":566,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_add(27.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411697,"byte_end":411764,"line_start":567,"line_end":567,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 26 18:30)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411769,"byte_end":411808,"line_start":568,"line_end":568,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411813,"byte_end":411819,"line_start":569,"line_end":569,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":411824,"byte_end":411831,"line_start":570,"line_end":570,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2639},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412740,"byte_end":412754,"line_start":601,"line_end":601,"column_start":18,"column_end":32},"name":"saturating_sub","qualname":"<PrimitiveDateTime>::saturating_sub","value":"const fn saturating_sub(Self, Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes `self - duration`, saturating value on overflow.","sig":null,"attributes":[{"value":"/ Computes `self - duration`, saturating value on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412107,"byte_end":412168,"line_start":581,"line_end":581,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412173,"byte_end":412176,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412181,"byte_end":412188,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # use time::{PrimitiveDateTime, ext::NumericalDuration};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412193,"byte_end":412253,"line_start":584,"line_end":584,"column_start":5,"column_end":65}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412258,"byte_end":412290,"line_start":585,"line_end":585,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412295,"byte_end":412310,"line_start":586,"line_end":586,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MIN.saturating_sub(2.days()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412315,"byte_end":412371,"line_start":587,"line_end":587,"column_start":5,"column_end":61}},{"value":"/     PrimitiveDateTime::MIN","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412376,"byte_end":412406,"line_start":588,"line_end":588,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412411,"byte_end":412417,"line_start":589,"line_end":589,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412422,"byte_end":412425,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412430,"byte_end":412445,"line_start":591,"line_end":591,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::MAX.saturating_sub((-2).days()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412450,"byte_end":412509,"line_start":592,"line_end":592,"column_start":5,"column_end":64}},{"value":"/     PrimitiveDateTime::MAX","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412514,"byte_end":412544,"line_start":593,"line_end":593,"column_start":5,"column_end":35}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412549,"byte_end":412555,"line_start":594,"line_end":594,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412560,"byte_end":412563,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412568,"byte_end":412583,"line_start":596,"line_end":596,"column_start":5,"column_end":20}},{"value":"/     datetime!(2019 - 11 - 25 15:30).saturating_sub(27.hours()),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412588,"byte_end":412655,"line_start":597,"line_end":597,"column_start":5,"column_end":72}},{"value":"/     datetime!(2019 - 11 - 24 12:30)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412660,"byte_end":412699,"line_start":598,"line_end":598,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412704,"byte_end":412710,"line_start":599,"line_end":599,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":412715,"byte_end":412722,"line_start":600,"line_end":600,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2641},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413506,"byte_end":413518,"line_start":626,"line_end":626,"column_start":18,"column_end":30},"name":"replace_time","qualname":"<PrimitiveDateTime>::replace_time","value":"const fn replace_time(Self, Time) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the time, preserving the date.","sig":null,"attributes":[{"value":"/ Replace the time, preserving the date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413146,"byte_end":413188,"line_start":616,"line_end":616,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413193,"byte_end":413196,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413201,"byte_end":413212,"line_start":618,"line_end":618,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, time};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413217,"byte_end":413257,"line_start":619,"line_end":619,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413262,"byte_end":413277,"line_start":620,"line_end":620,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 17:00).replace_time(time!(5:00)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413282,"byte_end":413344,"line_start":621,"line_end":621,"column_start":5,"column_end":67}},{"value":"/     datetime!(2020-01-01 5:00)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413349,"byte_end":413383,"line_start":622,"line_end":622,"column_start":5,"column_end":39}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413388,"byte_end":413394,"line_start":623,"line_end":623,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413399,"byte_end":413406,"line_start":624,"line_end":624,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413411,"byte_end":413488,"line_start":625,"line_end":625,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2642},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413959,"byte_end":413971,"line_start":640,"line_end":640,"column_start":18,"column_end":30},"name":"replace_date","qualname":"<PrimitiveDateTime>::replace_date","value":"const fn replace_date(Self, Date) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Replace the date, preserving the time.","sig":null,"attributes":[{"value":"/ Replace the date, preserving the time.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413592,"byte_end":413634,"line_start":630,"line_end":630,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413639,"byte_end":413642,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413647,"byte_end":413658,"line_start":632,"line_end":632,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::{datetime, date};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413663,"byte_end":413703,"line_start":633,"line_end":633,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413708,"byte_end":413723,"line_start":634,"line_end":634,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-01 12:00).replace_date(date!(2020-01-30)),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413728,"byte_end":413796,"line_start":635,"line_end":635,"column_start":5,"column_end":73}},{"value":"/     datetime!(2020-01-30 12:00)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413801,"byte_end":413836,"line_start":636,"line_end":636,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413841,"byte_end":413847,"line_start":637,"line_end":637,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413852,"byte_end":413859,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413864,"byte_end":413941,"line_start":639,"line_end":639,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2643},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414667,"byte_end":414679,"line_start":656,"line_end":656,"column_start":18,"column_end":30},"name":"replace_year","qualname":"<PrimitiveDateTime>::replace_year","value":"const fn replace_year(Self, i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the year. The month and day will be unchanged.","sig":null,"attributes":[{"value":"/ Replace the year. The month and day will be unchanged.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414045,"byte_end":414103,"line_start":644,"line_end":644,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414108,"byte_end":414111,"line_start":645,"line_end":645,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414116,"byte_end":414127,"line_start":646,"line_end":646,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414132,"byte_end":414164,"line_start":647,"line_end":647,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414169,"byte_end":414184,"line_start":648,"line_end":648,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_year(2019),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414189,"byte_end":414248,"line_start":649,"line_end":649,"column_start":5,"column_end":64}},{"value":"/     Ok(datetime!(2019 - 02 - 18 12:00))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414253,"byte_end":414296,"line_start":650,"line_end":650,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414301,"byte_end":414307,"line_start":651,"line_end":651,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(-1_000_000_000).is_err()); // -1_000_000_000 isn't a valid year","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414312,"byte_end":414432,"line_start":652,"line_end":652,"column_start":5,"column_end":125}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_year(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid year","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414437,"byte_end":414555,"line_start":653,"line_end":653,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414560,"byte_end":414567,"line_start":654,"line_end":654,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414572,"byte_end":414649,"line_start":655,"line_end":655,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415337,"byte_end":415350,"line_start":672,"line_end":672,"column_start":18,"column_end":31},"name":"replace_month","qualname":"<PrimitiveDateTime>::replace_month","value":"const fn replace_month(Self, Month) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the month of the year.","sig":null,"attributes":[{"value":"/ Replace the month of the year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414823,"byte_end":414857,"line_start":660,"line_end":660,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414862,"byte_end":414865,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414870,"byte_end":414881,"line_start":662,"line_end":662,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414886,"byte_end":414918,"line_start":663,"line_end":663,"column_start":5,"column_end":37}},{"value":"/ # use time::Month;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414923,"byte_end":414945,"line_start":664,"line_end":664,"column_start":5,"column_end":27}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414950,"byte_end":414965,"line_start":665,"line_end":665,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_month(Month::January),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":414970,"byte_end":415040,"line_start":666,"line_end":666,"column_start":5,"column_end":75}},{"value":"/     Ok(datetime!(2022 - 01 - 18 12:00))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415045,"byte_end":415088,"line_start":667,"line_end":667,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415093,"byte_end":415099,"line_start":668,"line_end":668,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 01 - 30 12:00).replace_month(Month::February).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415104,"byte_end":415225,"line_start":669,"line_end":669,"column_start":5,"column_end":126}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415230,"byte_end":415237,"line_start":670,"line_end":670,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415242,"byte_end":415319,"line_start":671,"line_end":671,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416053,"byte_end":416064,"line_start":688,"line_end":688,"column_start":18,"column_end":29},"name":"replace_day","qualname":"<PrimitiveDateTime>::replace_day","value":"const fn replace_day(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the day of the month.","sig":null,"attributes":[{"value":"/ Replace the day of the month.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415499,"byte_end":415532,"line_start":676,"line_end":676,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415537,"byte_end":415540,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415545,"byte_end":415556,"line_start":678,"line_end":678,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415561,"byte_end":415593,"line_start":679,"line_end":679,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415598,"byte_end":415613,"line_start":680,"line_end":680,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 12:00).replace_day(1),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415618,"byte_end":415673,"line_start":681,"line_end":681,"column_start":5,"column_end":60}},{"value":"/     Ok(datetime!(2022 - 02 - 01 12:00))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415678,"byte_end":415721,"line_start":682,"line_end":682,"column_start":5,"column_end":48}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415726,"byte_end":415732,"line_start":683,"line_end":683,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(0).is_err()); // 00 isn't a valid day","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415737,"byte_end":415830,"line_start":684,"line_end":684,"column_start":5,"column_end":98}},{"value":"/ assert!(datetime!(2022 - 02 - 18 12:00).replace_day(30).is_err()); // 30 isn't a valid day in February","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415835,"byte_end":415941,"line_start":685,"line_end":685,"column_start":5,"column_end":111}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415946,"byte_end":415953,"line_start":686,"line_end":686,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":415958,"byte_end":416035,"line_start":687,"line_end":687,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2646},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416690,"byte_end":416702,"line_start":703,"line_end":703,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<PrimitiveDateTime>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416204,"byte_end":416231,"line_start":692,"line_end":692,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416236,"byte_end":416239,"line_start":693,"line_end":693,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416244,"byte_end":416255,"line_start":694,"line_end":694,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416260,"byte_end":416292,"line_start":695,"line_end":695,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416297,"byte_end":416312,"line_start":696,"line_end":696,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416317,"byte_end":416388,"line_start":697,"line_end":697,"column_start":5,"column_end":76}},{"value":"/     Ok(datetime!(2022 - 02 - 18 07:02:03.004_005_006))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416393,"byte_end":416451,"line_start":698,"line_end":698,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416456,"byte_end":416462,"line_start":699,"line_end":699,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416467,"byte_end":416578,"line_start":700,"line_end":700,"column_start":5,"column_end":116}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416583,"byte_end":416590,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416595,"byte_end":416672,"line_start":702,"line_end":702,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2647},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417378,"byte_end":417392,"line_start":720,"line_end":720,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<PrimitiveDateTime>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416873,"byte_end":416913,"line_start":709,"line_end":709,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416918,"byte_end":416921,"line_start":710,"line_end":710,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416926,"byte_end":416937,"line_start":711,"line_end":711,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416942,"byte_end":416974,"line_start":712,"line_end":712,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416979,"byte_end":416994,"line_start":713,"line_end":713,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":416999,"byte_end":417072,"line_start":714,"line_end":714,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:07:03.004_005_006))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417077,"byte_end":417135,"line_start":715,"line_end":715,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417140,"byte_end":417146,"line_start":716,"line_end":716,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417151,"byte_end":417266,"line_start":717,"line_end":717,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417271,"byte_end":417278,"line_start":718,"line_end":718,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417283,"byte_end":417360,"line_start":719,"line_end":719,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2648},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418076,"byte_end":418090,"line_start":737,"line_end":737,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<PrimitiveDateTime>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417569,"byte_end":417611,"line_start":726,"line_end":726,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417616,"byte_end":417619,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417624,"byte_end":417635,"line_start":728,"line_end":728,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417640,"byte_end":417672,"line_start":729,"line_end":729,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417677,"byte_end":417692,"line_start":730,"line_end":730,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417697,"byte_end":417770,"line_start":731,"line_end":731,"column_start":5,"column_end":78}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:07.004_005_006))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417775,"byte_end":417833,"line_start":732,"line_end":732,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417838,"byte_end":417844,"line_start":733,"line_end":733,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417849,"byte_end":417964,"line_start":734,"line_end":734,"column_start":5,"column_end":120}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417969,"byte_end":417976,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":417981,"byte_end":418058,"line_start":736,"line_end":736,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2649},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418792,"byte_end":418811,"line_start":754,"line_end":754,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<PrimitiveDateTime>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418267,"byte_end":418314,"line_start":743,"line_end":743,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418319,"byte_end":418322,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418327,"byte_end":418338,"line_start":745,"line_end":745,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418343,"byte_end":418375,"line_start":746,"line_end":746,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418380,"byte_end":418395,"line_start":747,"line_end":747,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418400,"byte_end":418478,"line_start":748,"line_end":748,"column_start":5,"column_end":83}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418483,"byte_end":418533,"line_start":749,"line_end":749,"column_start":5,"column_end":55}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418538,"byte_end":418544,"line_start":750,"line_end":750,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418549,"byte_end":418680,"line_start":751,"line_end":751,"column_start":5,"column_end":136}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418685,"byte_end":418692,"line_start":752,"line_end":752,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":418697,"byte_end":418774,"line_start":753,"line_end":753,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2650},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419568,"byte_end":419587,"line_start":774,"line_end":774,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<PrimitiveDateTime>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419027,"byte_end":419074,"line_start":763,"line_end":763,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419079,"byte_end":419082,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419087,"byte_end":419098,"line_start":765,"line_end":765,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419103,"byte_end":419135,"line_start":766,"line_end":766,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419140,"byte_end":419155,"line_start":767,"line_end":767,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419160,"byte_end":419242,"line_start":768,"line_end":768,"column_start":5,"column_end":87}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419247,"byte_end":419301,"line_start":769,"line_end":769,"column_start":5,"column_end":59}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419306,"byte_end":419312,"line_start":770,"line_end":770,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419317,"byte_end":419456,"line_start":771,"line_end":771,"column_start":5,"column_end":144}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419461,"byte_end":419468,"line_start":772,"line_end":772,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419473,"byte_end":419550,"line_start":773,"line_end":773,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420356,"byte_end":420374,"line_start":794,"line_end":794,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<PrimitiveDateTime>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419803,"byte_end":419849,"line_start":783,"line_end":783,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419854,"byte_end":419857,"line_start":784,"line_end":784,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419862,"byte_end":419873,"line_start":785,"line_end":785,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419878,"byte_end":419910,"line_start":786,"line_end":786,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419915,"byte_end":419930,"line_start":787,"line_end":787,"column_start":5,"column_end":20}},{"value":"/     datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":419935,"byte_end":420020,"line_start":788,"line_end":788,"column_start":5,"column_end":90}},{"value":"/     Ok(datetime!(2022 - 02 - 18 01:02:03.007_008_009))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420025,"byte_end":420083,"line_start":789,"line_end":789,"column_start":5,"column_end":63}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420088,"byte_end":420094,"line_start":790,"line_end":790,"column_start":5,"column_end":11}},{"value":"/ assert!(datetime!(2022 - 02 - 18 01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420099,"byte_end":420244,"line_start":791,"line_end":791,"column_start":5,"column_end":150}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420249,"byte_end":420256,"line_start":792,"line_end":792,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `PrimitiveDateTime`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420261,"byte_end":420338,"line_start":793,"line_end":793,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":2653},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420801,"byte_end":420812,"line_start":807,"line_end":807,"column_start":12,"column_end":23},"name":"format_into","qualname":"<PrimitiveDateTime>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420679,"byte_end":420740,"line_start":805,"line_end":805,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420745,"byte_end":420789,"line_start":806,"line_end":806,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2656},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421531,"byte_end":421537,"line_start":828,"line_end":828,"column_start":12,"column_end":18},"name":"format","qualname":"<PrimitiveDateTime>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `PrimitiveDateTime` using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `PrimitiveDateTime` using the provided [format","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421037,"byte_end":421098,"line_start":815,"line_end":815,"column_start":5,"column_end":66}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421103,"byte_end":421147,"line_start":816,"line_end":816,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421152,"byte_end":421155,"line_start":817,"line_end":817,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421160,"byte_end":421171,"line_start":818,"line_end":818,"column_start":5,"column_end":16}},{"value":"/ # use time::format_description;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421176,"byte_end":421211,"line_start":819,"line_end":819,"column_start":5,"column_end":40}},{"value":"/ # use time_macros::datetime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421216,"byte_end":421248,"line_start":820,"line_end":820,"column_start":5,"column_end":37}},{"value":"/ let format = format_description::parse(\"[year]-[month]-[day] [hour]:[minute]:[second]\")?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421253,"byte_end":421346,"line_start":821,"line_end":821,"column_start":5,"column_end":98}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421351,"byte_end":421366,"line_start":822,"line_end":822,"column_start":5,"column_end":20}},{"value":"/     datetime!(2020-01-02 03:04:05).format(&format)?,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421371,"byte_end":421427,"line_start":823,"line_end":823,"column_start":5,"column_end":61}},{"value":"/     \"2020-01-02 03:04:05\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421432,"byte_end":421461,"line_start":824,"line_end":824,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421466,"byte_end":421472,"line_start":825,"line_end":825,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421477,"byte_end":421507,"line_start":826,"line_end":826,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421512,"byte_end":421519,"line_start":827,"line_end":827,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422284,"byte_end":422289,"line_start":848,"line_end":848,"column_start":12,"column_end":17},"name":"parse","qualname":"<PrimitiveDateTime>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `PrimitiveDateTime` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `PrimitiveDateTime` from the input using the provided [format","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421745,"byte_end":421818,"line_start":835,"line_end":835,"column_start":5,"column_end":78}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421823,"byte_end":421867,"line_start":836,"line_end":836,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421872,"byte_end":421875,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421880,"byte_end":421891,"line_start":838,"line_end":838,"column_start":5,"column_end":16}},{"value":"/ # use time::PrimitiveDateTime;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421896,"byte_end":421930,"line_start":839,"line_end":839,"column_start":5,"column_end":39}},{"value":"/ # use time_macros::{datetime, format_description};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421935,"byte_end":421989,"line_start":840,"line_end":840,"column_start":5,"column_end":59}},{"value":"/ let format = format_description!(\"[year]-[month]-[day] [hour]:[minute]:[second]\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421994,"byte_end":422080,"line_start":841,"line_end":841,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422085,"byte_end":422100,"line_start":842,"line_end":842,"column_start":5,"column_end":20}},{"value":"/     PrimitiveDateTime::parse(\"2020-01-02 03:04:05\", &format)?,","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422105,"byte_end":422171,"line_start":843,"line_end":843,"column_start":5,"column_end":71}},{"value":"/     datetime!(2020-01-02 03:04:05)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422176,"byte_end":422214,"line_start":844,"line_end":844,"column_start":5,"column_end":43}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422219,"byte_end":422225,"line_start":845,"line_end":845,"column_start":5,"column_end":11}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422230,"byte_end":422260,"line_start":846,"line_end":846,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422265,"byte_end":422272,"line_start":847,"line_end":847,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2662},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422510,"byte_end":422513,"line_start":857,"line_end":857,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PrimitiveDateTime as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2664},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422671,"byte_end":422674,"line_start":863,"line_end":863,"column_start":8,"column_end":11},"name":"fmt","qualname":"<PrimitiveDateTime as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422903,"byte_end":422906,"line_start":873,"line_end":873,"column_start":8,"column_end":11},"name":"add","qualname":"<PrimitiveDateTime as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":423128,"byte_end":423131,"line_start":882,"line_end":882,"column_start":8,"column_end":11},"name":"add","qualname":"<PrimitiveDateTime as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2673},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":423683,"byte_end":423686,"line_start":903,"line_end":903,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":423908,"byte_end":423911,"line_start":912,"line_end":912,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2679},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":424469,"byte_end":424472,"line_start":933,"line_end":933,"column_start":8,"column_end":11},"name":"sub","qualname":"<PrimitiveDateTime as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4507},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":425895,"byte_end":425899,"line_start":32,"line_end":32,"column_start":12,"column_end":16},"name":"Time","qualname":"::time::Time","value":"Time {  }","parent":null,"children":[{"krate":0,"index":4508},{"krate":0,"index":4509},{"krate":0,"index":4510},{"krate":0,"index":4511},{"krate":0,"index":4512}],"decl_id":null,"docs":" The clock time within a given date. Nanosecond precision.","sig":null,"attributes":[{"value":"/ The clock time within a given date. Nanosecond precision.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":425538,"byte_end":425599,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":425600,"byte_end":425603,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ All minutes are assumed to have exactly 60 seconds; no attempt is made to handle leap seconds","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":425604,"byte_end":425701,"line_start":27,"line_end":27,"column_start":1,"column_end":98}},{"value":"/ (either positive or negative).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":425702,"byte_end":425736,"line_start":28,"line_end":28,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":425737,"byte_end":425740,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ When comparing two `Time`s, they are assumed to be in the same calendar date.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":425741,"byte_end":425822,"line_start":30,"line_end":30,"column_start":1,"column_end":82}}]},{"kind":"Const","id":{"krate":0,"index":2715},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426474,"byte_end":426482,"line_start":53,"line_end":53,"column_start":15,"column_end":23},"name":"MIDNIGHT","qualname":"::time::Time::MIDNIGHT","value":"Self","parent":{"krate":0,"index":2714},"children":[],"decl_id":null,"docs":" Create a `Time` that is exactly midnight.","sig":null,"attributes":[{"value":"/ Create a `Time` that is exactly midnight.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426270,"byte_end":426315,"line_start":46,"line_end":46,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426320,"byte_end":426323,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426328,"byte_end":426339,"line_start":48,"line_end":48,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426344,"byte_end":426365,"line_start":49,"line_end":49,"column_start":5,"column_end":26}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426370,"byte_end":426398,"line_start":50,"line_end":50,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Time::MIDNIGHT, time!(0:00));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426403,"byte_end":426447,"line_start":51,"line_end":51,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426452,"byte_end":426459,"line_start":52,"line_end":52,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2718},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427011,"byte_end":427037,"line_start":68,"line_end":68,"column_start":18,"column_end":44},"name":"__from_hms_nanos_unchecked","qualname":"<Time>::__from_hms_nanos_unchecked","value":"const fn __from_hms_nanos_unchecked(u8, u8, u8, u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `Time` from its components.\n","sig":null,"attributes":[{"value":"/ Create a `Time` from its components.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426934,"byte_end":426974,"line_start":66,"line_end":66,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":2719},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427949,"byte_end":427957,"line_start":101,"line_end":101,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<Time>::from_hms","value":"const fn from_hms(u8, u8, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, and second.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, and second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427454,"byte_end":427519,"line_start":88,"line_end":88,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427524,"byte_end":427527,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427532,"byte_end":427543,"line_start":90,"line_end":90,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427548,"byte_end":427569,"line_start":91,"line_end":91,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(1, 2, 3).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427574,"byte_end":427619,"line_start":92,"line_end":92,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427624,"byte_end":427631,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427636,"byte_end":427639,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427644,"byte_end":427655,"line_start":95,"line_end":95,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427660,"byte_end":427681,"line_start":96,"line_end":96,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms(24, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427686,"byte_end":427759,"line_start":97,"line_end":97,"column_start":5,"column_end":78}},{"value":"/ assert!(Time::from_hms(0, 60, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427764,"byte_end":427839,"line_start":98,"line_end":98,"column_start":5,"column_end":80}},{"value":"/ assert!(Time::from_hms(0, 0, 60).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427844,"byte_end":427919,"line_start":99,"line_end":99,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":427924,"byte_end":427931,"line_start":100,"line_end":100,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2720},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428909,"byte_end":428923,"line_start":122,"line_end":122,"column_start":18,"column_end":32},"name":"from_hms_milli","qualname":"<Time>::from_hms_milli","value":"const fn from_hms_milli(u8, u8, u8, u16)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and millisecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428265,"byte_end":428343,"line_start":108,"line_end":108,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428348,"byte_end":428351,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428356,"byte_end":428367,"line_start":110,"line_end":110,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428372,"byte_end":428393,"line_start":111,"line_end":111,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(1, 2, 3, 4).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428398,"byte_end":428452,"line_start":112,"line_end":112,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428457,"byte_end":428464,"line_start":113,"line_end":113,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428469,"byte_end":428472,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428477,"byte_end":428488,"line_start":115,"line_end":115,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428493,"byte_end":428514,"line_start":116,"line_end":116,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_milli(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428519,"byte_end":428601,"line_start":117,"line_end":117,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_milli(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428606,"byte_end":428690,"line_start":118,"line_end":118,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428695,"byte_end":428779,"line_start":119,"line_end":119,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_milli(0, 0, 0, 1_000).is_err()); // 1_000 isn't a valid millisecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428784,"byte_end":428879,"line_start":120,"line_end":120,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":428884,"byte_end":428891,"line_start":121,"line_end":121,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2721},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430085,"byte_end":430099,"line_start":154,"line_end":154,"column_start":18,"column_end":32},"name":"from_hms_micro","qualname":"<Time>::from_hms_micro","value":"const fn from_hms_micro(u8, u8, u8, u32)\n-> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and microsecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429433,"byte_end":429511,"line_start":140,"line_end":140,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429516,"byte_end":429519,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429524,"byte_end":429535,"line_start":142,"line_end":142,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429540,"byte_end":429561,"line_start":143,"line_end":143,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(1, 2, 3, 4).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429566,"byte_end":429620,"line_start":144,"line_end":144,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429625,"byte_end":429632,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429637,"byte_end":429640,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429645,"byte_end":429656,"line_start":147,"line_end":147,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429661,"byte_end":429682,"line_start":148,"line_end":148,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_micro(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429687,"byte_end":429769,"line_start":149,"line_end":149,"column_start":5,"column_end":87}},{"value":"/ assert!(Time::from_hms_micro(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429774,"byte_end":429858,"line_start":150,"line_end":150,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429863,"byte_end":429947,"line_start":151,"line_end":151,"column_start":5,"column_end":89}},{"value":"/ assert!(Time::from_hms_micro(0, 0, 0, 1_000_000).is_err()); // 1_000_000 isn't a valid microsecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":429952,"byte_end":430055,"line_start":152,"line_end":152,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430060,"byte_end":430067,"line_start":153,"line_end":153,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2722},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431255,"byte_end":431268,"line_start":186,"line_end":186,"column_start":18,"column_end":31},"name":"from_hms_nano","qualname":"<Time>::from_hms_nano","value":"const fn from_hms_nano(u8, u8, u8, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to create a `Time` from the hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Attempt to create a `Time` from the hour, minute, second, and nanosecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430602,"byte_end":430679,"line_start":172,"line_end":172,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430684,"byte_end":430687,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430692,"byte_end":430703,"line_start":174,"line_end":174,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430708,"byte_end":430729,"line_start":175,"line_end":175,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(1, 2, 3, 4).is_ok());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430734,"byte_end":430787,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430792,"byte_end":430799,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430804,"byte_end":430807,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430812,"byte_end":430823,"line_start":179,"line_end":179,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430828,"byte_end":430849,"line_start":180,"line_end":180,"column_start":5,"column_end":26}},{"value":"/ assert!(Time::from_hms_nano(24, 0, 0, 0).is_err()); // 24 isn't a valid hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430854,"byte_end":430935,"line_start":181,"line_end":181,"column_start":5,"column_end":86}},{"value":"/ assert!(Time::from_hms_nano(0, 60, 0, 0).is_err()); // 60 isn't a valid minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":430940,"byte_end":431023,"line_start":182,"line_end":182,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 60, 0).is_err()); // 60 isn't a valid second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431028,"byte_end":431111,"line_start":183,"line_end":183,"column_start":5,"column_end":88}},{"value":"/ assert!(Time::from_hms_nano(0, 0, 0, 1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431116,"byte_end":431225,"line_start":184,"line_end":184,"column_start":5,"column_end":114}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431230,"byte_end":431237,"line_start":185,"line_end":185,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2723},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432027,"byte_end":432033,"line_start":210,"line_end":210,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<Time>::as_hms","value":"const fn as_hms(Self) -> (u8, u8, u8)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, and second.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, and second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431781,"byte_end":431824,"line_start":203,"line_end":203,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431829,"byte_end":431832,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431837,"byte_end":431848,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431853,"byte_end":431881,"line_start":206,"line_end":206,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00:00).as_hms(), (0, 0, 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431886,"byte_end":431937,"line_start":207,"line_end":207,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(time!(23:59:59).as_hms(), (23, 59, 59));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":431942,"byte_end":431997,"line_start":208,"line_end":208,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432002,"byte_end":432009,"line_start":209,"line_end":209,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2724},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432398,"byte_end":432410,"line_start":221,"line_end":221,"column_start":18,"column_end":30},"name":"as_hms_milli","qualname":"<Time>::as_hms_milli","value":"const fn as_hms_milli(Self) -> (u8, u8, u8, u16)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and millisecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and millisecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432115,"byte_end":432171,"line_start":214,"line_end":214,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432176,"byte_end":432179,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432184,"byte_end":432195,"line_start":216,"line_end":216,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432200,"byte_end":432228,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_milli(), (0, 0, 0, 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432233,"byte_end":432293,"line_start":218,"line_end":218,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(time!(23:59:59.999).as_hms_milli(), (23, 59, 59, 999));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432298,"byte_end":432368,"line_start":219,"line_end":219,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432373,"byte_end":432380,"line_start":220,"line_end":220,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2725},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432919,"byte_end":432931,"line_start":240,"line_end":240,"column_start":18,"column_end":30},"name":"as_hms_micro","qualname":"<Time>::as_hms_micro","value":"const fn as_hms_micro(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and microsecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and microsecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432594,"byte_end":432650,"line_start":230,"line_end":230,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432655,"byte_end":432658,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432663,"byte_end":432674,"line_start":232,"line_end":232,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432679,"byte_end":432707,"line_start":233,"line_end":233,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_micro(), (0, 0, 0, 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432712,"byte_end":432772,"line_start":234,"line_end":234,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432777,"byte_end":432792,"line_start":235,"line_end":235,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999).as_hms_micro(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432797,"byte_end":432844,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/     (23, 59, 59, 999_999)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432849,"byte_end":432878,"line_start":237,"line_end":237,"column_start":5,"column_end":34}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432883,"byte_end":432889,"line_start":238,"line_end":238,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":432894,"byte_end":432901,"line_start":239,"line_end":239,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2726},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433373,"byte_end":433384,"line_start":254,"line_end":254,"column_start":18,"column_end":29},"name":"as_hms_nano","qualname":"<Time>::as_hms_nano","value":"const fn as_hms_nano(Self) -> (u8, u8, u8, u32)","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour, minute, second, and nanosecond.","sig":null,"attributes":[{"value":"/ Get the clock hour, minute, second, and nanosecond.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433043,"byte_end":433098,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433103,"byte_end":433106,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433111,"byte_end":433122,"line_start":246,"line_end":246,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433127,"byte_end":433155,"line_start":247,"line_end":247,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00:00).as_hms_nano(), (0, 0, 0, 0));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433160,"byte_end":433219,"line_start":248,"line_end":248,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433224,"byte_end":433239,"line_start":249,"line_end":249,"column_start":5,"column_end":20}},{"value":"/     time!(23:59:59.999_999_999).as_hms_nano(),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433244,"byte_end":433294,"line_start":250,"line_end":250,"column_start":5,"column_end":55}},{"value":"/     (23, 59, 59, 999_999_999)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433299,"byte_end":433332,"line_start":251,"line_end":251,"column_start":5,"column_end":38}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433337,"byte_end":433343,"line_start":252,"line_end":252,"column_start":5,"column_end":11}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433348,"byte_end":433355,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2727},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433764,"byte_end":433768,"line_start":267,"line_end":267,"column_start":18,"column_end":22},"name":"hour","qualname":"<Time>::hour","value":"const fn hour(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the clock hour.","sig":null,"attributes":[{"value":"/ Get the clock hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433488,"byte_end":433511,"line_start":258,"line_end":258,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433516,"byte_end":433519,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..24`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433524,"byte_end":433583,"line_start":260,"line_end":260,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433588,"byte_end":433591,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433596,"byte_end":433607,"line_start":262,"line_end":262,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433612,"byte_end":433640,"line_start":263,"line_end":263,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00:00).hour(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433645,"byte_end":433686,"line_start":264,"line_end":264,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(time!(23:59:59).hour(), 23);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433691,"byte_end":433734,"line_start":265,"line_end":265,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433739,"byte_end":433746,"line_start":266,"line_end":266,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2728},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434104,"byte_end":434110,"line_start":280,"line_end":280,"column_start":18,"column_end":24},"name":"minute","qualname":"<Time>::minute","value":"const fn minute(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the minute within the hour.","sig":null,"attributes":[{"value":"/ Get the minute within the hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433812,"byte_end":433847,"line_start":271,"line_end":271,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433852,"byte_end":433855,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433860,"byte_end":433919,"line_start":273,"line_end":273,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433924,"byte_end":433927,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433932,"byte_end":433943,"line_start":275,"line_end":275,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433948,"byte_end":433976,"line_start":276,"line_end":276,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00:00).minute(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":433981,"byte_end":434024,"line_start":277,"line_end":277,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).minute(), 59);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434029,"byte_end":434074,"line_start":278,"line_end":278,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434079,"byte_end":434086,"line_start":279,"line_end":279,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2729},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434450,"byte_end":434456,"line_start":293,"line_end":293,"column_start":18,"column_end":24},"name":"second","qualname":"<Time>::second","value":"const fn second(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the second within the minute.","sig":null,"attributes":[{"value":"/ Get the second within the minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434156,"byte_end":434193,"line_start":284,"line_end":284,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434198,"byte_end":434201,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..60`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434206,"byte_end":434265,"line_start":286,"line_end":286,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434270,"byte_end":434273,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434278,"byte_end":434289,"line_start":288,"line_end":288,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434294,"byte_end":434322,"line_start":289,"line_end":289,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00:00).second(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434327,"byte_end":434370,"line_start":290,"line_end":290,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(time!(23:59:59).second(), 59);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434375,"byte_end":434420,"line_start":291,"line_end":291,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434425,"byte_end":434432,"line_start":292,"line_end":292,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2730},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434817,"byte_end":434828,"line_start":306,"line_end":306,"column_start":18,"column_end":29},"name":"millisecond","qualname":"<Time>::millisecond","value":"const fn millisecond(Self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Get the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Get the milliseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434502,"byte_end":434545,"line_start":297,"line_end":297,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434550,"byte_end":434553,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434558,"byte_end":434620,"line_start":299,"line_end":299,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434625,"byte_end":434628,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434633,"byte_end":434644,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434649,"byte_end":434677,"line_start":302,"line_end":302,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00).millisecond(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434682,"byte_end":434727,"line_start":303,"line_end":303,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999).millisecond(), 999);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434732,"byte_end":434787,"line_start":304,"line_end":304,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434792,"byte_end":434799,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2731},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435225,"byte_end":435236,"line_start":319,"line_end":319,"column_start":18,"column_end":29},"name":"microsecond","qualname":"<Time>::microsecond","value":"const fn microsecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the microseconds within the second.","sig":null,"attributes":[{"value":"/ Get the microseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434898,"byte_end":434941,"line_start":310,"line_end":310,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434946,"byte_end":434949,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":434954,"byte_end":435020,"line_start":312,"line_end":312,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435025,"byte_end":435028,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435033,"byte_end":435044,"line_start":314,"line_end":314,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435049,"byte_end":435077,"line_start":315,"line_end":315,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00).microsecond(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435082,"byte_end":435127,"line_start":316,"line_end":316,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(time!(23:59:59.999_999).microsecond(), 999_999);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435132,"byte_end":435195,"line_start":317,"line_end":317,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435200,"byte_end":435207,"line_start":318,"line_end":318,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2732},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435631,"byte_end":435641,"line_start":332,"line_end":332,"column_start":18,"column_end":28},"name":"nanosecond","qualname":"<Time>::nanosecond","value":"const fn nanosecond(Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Get the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Get the nanoseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435295,"byte_end":435337,"line_start":323,"line_end":323,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435342,"byte_end":435345,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ The returned value will always be in the range `0..1_000_000_000`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435350,"byte_end":435420,"line_start":325,"line_end":325,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435425,"byte_end":435428,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435433,"byte_end":435444,"line_start":327,"line_end":327,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435449,"byte_end":435477,"line_start":328,"line_end":328,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00).nanosecond(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435482,"byte_end":435526,"line_start":329,"line_end":329,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(time!(23:59:59.999_999_999).nanosecond(), 999_999_999);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435531,"byte_end":435601,"line_start":330,"line_end":330,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":435606,"byte_end":435613,"line_start":331,"line_end":331,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2737},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440732,"byte_end":440744,"line_start":459,"line_end":459,"column_start":18,"column_end":30},"name":"replace_hour","qualname":"<Time>::replace_hour","value":"const fn replace_hour(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the clock hour.","sig":null,"attributes":[{"value":"/ Replace the clock hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440320,"byte_end":440347,"line_start":448,"line_end":448,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440352,"byte_end":440355,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440360,"byte_end":440371,"line_start":450,"line_end":450,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440376,"byte_end":440404,"line_start":451,"line_end":451,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440409,"byte_end":440424,"line_start":452,"line_end":452,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_hour(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440429,"byte_end":440481,"line_start":453,"line_end":453,"column_start":5,"column_end":57}},{"value":"/     Ok(time!(07:02:03.004_005_006))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440486,"byte_end":440525,"line_start":454,"line_end":454,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440530,"byte_end":440536,"line_start":455,"line_end":455,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_hour(24).is_err()); // 24 isn't a valid hour","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440541,"byte_end":440633,"line_start":456,"line_end":456,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440638,"byte_end":440645,"line_start":457,"line_end":457,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":440650,"byte_end":440714,"line_start":458,"line_end":458,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2738},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441446,"byte_end":441460,"line_start":480,"line_end":480,"column_start":18,"column_end":32},"name":"replace_minute","qualname":"<Time>::replace_minute","value":"const fn replace_minute(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the minutes within the hour.","sig":null,"attributes":[{"value":"/ Replace the minutes within the hour.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441015,"byte_end":441055,"line_start":469,"line_end":469,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441060,"byte_end":441063,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441068,"byte_end":441079,"line_start":471,"line_end":471,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441084,"byte_end":441112,"line_start":472,"line_end":472,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441117,"byte_end":441132,"line_start":473,"line_end":473,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_minute(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441137,"byte_end":441191,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:07:03.004_005_006))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441196,"byte_end":441235,"line_start":475,"line_end":475,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441240,"byte_end":441246,"line_start":476,"line_end":476,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_minute(60).is_err()); // 60 isn't a valid minute","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441251,"byte_end":441347,"line_start":477,"line_end":477,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441352,"byte_end":441359,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441364,"byte_end":441428,"line_start":479,"line_end":479,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2739},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442168,"byte_end":442182,"line_start":501,"line_end":501,"column_start":18,"column_end":32},"name":"replace_second","qualname":"<Time>::replace_second","value":"const fn replace_second(Self, u8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the seconds within the minute.","sig":null,"attributes":[{"value":"/ Replace the seconds within the minute.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441735,"byte_end":441777,"line_start":490,"line_end":490,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441782,"byte_end":441785,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441790,"byte_end":441801,"line_start":492,"line_end":492,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441806,"byte_end":441834,"line_start":493,"line_end":493,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441839,"byte_end":441854,"line_start":494,"line_end":494,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_second(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441859,"byte_end":441913,"line_start":495,"line_end":495,"column_start":5,"column_end":59}},{"value":"/     Ok(time!(01:02:07.004_005_006))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441918,"byte_end":441957,"line_start":496,"line_end":496,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441962,"byte_end":441968,"line_start":497,"line_end":497,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_second(60).is_err()); // 60 isn't a valid second","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":441973,"byte_end":442069,"line_start":498,"line_end":498,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442074,"byte_end":442081,"line_start":499,"line_end":499,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442086,"byte_end":442150,"line_start":500,"line_end":500,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2740},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442908,"byte_end":442927,"line_start":522,"line_end":522,"column_start":18,"column_end":37},"name":"replace_millisecond","qualname":"<Time>::replace_millisecond","value":"const fn replace_millisecond(Self, u16) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the milliseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the milliseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442457,"byte_end":442504,"line_start":511,"line_end":511,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442509,"byte_end":442512,"line_start":512,"line_end":512,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442517,"byte_end":442528,"line_start":513,"line_end":513,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442533,"byte_end":442561,"line_start":514,"line_end":514,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442566,"byte_end":442581,"line_start":515,"line_end":515,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_millisecond(7),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442586,"byte_end":442645,"line_start":516,"line_end":516,"column_start":5,"column_end":64}},{"value":"/     Ok(time!(01:02:03.007))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442650,"byte_end":442681,"line_start":517,"line_end":517,"column_start":5,"column_end":36}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442686,"byte_end":442692,"line_start":518,"line_end":518,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_millisecond(1_000).is_err()); // 1_000 isn't a valid millisecond","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442697,"byte_end":442809,"line_start":519,"line_end":519,"column_start":5,"column_end":117}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442814,"byte_end":442821,"line_start":520,"line_end":520,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":442826,"byte_end":442890,"line_start":521,"line_end":521,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2741},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443724,"byte_end":443743,"line_start":546,"line_end":546,"column_start":18,"column_end":37},"name":"replace_microsecond","qualname":"<Time>::replace_microsecond","value":"const fn replace_microsecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the microseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the microseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443257,"byte_end":443304,"line_start":535,"line_end":535,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443309,"byte_end":443312,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443317,"byte_end":443328,"line_start":537,"line_end":537,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443333,"byte_end":443361,"line_start":538,"line_end":538,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443366,"byte_end":443381,"line_start":539,"line_end":539,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_microsecond(7_008),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443386,"byte_end":443449,"line_start":540,"line_end":540,"column_start":5,"column_end":68}},{"value":"/     Ok(time!(01:02:03.007_008))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443454,"byte_end":443489,"line_start":541,"line_end":541,"column_start":5,"column_end":40}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443494,"byte_end":443500,"line_start":542,"line_end":542,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_microsecond(1_000_000).is_err()); // 1_000_000 isn't a valid microsecond","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443505,"byte_end":443625,"line_start":543,"line_end":543,"column_start":5,"column_end":125}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443630,"byte_end":443637,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":443642,"byte_end":443706,"line_start":545,"line_end":545,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2742},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444544,"byte_end":444562,"line_start":570,"line_end":570,"column_start":18,"column_end":36},"name":"replace_nanosecond","qualname":"<Time>::replace_nanosecond","value":"const fn replace_nanosecond(Self, u32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Replace the nanoseconds within the second.","sig":null,"attributes":[{"value":"/ Replace the nanoseconds within the second.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444065,"byte_end":444111,"line_start":559,"line_end":559,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444116,"byte_end":444119,"line_start":560,"line_end":560,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444124,"byte_end":444135,"line_start":561,"line_end":561,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444140,"byte_end":444168,"line_start":562,"line_end":562,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444173,"byte_end":444188,"line_start":563,"line_end":563,"column_start":5,"column_end":20}},{"value":"/     time!(01:02:03.004_005_006).replace_nanosecond(7_008_009),","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444193,"byte_end":444259,"line_start":564,"line_end":564,"column_start":5,"column_end":71}},{"value":"/     Ok(time!(01:02:03.007_008_009))","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444264,"byte_end":444303,"line_start":565,"line_end":565,"column_start":5,"column_end":44}},{"value":"/ );","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444308,"byte_end":444314,"line_start":566,"line_end":566,"column_start":5,"column_end":11}},{"value":"/ assert!(time!(01:02:03.004_005_006).replace_nanosecond(1_000_000_000).is_err()); // 1_000_000_000 isn't a valid nanosecond","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444319,"byte_end":444445,"line_start":567,"line_end":567,"column_start":5,"column_end":131}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444450,"byte_end":444457,"line_start":568,"line_end":568,"column_start":5,"column_end":12}},{"value":"must_use = \"This method does not mutate the original `Time`.\"","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444462,"byte_end":444526,"line_start":569,"line_end":569,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2744},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445062,"byte_end":445073,"line_start":586,"line_end":586,"column_start":12,"column_end":23},"name":"format_into","qualname":"<Time>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, crate::error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444961,"byte_end":445050,"line_start":585,"line_end":585,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445674,"byte_end":445680,"line_start":603,"line_end":603,"column_start":12,"column_end":18},"name":"format","qualname":"<Time>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, crate::error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `Time` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `Time` using the provided [format description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445289,"byte_end":445378,"line_start":594,"line_end":594,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445383,"byte_end":445386,"line_start":595,"line_end":595,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445391,"byte_end":445402,"line_start":596,"line_end":596,"column_start":5,"column_end":16}},{"value":"/ # use time::format_description;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445407,"byte_end":445442,"line_start":597,"line_end":597,"column_start":5,"column_end":40}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445447,"byte_end":445475,"line_start":598,"line_end":598,"column_start":5,"column_end":33}},{"value":"/ let format = format_description::parse(\"[hour]:[minute]:[second]\")?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445480,"byte_end":445552,"line_start":599,"line_end":599,"column_start":5,"column_end":77}},{"value":"/ assert_eq!(time!(12:00).format(&format)?, \"12:00:00\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445557,"byte_end":445615,"line_start":600,"line_end":600,"column_start":5,"column_end":63}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445620,"byte_end":445650,"line_start":601,"line_end":601,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445655,"byte_end":445662,"line_start":602,"line_end":602,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446301,"byte_end":446306,"line_start":623,"line_end":623,"column_start":12,"column_end":17},"name":"parse","qualname":"<Time>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `Time` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `Time` from the input using the provided [format","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445889,"byte_end":445949,"line_start":613,"line_end":613,"column_start":5,"column_end":65}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445954,"byte_end":445998,"line_start":614,"line_end":614,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446003,"byte_end":446006,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446011,"byte_end":446022,"line_start":616,"line_end":616,"column_start":5,"column_end":16}},{"value":"/ # use time::Time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446027,"byte_end":446048,"line_start":617,"line_end":617,"column_start":5,"column_end":26}},{"value":"/ # use time_macros::{time, format_description};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446053,"byte_end":446103,"line_start":618,"line_end":618,"column_start":5,"column_end":55}},{"value":"/ let format = format_description!(\"[hour]:[minute]:[second]\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446108,"byte_end":446173,"line_start":619,"line_end":619,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(Time::parse(\"12:00:00\", &format)?, time!(12:00));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446178,"byte_end":446242,"line_start":620,"line_end":620,"column_start":5,"column_end":69}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446247,"byte_end":446277,"line_start":621,"line_end":621,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446282,"byte_end":446289,"line_start":622,"line_end":622,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2753},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446509,"byte_end":446512,"line_start":632,"line_end":632,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Time as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2755},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447413,"byte_end":447416,"line_start":653,"line_end":653,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Time as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447958,"byte_end":447961,"line_start":671,"line_end":671,"column_start":8,"column_end":11},"name":"add","qualname":"<Time as std::ops::Add>::add","value":"fn add(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":" Add the sub-day time of the [`Duration`] to the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Add the sub-day time of the [`Duration`] to the `Time`. Wraps on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447629,"byte_end":447707,"line_start":663,"line_end":663,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447712,"byte_end":447715,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447720,"byte_end":447731,"line_start":665,"line_end":665,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447736,"byte_end":447775,"line_start":666,"line_end":666,"column_start":5,"column_end":44}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447780,"byte_end":447808,"line_start":667,"line_end":667,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(12:00) + 2.hours(), time!(14:00));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447813,"byte_end":447868,"line_start":668,"line_end":668,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(0:00:01) + (-2).seconds(), time!(23:59:59));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447873,"byte_end":447938,"line_start":669,"line_end":669,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447943,"byte_end":447950,"line_start":670,"line_end":670,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448464,"byte_end":448467,"line_start":687,"line_end":687,"column_start":8,"column_end":11},"name":"add","qualname":"<Time as std::ops::Add>::add","value":"fn add(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3218},"children":[],"decl_id":{"krate":2,"index":3221},"docs":" Add the sub-day time of the [`std::time::Duration`] to the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Add the sub-day time of the [`std::time::Duration`] to the `Time`. Wraps on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448116,"byte_end":448205,"line_start":679,"line_end":679,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448210,"byte_end":448213,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448218,"byte_end":448229,"line_start":681,"line_end":681,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448234,"byte_end":448276,"line_start":682,"line_end":682,"column_start":5,"column_end":47}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448281,"byte_end":448309,"line_start":683,"line_end":683,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(12:00) + 2.std_hours(), time!(14:00));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448314,"byte_end":448373,"line_start":684,"line_end":684,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(time!(23:59:59) + 2.std_seconds(), time!(0:00:01));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448378,"byte_end":448444,"line_start":685,"line_end":685,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448449,"byte_end":448456,"line_start":686,"line_end":686,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449010,"byte_end":449013,"line_start":705,"line_end":705,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, Duration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":" Subtract the sub-day time of the [`Duration`] from the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Subtract the sub-day time of the [`Duration`] from the `Time`. Wraps on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448674,"byte_end":448759,"line_start":697,"line_end":697,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448764,"byte_end":448767,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448772,"byte_end":448783,"line_start":699,"line_end":699,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448788,"byte_end":448827,"line_start":700,"line_end":700,"column_start":5,"column_end":44}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448832,"byte_end":448860,"line_start":701,"line_end":701,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(14:00) - 2.hours(), time!(12:00));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448865,"byte_end":448920,"line_start":702,"line_end":702,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(23:59:59) - (-2).seconds(), time!(0:00:01));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448925,"byte_end":448990,"line_start":703,"line_end":703,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448995,"byte_end":449002,"line_start":704,"line_end":704,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2767},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449523,"byte_end":449526,"line_start":721,"line_end":721,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, StdDuration) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":" Subtract the sub-day time of the [`std::time::Duration`] from the `Time`. Wraps on overflow.","sig":null,"attributes":[{"value":"/ Subtract the sub-day time of the [`std::time::Duration`] from the `Time`. Wraps on overflow.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449168,"byte_end":449264,"line_start":713,"line_end":713,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449269,"byte_end":449272,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449277,"byte_end":449288,"line_start":715,"line_end":715,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalStdDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449293,"byte_end":449335,"line_start":716,"line_end":716,"column_start":5,"column_end":47}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449340,"byte_end":449368,"line_start":717,"line_end":717,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(14:00) - 2.std_hours(), time!(12:00));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449373,"byte_end":449432,"line_start":718,"line_end":718,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(time!(0:00:01) - 2.std_seconds(), time!(23:59:59));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449437,"byte_end":449503,"line_start":719,"line_end":719,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449508,"byte_end":449515,"line_start":720,"line_end":720,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2770},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":450215,"byte_end":450218,"line_start":742,"line_end":742,"column_start":8,"column_end":11},"name":"sub","qualname":"<Time as std::ops::Sub>::sub","value":"fn sub(Self, Self) -> Self::Output","parent":{"krate":2,"index":3223},"children":[],"decl_id":{"krate":2,"index":3226},"docs":" Subtract two `Time`s, returning the [`Duration`] between. This assumes both `Time`s are in\n the same calendar day.","sig":null,"attributes":[{"value":"/ Subtract two `Time`s, returning the [`Duration`] between. This assumes both `Time`s are in","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449727,"byte_end":449821,"line_start":731,"line_end":731,"column_start":5,"column_end":99}},{"value":"/ the same calendar day.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449826,"byte_end":449852,"line_start":732,"line_end":732,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449857,"byte_end":449860,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449865,"byte_end":449876,"line_start":734,"line_end":734,"column_start":5,"column_end":16}},{"value":"/ # use time::ext::NumericalDuration;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449881,"byte_end":449920,"line_start":735,"line_end":735,"column_start":5,"column_end":44}},{"value":"/ # use time_macros::time;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449925,"byte_end":449953,"line_start":736,"line_end":736,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(time!(0:00) - time!(0:00), 0.seconds());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449958,"byte_end":450013,"line_start":737,"line_end":737,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(time!(1:00) - time!(0:00), 1.hours());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":450018,"byte_end":450071,"line_start":738,"line_end":738,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(time!(0:00) - time!(1:00), (-1).hours());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":450076,"byte_end":450132,"line_start":739,"line_end":739,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(time!(0:00) - time!(23:00), (-23).hours());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":450137,"byte_end":450195,"line_start":740,"line_end":740,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":450200,"byte_end":450207,"line_start":741,"line_end":741,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":4538},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":451732,"byte_end":451741,"line_start":24,"line_end":24,"column_start":12,"column_end":21},"name":"UtcOffset","qualname":"::utc_offset::UtcOffset","value":"UtcOffset {  }","parent":null,"children":[{"krate":0,"index":4539},{"krate":0,"index":4540},{"krate":0,"index":4541}],"decl_id":null,"docs":" An offset from UTC.","sig":null,"attributes":[{"value":"/ An offset from UTC.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":451445,"byte_end":451468,"line_start":18,"line_end":18,"column_start":1,"column_end":24}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":451469,"byte_end":451472,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ This struct can store values up to ±23:59:59. If you need support outside this range, please","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":451473,"byte_end":451570,"line_start":20,"line_end":20,"column_start":1,"column_end":97}},{"value":"/ file an issue with your use case.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":451571,"byte_end":451608,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Const","id":{"krate":0,"index":2791},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452170,"byte_end":452173,"line_start":41,"line_end":41,"column_start":15,"column_end":18},"name":"UTC","qualname":"::utc_offset::UtcOffset::UTC","value":"Self","parent":{"krate":0,"index":2790},"children":[],"decl_id":null,"docs":" A `UtcOffset` that is UTC.","sig":null,"attributes":[{"value":"/ A `UtcOffset` that is UTC.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":451973,"byte_end":452003,"line_start":34,"line_end":34,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452008,"byte_end":452011,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452016,"byte_end":452027,"line_start":36,"line_end":36,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452032,"byte_end":452058,"line_start":37,"line_end":37,"column_start":5,"column_end":31}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452063,"byte_end":452093,"line_start":38,"line_end":38,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(UtcOffset::UTC, offset!(UTC));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452098,"byte_end":452143,"line_start":39,"line_end":39,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452148,"byte_end":452155,"line_start":40,"line_end":40,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2792},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452499,"byte_end":452519,"line_start":48,"line_end":48,"column_start":18,"column_end":38},"name":"__from_hms_unchecked","qualname":"<UtcOffset>::__from_hms_unchecked","value":"const fn __from_hms_unchecked(i8, i8, i8) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the\n validity of which must be guaranteed by the caller. All three parameters must have the same\n sign.\n","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset of the hours, minutes, and seconds provided, the","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452252,"byte_end":452348,"line_start":44,"line_end":44,"column_start":5,"column_end":101}},{"value":"/ validity of which must be guaranteed by the caller. All three parameters must have the same","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452353,"byte_end":452448,"line_start":45,"line_end":45,"column_start":5,"column_end":100}},{"value":"/ sign.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":452453,"byte_end":452462,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453710,"byte_end":453718,"line_start":84,"line_end":84,"column_start":18,"column_end":26},"name":"from_hms","qualname":"<UtcOffset>::from_hms","value":"const fn from_hms(i8, i8, i8) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds\n provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of hours, minutes, and seconds","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453195,"byte_end":453287,"line_start":72,"line_end":72,"column_start":5,"column_end":97}},{"value":"/ provided.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453292,"byte_end":453305,"line_start":73,"line_end":73,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453310,"byte_end":453313,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ The sign of all three components should match. If they do not, all smaller components will","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453318,"byte_end":453412,"line_start":75,"line_end":75,"column_start":5,"column_end":99}},{"value":"/ have their signs flipped.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453417,"byte_end":453446,"line_start":76,"line_end":76,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453451,"byte_end":453454,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453459,"byte_end":453470,"line_start":78,"line_end":78,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453475,"byte_end":453501,"line_start":79,"line_end":79,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, 2, 3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453506,"byte_end":453572,"line_start":80,"line_end":80,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(UtcOffset::from_hms(1, -2, -3)?.as_hms(), (1, 2, 3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453577,"byte_end":453645,"line_start":81,"line_end":81,"column_start":5,"column_end":73}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453650,"byte_end":453680,"line_start":82,"line_end":82,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":453685,"byte_end":453692,"line_start":83,"line_end":83,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2794},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":454676,"byte_end":454694,"line_start":114,"line_end":114,"column_start":18,"column_end":36},"name":"from_whole_seconds","qualname":"<UtcOffset>::from_whole_seconds","value":"const fn from_whole_seconds(i32) -> Result<Self, error::ComponentRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a `UtcOffset` representing an offset by the number of seconds provided.","sig":null,"attributes":[{"value":"/ Create a `UtcOffset` representing an offset by the number of seconds provided.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":454395,"byte_end":454477,"line_start":107,"line_end":107,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":454482,"byte_end":454485,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":454490,"byte_end":454501,"line_start":109,"line_end":109,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":454506,"byte_end":454532,"line_start":110,"line_end":110,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(UtcOffset::from_whole_seconds(3_723)?.as_hms(), (1, 2, 3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":454537,"byte_end":454611,"line_start":111,"line_end":111,"column_start":5,"column_end":79}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":454616,"byte_end":454646,"line_start":112,"line_end":112,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":454651,"byte_end":454658,"line_start":113,"line_end":113,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2795},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455441,"byte_end":455447,"line_start":134,"line_end":134,"column_start":18,"column_end":24},"name":"as_hms","qualname":"<UtcOffset>::as_hms","value":"const fn as_hms(Self) -> (i8, i8, i8)","parent":null,"children":[],"decl_id":null,"docs":" Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components\n will always match. A positive value indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the UTC offset as its hours, minutes, and seconds. The sign of all three components","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455036,"byte_end":455130,"line_start":126,"line_end":126,"column_start":5,"column_end":99}},{"value":"/ will always match. A positive value indicates an offset to the east; a negative to the west.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455135,"byte_end":455231,"line_start":127,"line_end":127,"column_start":5,"column_end":101}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455236,"byte_end":455239,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455244,"byte_end":455255,"line_start":129,"line_end":129,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455260,"byte_end":455290,"line_start":130,"line_end":130,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(offset!(+1:02:03).as_hms(), (1, 2, 3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455295,"byte_end":455349,"line_start":131,"line_end":131,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).as_hms(), (-1, -2, -3));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455354,"byte_end":455411,"line_start":132,"line_end":132,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455416,"byte_end":455423,"line_start":133,"line_end":133,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2796},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455876,"byte_end":455887,"line_start":146,"line_end":146,"column_start":18,"column_end":29},"name":"whole_hours","qualname":"<UtcOffset>::whole_hours","value":"const fn whole_hours(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole hours the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole hours the offset is from UTC. A positive value indicates an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455532,"byte_end":455622,"line_start":138,"line_end":138,"column_start":5,"column_end":95}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455627,"byte_end":455674,"line_start":139,"line_end":139,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455679,"byte_end":455682,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455687,"byte_end":455698,"line_start":141,"line_end":141,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455703,"byte_end":455733,"line_start":142,"line_end":142,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_hours(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455738,"byte_end":455789,"line_start":143,"line_end":143,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_hours(), -1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455794,"byte_end":455846,"line_start":144,"line_end":144,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455851,"byte_end":455858,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2797},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456284,"byte_end":456297,"line_start":158,"line_end":158,"column_start":18,"column_end":31},"name":"whole_minutes","qualname":"<UtcOffset>::whole_minutes","value":"const fn whole_minutes(Self) -> i16","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole minutes the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole minutes the offset is from UTC. A positive value indicates an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":455932,"byte_end":456024,"line_start":150,"line_end":150,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456029,"byte_end":456076,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456081,"byte_end":456084,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456089,"byte_end":456100,"line_start":153,"line_end":153,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456105,"byte_end":456135,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_minutes(), 62);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456140,"byte_end":456194,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_minutes(), -62);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456199,"byte_end":456254,"line_start":156,"line_end":156,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456259,"byte_end":456266,"line_start":157,"line_end":157,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2798},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456743,"byte_end":456760,"line_start":170,"line_end":170,"column_start":18,"column_end":35},"name":"minutes_past_hour","qualname":"<UtcOffset>::minutes_past_hour","value":"const fn minutes_past_hour(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of minutes past the hour the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of minutes past the hour the offset is from UTC. A positive value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456377,"byte_end":456464,"line_start":162,"line_end":162,"column_start":5,"column_end":92}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456469,"byte_end":456529,"line_start":163,"line_end":163,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456534,"byte_end":456537,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456542,"byte_end":456553,"line_start":165,"line_end":165,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456558,"byte_end":456588,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(offset!(+1:02:03).minutes_past_hour(), 2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456593,"byte_end":456650,"line_start":167,"line_end":167,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(offset!(-1:02:03).minutes_past_hour(), -2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456655,"byte_end":456713,"line_start":168,"line_end":168,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456718,"byte_end":456725,"line_start":169,"line_end":169,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2799},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457295,"byte_end":457308,"line_start":184,"line_end":184,"column_start":18,"column_end":31},"name":"whole_seconds","qualname":"<UtcOffset>::whole_seconds","value":"const fn whole_seconds(Self) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of whole seconds the offset is from UTC. A positive value indicates an\n offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of whole seconds the offset is from UTC. A positive value indicates an","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456807,"byte_end":456899,"line_start":174,"line_end":174,"column_start":5,"column_end":97}},{"value":"/ offset to the east; a negative to the west.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456904,"byte_end":456951,"line_start":175,"line_end":175,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456956,"byte_end":456959,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456964,"byte_end":456975,"line_start":177,"line_end":177,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":456980,"byte_end":457010,"line_start":178,"line_end":178,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(offset!(+1:02:03).whole_seconds(), 3723);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457015,"byte_end":457071,"line_start":179,"line_end":179,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(offset!(-1:02:03).whole_seconds(), -3723);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457076,"byte_end":457133,"line_start":180,"line_end":180,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457138,"byte_end":457145,"line_start":181,"line_end":181,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2800},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457790,"byte_end":457809,"line_start":196,"line_end":196,"column_start":18,"column_end":37},"name":"seconds_past_minute","qualname":"<UtcOffset>::seconds_past_minute","value":"const fn seconds_past_minute(Self) -> i8","parent":null,"children":[],"decl_id":null,"docs":" Obtain the number of seconds past the minute the offset is from UTC. A positive value\n indicates an offset to the east; a negative to the west.","sig":null,"attributes":[{"value":"/ Obtain the number of seconds past the minute the offset is from UTC. A positive value","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457418,"byte_end":457507,"line_start":188,"line_end":188,"column_start":5,"column_end":94}},{"value":"/ indicates an offset to the east; a negative to the west.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457512,"byte_end":457572,"line_start":189,"line_end":189,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457577,"byte_end":457580,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457585,"byte_end":457596,"line_start":191,"line_end":191,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457601,"byte_end":457631,"line_start":192,"line_end":192,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(offset!(+1:02:03).seconds_past_minute(), 3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457636,"byte_end":457695,"line_start":193,"line_end":193,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(offset!(-1:02:03).seconds_past_minute(), -3);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457700,"byte_end":457760,"line_start":194,"line_end":194,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457765,"byte_end":457772,"line_start":195,"line_end":195,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2801},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458174,"byte_end":458180,"line_start":211,"line_end":211,"column_start":18,"column_end":24},"name":"is_utc","qualname":"<UtcOffset>::is_utc","value":"const fn is_utc(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is exactly UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is exactly UTC.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457906,"byte_end":457945,"line_start":202,"line_end":202,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457950,"byte_end":457953,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457958,"byte_end":457961,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457966,"byte_end":457977,"line_start":205,"line_end":205,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":457982,"byte_end":458012,"line_start":206,"line_end":206,"column_start":5,"column_end":35}},{"value":"/ assert!(!offset!(+1:02:03).is_utc());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458017,"byte_end":458058,"line_start":207,"line_end":207,"column_start":5,"column_end":46}},{"value":"/ assert!(!offset!(-1:02:03).is_utc());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458063,"byte_end":458104,"line_start":208,"line_end":208,"column_start":5,"column_end":46}},{"value":"/ assert!(offset!(UTC).is_utc());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458109,"byte_end":458144,"line_start":209,"line_end":209,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458149,"byte_end":458156,"line_start":210,"line_end":210,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2802},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458562,"byte_end":458573,"line_start":223,"line_end":223,"column_start":18,"column_end":29},"name":"is_positive","qualname":"<UtcOffset>::is_positive","value":"const fn is_positive(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is positive, or east of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is positive, or east of UTC.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458274,"byte_end":458326,"line_start":215,"line_end":215,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458331,"byte_end":458334,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458339,"byte_end":458350,"line_start":217,"line_end":217,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458355,"byte_end":458385,"line_start":218,"line_end":218,"column_start":5,"column_end":35}},{"value":"/ assert!(offset!(+1:02:03).is_positive());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458390,"byte_end":458435,"line_start":219,"line_end":219,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(-1:02:03).is_positive());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458440,"byte_end":458486,"line_start":220,"line_end":220,"column_start":5,"column_end":51}},{"value":"/ assert!(!offset!(UTC).is_positive());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458491,"byte_end":458532,"line_start":221,"line_end":221,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458537,"byte_end":458544,"line_start":222,"line_end":222,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2803},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458952,"byte_end":458963,"line_start":235,"line_end":235,"column_start":18,"column_end":29},"name":"is_negative","qualname":"<UtcOffset>::is_negative","value":"const fn is_negative(Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the offset is negative, or west of UTC.","sig":null,"attributes":[{"value":"/ Check if the offset is negative, or west of UTC.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458664,"byte_end":458716,"line_start":227,"line_end":227,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458721,"byte_end":458724,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458729,"byte_end":458740,"line_start":229,"line_end":229,"column_start":5,"column_end":16}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458745,"byte_end":458775,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ assert!(!offset!(+1:02:03).is_negative());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458780,"byte_end":458826,"line_start":231,"line_end":231,"column_start":5,"column_end":51}},{"value":"/ assert!(offset!(-1:02:03).is_negative());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458831,"byte_end":458876,"line_start":232,"line_end":232,"column_start":5,"column_end":50}},{"value":"/ assert!(!offset!(UTC).is_negative());","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458881,"byte_end":458922,"line_start":233,"line_end":233,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":458927,"byte_end":458934,"line_start":234,"line_end":234,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2805},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460480,"byte_end":460491,"line_start":278,"line_end":278,"column_start":12,"column_end":23},"name":"format_into","qualname":"<UtcOffset>::format_into","value":"fn format_into<impl io::Write,\nimpl Formattable + ?Sized>(Self, &mut impl io::Write,\n&impl Formattable + ?Sized) -> Result<usize, error::Format> where\nimpl io::Write: io::Write, impl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).\n","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460374,"byte_end":460468,"line_start":277,"line_end":277,"column_start":5,"column_end":99}}]},{"kind":"Method","id":{"krate":0,"index":2808},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461109,"byte_end":461115,"line_start":295,"line_end":295,"column_start":12,"column_end":18},"name":"format","qualname":"<UtcOffset>::format","value":"fn format<impl Formattable + ?Sized>(Self, &impl Formattable + ?Sized)\n-> Result<String, error::Format> where\nimpl Formattable + ?Sized: Formattable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Format the `UtcOffset` using the provided [format description](crate::format_description).","sig":null,"attributes":[{"value":"/ Format the `UtcOffset` using the provided [format description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460700,"byte_end":460794,"line_start":286,"line_end":286,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460799,"byte_end":460802,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460807,"byte_end":460818,"line_start":288,"line_end":288,"column_start":5,"column_end":16}},{"value":"/ # use time::format_description;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460823,"byte_end":460858,"line_start":289,"line_end":289,"column_start":5,"column_end":40}},{"value":"/ # use time_macros::offset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460863,"byte_end":460893,"line_start":290,"line_end":290,"column_start":5,"column_end":35}},{"value":"/ let format = format_description::parse(\"[offset_hour sign:mandatory]:[offset_minute]\")?;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460898,"byte_end":460990,"line_start":291,"line_end":291,"column_start":5,"column_end":97}},{"value":"/ assert_eq!(offset!(+1).format(&format)?, \"+01:00\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460995,"byte_end":461050,"line_start":292,"line_end":292,"column_start":5,"column_end":60}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461055,"byte_end":461085,"line_start":293,"line_end":293,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461090,"byte_end":461097,"line_start":294,"line_end":294,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2811},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461733,"byte_end":461738,"line_start":312,"line_end":312,"column_start":12,"column_end":17},"name":"parse","qualname":"<UtcOffset>::parse","value":"fn parse<impl Parsable + ?Sized>(&str, &impl Parsable + ?Sized)\n-> Result<Self, error::Parse> where impl Parsable + ?Sized: Parsable + ?Sized","parent":null,"children":[],"decl_id":null,"docs":" Parse a `UtcOffset` from the input using the provided [format\n description](crate::format_description).","sig":null,"attributes":[{"value":"/ Parse a `UtcOffset` from the input using the provided [format","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461299,"byte_end":461364,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/ description](crate::format_description).","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461369,"byte_end":461413,"line_start":303,"line_end":303,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461418,"byte_end":461421,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461426,"byte_end":461437,"line_start":305,"line_end":305,"column_start":5,"column_end":16}},{"value":"/ # use time::UtcOffset;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461442,"byte_end":461468,"line_start":306,"line_end":306,"column_start":5,"column_end":31}},{"value":"/ # use time_macros::{offset, format_description};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461473,"byte_end":461525,"line_start":307,"line_end":307,"column_start":5,"column_end":57}},{"value":"/ let format = format_description!(\"[offset_hour]:[offset_minute]\");","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461530,"byte_end":461600,"line_start":308,"line_end":308,"column_start":5,"column_end":75}},{"value":"/ assert_eq!(UtcOffset::parse(\"-03:42\", &format)?, offset!(-3:42));","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461605,"byte_end":461674,"line_start":309,"line_end":309,"column_start":5,"column_end":74}},{"value":"/ # Ok::<_, time::Error>(())","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461679,"byte_end":461709,"line_start":310,"line_end":310,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461714,"byte_end":461721,"line_start":311,"line_end":311,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2814},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461948,"byte_end":461951,"line_start":321,"line_end":321,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UtcOffset as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2816},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":462277,"byte_end":462280,"line_start":334,"line_end":334,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UtcOffset as std::fmt::Debug>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9900},"children":[],"decl_id":{"krate":2,"index":9901},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2819},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":462468,"byte_end":462471,"line_start":343,"line_end":343,"column_start":8,"column_end":11},"name":"neg","qualname":"<UtcOffset as std::ops::Neg>::neg","value":"fn neg(Self) -> Self::Output","parent":{"krate":2,"index":3245},"children":[],"decl_id":{"krate":2,"index":3247},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2820},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"util","qualname":"::util","value":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","parent":null,"children":[{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2825},{"krate":0,"index":2828},{"krate":0,"index":2831},{"krate":0,"index":2834},{"krate":0,"index":2841}],"decl_id":null,"docs":" Utility functions.\n","sig":null,"attributes":[{"value":"/ Utility functions.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":462583,"byte_end":462605,"line_start":1,"line_end":1,"column_start":1,"column_end":23}}]},{"kind":"Function","id":{"krate":0,"index":2841},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":463171,"byte_end":463189,"line_start":23,"line_end":23,"column_start":14,"column_end":32},"name":"days_in_year_month","qualname":"::util::days_in_year_month","value":"const fn days_in_year_month(i32, Month) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of days in the month of a given year.","sig":null,"attributes":[{"value":"/ Get the number of days in the month of a given year.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":462977,"byte_end":463033,"line_start":17,"line_end":17,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":463034,"byte_end":463037,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":463038,"byte_end":463049,"line_start":19,"line_end":19,"column_start":1,"column_end":12}},{"value":"/ # use time::{Month, util};","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":463050,"byte_end":463080,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ assert_eq!(util::days_in_year_month(2020, Month::February), 29);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":463081,"byte_end":463149,"line_start":21,"line_end":21,"column_start":1,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/util.rs","byte_start":463150,"byte_end":463157,"line_start":22,"line_end":22,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4560},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463892,"byte_end":463898,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Monday","qualname":"::weekday::Weekday::Monday","value":"Weekday::Monday","parent":{"krate":0,"index":4559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463840,"byte_end":463887,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4562},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463956,"byte_end":463963,"line_start":19,"line_end":19,"column_start":5,"column_end":12},"name":"Tuesday","qualname":"::weekday::Weekday::Tuesday","value":"Weekday::Tuesday","parent":{"krate":0,"index":4559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463904,"byte_end":463951,"line_start":18,"line_end":18,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4564},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464021,"byte_end":464030,"line_start":21,"line_end":21,"column_start":5,"column_end":14},"name":"Wednesday","qualname":"::weekday::Weekday::Wednesday","value":"Weekday::Wednesday","parent":{"krate":0,"index":4559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463969,"byte_end":464016,"line_start":20,"line_end":20,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4566},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464088,"byte_end":464096,"line_start":23,"line_end":23,"column_start":5,"column_end":13},"name":"Thursday","qualname":"::weekday::Weekday::Thursday","value":"Weekday::Thursday","parent":{"krate":0,"index":4559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464036,"byte_end":464083,"line_start":22,"line_end":22,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4568},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464154,"byte_end":464160,"line_start":25,"line_end":25,"column_start":5,"column_end":11},"name":"Friday","qualname":"::weekday::Weekday::Friday","value":"Weekday::Friday","parent":{"krate":0,"index":4559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464102,"byte_end":464149,"line_start":24,"line_end":24,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4570},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464218,"byte_end":464226,"line_start":27,"line_end":27,"column_start":5,"column_end":13},"name":"Saturday","qualname":"::weekday::Weekday::Saturday","value":"Weekday::Saturday","parent":{"krate":0,"index":4559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464166,"byte_end":464213,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4572},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464284,"byte_end":464290,"line_start":29,"line_end":29,"column_start":5,"column_end":11},"name":"Sunday","qualname":"::weekday::Weekday::Sunday","value":"Weekday::Sunday","parent":{"krate":0,"index":4559},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"allow(clippy :: missing_docs_in_private_items)","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464232,"byte_end":464279,"line_start":28,"line_end":28,"column_start":5,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":4559},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463826,"byte_end":463833,"line_start":15,"line_end":15,"column_start":10,"column_end":17},"name":"Weekday","qualname":"::weekday::Weekday","value":"enum Weekday {\n    Monday,\n    Tuesday,\n    Wednesday,\n    Thursday,\n    Friday,\n    Saturday,\n    Sunday,\n}","parent":null,"children":[{"krate":0,"index":4560},{"krate":0,"index":4562},{"krate":0,"index":4564},{"krate":0,"index":4566},{"krate":0,"index":4568},{"krate":0,"index":4570},{"krate":0,"index":4572}],"decl_id":null,"docs":" Days of the week.","sig":null,"attributes":[{"value":"/ Days of the week.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463579,"byte_end":463600,"line_start":10,"line_end":10,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463601,"byte_end":463604,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ As order is dependent on context (Sunday could be either two days after or five days before","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463605,"byte_end":463700,"line_start":12,"line_end":12,"column_start":1,"column_end":96}},{"value":"/ Friday), this type does not implement `PartialOrd` or `Ord`.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":463701,"byte_end":463765,"line_start":13,"line_end":13,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464492,"byte_end":464500,"line_start":39,"line_end":39,"column_start":18,"column_end":26},"name":"previous","qualname":"<Weekday>::previous","value":"const fn previous(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the previous weekday.","sig":null,"attributes":[{"value":"/ Get the previous weekday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464314,"byte_end":464343,"line_start":33,"line_end":33,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464348,"byte_end":464351,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464356,"byte_end":464367,"line_start":35,"line_end":35,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464372,"byte_end":464396,"line_start":36,"line_end":36,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Tuesday.previous(), Weekday::Monday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464401,"byte_end":464462,"line_start":37,"line_end":37,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464467,"byte_end":464474,"line_start":38,"line_end":38,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464955,"byte_end":464959,"line_start":57,"line_end":57,"column_start":18,"column_end":22},"name":"next","qualname":"<Weekday>::next","value":"const fn next(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Get the next weekday.","sig":null,"attributes":[{"value":"/ Get the next weekday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464785,"byte_end":464810,"line_start":51,"line_end":51,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464815,"byte_end":464818,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464823,"byte_end":464834,"line_start":53,"line_end":53,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464839,"byte_end":464863,"line_start":54,"line_end":54,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.next(), Weekday::Tuesday);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464868,"byte_end":464925,"line_start":55,"line_end":55,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464930,"byte_end":464937,"line_start":56,"line_end":56,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465480,"byte_end":465498,"line_start":76,"line_end":76,"column_start":18,"column_end":36},"name":"number_from_monday","qualname":"<Weekday>::number_from_monday","value":"const fn number_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Monday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465244,"byte_end":465295,"line_start":69,"line_end":69,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465300,"byte_end":465303,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465308,"byte_end":465319,"line_start":71,"line_end":71,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465324,"byte_end":465348,"line_start":72,"line_end":72,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_monday(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465353,"byte_end":465409,"line_start":73,"line_end":73,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465414,"byte_end":465421,"line_start":74,"line_end":74,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465762,"byte_end":465780,"line_start":86,"line_end":86,"column_start":18,"column_end":36},"name":"number_from_sunday","qualname":"<Weekday>::number_from_sunday","value":"const fn number_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the one-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the one-indexed number of days from Sunday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465567,"byte_end":465618,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465623,"byte_end":465626,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465631,"byte_end":465642,"line_start":82,"line_end":82,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465647,"byte_end":465671,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_from_sunday(), 2);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465676,"byte_end":465732,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465737,"byte_end":465744,"line_start":85,"line_end":85,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466050,"byte_end":466073,"line_start":96,"line_end":96,"column_start":18,"column_end":41},"name":"number_days_from_monday","qualname":"<Weekday>::number_days_from_monday","value":"const fn number_days_from_monday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Monday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Monday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465849,"byte_end":465901,"line_start":90,"line_end":90,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465906,"byte_end":465909,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465914,"byte_end":465925,"line_start":92,"line_end":92,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465930,"byte_end":465954,"line_start":93,"line_end":93,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_monday(), 0);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":465959,"byte_end":466020,"line_start":94,"line_end":94,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466025,"byte_end":466032,"line_start":95,"line_end":95,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466318,"byte_end":466341,"line_start":106,"line_end":106,"column_start":18,"column_end":41},"name":"number_days_from_sunday","qualname":"<Weekday>::number_days_from_sunday","value":"const fn number_days_from_sunday(Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the zero-indexed number of days from Sunday.","sig":null,"attributes":[{"value":"/ Get the zero-indexed number of days from Sunday.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466117,"byte_end":466169,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466174,"byte_end":466177,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466182,"byte_end":466193,"line_start":102,"line_end":102,"column_start":5,"column_end":16}},{"value":"/ # use time::Weekday;","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466198,"byte_end":466222,"line_start":103,"line_end":103,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(Weekday::Monday.number_days_from_sunday(), 1);","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466227,"byte_end":466288,"line_start":104,"line_end":104,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466293,"byte_end":466300,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":2866},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466613,"byte_end":466616,"line_start":120,"line_end":120,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Weekday as std::fmt::Display>::fmt","value":"fn fmt(&Self, &mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":9907},"children":[],"decl_id":{"krate":2,"index":9908},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2869},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":467035,"byte_end":467043,"line_start":136,"line_end":136,"column_start":8,"column_end":16},"name":"from_str","qualname":"<Weekday as std::str::FromStr>::from_str","value":"fn from_str(&str) -> Result<Self, Self::Err>","parent":{"krate":2,"index":12554},"children":[],"decl_id":{"krate":2,"index":12556},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2900},"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":11285,"byte_end":11291,"line_start":349,"line_end":349,"column_start":10,"column_end":16},"name":"Result","qualname":"::Result","value":"core::result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" An alias for [`std::result::Result`] with a generic error from the time crate.\n","sig":null,"attributes":[{"value":"/ An alias for [`std::result::Result`] with a generic error from the time crate.","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":11193,"byte_end":11275,"line_start":348,"line_end":348,"column_start":1,"column_end":83}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12938,"byte_end":12942,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82},{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":91},{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":40892,"byte_end":40896,"line_start":820,"line_end":820,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":113},{"krate":0,"index":114},{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44377,"byte_end":44381,"line_start":928,"line_end":928,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45277,"byte_end":45281,"line_start":953,"line_end":953,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45901,"byte_end":45905,"line_start":972,"line_end":972,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":46525,"byte_end":46529,"line_start":995,"line_end":995,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":129}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":46730,"byte_end":46734,"line_start":1003,"line_end":1003,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":46943,"byte_end":46947,"line_start":1012,"line_end":1012,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":47260,"byte_end":47264,"line_start":1023,"line_end":1023,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":47480,"byte_end":47484,"line_start":1032,"line_end":1032,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":47794,"byte_end":47798,"line_start":1043,"line_end":1043,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":143},{"krate":0,"index":144}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":48602,"byte_end":48609,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":187}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49321,"byte_end":49329,"line_start":44,"line_end":44,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49564,"byte_end":49572,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212},{"krate":0,"index":213},{"krate":0,"index":214},{"krate":0,"index":215},{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227},{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":77343,"byte_end":77351,"line_start":804,"line_end":804,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":79617,"byte_end":79625,"line_start":871,"line_end":871,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":249},{"krate":0,"index":250}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":79993,"byte_end":80004,"line_start":885,"line_end":885,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":253},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80444,"byte_end":80452,"line_start":902,"line_end":902,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":258},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80645,"byte_end":80653,"line_start":911,"line_end":911,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80904,"byte_end":80915,"line_start":920,"line_end":920,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81102,"byte_end":81113,"line_start":930,"line_end":930,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":267}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81372,"byte_end":81380,"line_start":939,"line_end":939,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":269},{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81527,"byte_end":81535,"line_start":947,"line_end":947,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":272},{"krate":0,"index":273}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81733,"byte_end":81741,"line_start":956,"line_end":956,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":275},{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81974,"byte_end":81985,"line_start":965,"line_end":965,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":278},{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":82289,"byte_end":82300,"line_start":977,"line_end":977,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":281}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":83556,"byte_end":83564,"line_start":1020,"line_end":1020,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":284},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":83855,"byte_end":83863,"line_start":1036,"line_end":1036,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":290},{"krate":0,"index":291}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84221,"byte_end":84229,"line_start":1054,"line_end":1054,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84384,"byte_end":84392,"line_start":1062,"line_end":1062,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":299},{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84609,"byte_end":84617,"line_start":1072,"line_end":1072,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84778,"byte_end":84786,"line_start":1080,"line_end":1080,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84948,"byte_end":84959,"line_start":1088,"line_end":1088,"column_start":24,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85127,"byte_end":85135,"line_start":1096,"line_end":1096,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85264,"byte_end":85275,"line_start":1102,"line_end":1102,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":313}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85383,"byte_end":85391,"line_start":1108,"line_end":1108,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85769,"byte_end":85780,"line_start":1122,"line_end":1122,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":318}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85922,"byte_end":85930,"line_start":1128,"line_end":1128,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":86079,"byte_end":86087,"line_start":1134,"line_end":1134,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":325}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91266,"byte_end":91280,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91712,"byte_end":91726,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":92105,"byte_end":92110,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":92240,"byte_end":92254,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":343},{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":93179,"byte_end":93193,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93474,"byte_end":93489,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":354}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93687,"byte_end":93702,"line_start":19,"line_end":19,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93745,"byte_end":93750,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93872,"byte_end":93887,"line_start":27,"line_end":27,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":359},{"krate":0,"index":360}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94429,"byte_end":94445,"line_start":10,"line_end":10,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":366}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94639,"byte_end":94655,"line_start":17,"line_end":17,"column_start":28,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94699,"byte_end":94704,"line_start":19,"line_end":19,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94828,"byte_end":94844,"line_start":25,"line_end":25,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":371},{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95738,"byte_end":95744,"line_start":24,"line_end":24,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":384}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96304,"byte_end":96310,"line_start":40,"line_end":40,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":386}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96414,"byte_end":96419,"line_start":46,"line_end":46,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":388},{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96705,"byte_end":96711,"line_start":58,"line_end":58,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96983,"byte_end":96988,"line_start":67,"line_end":67,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":97102,"byte_end":97108,"line_start":73,"line_end":73,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98831,"byte_end":98836,"line_start":42,"line_end":42,"column_start":48,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98986,"byte_end":99010,"line_start":48,"line_end":48,"column_start":32,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":410},{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":99298,"byte_end":99322,"line_start":59,"line_end":59,"column_start":23,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":100089,"byte_end":100113,"line_start":80,"line_end":80,"column_start":28,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100383,"byte_end":100397,"line_start":10,"line_end":10,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100574,"byte_end":100588,"line_start":17,"line_end":17,"column_start":28,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100630,"byte_end":100635,"line_start":19,"line_end":19,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100755,"byte_end":100769,"line_start":25,"line_end":25,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":426},{"krate":0,"index":427}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101678,"byte_end":101683,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102048,"byte_end":102053,"line_start":32,"line_end":32,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":445}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102359,"byte_end":102364,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102475,"byte_end":102488,"line_start":48,"line_end":48,"column_start":25,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102765,"byte_end":102770,"line_start":59,"line_end":59,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102895,"byte_end":102915,"line_start":65,"line_end":65,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":454},{"krate":0,"index":455}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":103191,"byte_end":103196,"line_start":76,"line_end":76,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":103538,"byte_end":103543,"line_start":86,"line_end":86,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":459},{"krate":0,"index":460}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104515,"byte_end":104535,"line_start":18,"line_end":18,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":469}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104910,"byte_end":104930,"line_start":30,"line_end":30,"column_start":28,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104978,"byte_end":104983,"line_start":32,"line_end":32,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":472}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":105125,"byte_end":105145,"line_start":38,"line_end":38,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105983,"byte_end":105996,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":484}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106361,"byte_end":106374,"line_start":29,"line_end":29,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106505,"byte_end":106519,"line_start":35,"line_end":35,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":489}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106828,"byte_end":106841,"line_start":47,"line_end":47,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":491}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":107092,"byte_end":107097,"line_start":56,"line_end":56,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":493}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":107225,"byte_end":107238,"line_start":62,"line_end":62,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":495},{"krate":0,"index":496}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88531,"byte_end":88536,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":528}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":89547,"byte_end":89552,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118481,"byte_end":118499,"line_start":38,"line_end":38,"column_start":21,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":612}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119001,"byte_end":119019,"line_start":50,"line_end":50,"column_start":26,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":614}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119155,"byte_end":119164,"line_start":56,"line_end":56,"column_start":42,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119495,"byte_end":119513,"line_start":67,"line_end":67,"column_start":49,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":620}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119992,"byte_end":120010,"line_start":84,"line_end":84,"column_start":31,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":626}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":120184,"byte_end":120193,"line_start":90,"line_end":90,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":628}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":120310,"byte_end":120328,"line_start":96,"line_end":96,"column_start":29,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":630}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135094,"byte_end":135109,"line_start":36,"line_end":36,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135651,"byte_end":135666,"line_start":49,"line_end":49,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":666}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135776,"byte_end":135791,"line_start":55,"line_end":55,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":136717,"byte_end":136732,"line_start":81,"line_end":81,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":136885,"byte_end":136900,"line_start":87,"line_end":87,"column_start":60,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137271,"byte_end":137286,"line_start":103,"line_end":103,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137411,"byte_end":137420,"line_start":109,"line_end":109,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137718,"byte_end":137733,"line_start":120,"line_end":120,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":681}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137868,"byte_end":137871,"line_start":126,"line_end":126,"column_start":35,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138240,"byte_end":138255,"line_start":139,"line_end":139,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":686}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138418,"byte_end":138427,"line_start":145,"line_end":145,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":688}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138537,"byte_end":138552,"line_start":151,"line_end":151,"column_start":29,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/format_item.rs","byte_start":153913,"byte_end":153917,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":803}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/format_item.rs","byte_start":154676,"byte_end":154686,"line_start":44,"line_end":44,"column_start":56,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":806}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/format_item.rs","byte_start":154961,"byte_end":154976,"line_start":53,"line_end":53,"column_start":52,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":140687,"byte_end":140695,"line_start":59,"line_end":59,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":141643,"byte_end":141647,"line_start":93,"line_end":93,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":865},{"krate":0,"index":866},{"krate":0,"index":868},{"krate":0,"index":869},{"krate":0,"index":870},{"krate":0,"index":871}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":143088,"byte_end":143097,"line_start":143,"line_end":143,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":875}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":143474,"byte_end":143481,"line_start":158,"line_end":158,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":877}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":144285,"byte_end":144309,"line_start":189,"line_end":189,"column_start":36,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":179560,"byte_end":179567,"line_start":21,"line_end":21,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935},{"krate":0,"index":936},{"krate":0,"index":937},{"krate":0,"index":938},{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":180987,"byte_end":180993,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":941},{"krate":0,"index":943}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172439,"byte_end":172446,"line_start":48,"line_end":48,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172656,"byte_end":172663,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":960}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173432,"byte_end":173439,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176503,"byte_end":176509,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":964},{"krate":0,"index":965},{"krate":0,"index":966},{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969},{"krate":0,"index":970}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208129,"byte_end":208139,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208209,"byte_end":208224,"line_start":19,"line_end":19,"column_start":22,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208291,"byte_end":208298,"line_start":21,"line_end":21,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208323,"byte_end":208330,"line_start":22,"line_end":22,"column_start":22,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208384,"byte_end":208391,"line_start":23,"line_end":23,"column_start":51,"column_end":58},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208434,"byte_end":208435,"line_start":24,"line_end":24,"column_start":32,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":209526,"byte_end":209536,"line_start":57,"line_end":57,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":210727,"byte_end":210742,"line_start":94,"line_end":94,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1068}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":211939,"byte_end":211940,"line_start":131,"line_end":131,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1075}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":212335,"byte_end":212342,"line_start":148,"line_end":148,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":214299,"byte_end":214306,"line_start":197,"line_end":197,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1088}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":217511,"byte_end":217518,"line_start":272,"line_end":272,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226067,"byte_end":226074,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337},{"krate":0,"index":1338},{"krate":0,"index":1339},{"krate":0,"index":1340}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229011,"byte_end":229018,"line_start":116,"line_end":116,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1342}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229118,"byte_end":229128,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1344}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229211,"byte_end":229218,"line_start":128,"line_end":128,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1346},{"krate":0,"index":1347}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229754,"byte_end":229761,"line_start":143,"line_end":143,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1349},{"krate":0,"index":1350}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229905,"byte_end":229915,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230060,"byte_end":230067,"line_start":159,"line_end":159,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1355},{"krate":0,"index":1356}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230454,"byte_end":230464,"line_start":174,"line_end":174,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1358},{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230619,"byte_end":230626,"line_start":182,"line_end":182,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1361},{"krate":0,"index":1362}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230867,"byte_end":230874,"line_start":193,"line_end":193,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231261,"byte_end":231271,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1367},{"krate":0,"index":1368}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231426,"byte_end":231433,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1370},{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231682,"byte_end":231689,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1373}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231797,"byte_end":231807,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1375}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231917,"byte_end":231924,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1377}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":232063,"byte_end":232073,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":232208,"byte_end":232215,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1381}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":232309,"byte_end":232316,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1383}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238414,"byte_end":238419,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":240398,"byte_end":240403,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1419}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":240927,"byte_end":240932,"line_start":121,"line_end":121,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1421},{"krate":0,"index":1422}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":241657,"byte_end":241662,"line_start":149,"line_end":149,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1426},{"krate":0,"index":1427}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243296,"byte_end":243310,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1504},{"krate":0,"index":1505},{"krate":0,"index":1506},{"krate":0,"index":1507},{"krate":0,"index":1508},{"krate":0,"index":1511},{"krate":0,"index":1512},{"krate":0,"index":1513},{"krate":0,"index":1514},{"krate":0,"index":1515},{"krate":0,"index":1516},{"krate":0,"index":1517},{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522},{"krate":0,"index":1523},{"krate":0,"index":1524},{"krate":0,"index":1525},{"krate":0,"index":1526},{"krate":0,"index":1527},{"krate":0,"index":1528},{"krate":0,"index":1529},{"krate":0,"index":1530},{"krate":0,"index":1531},{"krate":0,"index":1532},{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535},{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271663,"byte_end":271677,"line_start":877,"line_end":877,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1544},{"krate":0,"index":1545},{"krate":0,"index":1546},{"krate":0,"index":1547},{"krate":0,"index":1548},{"krate":0,"index":1549},{"krate":0,"index":1550},{"krate":0,"index":1551},{"krate":0,"index":1552},{"krate":0,"index":1553},{"krate":0,"index":1554},{"krate":0,"index":1555},{"krate":0,"index":1556}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280651,"byte_end":280665,"line_start":1105,"line_end":1105,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1558},{"krate":0,"index":1561}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281924,"byte_end":281938,"line_start":1143,"line_end":1143,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1564},{"krate":0,"index":1566}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":283730,"byte_end":283744,"line_start":1191,"line_end":1191,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1568}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":283908,"byte_end":283922,"line_start":1197,"line_end":1197,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1570}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284108,"byte_end":284122,"line_start":1205,"line_end":1205,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1572}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284273,"byte_end":284287,"line_start":1211,"line_end":1211,"column_start":21,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1574}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284400,"byte_end":284414,"line_start":1217,"line_end":1217,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1576}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284580,"byte_end":284594,"line_start":1224,"line_end":1224,"column_start":15,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1578}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284870,"byte_end":284884,"line_start":1232,"line_end":1232,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1582},{"krate":0,"index":1583}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":285169,"byte_end":285183,"line_start":1245,"line_end":1245,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1586},{"krate":0,"index":1587}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":285462,"byte_end":285476,"line_start":1258,"line_end":1258,"column_start":14,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":285795,"byte_end":285805,"line_start":1269,"line_end":1269,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1592},{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286265,"byte_end":286275,"line_start":1287,"line_end":1287,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1595},{"krate":0,"index":1596}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286536,"byte_end":286550,"line_start":1298,"line_end":1298,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1599}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286727,"byte_end":286737,"line_start":1307,"line_end":1307,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1601},{"krate":0,"index":1602}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286930,"byte_end":286944,"line_start":1316,"line_end":1316,"column_start":32,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1604}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287094,"byte_end":287104,"line_start":1323,"line_end":1323,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1606}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287265,"byte_end":287279,"line_start":1330,"line_end":1330,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1608}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287465,"byte_end":287475,"line_start":1337,"line_end":1337,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1610}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287664,"byte_end":287678,"line_start":1344,"line_end":1344,"column_start":27,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":288050,"byte_end":288060,"line_start":1355,"line_end":1355,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1614}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/combinator/rfc/iso8601.rs","byte_start":298304,"byte_end":298316,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655},{"krate":0,"index":1656}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/iso8601.rs","byte_start":319269,"byte_end":319276,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1954},{"krate":0,"index":1964},{"krate":0,"index":1971}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332304,"byte_end":332314,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332404,"byte_end":332419,"line_start":20,"line_end":20,"column_start":19,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332506,"byte_end":332513,"line_start":23,"line_end":23,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332535,"byte_end":332542,"line_start":24,"line_end":24,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332593,"byte_end":332600,"line_start":25,"line_end":25,"column_start":48,"column_end":55},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332640,"byte_end":332641,"line_start":26,"line_end":26,"column_start":29,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334914,"byte_end":334924,"line_start":87,"line_end":87,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2063}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":335399,"byte_end":335414,"line_start":108,"line_end":108,"column_start":25,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2069}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":335896,"byte_end":335897,"line_start":129,"line_end":129,"column_start":35,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":336209,"byte_end":336216,"line_start":144,"line_end":144,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2079},{"krate":0,"index":2151}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":349982,"byte_end":349989,"line_start":471,"line_end":471,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2204},{"krate":0,"index":2263}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":359649,"byte_end":359656,"line_start":697,"line_end":697,"column_start":54,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2308}],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":362704,"byte_end":362714,"line_start":34,"line_end":34,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2424}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":364053,"byte_end":364068,"line_start":68,"line_end":68,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2427}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":367597,"byte_end":367603,"line_start":155,"line_end":155,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":2440},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":368334,"byte_end":368340,"line_start":174,"line_end":174,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2449},{"krate":0,"index":2452},{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376604,"byte_end":376610,"line_start":359,"line_end":359,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4383},{"krate":0,"index":4384},{"krate":0,"index":4385},{"krate":0,"index":4386},{"krate":0,"index":4387},{"krate":0,"index":4388},{"krate":0,"index":4389},{"krate":0,"index":4390},{"krate":0,"index":4391},{"krate":0,"index":4392},{"krate":0,"index":4393},{"krate":0,"index":4394},{"krate":0,"index":4395},{"krate":0,"index":4396},{"krate":0,"index":4397},{"krate":0,"index":4398},{"krate":0,"index":4399},{"krate":0,"index":4400},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379863,"byte_end":379869,"line_start":447,"line_end":447,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4401},{"krate":0,"index":4402},{"krate":0,"index":4403},{"krate":0,"index":4404},{"krate":0,"index":4405},{"krate":0,"index":4406},{"krate":0,"index":4407},{"krate":0,"index":4408},{"krate":0,"index":4409},{"krate":0,"index":4410},{"krate":0,"index":4411},{"krate":0,"index":4412},{"krate":0,"index":4413},{"krate":0,"index":4414},{"krate":0,"index":4415},{"krate":0,"index":4416},{"krate":0,"index":4417},{"krate":0,"index":4418},{"krate":0,"index":2492},{"krate":0,"index":2493},{"krate":0,"index":2494},{"krate":0,"index":2495},{"krate":0,"index":2496}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383440,"byte_end":383446,"line_start":547,"line_end":547,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":4419},{"krate":0,"index":4420},{"krate":0,"index":4421},{"krate":0,"index":4422},{"krate":0,"index":4423},{"krate":0,"index":4424},{"krate":0,"index":4425},{"krate":0,"index":4426},{"krate":0,"index":4427},{"krate":0,"index":4428},{"krate":0,"index":4429},{"krate":0,"index":4430},{"krate":0,"index":4431},{"krate":0,"index":4432},{"krate":0,"index":4433},{"krate":0,"index":4434},{"krate":0,"index":4435},{"krate":0,"index":4436},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":2501},{"krate":0,"index":2502}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":385743,"byte_end":385747,"line_start":610,"line_end":610,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2505}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":388029,"byte_end":388033,"line_start":670,"line_end":670,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2510}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":389194,"byte_end":389203,"line_start":698,"line_end":698,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2512},{"krate":0,"index":2513}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":389974,"byte_end":389991,"line_start":720,"line_end":720,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2516},{"krate":0,"index":2517}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":390193,"byte_end":390207,"line_start":728,"line_end":728,"column_start":26,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2519},{"krate":0,"index":2520}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":289815,"byte_end":289825,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2541},{"krate":0,"index":2544},{"krate":0,"index":2547}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":290558,"byte_end":290568,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2551}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":290783,"byte_end":290793,"line_start":44,"line_end":44,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2554}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393625,"byte_end":393642,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2607},{"krate":0,"index":2608},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2611},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2614},{"krate":0,"index":2615},{"krate":0,"index":2616},{"krate":0,"index":2617},{"krate":0,"index":2618},{"krate":0,"index":2619},{"krate":0,"index":2620},{"krate":0,"index":2621},{"krate":0,"index":2622},{"krate":0,"index":2623},{"krate":0,"index":2624},{"krate":0,"index":2625},{"krate":0,"index":2626},{"krate":0,"index":2627},{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631},{"krate":0,"index":2632},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2635},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2638},{"krate":0,"index":2639}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413122,"byte_end":413139,"line_start":615,"line_end":615,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643},{"krate":0,"index":2644},{"krate":0,"index":2645},{"krate":0,"index":2646},{"krate":0,"index":2647},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2650},{"krate":0,"index":2651}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420655,"byte_end":420672,"line_start":804,"line_end":804,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2653},{"krate":0,"index":2656}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421721,"byte_end":421738,"line_start":834,"line_end":834,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422483,"byte_end":422500,"line_start":856,"line_end":856,"column_start":23,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422644,"byte_end":422661,"line_start":862,"line_end":862,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2664}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422851,"byte_end":422868,"line_start":870,"line_end":870,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":423076,"byte_end":423093,"line_start":879,"line_end":879,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2669},{"krate":0,"index":2670}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":423631,"byte_end":423648,"line_start":900,"line_end":900,"column_start":24,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2672},{"krate":0,"index":2673}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":423856,"byte_end":423873,"line_start":909,"line_end":909,"column_start":27,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":424413,"byte_end":424430,"line_start":930,"line_end":930,"column_start":14,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2678},{"krate":0,"index":2679}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426259,"byte_end":426263,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2715},{"krate":0,"index":2716},{"krate":0,"index":2717},{"krate":0,"index":2718},{"krate":0,"index":2719},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2722},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726},{"krate":0,"index":2727},{"krate":0,"index":2728},{"krate":0,"index":2729},{"krate":0,"index":2730},{"krate":0,"index":2731},{"krate":0,"index":2732},{"krate":0,"index":2733},{"krate":0,"index":2734},{"krate":0,"index":2735},{"krate":0,"index":2736},{"krate":0,"index":2737},{"krate":0,"index":2738},{"krate":0,"index":2739},{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444950,"byte_end":444954,"line_start":584,"line_end":584,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2744},{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445878,"byte_end":445882,"line_start":612,"line_end":612,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":2750}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446495,"byte_end":446499,"line_start":631,"line_end":631,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2753}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447399,"byte_end":447403,"line_start":652,"line_end":652,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2755}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447593,"byte_end":447597,"line_start":660,"line_end":660,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2757},{"krate":0,"index":2758}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448080,"byte_end":448084,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2760},{"krate":0,"index":2761}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448638,"byte_end":448642,"line_start":694,"line_end":694,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2763},{"krate":0,"index":2764}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449132,"byte_end":449136,"line_start":710,"line_end":710,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2766},{"krate":0,"index":2767}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449687,"byte_end":449691,"line_start":728,"line_end":728,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2769},{"krate":0,"index":2770}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":451957,"byte_end":451966,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2791},{"krate":0,"index":2792},{"krate":0,"index":2793},{"krate":0,"index":2794},{"krate":0,"index":2795},{"krate":0,"index":2796},{"krate":0,"index":2797},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460358,"byte_end":460367,"line_start":276,"line_end":276,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2805},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461283,"byte_end":461292,"line_start":301,"line_end":301,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2811}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461929,"byte_end":461938,"line_start":320,"line_end":320,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2814}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":462258,"byte_end":462267,"line_start":333,"line_end":333,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":462424,"byte_end":462433,"line_start":340,"line_end":340,"column_start":14,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2818},{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Inherent","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464300,"byte_end":464307,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466596,"byte_end":466603,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2866}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466979,"byte_end":466986,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2868},{"krate":0,"index":2869}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10194,"byte_end":10199,"line_start":306,"line_end":306,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":327}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10209,"byte_end":10212,"line_start":307,"line_end":307,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":531}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10279,"byte_end":10297,"line_start":309,"line_end":309,"column_start":9,"column_end":27},"ref_id":{"krate":0,"index":597}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116517,"byte_end":116525,"line_start":10,"line_end":10,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":637}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/mod.rs","byte_start":116933,"byte_end":116940,"line_start":26,"line_end":26,"column_start":13,"column_end":20},"ref_id":{"krate":0,"index":903}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10338,"byte_end":10348,"line_start":311,"line_end":311,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":982}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10422,"byte_end":10428,"line_start":315,"line_end":315,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":1384}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10499,"byte_end":10506,"line_start":319,"line_end":319,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1615}},{"kind":"Mod","span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/lib.rs","byte_start":10793,"byte_end":10797,"line_start":333,"line_end":333,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2820}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":12938,"byte_end":12942,"line_start":44,"line_end":44,"column_start":6,"column_end":10},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":2903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":40892,"byte_end":40896,"line_start":820,"line_end":820,"column_start":6,"column_end":10},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":2903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":44377,"byte_end":44381,"line_start":928,"line_end":928,"column_start":6,"column_end":10},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":2903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45277,"byte_end":45281,"line_start":953,"line_end":953,"column_start":6,"column_end":10},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":2903},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":45901,"byte_end":45905,"line_start":972,"line_end":972,"column_start":23,"column_end":27},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":46525,"byte_end":46529,"line_start":995,"line_end":995,"column_start":21,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":46730,"byte_end":46734,"line_start":1003,"line_end":1003,"column_start":24,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":46943,"byte_end":46947,"line_start":1012,"line_end":1012,"column_start":27,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":47260,"byte_end":47264,"line_start":1023,"line_end":1023,"column_start":24,"column_end":28},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":47480,"byte_end":47484,"line_start":1032,"line_end":1032,"column_start":27,"column_end":31},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/date.rs","byte_start":47794,"byte_end":47798,"line_start":1043,"line_end":1043,"column_start":14,"column_end":18},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":48602,"byte_end":48609,"line_start":22,"line_end":22,"column_start":18,"column_end":25},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2930},"to":{"krate":2,"index":3128}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49321,"byte_end":49329,"line_start":44,"line_end":44,"column_start":21,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":49564,"byte_end":49572,"line_start":53,"line_end":53,"column_start":6,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":77343,"byte_end":77351,"line_start":804,"line_end":804,"column_start":23,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":79617,"byte_end":79625,"line_start":871,"line_end":871,"column_start":31,"column_end":39},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":79993,"byte_end":80004,"line_start":885,"line_end":885,"column_start":28,"column_end":39},"kind":{"Impl":{"id":20}},"from":{"krate":2,"index":49632},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80444,"byte_end":80452,"line_start":902,"line_end":902,"column_start":14,"column_end":22},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80645,"byte_end":80653,"line_start":911,"line_end":911,"column_start":27,"column_end":35},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":80904,"byte_end":80915,"line_start":920,"line_end":920,"column_start":24,"column_end":35},"kind":{"Impl":{"id":23}},"from":{"krate":2,"index":49632},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81102,"byte_end":81113,"line_start":930,"line_end":930,"column_start":30,"column_end":41},"kind":{"Impl":{"id":26}},"from":{"krate":2,"index":49632},"to":{"krate":2,"index":3249}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81372,"byte_end":81380,"line_start":939,"line_end":939,"column_start":14,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81527,"byte_end":81535,"line_start":947,"line_end":947,"column_start":14,"column_end":22},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81733,"byte_end":81741,"line_start":956,"line_end":956,"column_start":27,"column_end":35},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":81974,"byte_end":81985,"line_start":965,"line_end":965,"column_start":24,"column_end":35},"kind":{"Impl":{"id":30}},"from":{"krate":2,"index":49632},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":82289,"byte_end":82300,"line_start":977,"line_end":977,"column_start":30,"column_end":41},"kind":{"Impl":{"id":33}},"from":{"krate":2,"index":49632},"to":{"krate":2,"index":3253}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":83556,"byte_end":83564,"line_start":1020,"line_end":1020,"column_start":19,"column_end":27},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":83855,"byte_end":83863,"line_start":1036,"line_end":1036,"column_start":19,"column_end":27},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3228}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84221,"byte_end":84229,"line_start":1054,"line_end":1054,"column_start":19,"column_end":27},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84384,"byte_end":84392,"line_start":1062,"line_end":1062,"column_start":19,"column_end":27},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84609,"byte_end":84617,"line_start":1072,"line_end":1072,"column_start":14,"column_end":22},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84778,"byte_end":84786,"line_start":1080,"line_end":1080,"column_start":27,"column_end":35},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":84948,"byte_end":84959,"line_start":1088,"line_end":1088,"column_start":24,"column_end":35},"kind":{"Impl":{"id":64}},"from":{"krate":2,"index":49632},"to":{"krate":2,"index":3233}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85127,"byte_end":85135,"line_start":1096,"line_end":1096,"column_start":33,"column_end":41},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85264,"byte_end":85275,"line_start":1102,"line_end":1102,"column_start":30,"column_end":41},"kind":{"Impl":{"id":66}},"from":{"krate":2,"index":49632},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85383,"byte_end":85391,"line_start":1108,"line_end":1108,"column_start":34,"column_end":42},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85769,"byte_end":85780,"line_start":1122,"line_end":1122,"column_start":31,"column_end":42},"kind":{"Impl":{"id":68}},"from":{"krate":2,"index":49632},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":85922,"byte_end":85930,"line_start":1128,"line_end":1128,"column_start":14,"column_end":22},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":7950}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/duration.rs","byte_start":86079,"byte_end":86087,"line_start":1134,"line_end":1134,"column_start":28,"column_end":36},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":7950}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91266,"byte_end":91280,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3082},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":91712,"byte_end":91726,"line_start":38,"line_end":38,"column_start":23,"column_end":37},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":92105,"byte_end":92110,"line_start":54,"line_end":54,"column_start":38,"column_end":43},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":92240,"byte_end":92254,"line_start":60,"line_end":60,"column_start":32,"column_end":46},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/component_range.rs","byte_start":93179,"byte_end":93193,"line_start":92,"line_end":92,"column_start":28,"column_end":42},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3082},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93474,"byte_end":93489,"line_start":12,"line_end":12,"column_start":23,"column_end":38},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3103},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93687,"byte_end":93702,"line_start":19,"line_end":19,"column_start":28,"column_end":43},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3103},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93745,"byte_end":93750,"line_start":21,"line_end":21,"column_start":39,"column_end":44},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/conversion_range.rs","byte_start":93872,"byte_end":93887,"line_start":27,"line_end":27,"column_start":32,"column_end":47},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3103},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94429,"byte_end":94445,"line_start":10,"line_end":10,"column_start":23,"column_end":39},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94639,"byte_end":94655,"line_start":17,"line_end":17,"column_start":28,"column_end":44},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3116},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94699,"byte_end":94704,"line_start":19,"line_end":19,"column_start":40,"column_end":45},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/different_variant.rs","byte_start":94828,"byte_end":94844,"line_start":25,"line_end":25,"column_start":32,"column_end":48},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3116},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":95738,"byte_end":95744,"line_start":24,"line_end":24,"column_start":23,"column_end":29},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":3129},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96304,"byte_end":96310,"line_start":40,"line_end":40,"column_start":26,"column_end":32},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":3129},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96414,"byte_end":96419,"line_start":46,"line_end":46,"column_start":30,"column_end":35},"kind":{"Impl":{"id":86}},"from":{"krate":1,"index":3940},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96705,"byte_end":96711,"line_start":58,"line_end":58,"column_start":28,"column_end":34},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3129},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":96983,"byte_end":96988,"line_start":67,"line_end":67,"column_start":30,"column_end":35},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/format.rs","byte_start":97102,"byte_end":97108,"line_start":73,"line_end":73,"column_start":32,"column_end":38},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3129},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98831,"byte_end":98836,"line_start":42,"line_end":42,"column_start":48,"column_end":53},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":98986,"byte_end":99010,"line_start":48,"line_end":48,"column_start":32,"column_end":56},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3140},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":99298,"byte_end":99322,"line_start":59,"line_end":59,"column_start":23,"column_end":47},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3140},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_format_description.rs","byte_start":100089,"byte_end":100113,"line_start":80,"line_end":80,"column_start":28,"column_end":52},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3140},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100383,"byte_end":100397,"line_start":10,"line_end":10,"column_start":23,"column_end":37},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3162},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100574,"byte_end":100588,"line_start":17,"line_end":17,"column_start":28,"column_end":42},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3162},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100630,"byte_end":100635,"line_start":19,"line_end":19,"column_start":38,"column_end":43},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/invalid_variant.rs","byte_start":100755,"byte_end":100769,"line_start":25,"line_end":25,"column_start":32,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3162},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":101678,"byte_end":101683,"line_start":21,"line_end":21,"column_start":23,"column_end":28},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102048,"byte_end":102053,"line_start":32,"line_end":32,"column_start":28,"column_end":33},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3175},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102359,"byte_end":102364,"line_start":42,"line_end":42,"column_start":30,"column_end":35},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102475,"byte_end":102488,"line_start":48,"line_end":48,"column_start":25,"column_end":38},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3214},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102765,"byte_end":102770,"line_start":59,"line_end":59,"column_start":37,"column_end":42},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":102895,"byte_end":102915,"line_start":65,"line_end":65,"column_start":25,"column_end":45},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":103191,"byte_end":103196,"line_start":76,"line_end":76,"column_start":29,"column_end":34},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse.rs","byte_start":103538,"byte_end":103543,"line_start":86,"line_end":86,"column_start":32,"column_end":37},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3175},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104515,"byte_end":104535,"line_start":18,"line_end":18,"column_start":23,"column_end":43},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104910,"byte_end":104930,"line_start":30,"line_end":30,"column_start":28,"column_end":48},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3196},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":104978,"byte_end":104983,"line_start":32,"line_end":32,"column_start":44,"column_end":49},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/parse_from_description.rs","byte_start":105125,"byte_end":105145,"line_start":38,"line_end":38,"column_start":32,"column_end":52},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3196},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":105983,"byte_end":105996,"line_start":18,"line_end":18,"column_start":23,"column_end":36},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3214},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106361,"byte_end":106374,"line_start":29,"line_end":29,"column_start":38,"column_end":51},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3214},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106505,"byte_end":106519,"line_start":35,"line_end":35,"column_start":40,"column_end":54},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3082},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":106828,"byte_end":106841,"line_start":47,"line_end":47,"column_start":28,"column_end":41},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3214},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":107092,"byte_end":107097,"line_start":56,"line_end":56,"column_start":37,"column_end":42},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/try_from_parsed.rs","byte_start":107225,"byte_end":107238,"line_start":62,"line_end":62,"column_start":32,"column_end":45},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3214},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":88531,"byte_end":88536,"line_start":67,"line_end":67,"column_start":23,"column_end":28},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3232},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/error/mod.rs","byte_start":89547,"byte_end":89552,"line_start":91,"line_end":91,"column_start":28,"column_end":33},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3232},"to":{"krate":1,"index":2555}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":109559,"byte_end":109565,"line_start":60,"line_end":60,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":539},"to":{"krate":0,"index":543}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/ext.rs","byte_start":113217,"byte_end":113223,"line_start":185,"line_end":185,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":539},"to":{"krate":0,"index":570}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":118481,"byte_end":118499,"line_start":38,"line_end":38,"column_start":21,"column_end":39},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119001,"byte_end":119019,"line_start":50,"line_end":50,"column_start":26,"column_end":44},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119155,"byte_end":119164,"line_start":56,"line_end":56,"column_start":42,"column_end":51},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":3292},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119495,"byte_end":119513,"line_start":67,"line_end":67,"column_start":49,"column_end":67},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":119992,"byte_end":120010,"line_start":84,"line_end":84,"column_start":31,"column_end":49},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":120184,"byte_end":120193,"line_start":90,"line_end":90,"column_start":44,"column_end":53},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":3292},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/borrowed_format_item.rs","byte_start":120310,"byte_end":120328,"line_start":96,"line_end":96,"column_start":29,"column_end":47},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135094,"byte_end":135109,"line_start":36,"line_end":36,"column_start":21,"column_end":36},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135651,"byte_end":135666,"line_start":49,"line_end":49,"column_start":31,"column_end":46},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":135776,"byte_end":135791,"line_start":55,"line_end":55,"column_start":32,"column_end":47},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":136717,"byte_end":136732,"line_start":81,"line_end":81,"column_start":36,"column_end":51},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":136885,"byte_end":136900,"line_start":87,"line_end":87,"column_start":60,"column_end":75},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137271,"byte_end":137286,"line_start":103,"line_end":103,"column_start":26,"column_end":41},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137411,"byte_end":137420,"line_start":109,"line_end":109,"column_start":35,"column_end":44},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":3292},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137718,"byte_end":137733,"line_start":120,"line_end":120,"column_start":26,"column_end":41},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":137868,"byte_end":137871,"line_start":126,"line_end":126,"column_start":35,"column_end":38},"kind":{"Impl":{"id":180}},"from":{"krate":5,"index":7429},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138240,"byte_end":138255,"line_start":139,"line_end":139,"column_start":31,"column_end":46},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138418,"byte_end":138427,"line_start":145,"line_end":145,"column_start":37,"column_end":46},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":3292},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/owned_format_item.rs","byte_start":138537,"byte_end":138552,"line_start":151,"line_end":151,"column_start":29,"column_end":44},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/format_item.rs","byte_start":153913,"byte_end":153917,"line_start":23,"line_end":23,"column_start":6,"column_end":10},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/format_item.rs","byte_start":154676,"byte_end":154686,"line_start":44,"line_end":44,"column_start":56,"column_end":66},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":3261},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/format_item.rs","byte_start":154961,"byte_end":154976,"line_start":53,"line_end":53,"column_start":52,"column_end":67},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":3750},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":140687,"byte_end":140695,"line_start":59,"line_end":59,"column_start":6,"column_end":14},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4068},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":141643,"byte_end":141647,"line_start":93,"line_end":93,"column_start":6,"column_end":10},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4075},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":143088,"byte_end":143097,"line_start":143,"line_end":143,"column_start":18,"column_end":27},"kind":{"Impl":{"id":197}},"from":{"krate":2,"index":45375},"to":{"krate":0,"index":872}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":143474,"byte_end":143481,"line_start":158,"line_end":158,"column_start":18,"column_end":25},"kind":{"Impl":{"id":198}},"from":{"krate":2,"index":45396},"to":{"krate":0,"index":872}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/parse/mod.rs","byte_start":144285,"byte_end":144309,"line_start":189,"line_end":189,"column_start":36,"column_end":60},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":3140},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":179560,"byte_end":179567,"line_start":21,"line_end":21,"column_start":35,"column_end":42},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601/adt_hack.rs","byte_start":180987,"byte_end":180993,"line_start":51,"line_end":51,"column_start":6,"column_end":12},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172439,"byte_end":172446,"line_start":48,"line_end":48,"column_start":56,"column_end":63},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4081},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":172656,"byte_end":172663,"line_start":56,"line_end":56,"column_start":6,"column_end":13},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":173432,"byte_end":173439,"line_start":74,"line_end":74,"column_start":6,"column_end":13},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/format_description/well_known/iso8601.rs","byte_start":176503,"byte_end":176509,"line_start":164,"line_end":164,"column_start":6,"column_end":12},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4187},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208098,"byte_end":208104,"line_start":16,"line_end":16,"column_start":32,"column_end":38},"kind":"SuperTrait","from":{"krate":0,"index":1055},"to":{"krate":0,"index":1042}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208129,"byte_end":208139,"line_start":17,"line_end":17,"column_start":22,"column_end":32},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":3261},"to":{"krate":0,"index":1042}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208209,"byte_end":208224,"line_start":19,"line_end":19,"column_start":22,"column_end":37},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":3750},"to":{"krate":0,"index":1042}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208291,"byte_end":208298,"line_start":21,"line_end":21,"column_start":22,"column_end":29},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4209},"to":{"krate":0,"index":1042}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208323,"byte_end":208330,"line_start":22,"line_end":22,"column_start":22,"column_end":29},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":1042}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208384,"byte_end":208391,"line_start":23,"line_end":23,"column_start":51,"column_end":58},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4081},"to":{"krate":0,"index":1042}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":208434,"byte_end":208435,"line_start":24,"line_end":24,"column_start":32,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1052},"to":{"krate":0,"index":1042}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":209526,"byte_end":209536,"line_start":57,"line_end":57,"column_start":29,"column_end":39},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":3261},"to":{"krate":0,"index":1055}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":210727,"byte_end":210742,"line_start":94,"line_end":94,"column_start":25,"column_end":40},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":3750},"to":{"krate":0,"index":1055}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":211939,"byte_end":211940,"line_start":131,"line_end":131,"column_start":35,"column_end":36},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1074},"to":{"krate":0,"index":1055}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":212335,"byte_end":212342,"line_start":148,"line_end":148,"column_start":25,"column_end":32},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":1055}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":214299,"byte_end":214306,"line_start":197,"line_end":197,"column_start":25,"column_end":32},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4209},"to":{"krate":0,"index":1055}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/formatting/formattable.rs","byte_start":217511,"byte_end":217518,"line_start":272,"line_end":272,"column_start":54,"column_end":61},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4081},"to":{"krate":0,"index":1055}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":226067,"byte_end":226074,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4222},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229011,"byte_end":229018,"line_start":116,"line_end":116,"column_start":27,"column_end":34},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229118,"byte_end":229128,"line_start":122,"line_end":122,"column_start":24,"column_end":34},"kind":{"Impl":{"id":223}},"from":{"krate":1,"index":11976},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229211,"byte_end":229218,"line_start":128,"line_end":128,"column_start":14,"column_end":21},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229754,"byte_end":229761,"line_start":143,"line_end":143,"column_start":26,"column_end":33},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":229905,"byte_end":229915,"line_start":151,"line_end":151,"column_start":23,"column_end":33},"kind":{"Impl":{"id":226}},"from":{"krate":1,"index":11976},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230060,"byte_end":230067,"line_start":159,"line_end":159,"column_start":24,"column_end":31},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230454,"byte_end":230464,"line_start":174,"line_end":174,"column_start":24,"column_end":34},"kind":{"Impl":{"id":228}},"from":{"krate":1,"index":11976},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230619,"byte_end":230626,"line_start":182,"line_end":182,"column_start":27,"column_end":34},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":230867,"byte_end":230874,"line_start":193,"line_end":193,"column_start":24,"column_end":31},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231261,"byte_end":231271,"line_start":208,"line_end":208,"column_start":24,"column_end":34},"kind":{"Impl":{"id":234}},"from":{"krate":1,"index":11976},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231426,"byte_end":231433,"line_start":216,"line_end":216,"column_start":27,"column_end":34},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231682,"byte_end":231689,"line_start":227,"line_end":227,"column_start":32,"column_end":39},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231797,"byte_end":231807,"line_start":233,"line_end":233,"column_start":29,"column_end":39},"kind":{"Impl":{"id":240}},"from":{"krate":1,"index":11976},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":231917,"byte_end":231924,"line_start":239,"line_end":239,"column_start":33,"column_end":40},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":232063,"byte_end":232073,"line_start":245,"line_end":245,"column_start":30,"column_end":40},"kind":{"Impl":{"id":242}},"from":{"krate":1,"index":11976},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":232208,"byte_end":232215,"line_start":251,"line_end":251,"column_start":28,"column_end":35},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":3047}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/instant.rs","byte_start":232309,"byte_end":232316,"line_start":257,"line_end":257,"column_start":29,"column_end":36},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4222},"to":{"krate":2,"index":2747}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":238414,"byte_end":238419,"line_start":29,"line_end":29,"column_start":6,"column_end":11},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4256},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":240398,"byte_end":240403,"line_start":102,"line_end":102,"column_start":23,"column_end":28},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4256},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":240927,"byte_end":240932,"line_start":121,"line_end":121,"column_start":18,"column_end":23},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4256},"to":{"krate":2,"index":12554}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/month.rs","byte_start":241657,"byte_end":241662,"line_start":149,"line_end":149,"column_start":22,"column_end":27},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4256},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":243296,"byte_end":243310,"line_start":38,"line_end":38,"column_start":6,"column_end":20},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":271663,"byte_end":271677,"line_start":877,"line_end":877,"column_start":6,"column_end":20},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":280651,"byte_end":280665,"line_start":1105,"line_end":1105,"column_start":6,"column_end":20},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":281924,"byte_end":281938,"line_start":1143,"line_end":1143,"column_start":6,"column_end":20},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4307},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":283730,"byte_end":283744,"line_start":1191,"line_end":1191,"column_start":23,"column_end":37},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":283908,"byte_end":283922,"line_start":1197,"line_end":1197,"column_start":21,"column_end":35},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284108,"byte_end":284122,"line_start":1205,"line_end":1205,"column_start":20,"column_end":34},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284273,"byte_end":284287,"line_start":1211,"line_end":1211,"column_start":21,"column_end":35},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284400,"byte_end":284414,"line_start":1217,"line_end":1217,"column_start":14,"column_end":28},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":2838}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284580,"byte_end":284594,"line_start":1224,"line_end":1224,"column_start":15,"column_end":29},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":10113}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":284870,"byte_end":284884,"line_start":1232,"line_end":1232,"column_start":20,"column_end":34},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":285169,"byte_end":285183,"line_start":1245,"line_end":1245,"column_start":20,"column_end":34},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":285462,"byte_end":285476,"line_start":1258,"line_end":1258,"column_start":14,"column_end":28},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":285795,"byte_end":285805,"line_start":1269,"line_end":1269,"column_start":24,"column_end":34},"kind":{"Impl":{"id":267}},"from":{"krate":1,"index":11996},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286265,"byte_end":286275,"line_start":1287,"line_end":1287,"column_start":24,"column_end":34},"kind":{"Impl":{"id":269}},"from":{"krate":1,"index":11996},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286536,"byte_end":286550,"line_start":1298,"line_end":1298,"column_start":26,"column_end":40},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286727,"byte_end":286737,"line_start":1307,"line_end":1307,"column_start":30,"column_end":40},"kind":{"Impl":{"id":272}},"from":{"krate":1,"index":11996},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":286930,"byte_end":286944,"line_start":1316,"line_end":1316,"column_start":32,"column_end":46},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287094,"byte_end":287104,"line_start":1323,"line_end":1323,"column_start":36,"column_end":46},"kind":{"Impl":{"id":274}},"from":{"krate":1,"index":11996},"to":{"krate":2,"index":2802}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287265,"byte_end":287279,"line_start":1330,"line_end":1330,"column_start":33,"column_end":47},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287465,"byte_end":287475,"line_start":1337,"line_end":1337,"column_start":37,"column_end":47},"kind":{"Impl":{"id":276}},"from":{"krate":1,"index":11996},"to":{"krate":2,"index":2848}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":287664,"byte_end":287678,"line_start":1344,"line_end":1344,"column_start":27,"column_end":41},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/offset_date_time.rs","byte_start":288050,"byte_end":288060,"line_start":1355,"line_end":1355,"column_start":31,"column_end":41},"kind":{"Impl":{"id":278}},"from":{"krate":1,"index":11996},"to":{"krate":2,"index":3056}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/combinator/rfc/iso8601.rs","byte_start":298304,"byte_end":298316,"line_start":23,"line_end":23,"column_start":6,"column_end":18},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":4328},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/iso8601.rs","byte_start":319269,"byte_end":319276,"line_start":13,"line_end":13,"column_start":35,"column_end":42},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":4081},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332276,"byte_end":332282,"line_start":16,"line_end":16,"column_start":29,"column_end":35},"kind":"SuperTrait","from":{"krate":0,"index":2053},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332304,"byte_end":332314,"line_start":17,"line_end":17,"column_start":19,"column_end":29},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":3261},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332404,"byte_end":332419,"line_start":20,"line_end":20,"column_start":19,"column_end":34},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":3750},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332506,"byte_end":332513,"line_start":23,"line_end":23,"column_start":19,"column_end":26},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332535,"byte_end":332542,"line_start":24,"line_end":24,"column_start":19,"column_end":26},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":4209},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332593,"byte_end":332600,"line_start":25,"line_end":25,"column_start":48,"column_end":55},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":4081},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":332640,"byte_end":332641,"line_start":26,"line_end":26,"column_start":29,"column_end":30},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":2050},"to":{"krate":0,"index":2040}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":334914,"byte_end":334924,"line_start":87,"line_end":87,"column_start":25,"column_end":35},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":3261},"to":{"krate":0,"index":2053}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":335399,"byte_end":335414,"line_start":108,"line_end":108,"column_start":25,"column_end":40},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":3750},"to":{"krate":0,"index":2053}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":335896,"byte_end":335897,"line_start":129,"line_end":129,"column_start":35,"column_end":36},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":2075},"to":{"krate":0,"index":2053}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":336209,"byte_end":336216,"line_start":144,"line_end":144,"column_start":25,"column_end":32},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":4196},"to":{"krate":0,"index":2053}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":349982,"byte_end":349989,"line_start":471,"line_end":471,"column_start":25,"column_end":32},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":4209},"to":{"krate":0,"index":2053}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsable.rs","byte_start":359649,"byte_end":359656,"line_start":697,"line_end":697,"column_start":54,"column_end":61},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":4081},"to":{"krate":0,"index":2053}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":362704,"byte_end":362714,"line_start":34,"line_end":34,"column_start":32,"column_end":42},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":3261},"to":{"krate":0,"index":2420}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":364053,"byte_end":364068,"line_start":68,"line_end":68,"column_start":32,"column_end":47},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":3750},"to":{"krate":0,"index":2420}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":367597,"byte_end":367603,"line_start":155,"line_end":155,"column_start":6,"column_end":12},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":4356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":368334,"byte_end":368340,"line_start":174,"line_end":174,"column_start":6,"column_end":12},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":4356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":376604,"byte_end":376610,"line_start":359,"line_end":359,"column_start":6,"column_end":12},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":4356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":379863,"byte_end":379869,"line_start":447,"line_end":447,"column_start":6,"column_end":12},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":4356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":383440,"byte_end":383446,"line_start":547,"line_end":547,"column_start":6,"column_end":12},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":4356},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":385743,"byte_end":385747,"line_start":610,"line_end":610,"column_start":26,"column_end":30},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":2903},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":388029,"byte_end":388033,"line_start":670,"line_end":670,"column_start":26,"column_end":30},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":4507},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":389194,"byte_end":389203,"line_start":698,"line_end":698,"column_start":26,"column_end":35},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":389974,"byte_end":389991,"line_start":720,"line_end":720,"column_start":26,"column_end":43},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":4460},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/parsed.rs","byte_start":390193,"byte_end":390207,"line_start":728,"line_end":728,"column_start":26,"column_end":40},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":4307},"to":{"krate":2,"index":3063}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/shim.rs","byte_start":392012,"byte_end":392017,"line_start":16,"line_end":16,"column_start":27,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3155},"to":{"krate":0,"index":2528}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":289815,"byte_end":289825,"line_start":17,"line_end":17,"column_start":13,"column_end":23},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":4450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":290558,"byte_end":290568,"line_start":36,"line_end":36,"column_start":10,"column_end":20},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":4450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/parsing/mod.rs","byte_start":290783,"byte_end":290793,"line_start":44,"line_end":44,"column_start":10,"column_end":20},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":4450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":393625,"byte_end":393642,"line_start":24,"line_end":24,"column_start":6,"column_end":23},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":4460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":413122,"byte_end":413139,"line_start":615,"line_end":615,"column_start":6,"column_end":23},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":4460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":420655,"byte_end":420672,"line_start":804,"line_end":804,"column_start":6,"column_end":23},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":4460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":421721,"byte_end":421738,"line_start":834,"line_end":834,"column_start":6,"column_end":23},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":4460},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422483,"byte_end":422500,"line_start":856,"line_end":856,"column_start":23,"column_end":40},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":4460},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422644,"byte_end":422661,"line_start":862,"line_end":862,"column_start":21,"column_end":38},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":4460},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":422851,"byte_end":422868,"line_start":870,"line_end":870,"column_start":24,"column_end":41},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":4460},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":423076,"byte_end":423093,"line_start":879,"line_end":879,"column_start":27,"column_end":44},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":4460},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":423631,"byte_end":423648,"line_start":900,"line_end":900,"column_start":24,"column_end":41},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":4460},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":423856,"byte_end":423873,"line_start":909,"line_end":909,"column_start":27,"column_end":44},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":4460},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/primitive_date_time.rs","byte_start":424413,"byte_end":424430,"line_start":930,"line_end":930,"column_start":14,"column_end":31},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":4460},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":426259,"byte_end":426263,"line_start":45,"line_end":45,"column_start":6,"column_end":10},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":4507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":444950,"byte_end":444954,"line_start":584,"line_end":584,"column_start":6,"column_end":10},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":4507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":445878,"byte_end":445882,"line_start":612,"line_end":612,"column_start":6,"column_end":10},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":4507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":446495,"byte_end":446499,"line_start":631,"line_end":631,"column_start":23,"column_end":27},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":4507},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447399,"byte_end":447403,"line_start":652,"line_end":652,"column_start":21,"column_end":25},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":4507},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":447593,"byte_end":447597,"line_start":660,"line_end":660,"column_start":24,"column_end":28},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":4507},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448080,"byte_end":448084,"line_start":676,"line_end":676,"column_start":27,"column_end":31},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":4507},"to":{"krate":2,"index":3218}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":448638,"byte_end":448642,"line_start":694,"line_end":694,"column_start":24,"column_end":28},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":4507},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449132,"byte_end":449136,"line_start":710,"line_end":710,"column_start":27,"column_end":31},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":4507},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/time.rs","byte_start":449687,"byte_end":449691,"line_start":728,"line_end":728,"column_start":14,"column_end":18},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":4507},"to":{"krate":2,"index":3223}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":451957,"byte_end":451966,"line_start":33,"line_end":33,"column_start":6,"column_end":15},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":4538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":460358,"byte_end":460367,"line_start":276,"line_end":276,"column_start":6,"column_end":15},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":4538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461283,"byte_end":461292,"line_start":301,"line_end":301,"column_start":6,"column_end":15},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":4538},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":461929,"byte_end":461938,"line_start":320,"line_end":320,"column_start":23,"column_end":32},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":462258,"byte_end":462267,"line_start":333,"line_end":333,"column_start":21,"column_end":30},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":9900}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/utc_offset.rs","byte_start":462424,"byte_end":462433,"line_start":340,"line_end":340,"column_start":14,"column_end":23},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":4538},"to":{"krate":2,"index":3245}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":464300,"byte_end":464307,"line_start":32,"line_end":32,"column_start":6,"column_end":13},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":4559},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466596,"byte_end":466603,"line_start":119,"line_end":119,"column_start":18,"column_end":25},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":4559},"to":{"krate":2,"index":9907}},{"span":{"file_name":"/home/dom/.cargo/registry/src/github.com-1ecc6299db9ec823/time-0.3.17/src/weekday.rs","byte_start":466979,"byte_end":466986,"line_start":133,"line_end":133,"column_start":18,"column_end":25},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":4559},"to":{"krate":2,"index":12554}}]}